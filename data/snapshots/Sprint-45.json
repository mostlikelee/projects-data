[
  {
    "timestamp": "2025-07-27T19:32:29.529329497Z",
    "items": [
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nRun point on design, involving others as needed\n\n## Condition of satisfaction\n\nStory and all subtasks are ready for estimate",
          "number": 30979,
          "repository": "fleetdm/fleet",
          "title": "Linux OS Vulns: Design/Spec",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30979"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcq9R8",
        "labels": [
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Linux OS Vulns: Design/Spec",
        "issueNumber": 30979
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.68.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n```\n      # Cloudflare WARP (Cloudflare_WARP_2025.2.664.0.pkg) version\n```\n\nInstead of\n\n```\n      # Cloudflare WARP (Cloudflare_WARP_2025.2.664.0.pkg) version 2025.2.664.0\n```\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add the Cloudflare WARP FMA\n2. Run `fleetctl generate-gitops`\n3. Look at the comment next to the hash on the software package\n\n### üõ†Ô∏è To fix\n\nUse the software package or VPP app's version in the associated comment rather than a concatenated list of installed versions.\n\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 29618,
          "repository": "fleetdm/fleet",
          "title": "Wrong software version field is used for explanatory comment on `fleetctl generate-gitops` software export",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29618"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgb7YjQ",
        "labels": [
          "bug",
          "~good first issue",
          "~gitops",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Wrong software version field is used for explanatory comment on `fleetctl generate-gitops` software export",
        "issueNumber": 29618
      },
      {
        "assignees": [
          "drvcodenta"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.68\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nSoftware with a URL (Fleet-maintained app or GitOps upload) doesn't have that URL exported in `fleetctl generate-gitops`.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add the Cloudflare WARP Fleet-maintained app\n2. Run `fleetctl generate-gitops`\n3. Check the resulting `software` section of the file\n\n### üõ†Ô∏è To fix\n\nWhen a software package has a URL, include it in the YAML exported by `fleetctl generate-gitops`.\n\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 29617,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Software URLs are not exported in `fleetctl generate-gitops`",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29617"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgb3feM",
        "labels": [
          "bug",
          "~good first issue",
          "~gitops",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤ Software URLs are not exported in `fleetctl generate-gitops`",
        "issueNumber": 29617
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n4.63.0 (actually verified the bug on dogfood where it was Fleet 0.0.0-SNAPSHOT-f192c57 ‚Ä¢ Go go1.23.4)\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\nChrome\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nThis error apppears when the software does not exist on the team. It makes it look like a server error (500) happened, but the backend returns a 404 (which is correct for that case - the software title does not exist in that team):\n\n![Image](https://github.com/user-attachments/assets/b90d4103-6689-45f3-9ecd-1fefc7f60d70)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n* First filter on a software that exists, e.g. Slack.app with the \"Installed\" status\n    - Go to \"software\", filter on \"Available for install\", click on one\n    - Then click on one of the statuses with a count (e.g. Installed) to filter the list of hosts in that status for that software\n* Then change the team with the team dropdown, switch to a team that does not have this software\n* The error is displayed (use the dev tools to see that the API returned a 404, not a 500)\n\n### üïØÔ∏è More info _(optional)_\nThe frontend should probably show a more user-friendly message.",
          "number": 26258,
          "repository": "fleetdm/fleet",
          "title": "Wrong error message when changing teams and a software filter is set",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26258"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiciI",
        "labels": [
          "bug",
          "~good first issue",
          "~frontend",
          "~backend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Wrong error message when changing teams and a software filter is set",
        "issueNumber": 26258
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.57.2\n\n**Web browser and operating system**: Chrome 129.0.6668.90 running on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nFlickering tooltip in Host detail/My device \u003e OS settings modal ‚Äî [Loom](https://www.loom.com/share/41a10da7c2e242f6921d319b72f92167?sid=65ab8888-bbb8-461c-8277-335563e22322)\n\nhttps://www.loom.com/share/41a10da7c2e242f6921d319b72f92167?sid=65ab8888-bbb8-461c-8277-335563e22322\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n(see Loom)\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\n### Test plan\n- Add a host to MDM with a bunch of OS setting scripts\n- Go to the host details page, slow down your network\n- Hit refetch and quickly open the OS settings modal\n- Hover over tooltips and notice they no longer flash while the refetch is completing\n",
          "number": 22796,
          "repository": "fleetdm/fleet",
          "title": "Tooltip issue while fetching host vitals",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/22796"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgbipnA",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Tooltip issue while fetching host vitals",
        "issueNumber": 22796
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in dogfood (commit `e50dce0`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nFiltered hosts by a software title, for example, Chrome:\n![Image](https://github.com/user-attachments/assets/7656e79f-d4be-469b-aedb-11f9d51d8d16)\n\nSwitched to a team that doesn't have any hosts with Chrome and I saw this loading state. The team dropdown is disabled:\n![Image](https://github.com/user-attachments/assets/3c0a7e1e-8f8c-420e-905e-c9201b8ad29d)\n\nAfter waiting for ~5 seconds, I see this error state:\n![Image](https://github.com/user-attachments/assets/7d62b6df-f9a1-4791-81d7-1d0a7fd707a8)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: I think we'd expect to see the \"No hosts match the current criteria\" state as the final state. No error.\n",
          "number": 29823,
          "repository": "fleetdm/fleet",
          "title": "Hosts page: software title filter breaks page if software isn't on any hosts in the team",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29823"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbicys",
        "labels": [
          "bug",
          "~good first issue",
          "~backend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Hosts page: software title filter breaks page if software isn't on any hosts in the team",
        "issueNumber": 29823
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c 4.56.0 -\u003e 4.56.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nFalse positives remain after upgrade on Amazon Linux 2; see https://github.com/fleetdm/fleet/issues/20934#issuecomment-2339900214\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. On Fleet \u003c v4.56.0 (may need 4.53.1), scan an Amazon Linux 2 base install. There should be false positives.\n2. Upgrade to Fleet v4.56.0 and re-scan.\n3. Check for vulnerabilities on the AL2 host in the UI.\n\n### üõ†Ô∏è To fix\nWe likely need to manually clear OVAL-sourced vulnerabilities for Amazon Linux 2 in particular (the only OS + version combo that moved from an existing vuln source to goval-dictionary, rather than being net-new), potentially as a DB migration since once we do the clean this will be resolved.",
          "number": 21947,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Existing false-positive OVAL vulnerabilities for Amazon Linux 2 don't clear when upgrading to 4.56.0 goval-dictionary based scanning",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/21947"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbirk8",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤Existing false-positive OVAL vulnerabilities for Amazon Linux 2 don't clear when upgrading to 4.56.0 goval-dictionary based scanning",
        "issueNumber": 21947
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**:  main at 3a879133b1c833a6b83ae677a5df85a196e08dbe(latest commit at time of writing)\n\n**Web browser and operating system**:  Chrome Version 136.0.7103.114 on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAdding VPP app that supports macOS and iOS does not behave how I expect it to\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Purchase a VPP app that supports multiple platforms, such as macOS and iOS. I used Whatsapp\n2. Navigate to your selected team's software page. Click \"Add software\", then select \"App Store (VPP)\"\n3. Add the macOS version of the app with the Self-service option\n4. Add the iOS version of the app\n5. Go to Controls-\u003eSetup Experience-\u003eInstall Software. Click \"Show Selected Software\". Add the macOS version\n6. Try to save\n\n\n\n### üïØÔ∏è More info _(optional)_\nI also noticed if I add the macOS version only, it works and I can add it to setup experience and save. If I later go back and add the iOS version from the software page and then run setup experience it will fail. It seemingly tries to install both on the host. This might be a separate bug or another facet of this same bug? Seems related\n\n### üõ†Ô∏è To fix\nMake it so I can add the macOS and iOS versions of an app and still add that app to setup experience",
          "number": 29506,
          "repository": "fleetdm/fleet",
          "title": "ü™≤If I add a VPP app for iOS and macOS, I can't add it to macOS Setup Experience",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29506"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbuZ1w",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤If I add a VPP app for iOS and macOS, I can't add it to macOS Setup Experience",
        "issueNumber": 29506
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\nhttps://github.com/fleetdm/fleet/issues/28738\n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- Design an interface that takes a callback/handler that will fire when Fleet gets results from a `InstalledApplicationListCommand`. Will likely involve defining an adapter type as well (basically the results XML as a Go type)\n- Implement the callback\n  - Look up the `host_vpp_software_installs` record by `verification_command_uuid` \n  - If more than 5 minutes have elapsed since the ACK on the last `InstallApplicationCommand` and the app doesn't show up as installed in the list, then mark the install as failed\n  - If the app isn't in the list, or shows up as `Installing` and it's been less than 5 minutes (this is the default, but make this value configurable) since the install command was sent, then enqueue a new `InstalledApplicationListCommand` and update the `host_vpp_software_installs.verification_command_uuid` field with the UUID of the new command.\n    - **NOTE: We should only have a single `InstalledApplicationListCommand` in flight at one time. Only send a new `InstalledApplicationListCommand` if no other one is currently in flight for this host.**\n    - We should send a new `InstalledApplicationListCommand` if the previous one failed for whatever reason (assuming we're within the timeout period).\n  - If the app is in the list and shows up as installed, then mark the install as successful \n    - ~Enqueue a host vitals refetch in order to get accurate software inventory ASAP.~ This is going to be handled in #29980.\n  - We should wait some time before sending the command. That time period should be configurable. This means we should do the actual sending in the background/spin off a goroutine.\n- Update Fleet's `CommandAndReportResults` to call this callback/handler\n\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\n- [ ] The code is updated to use this callback pattern\n- [ ] Manual testing\n- [ ] Automated testing\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29852,
          "repository": "fleetdm/fleet",
          "title": "Verify VPP: Implement interface for InstalledApplicationListCommand hander",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29852"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgbimzo",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Verify VPP: Implement interface for InstalledApplicationListCommand hander",
        "issueNumber": 29852
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\nhttps://github.com/fleetdm/fleet/issues/28738\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\nImplement a DB migration that\n\n- Adds a `verification_at` column to `host_vpp_software_installs` that will hold the time at which the install was verified\n- Adds a `verification_failed_at` column to `host_vpp_software_installs` that will hold the time at which the install failed to be verified (verification timed out)\n- Adds a `verification_status` virtual column to `host_vpp_software_installs`. This will be an enum with the values `installing`, `installed`, and `failed`. \n  - verification_timed_out_at not null -\u003e failed\n  - verified_at not null -\u003e success\n  - Otherwise null\n- Adds a `verification_command_uuid` column to `host_vpp_software_installs`. This will be the UUID of the last `InstalledApplicationListCommand` that was sent to verify the status of the install.\n- Updates existing VPP app installs to have the appropriate status based on existing data (if we have an ACK for the corresponding MDM command, we mark as `installed`, if there's an error or we never got a result we should mark as `failed`)\n\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\n- [ ] The DB migration is added and merged\n- [ ] Manual validation that existing VPP app installs got correct statuses\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29830,
          "repository": "fleetdm/fleet",
          "title": "Verify VPP: DB migration",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29830"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbim3M",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Verify VPP: DB migration",
        "issueNumber": 29830
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\nhttps://github.com/fleetdm/fleet/issues/28738\n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- Design an interface that takes a callback/handler that will fire when Fleet gets results from a `InstallApplicationCommand`. Will likely involve defining an adapter type as well (basically the results XML as a Go type)\n- Implement the callback\n  - Make sure to enqueue a `InstalledApplicationListCommand` if the `InstallApplicationCommand` was ack'd by the host\n  - Update `host_vpp_software_installs.verification_command_uuid` with the UUID of this initial `InstalledApplicationListCommand`.\n- Update Fleet's `CommandAndReportResults` to call this callback/handler\n- Update the `InstallApplicationCommand` that Fleet uses to install the application as managed\n\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\n- [ ] The code is updated to use this callback pattern\n- [ ] Manual testing (i.e. make sure that apps install, that the `InstalledApplicationListCommand` is enqueued, and that the app is installed as managed)\n- [ ] Automated testing\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29851,
          "repository": "fleetdm/fleet",
          "title": "Verify VPP: Implement interface for InstallApplicationCommand handler",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29851"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbimuk",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Verify VPP: Implement interface for InstallApplicationCommand handler",
        "issueNumber": 29851
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\nhttps://github.com/fleetdm/fleet/issues/28738\n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- When MDM is turned off on a device, unverified VPP installs should be marked as failed\n- When MDM is turned off in Fleet globally, unverified VPP installs should be marked as failed\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\n- [ ] Code is updated to handle the above scenarios\n- [ ] Manual testing\n- [ ] Automated testing\n\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29902,
          "repository": "fleetdm/fleet",
          "title": "Verify VPP: Mark VPP installs as failed when MDM gets turned off",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29902"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbim7o",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Verify VPP: Mark VPP installs as failed when MDM gets turned off",
        "issueNumber": 29902
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\nhttps://github.com/fleetdm/fleet/issues/28738\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- Implement changes in [Figma](https://www.figma.com/design/riZKSIUxLKKMMEgKQlclMY/-28738-Verify-App-Store-apps-are-installed?node-id=2-130\u0026p=f\u0026t=nwX9flGBMUs8qF2w-0)\n- Make sure that other places that show VPP install details differentiate between a failure of the install command (`status` is `failed_install` AND the command result has a failure) vs failure to verify (`status` is `failed_install` but the command result has an ACK).\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\nUI is updated and works with the backend implementation.\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29893,
          "repository": "fleetdm/fleet",
          "title": "Verify VPP: UI updates",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29893"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiq_Q",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Verify VPP: UI updates",
        "issueNumber": 29893
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30035, blocked by #28738\n\n## Task\n\nEnsure a host vitals refetch is in progress (triggering one if needed) when a VPP app is marked as installed on macOS. This should likely happen when handling the list-installed-applications callback, rather than explicitly once per app install.\n\n## Condition of satisfaction\n\nWhen VPP apps are marked as installed, a host vitals refetch is queued. This behavior is only necessary on macOS, as iOS should've already ingested installed apps as a result of the apps list command result.",
          "number": 29980,
          "repository": "fleetdm/fleet",
          "title": "Successful install refetch: VPP app installs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29980"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbimd4",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Successful install refetch: VPP app installs",
        "issueNumber": 29980
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.68\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nSoftware install actions that are performed as part of Fleet's setup experience for macOS hosts do not contain an actor name when they are displayed in the global activity feed. See the screenshot from Dogfood for when https://dogfood.fleetdm.com/hosts/1359 was enrolled.\n\n\u003cimg width=\"564\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dc0b739d-6dca-4094-821f-0c4cef4fc758\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Configure a Fleet team to install at least one software title as part of the Setup Experience in Controls \u003e Setup experience \u003e Install software.\n2. ADE enroll a Mac into that Fleet team, allow the setup experience to launch and install the software.\n3. In Fleet, check the global activity feed for the software install actions that the setup experience performed and note that they are missing the actor name.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nThis seems to only happen in the global activity feed and not in the activity feed that appears on the hosts' details page. Shown here:\n\u003cimg width=\"379\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/93b5f9bb-0a32-4141-af6e-618a0771b630\" /\u003e\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 29897,
          "repository": "fleetdm/fleet",
          "title": "Activity feed missing actor name for actions performed during setup experience",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29897"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgbdarQ",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "customer-eponym",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Activity feed missing actor name for actions performed during setup experience",
        "issueNumber": 29897
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30035 \n\n## Task\n\nEnsure a vitals refetch is queued when Orbit reports a successful install. This ensures we quickly get accurate inventory information to clear suggested software updates in future work.\n\n## Condition of satisfaction\n\nSuccessful software installs trigger a host vitals refetch.",
          "number": 29916,
          "repository": "fleetdm/fleet",
          "title": "Successful install refetch: Non-VPP software installs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29916"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbinQY",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Successful install refetch: Non-VPP software installs",
        "issueNumber": 29916
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30035\n\n## Task\n\nAdd notes on software, VPP, and policies articles about refetch behavior\n\n## Condition of satisfaction\n\nAppropriate guides are updated to note that successful installs trigger host vitals refetches\n",
          "number": 30038,
          "repository": "fleetdm/fleet",
          "title": "Successful install refetch: Docs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30038"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbinUw",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Successful install refetch: Docs",
        "issueNumber": 30038
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\nhttps://github.com/fleetdm/fleet/issues/28738\n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\nFeature guide changes: [VPP guide](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) will need some updates: we'll be installing apps as managed and we can add in a line about Fleet verifying that the app is installed before marking it as \"installed\".\n\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\n- [ ] The above guide was updated and deployed to the website\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29896,
          "repository": "fleetdm/fleet",
          "title": "Verify VPP: guide updates",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29896"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiq_U",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Verify VPP: guide updates",
        "issueNumber": 29896
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68 (unconfirmed)\n\n**Web browser and operating system**: Google Chrome (version unknown)\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nMismatch in vulnerability counts for macOS 15.4.1 between dogfood (fleet premium) and fleet free\n\n![Image](https://github.com/user-attachments/assets/00cd6c84-1a6b-41e5-9938-c21992954b07)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\nTODO\n\nreference here: https://fleetdm.slack.com/archives/C019WG4GH0A/p1748009270163509\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nInvestigate the issue to determine whether it's a timing issue or a bug.",
          "number": 29988,
          "repository": "fleetdm/fleet",
          "title": "Vulnerabilities count mismatch for various macOS versions",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29988"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcbSkI",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Vulnerabilities count mismatch for various macOS versions",
        "issueNumber": 29988
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "It was modified upstream from `microsoft:powershell:7.5.0` to `microsoft:powershell:7.5`. Our current CPE to CVE does not handle this case properly.\r\n\r\n- [x] Manual QA for all new/changed functionality\r\n\r\nQA instructions.\r\nGenerate new `nvdcve-1.1-*.json` files.\r\n```\r\n$ git checkout -b powershell-feed-fix --track origin/powershell-feed-fix\r\n$ make build\r\n$ go run cmd/cve/generate.go\r\n# or optionally\r\n$ VULNCHECK_API_KEY=\u003c...\u003e go run cmd/cve/generate.go\r\n```\r\n\r\n~How do we verify the CVE actually matches? Install powershell? Run the test file pointing to the newly generated json files?~\r\nDownload powershell rc1 https://github.com/PowerShell/PowerShell/releases/tag/v7.5.0-rc.1\r\nInstall powershell rc1\r\n\r\nRun vuln processing with custom path\r\n```\r\ngo run ./cmd/fleet vuln-process --vulnerabilities_databases_path=/tmp/vulndbs\r\n```\r\n\r\nWhat you should see is that `CVE-2025-21171` applies to powershell 7.5.0-rc.1",
          "number": 30767,
          "repository": "fleetdm/fleet",
          "title": "Modifying cve feed for powershell version change",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30767"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcf5_w",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Modifying cve feed for powershell version change",
        "issueNumber": 30767
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30600,
          "repository": "fleetdm/fleet",
          "title": "Release QA: Fleet 4.71.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30600"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVLvY",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release QA: Fleet 4.71.0",
        "issueNumber": 30600
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nWinGet based Chrome FMAs refer to a non-versioned download URL, so the latest version of Chrome gets downloaded rather than the version specified in the manifest we pulled. This means that the hash of the installer won't match if we don't immediately detect and merge an update to the installer in our own manifests, if we specify a hash. #27755 avoids this by dropping hash checking there as well, but this means that we don't verify that the installer downloaded matches the one we expected.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Point to a non-current Chrome Windows FMA manifest with a hash specified (anything at or earlier than April 1 ~3pm CDT).\n2. Attempt to add the Chrome Windows FMA.\n\n### üõ†Ô∏è To fix\n\nEXE versions of Chrome are available that include version in the URL. Tradeoff is those EXEs will need a custom install script, and may not include an UpgradeCode for building a version-agnostic uninstall script.",
          "number": 27756,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Windows Chrome FMAs don't have hashes specified in manifests",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27756"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6m4",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤Windows Chrome FMAs don't have hashes specified in manifests",
        "issueNumber": 27756
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Latest on dogfood\n\n**Web browser and operating system**: Any\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe default uninstall script that Fleet provides for msi custom packages, executes correctly (uninstalls the software) but outputs the following error:\n`script execution error: exec: WaitDelay expired before I/O complete`\n\nThis is because the command to execute the uninstall is not finishing before the script attempts to post the exit code and exit the script. \n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload an msi custom package\n2. Install the software\n3. Run the uninstall script and observe the error\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\n\n\u003cimg width=\"759\" height=\"405\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/98b5e423-6729-44fb-bf9b-447e5d94865d\" /\u003e\n\n ### üõ†Ô∏è To fix ",
          "number": 31077,
          "repository": "fleetdm/fleet",
          "title": "Fleet provided uninstall script for msi custom packages works but outputs errors",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31077"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcz8Es",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Fleet provided uninstall script for msi custom packages works but outputs errors",
        "issueNumber": 31077
      },
      {
        "assignees": [
          "jacobshandling"
        ],
        "content": {
          "body": "## Related user story\n\nSub-task of #30240 \n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- [ ] Create **update details modal**\n- [ ] Update the **Install details modal**\n- [ ] Update the **uninstall details modal**\n- [ ] Allow all 3 modals to be accessed from both **Self-service page** and **Host details \u003e software \u003e Inventory page** with nuances in copy changes between each\n\n## Condition of satisfaction\n\n- [ ] Users click **update available** will be able to see the **Update details modal**\n- [ ] Users can **update** from the **Update details modal**\n- [ ] Users can **uninstall** from the **Update details modal**\n- [ ] Uninstall and install details modals have a new current version/versions section\n- [ ] Uninstall and install details modals have details hide/show with reveal button\n- [ ] Uninstall and install details modals can be reached via clicking **Install (pending)** / **Uninstall (pending)** / **Update available**, etc on an offline host\n- [ ] Nuance between copies for modals accessed from Self-service page vs. Host details \u003e software \u003e inventory page\n\n- See story's [Figma](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/-30240-Show-appropriate-self-service-actions-based-on-whether-software-is-on-the-host?node-id=5317-1836\u0026t=wQkHuan83PAwlqaW-0) \n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 30860,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service/host software \u003e Update details, Install details, and Uninstall details modals",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30860"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgck75Q",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-orchestration",
          "~assisting g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Show appropriate self-service/host software \u003e Update details, Install details, and Uninstall details modals",
        "issueNumber": 30860
      },
      {
        "assignees": [
          "jacobshandling"
        ],
        "content": {
          "body": "\"...There‚Äôs a different install modal for app store apps vs software packages... so we‚Äôll need to rebase/take that into account for the new modals\"",
          "number": 31114,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service/host software \u003e AppInstallDetails modal",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31114"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgc0HQg",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Show appropriate self-service/host software \u003e AppInstallDetails modal",
        "issueNumber": 31114
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSoftware shows in Inventory tab even though it has not been installed \n\n\u003cimg width=\"1482\" height=\"581\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bc8ccb34-503b-4421-b145-e34db2e9541d\" /\u003e\n\u003cimg width=\"1485\" height=\"623\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0c4c5159-d175-434b-83e1-f01c464f2391\" /\u003e\n\nThe software also shows in My device \u003e\u003e Software tab\n\n\u003cimg width=\"1143\" height=\"675\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3769f882-99f2-46c1-84b6-5c316cbdf730\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add software to the team's library\n2. From the Host record \u003e\u003e Software \u003e\u003e Library tab, click Install\n3. Before the software has been installed (or after a failed install) go to the Host record \u003e\u003e Software \u003e\u003e Inventory tab\n\n\n### üïØÔ∏è Expected behavior\nSoftware should not show on the Inventory tab unless it is installed on the host. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30747,
          "repository": "fleetdm/fleet",
          "title": "Pending and failed software installs show in Host \u003e\u003e Software \u003e\u003e Inventory tab",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30747"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdwYg",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Pending and failed software installs show in Host \u003e\u003e Software \u003e\u003e Inventory tab",
        "issueNumber": 30747
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n\u003cimg width=\"1265\" height=\"820\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e12aa8fe-1ce5-4e53-add1-2efc9600ad40\" /\u003e\n\n\u003cimg width=\"1907\" height=\"851\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8d49bd71-5c07-42f3-897b-6be97395c9df\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n\n1. Add a VPP software item to the team's Library, make it available in Self Service\n2. For an MDM enabled host, initiate the install, then once the app is installed, immediately delete it\n3. Wait 10 min. This will result in a \"Failed\" status for the VPP app, because it will fail to verify that the app was installed\n4. Click on the \"Failed\" status in the Host \u003e\u003e Software \u003e\u003e Library tab, and also in Self Service, compare\n\n\n### üïØÔ∏è More info _(optional)_\nThe copy in the modals should both indicate that the install failed, but in Self Service it's showing the \"is installing or will install\" copy instead\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 31003,
          "repository": "fleetdm/fleet",
          "title": "Self service modal displays incorrect message for VPP install status",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31003"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcs0UM",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Self service modal displays incorrect message for VPP install status",
        "issueNumber": 31003
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nApp does not install, InstalledApplicationList does not return the app, App install fails\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Start on a previous Fleet version, I used 4.70.0\n2. Install a VPP app on a host via Fleet\n3. Migrate to v4.71.0\n4. Attempt to reinstall the VPP app via Fleet\n\n### üïØÔ∏è More info _(optional)_\nWe need to send the extra flag to make installed apps Managed\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 31060,
          "repository": "fleetdm/fleet",
          "title": "Reinstalling VPP Apps that were installed previously to 4.71.0 is not making them managed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31060"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcvhSQ",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Reinstalling VPP Apps that were installed previously to 4.71.0 is not making them managed",
        "issueNumber": 31060
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: NVD feed 2025-05-29\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n```\n=== RUN   TestCPEFromSoftwareIntegration\n    cpe_test.go:1816: Using /Users/ian/Downloads/cpe-5806690027c4868a4abef49f92654589907904436b2633e81b1b78ab118627d7.sqlite as database file\n    cpe_test.go:1832: \n        \tError Trace:\t/Volumes/Code/CH/fleet/server/vulnerabilities/nvd/cpe_test.go:1832\n        \tError:      \tNot equal: \n        \t            \texpected: \"cpe:2.3:a:adobe:acrobat_reader_dc:22.002.20191:*:*:*:*:macos:*:*\"\n        \t            \tactual  : \"cpe:2.3:a:adobe:acrobat_reader:22.002.20191:*:*:*:*:macos:*:*\"\n        \t            \t\n        \t            \tDiff:\n        \t            \t--- Expected\n        \t            \t+++ Actual\n        \t            \t@@ -1 +1 @@\n        \t            \t-cpe:2.3:a:adobe:acrobat_reader_dc:22.002.20191:*:*:*:*:macos:*:*\n        \t            \t+cpe:2.3:a:adobe:acrobat_reader:22.002.20191:*:*:*:*:macos:*:*\n        \tTest:       \tTestCPEFromSoftwareIntegration\n        \tMessages:   \tAdobe Acrobat Reader DC.app\n    cpe_test.go:1832: \n        \tError Trace:\t/Volumes/Code/CH/fleet/server/vulnerabilities/nvd/cpe_test.go:1832\n        \tError:      \tNot equal: \n        \t            \texpected: \"cpe:2.3:a:adobe:acrobat_dc:22.002.20212:*:*:*:*:windows:*:*\"\n        \t            \tactual  : \"\"\n        \t            \t\n        \t            \tDiff:\n        \t            \t--- Expected\n        \t            \t+++ Actual\n        \t            \t@@ -1 +1 @@\n        \t            \t-cpe:2.3:a:adobe:acrobat_dc:22.002.20212:*:*:*:*:windows:*:*\n        \t            \t+\n        \tTest:       \tTestCPEFromSoftwareIntegration\n        \tMessages:   \tAdobe Acrobat DC (64-bit)\n--- FAIL: TestCPEFromSoftwareIntegration (3.16s)\n```\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nRun `TestCPEFromSoftwareIntegration` with Adobe Acrobat DC entries uncommented.\n\n### üïØÔ∏è More info\n\nSomething changed in the May 29 build of the CPE database to break these CPEs. May 28 CPE DB behaves as expected.\n\n### üõ†Ô∏è To fix\nResearch needs to be done to determine the fix.\n",
          "number": 29570,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Acrobat Reader CPEs don't match expectations",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29570"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5uA",
        "labels": [
          "bug",
          ":release",
          "~vulnerability-management",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤Acrobat Reader CPEs don't match expectations",
        "issueNumber": 29570
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.66.0\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nSee failed runs of TestCPEFromSoftwareIntegration here: https://github.com/fleetdm/fleet/actions/runs/14609667847\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Uncomment test case in TestCPEFromSoftwareIntegration \n2. Run the test and note the failure\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nWe need to analyze the NVD data more closely to see why this CPE isn't being found.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nPer @iansltx 's comment below: timebox \"figure out what the problem is and if it's simple solve it and if not soon out another ticket or spend more time on it based on how broken things are\"",
          "number": 28490,
          "repository": "fleetdm/fleet",
          "title": "ü™≤CPE for python urllib is not generated",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28490"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5pQ",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤CPE for python urllib is not generated",
        "issueNumber": 28490
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nApp is stuck in pending, forever. \n\nYou can see that the previous verification is still in the `host_mdm_commands` table, preventing any further VPP Verifications from being sent out\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a VPP App to the team's library\n2. On an MDM enrolled host, attempt to install the app\n3. Once the app installs, but before the install is verified, turn off MDM \n4. Notice that in the `host_vpp_software_installs` table that the command for installing the app now has a `verification_failed_at` timestamp, and the app install has failed. You should also see an entry in `host_mdm_commands` indicating a pending VPP verification.\n5. Turn on MDM \n6. Queue up another app install\n7. Wait\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nWhen MDM is turned off, and marking the InstallApplication command with verification failed, also clear out the `host_mdm_commands` table for the host.",
          "number": 31020,
          "repository": "fleetdm/fleet",
          "title": "Previously failed VPP Verifications due to turning MDM off prevent further verifications from being sent",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31020"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgctKwA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Previously failed VPP Verifications due to turning MDM off prevent further verifications from being sent",
        "issueNumber": 31020
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.65.0\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nAPI call:\n`\n/api/latest/fleet/vulnerabilities?team_id=8\u0026order_key=hosts_count\u0026order_direction=desc\u0026page=0\u0026per_page=20\u0026exploit=true\u0026query=202`\n(Yes, 202 is the query, I was going for a year and just typed 202)\n\nAPI returning:\n```\n{\n  \"vulnerabilities\": [\n    {\n      \"cve\": \"CVE-2024-44308\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-44308\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.0549,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-11-20T00:15:00Z\",\n      \"cve_description\": \"The issue was addressed with improved checks. This issue is fixed in Safari 18.1.1, iOS 17.7.2 and iPadOS 17.7.2, macOS Sequoia 15.1.1, iOS 18.1.1 and iPadOS 18.1.1, visionOS 2.1.1. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited on Intel-based Mac systems.\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-24201\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-24201\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.00206,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-03-11T18:15:00Z\",\n      \"cve_description\": \"An out-of-bounds write issue was addressed with improved checks to prevent unauthorized actions. This issue is fixed in visionOS 2.3.2, iOS 18.3.2 and iPadOS 18.3.2, macOS Sequoia 15.3.2, Safari 18.3.1. Maliciously crafted web content may be able to break out of Web Content sandbox. This is a supplementary fix for an attack that was blocked in iOS 17.2. (Apple is aware of a report that this issue may have been exploited in an extremely sophisticated attack against specific targeted individuals on versions of iOS before iOS 17.2.).\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-03-12T14:06:31Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-24085\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-24085\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.07839,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-01-27T22:15:00Z\",\n      \"cve_description\": \"A use after free issue was addressed with improved memory management. This issue is fixed in visionOS 2.3, iOS 18.3 and iPadOS 18.3, macOS Sequoia 15.3, watchOS 11.3, tvOS 18.3. A malicious application may be able to elevate privileges. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 17.2.\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-01-28T15:26:19Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23222\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23222\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.00132,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-01-23T01:15:00Z\",\n      \"cve_description\": \"A type confusion issue was addressed with improved checks. This issue is fixed in iOS 17.3 and iPadOS 17.3, macOS Sonoma 14.3, tvOS 17.3. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23296\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23296\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.05242,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-03-05T20:16:00Z\",\n      \"cve_description\": \"A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23225\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23225\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.05242,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-03-05T20:16:00Z\",\n      \"cve_description\": \"A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 16.7.6 and iPadOS 16.7.6, iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-23397\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-23397\",\n      \"cvss_score\": 9.8,\n      \"epss_probability\": 0.93567,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-03-14T17:15:00Z\",\n      \"cve_description\": \"Microsoft Outlook Elevation of Privilege Vulnerability\",\n      \"hosts_count\": 8,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:53Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-35311\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-35311\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.24384,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-07-11T18:15:00Z\",\n      \"cve_description\": \"Microsoft Outlook Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 8,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:56Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-38226\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-38226\",\n      \"cvss_score\": 7.3,\n      \"epss_probability\": 0.70819,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-09-10T17:15:00Z\",\n      \"cve_description\": \"Microsoft Publisher Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 7,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:57Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-36761\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-36761\",\n      \"cvss_score\": 6.5,\n      \"epss_probability\": 0.79089,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-09-12T17:15:00Z\",\n      \"cve_description\": \"Microsoft Word Information Disclosure Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:53Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-38189\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-38189\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.87181,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-08-13T18:15:00Z\",\n      \"cve_description\": \"Microsoft Project Remote Code Execution Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:54Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-21413\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-21413\",\n      \"cvss_score\": 9.8,\n      \"epss_probability\": 0.92563,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-02-13T18:16:00Z\",\n      \"cve_description\": \"Microsoft Outlook Remote Code Execution Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:55Z\"\n    },\n    {\n      \"cve\": \"CVE-2021-42292\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2021-42292\",\n      \"epss_probability\": 0.55708,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2021-11-10T01:19:00Z\",\n      \"cve_description\": \"Microsoft Excel Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:55Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-44487\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\",\n      \"cvss_score\": 7.5,\n      \"epss_probability\": 0.91023,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-10-10T14:15:00Z\",\n      \"cve_description\": \"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-44309\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-44309\",\n      \"cvss_score\": 6.1,\n      \"epss_probability\": 0.00954,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-11-20T00:15:00Z\",\n      \"cve_description\": \"A cookie management issue was addressed with improved state management. This issue is fixed in Safari 18.1.1, iOS 17.7.2 and iPadOS 17.7.2, macOS Sequoia 15.1.1, iOS 18.1.1 and iPadOS 18.1.1, visionOS 2.1.1. Processing maliciously crafted web content may lead to a cross site scripting attack. Apple is aware of a report that this issue may have been actively exploited on Intel-based Mac systems.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-22226\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-22226\",\n      \"cvss_score\": 6,\n      \"epss_probability\": 0.08037,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-03-04T12:15:00Z\",\n      \"cve_description\": \"VMware ESXi, Workstation, and Fusion contain¬†an information disclosure vulnerability due to an out-of-bounds read in HGFS.¬†A malicious actor with administrative privileges to a virtual machine may be able to exploit this issue to leak memory from the vmx process.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-03-05T15:25:02Z\"\n    }\n  ],\n  \"count\": 22,\n  \"counts_updated_at\": \"2025-03-27T17:06:29Z\",\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}\n```\nNote the count says 22, but there's only 16 CVEs\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to Software \u003e Vulnerabilities tab \u003e Add those same filters above, look at count mismatching the vulns\n2. Here's an example: it's showing a count of 100 but there's only 14. https://dogfood.fleetdm.com/software/vulnerabilities?exploit=true\u0026query=2025\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nShow correct vulnerability count.",
          "number": 27580,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Software vuln count off",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27580"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7do",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Software vuln count off",
        "issueNumber": 27580
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "\n### Requestor\n\n- Application name: Yubikey Manager\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30739,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Yubikey manager",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30739"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdkTI",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: Yubikey manager",
        "issueNumber": 30739
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: iTerm2\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30724,
          "repository": "fleetdm/fleet",
          "title": "New FMA:  iTerm2",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30724"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdAFs",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA:  iTerm2",
        "issueNumber": 30724
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "\n### Requestor\n\n- Application name: Beyond Compare\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30727,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Beyond Compare",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30727"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdLoc",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: Beyond Compare",
        "issueNumber": 30727
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: VNC Viewer\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30802,
          "repository": "fleetdm/fleet",
          "title": "New FMA: VNC Viewer (macOS)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30802"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcgftg",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: VNC Viewer (macOS)",
        "issueNumber": 30802
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nGenerated MSI uninstall scripts use ProductCode rather than UpgradeCode, so attempts to uninstall an app with a different version than the one contained in the installer won't find the app. Even if an app hasn't changed in Fleet, auto-update (e.g. for Chrome or Box) will likely break this uninstall script as the product code will change.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add an older version of Cloudflare Warp (e.g. the one mentioned in the old version of [this diff](https://github.com/fleetdm/fleet/commit/b0d0b2217f08ca195e2f9603096435eaf17d4c19)) as a custom package, and install it on a Windows host.\n2. Switch the package to the current version of Cloudflare Warp.\n3. Attempt to uninstall Warp on the host that has it.\n\n### üïØÔ∏è More info\n\nThis ticket is separate from the identical problem for FMAs as this fix needs to be rolled out in the context of a Fleet release, and touches more things (and has impacts on the ability to build automatic install policies).\n\n### Chosen Fix\n\nSee https://github.com/fleetdm/fleet/issues/27758#issuecomment-3079478169\n\n### To QA\n\n1. :white_check_mark: Start on v4.71.0. Add the Chrome enterprise MSI as a custom package. \n2. :white_check_mark: Upgrade to the fixed version. Check `software_installers` in the database. A job should run within a minute or so that populates the Chrome enterprise MSI's `upgrade_code`. The uninstall script won't change as part of this (it'll still have the product code based uninstall script).\n3. :white_check_mark: Delete the Chrome MSI and re-add via the UI with no overrides on the script. The uninstall script should now be the same as the Windows FMA uninstall script as of 2025-07-15, and this script (with an $UPGRADE_CODE placeholder) should be shown as the placeholder uninstall script when adding an MSI.\n4. :white_check_mark: Delete the Chrome MSI and re-add via GitOps. The uninstall script should be the same as when added via the UI.\n5. :white_check_mark:  Delete and re-add via the UI, but make slight edits to the script before saving, while keeping the $UPGRADE_CODE placeholder there. The placeholder should still be substituted for the upgrade code.\n6. :white_check_mark:  Edit the app, replacing the uninstall script with one using both package ID and upgrade code placeholders. Both should populate on the saved script.\n7. :white_check_mark: Add an MSI that doesn't have an upgrade code, without modifying the uninstall script. Confirm that the uninstall script is the one-liner using ProductCode.\n8. :white_check_mark: Attempt to include $UPGRADE_CODE in the uninstall script via a package edit. You should get an error message.\n9. :white_check_mark: Attempt to edit the uninstall script in a way that does _not_ include $UPGRADE_CODE. The operation should succeed.\n10. :white_check_mark: Confirm that MSIs no longer show an extra uninstall warning in self-service.\n11. :white_check_mark:  Confirm that uninstall script help text mentions $UPGRADE_CODE for (and only for) MSIs.\n\n### Potential Fixes\n\nExtract UpgradeCode from MSI packages instead of ProductCode, and use [finding related installers by upgrade code](https://stackoverflow.com/a/49077469/2476827) to generate the uninstall script, uninstalling all software with the associated UpgradeCode rather than just the exact version with the ProductCode.\n\nWe'll need to decide what to do with existing uninstall scripts. We can detect when an uninstall script is the default, ProductCode based one, but in order to upgrade the script we'll need to download and re-parse the MSI (similar to what we did when initially adding uninstall scripts). Otherwise we'll be generating a script that won't work, as currently MSI `package_ids` are the ProductCode, and the new uninstall script would assume UpgradeCode.\n\nAlternative would be to leave scripts as-is and document that admins should delete and re-add MSIs to get the better script (\"editing\" the MSI package with the same installer will be a no-op, and emptying the uninstall script and saving will populate the wrong script).\n\nAdditionally, without additional changes this will break automatic install policies (moreso than they're already broken), as we're currently using assuming that package IDs will contain product code. We can work around this right now by passing product code separately when creating the auto-install policy on app upload, but that breaks as soon as we switch auto-install policies to be add-able after a package has been uploaded (#25499), so we have three choices from what I can see:\n\n1. Drop automatic policy creation for MSIs until UpgradeCode is visible via osquery (or wait to fix this issue until UpgradeCode is visible via osquery and switch automatic policy creation to use UpgradeCode in the same release that we switch uninstalls to use UpgradeCode)\n2. Add a way to store ProductCode on the installer package so we can allow generating the current (overly precise) policy queries for MSIs\n3. Add a way to store package vendor on the installer package so we can temporarily switch the policy query to a more generic name + vendor check that we currently use for Windows FMAs.\n\n",
          "number": 27758,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Custom package MSI uninstall scripts don't uninstall other versions of the software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27758"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6Nk",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~windows",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Custom package MSI uninstall scripts don't uninstall other versions of the software",
        "issueNumber": 27758
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.62.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAutomatic install policies for MSIs use a query based on ProductCode, a GUID that changes when newer versions of the software are released. This means that the policy query will not only fail if no version of the software is installed, but also if any _other_ version of the software is installed.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install an older version of an app (preferably as an MSI) on a host\n2. Upload a newer-version MSI of the same app, with automatic install turned on\n3. See the policy generated in step 2 fail, queueing up an install even though the app already exists\n\n### üïØÔ∏è More info\n\nNoticed this in manifest updates for #27443, which is a valid check in this case as at the time we were using the same method for building queries as we do for custom package MSIs.\n\n### üõ†Ô∏è To fix\n\nTwo options (in the case osquery work is required that work is tracked in its own ticket):\n\n#### Use program name and vendor (available now, less reliable, not recommended)\n\nWe could extract vendor and program name from the MSI and use that for existence queries, similar to what we do now for FMA. Catch is this is imprecise and may actually create more reliability issues than it solves (AKA the reason we don't create automatic policies for EXE installers). We probably _shouldn't_ bother doing this.\n\n#### Use UpgradeCode (requires osquery changes, more reliable)\n\nWe could extract UpgradeCode from MSIs and then, when osquery adds UpgradeCode support for `programs`, build our queries based on that. MSIs are highly recommended to have UpgradeCode, such that most if not all have them (and we can bail on automatic policy creation if an MSI doesn't). If we fix this concurrently with #27758 we can switch the `package_ids` DB column in `software_installers` to mean UpgradeCode for MSIs.",
          "number": 27447,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Auto-install queries for custom MSI packages fail when a different version of the same software is installed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27447"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6VI",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "~windows",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤Auto-install queries for custom MSI packages fail when a different version of the same software is installed",
        "issueNumber": 27447
      },
      {
        "assignees": [
          "jacobshandling",
          "RachelElysia"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an end user of Fleet desktop,\n| I want to be able to see when updates are available for apps I have installed\n| so that I can keep my computer's software up to date.\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #25784\n\n## Context\n- Design: @eugkuo \n- Dev: @mostlikelee, @iansltx \n- Original request: #25784\n- Broken out of https://github.com/fleetdm/fleet/issues/27245\n \n \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma link](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=2-130\u0026p=f\u0026t=4BUeL3i6REY46HIb-11)\n- [ ] CLI (fleetctl) usage changes: _No changes_\n- [ ] YAML changes: _No changes_\n- [ ] REST API changes: _No changes_ (all frontend for this iteration)\n- [ ] Fleet's agent (fleetd) changes: _No changes_\n- [ ] GitOps mode changes: _No changes_\n- [ ] Activity changes: _No changes_\n- [ ] Permissions changes: _No changes_\n- [ ] Changes to paid features or tiers: _No changes_\n- [ ] My device and fleetdm.com/better changes: _No changes_\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: _No changes_\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n  - @noahtalerman: Dogfood this story at the same time: https://github.com/fleetdm/fleet/issues/30035 \n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: See #29914\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: High\n- Risk description: Primary risk here is suggesting incompatible updates for software such that updates either fail or \"are successful\" but break the end user's install. This is partly because we're going to be assuming that all self-service software is opted into update notifications, including custom packages. Based on scope reductions, we're proceeding knowing that we'll post software for update that won't successfully update, so we're accepting this risk and seeing where it takes us.\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\nTest with Windows, macOS, Linux hosts\nTest with Chrome, Safari, Edge, Firefox\n\n#### UI\n\n1. Ensure that there there are more than 8 updates available for a host by installing older versions of the software (e.g. downloading old FMA copies based on previous manifest versions), then adding current versions as available in self-service on the same team.\n2. Navigate to Fleet Desktop.\n3. Verify that there the \"Updates\" section shows at the top of the page.\n4. Verify that the number next to the Self-service tab matches the number of available updates.\n5. Verify that selecting 'Next' swipes over to the next 4 update cards in the Updates section.\n6. Verify that the same software titles have 'Update' actions next to them in Self-service table.\n7. Select \"Update\" on a software title\n8. Verify that the status changes to 'Updating' with an animated circle progress spinner on both the app card and in the Self-service table..\n9. Navigate away from the page and navigate back and verify that the status remains.\n10. When the update is complete verify that the software is updated locally, the card shows \"Updated\", and a refetch has been queued.\n11. Once the refetch completes, verify that the card is removed from the top section and that the action in the Self-service table changes to \"Reinstall\" (when the one card is removed, the remaining 3 cards still show but the one that was removed is replaced with the next item in the list, so that it still shows 4 cards)\n12. Verify that the pagination always shows 4 items, so it goes from showing 1 2 3 4 to 5 6 7 8.\n13. Update four more apps.\n14. Verify that the Update section shows 3 cards and that the width of each card is the same as when there are 4 items in the Update section at widths above 1280\n15. Verify layout at 480, 768, and 1024 breakpoints. Note that 2 cards show at 768 and that 3 cards show at 1024.\n16. Verify that self-service is paginated and displays 20 items per page.\n\n- [x] Double check for the additional change in host details for the Self service hover text to add a learn more link\n\n- [ ] If there was only one update card and I update the app and it refetches, the Updates section disappears\n\n- [ ] Clicking the Update all option, refetches will occur until all updates are completed. The count will continue decreasing until no further updates are available and then the section will disappear \n\n- [x] Failed modal should show details when clicked\n\n#### Update eligibility criteria\n\n- [x] Software not available for self-service should not show in the available updates list\n- [x] Software not in inventory should not show in the available updates list\n- [x] VPP apps should not show in the available updates list if MDM is turned off\n- [x] Software in inventory that is \u003e= the version for the installer doesn't show\n- [ ] Software in inventory whose version can't be compared to the installer's version shouldn't show\n- [x] Software in inventory, installed multiple times, where one install is an older version and one install is a same-or-newer version, should show in the available updates list\n- [x] Software in inventory, installed once, that is older than the installer's version, should show in the available updates list\n- [ ] Software in the list that was previously successfully installed by Fleet should NOT show install status if a refetch has happened since the install\n- [x] Software in the list with a pending install SHOULD show install status, even if a refetch has happened since the install started\n- [x] Software in the list that has been successfully installed by Fleet since the last refetch SHOULD show install status\n- [x] Software that shows up in the list that has had an install failure by Fleet since the last refetch SHOULD show install status\n\nEdge cases:\nüî¥  Software installed in multiple locations - what happens when I update? Does it only update one of the applications? Does that mean the card remains after the update if the other locations weren't updated?\n\"It depends on the install script and the package\"\nShort answer: Yes, the card can still remain if an outdate version exists anywhere on the host\nüî¥ Will it install a new firefox in the expected location, and you may end up with more than one version?\nA: Yes\nüî¥ What do we show in the carousel for the version -\u003e version subtext?\nA: Design removed version -\u003e version and it's now just version\n\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 27983,
          "repository": "fleetdm/fleet",
          "title": "üñ•Ô∏è Fleet Desktop \u003e Self-service: Add \"Update\" actions when updates are detected for installed software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27983"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX12Q",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-cisneros",
          "customer-numa",
          "#g-orchestration",
          "#g-software",
          "prospect-waterman",
          "prospect-antonella",
          "~assisting g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "üñ•Ô∏è Fleet Desktop \u003e Self-service: Add \"Update\" actions when updates are detected for installed software",
        "issueNumber": 27983
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: main\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSoftware installs are queued but are never processed by osquery-perf hosts, they remain pending forever.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Set up a Fleet instance with several software items in the Library, all set to automatically install on policy failure\n2. Enroll some osquery-perf hosts (I used `go run ./cmd/osquery-perf/agent.go --enroll_secret \u003csecret_here\u003e --host_count 10 --os_templates macos_14.1.2 --start_period 5m --query_interval 60s --config_interval 5m -mdm_prob=0 -policy_pass_prob=\"0.5\"`\n3. See the policies fail and the software installs get queued up. Wait a while.\n\n### üïØÔ∏è More info _(optional)_\nThis is currently blocking load testing efforts for [#30035](https://github.com/fleetdm/fleet/issues/30035)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30913,
          "repository": "fleetdm/fleet",
          "title": "osquery-perf refuses to process software install requests for macOS",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30913"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcp4X0",
        "labels": [
          "bug",
          "~released bug",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "osquery-perf refuses to process software install requests for macOS",
        "issueNumber": 30913
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nFailed verification:\n\n\u003cimg width=\"2374\" height=\"474\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/96d06bdc-ad86-4afd-b7bd-7f169c5af158\" /\u003e\n\nModal shows:\n\n\u003cimg width=\"1072\" height=\"1048\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6d1c81dd-d902-433c-9114-4fafbdea4aee\" /\u003e\n\nShould be:\n\n\u003cimg width=\"519\" height=\"499\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dc619549-f2e6-4984-9dc2-6bbec5fa4290\" /\u003e\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Queue up a VPP install\n2. Immediately once the app installs, delete the app so that the InstalledApplicationList command will never return it as an installed app\n3. Wait 10 min for the verification to fail\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30938,
          "repository": "fleetdm/fleet",
          "title": "Incorrect copy in modal shown when VPP app install is not verified",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30938"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcp5UA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Incorrect copy in modal shown when VPP app install is not verified",
        "issueNumber": 30938
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: fleetctl - version rc-fleetctl-test-v4.63.0-1433-g2029cc98d9\n  branch: \tmain\n  revision: \t2029cc98d9e2f1f548d5567deafcea7485bc12f4\n  build date: \t2025-05-20\n  build user: \tjordan\n  go version: \tgo1.24.2\n\n**Web browser and operating system**: Chrome 136.0.7103.114 on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nI have created a fairly simple Gitops setup with a single team and 7 different common .pkg software installers, Chrome, Edge, Firefox, Box, Slack, Zoom, Cloudflare WARP\n\nEvery time I run gitops the software_installers entry for Box gets updated including all the usual update side effects that are applied such as deleting currently pending installations. This seems like a bug, confirmed with SW team here: https://fleetdm.slack.com/archives/C086V2QK76X/p1747675290738609\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Setup gitops\n2. Create a gitops team with some software\n3. Include the Box app. My latest-box-macos-pkg.yml is below. I've removed my ngrok URL from it but I've uploaded the exact package I am using [here](https://drive.google.com/file/d/1n3H1N3WuWgIHv2Qm5ghfP6bOkVF-g1qN/view?usp=sharing) on Google drive\n```\nurl: [url removed]/BoxDrive-2.43.205.pkg\nself_service: true\n```\n4. Run gitops, wait for it to complete\n5. Login to your mysql database and run `SELECT * FROM software_installers;` - note the updated_at time for the Box app\n6. Run gitops again, and rerun the query from 5 after it's done. Note the new updated_at time, and also that other apps didn't change\n\n \n### üïØÔ∏è More info _(optional)_\nI discovered this while debugging this ticket: https://github.com/fleetdm/fleet/issues/28664\n\nI am working to make the setup experience more resilient here in general as part of the ticket above however it does seem like this behavior of the software getting updated and side effects applied is unintended and suboptimal here and could lead to other unexpected behavior if not fixed.\n\n### üõ†Ô∏è To fix\nWhen gitops is run with the same box installer pkg included multiple times it should not result in that installer being \"updated\"",
          "number": 29286,
          "repository": "fleetdm/fleet",
          "title": "ü™≤One particular software installer gets updated every time gitops run is conducted",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29286"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8R4",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤One particular software installer gets updated every time gitops run is conducted",
        "issueNumber": 29286
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n\u003cimg width=\"1506\" height=\"404\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dd287323-f23c-44dc-9473-d27d19550e7b\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to an Android host and click the software tab\n\n\n### üïØÔ∏è Expected behavior\nShould just show empty state without message \"Software installed on this host\"\n\nNOTE: #30318 separated Software into \"Inventory\" and \"Library\" neither of which are available for Android. There should be no copy about \"Software installed on this host\" since it is not supported at all for Android devices.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30905,
          "repository": "fleetdm/fleet",
          "title": "Android copy for Software tab should be removed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30905"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcna-8",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Android copy for Software tab should be removed",
        "issueNumber": 30905
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nThe Homebrew based Chrome FMA refers to a non-versioned download URL, so the latest version of Chrome gets downloaded rather than the version specified in the manifest. Homebrew explicitly skips a hash check on Chrome, ensuring downloads are successful when new versions are released at the expense of download verification.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee the FMA manifest for `chrome/darwin`.\n\n### More info\n\nWe've had this issue with macOS Chrome since FMAv1 rolled out, and FMAv2 inherits the issue as we're pulling from the same source.\n\n### üõ†Ô∏è To fix\n\nSee https://github.com/fleetdm/fleet/issues/27919#issuecomment-2791036030.\n\nAlso add a FMA docs update to indicate we're using Chrome Enterprise.\n\n[Figma design](https://www.figma.com/design/rSYo3wpfkJo0EklCbF7MFp/-27919-macOS-Chrome-FMA-doesn-t-have-hash-specified-in-manifest?node-id=2-130\u0026p=f\u0026t=NObiCXiVgHjCPeb3-11)\n\n### To QA\n\nWhile pointing at the associated branch for FMA manifests, confirm that adding Chrome shows the \"Latest\" copy on the FMA add page and details modal, and when added shows the current version of Chrome. Confirm install/uninstall work as expected. Delete the app from Fleet and re-add via GitOps to confirm the version number and scripts are the same as when you added via the UI. Confirm that a normal DMG or ZIP FMA is unaffected by these changes (still shows/adds version number from the manifest).",
          "number": 27919,
          "repository": "fleetdm/fleet",
          "title": "ü™≤macOS Chrome FMA downloads latest version instead of specified version in UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27919"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7Ag",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤macOS Chrome FMA downloads latest version instead of specified version in UI",
        "issueNumber": 27919
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68.1\n\n**Web browser and operating system**: Firefox 139 on Fedora 42\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nWhen uploading a .deb and a .rpm package to Fleet for self-service, on a host that is only compatible with one of the formats, both packages will be available in the self-service UI. When you attempt to install the mismatched package, the installation will fail.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a .deb and .rpm, enabling self-service for both, to a team with a Linux host.\n2. Navigate to self-service on the host and observe that both packages are available for installation.\n3. Attempt to install the mismatched package for your host.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nShow only the package that's compatible with the host.\n",
          "number": 29849,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Self-service serves incompatible packages to Linux hosts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29849"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX2sI",
        "labels": [
          "bug",
          ":release",
          "customer-numa",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤ Self-service serves incompatible packages to Linux hosts",
        "issueNumber": 29849
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.65RC and older\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nCVE-2025-43200 is shown twice for macOS 15.1.1 in Dogfood.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Enroll a Mac with a vulnerable OS version and run vulnerabilities\n2. Enroll a Mac with a different architecture but the same (vulnerable) OS version and run vulnerabilities again\n3. Check the detail page for the shared OS version; you'll see duplicate CVEs\n\nThis is also visible in the OS list view when hovering the vulnerabilities column for an affected version (or, more easily, in the OS versions collection endpoint) that powers the list.\n\nSee [Dogfood](https://dogfood.fleetdm.com/software/os/144). The duplicate is from the API, so this is a backend issue.\n\n### üõ†Ô∏è To fix\nSince we don't split out different architectures in the UI for OS version, seems like we need to merge rows for the OS vulnerabilities query so there is one result row per CVE per name/version combo, even if there are multiple architectures and thus multiple rows.\n\nIf we want to split out OS versions by architecture later we can revise the query logic to look at vulns by OS version ID rather than by name/version, which will give us one row per vuln.",
          "number": 27061,
          "repository": "fleetdm/fleet",
          "title": "ü™≤OS list/detail shows the same CVE twice when an OS version has multiple architectures",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27061"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX420",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤OS list/detail shows the same CVE twice when an OS version has multiple architectures",
        "issueNumber": 27061
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a contributor to Fleet-maintained apps,\n| I want to be able to specify hand-build (un)install scripts for Homebrew-based packages\n| so that I can unblock adding FMAs that have install requirements that Fleet's existing formula ingestion process doesn't (yet) support.\n\n## Key result\n\n100 FMAs\n\n## Original requests\n\n#30518\n\n## Context\n- Product Designer: @jahzielv \n- Engineering DRI: @jahzielv \n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] FMA Homebrew input files can reference manual install/uninstall script paths just like WinGet ones\n- [ ] FMA README is updated with the new functionality\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\nFollowing updated steps in https://github.com/fleetdm/fleet/blob/main/ee/maintained-apps/README.md\n\n1. Create manual scripts for install and uninstall, and reference them in the input file for an existing Fleet-maintained app\n2. Run the app ingest script\n3. Add the modified app via Fleet\n4. Confirm that the specified install and uninstall scripts were imported alongside the package\n5. Confirm that the new uninstall script field is mutually exclusive with the existing pre and post uninstall script fields (ingestion should fail if all of them are set, because the uninstall script should include whatever may be put in those fields. Those fields are basically tacked on to the generated script, but the provided script should override the generated one entirely)\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30780,
          "repository": "fleetdm/fleet",
          "title": "Allow specifying (un)install scripts manually for Homebrew-based Fleet-maintained apps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30780"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgckQ9g",
        "labels": [
          "story",
          "~backend",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Allow specifying (un)install scripts manually for Homebrew-based Fleet-maintained apps",
        "issueNumber": 30780
      },
      {
        "assignees": [
          "ilpianista"
        ],
        "content": {
          "body": "**Fleet version**: 4.67.3\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n[Vulnerability automations](https://fleetdm.com/guides/automations#vulnerability-automations) aren't firing webhooks when using Fleet Free\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Enable vulnerability automations in Fleet Free\n2. Wait for a new vuln to trigger a webhook\n3. Observe that the webhook doesn't fire\n\n### üïØÔ∏è More info _(optional)_\n\nI've setup Fleet server on my instance, enabled the `vulnerability_webhook` and got nothing.\n\nThis happens because the vulnerability webhook is looking for recent CVEs by querying the `cve_meta` table: https://github.com/fleetdm/fleet/blob/main/cmd/fleet/cron.go#L201C39-L201C64. However, while using the Free license, that table isn't populated at all.\n\nI understand that you don't want provide CVE metadata in the Free plan, but please consider to skip the `RecentVulnerabilityMaxAge` filter while using the Free plan.\n\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: I think let‚Äôs accept this as a bug.\n  - The fact that @ilpianista can turn it (screenshot below) on makes me still believe we built this to be available in Fleet. And, we‚Äôve been quite good at add validation for Premium only features.\n  - Also, Fleet has promised the community to never make free features paid. So, if @ilpianista had this working originally, I think that‚Äôd be a bad look for Fleet.",
          "number": 29076,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Vulnerability webhook doesn't work in Fleet Free",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29076"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcmo58",
        "labels": [
          "bug",
          "~released bug",
          ":product",
          "P2",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Waiting",
        "title": "ü™≤Vulnerability webhook doesn't work in Fleet Free",
        "issueNumber": 29076
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "test issue description edit 1",
          "number": 31307,
          "repository": "fleetdm/fleet",
          "title": "test issue title",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31307"
        },
        "estimate": 0,
        "id": "PVTI_lADOBDAnic4A4BEUzgc_3wY",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Waiting",
        "title": "test issue title",
        "issueNumber": 31307
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.69.0\n\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nAfter uploading a custom package to Fleet and using the returned hash_sha256 to create a software yaml in my GitOps repo, I am unable to create a policy automation.  \n\nExample:\n\n#### /lib/software/1password.yml\n\n```\nhash_sha256: 8e6a49d6d26d01586dfbbb89b2c2b48d51ef535a9dccea573945bb776b3901ab\n```\n\n#### /teams/my-team.yml\n\n```\nsoftware:\n  packages:\n    - path: ../lib/software/1password.yml\npolicies:\n  - name: macOS - 1Password installed\n    query: SELECT 1 FROM apps WHERE bundle_identifier = 'com.1password.1password';\n    install_software:\n      package_path: ../lib/software/1password.yml\n    critical: false\n    description: Our SOC 2 policies require a password manager to be installed on all workstations.\n    resolution: 1Password should be automatically installed. If it is missing, install it from self-service. \n    platform: darwin\n```\n\nThe policy and software are successfully applied to the team, but the 'install software' automation is not created.\n\nFrom customer:\n\n\"The policy and the software are in Fleet. However, the Policy does not seem to have the software item associated with it, to be executed when the policy fails. I can add it manually in the UI.\"\n\n\u003e We did not explicitly test this using a policy yaml rather than an inline definition while reproducing.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Upload a custom package to the Fleet UI with GitOps mode enabled.\n2. Utilize the `hash_sha256` of the software to create a software yaml in GitOps repo.\n3. Add software YAML to a policy to install that software package\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica\n\nMake sure that user can add policy automation to install software when using GitOps mode and software `hash_sha256`.\n",
          "number": 30435,
          "repository": "fleetdm/fleet",
          "title": "[ GitOps ] Cannot create automation for software uploaded as a custom package in Fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30435"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX2Wc",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "customer-numa",
          "customer-mozartia",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "[ GitOps ] Cannot create automation for software uploaded as a custom package in Fleet",
        "issueNumber": 30435
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe refetch fails.\n\u003cimg width=\"2924\" height=\"1470\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/10c4088e-c6e6-4b54-98c3-bbc60d3b06f0\" /\u003e\n\nAfter this happens, clicking \"Refetch\" will succeed within seconds. \n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a VPP app for iOS to the team's library\n2. On an enrolled iPhone, from Host \u003e\u003e Software \u003e\u003e Library click \"Install\"\n3. When the VPP app comes back as \"Installed\", refresh the browser to see that a refetch has been initiated automatically\n4. Wait 60 seconds\n\n### üïØÔ∏è More info _(optional)_\nMay be partially a released bug, but with the automatic refresh that was implemented in 4.71.0, filing this as an unreleased bug. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30754,
          "repository": "fleetdm/fleet",
          "title": "Automatic refetch fails on iOS host, clicking refetch succeeds",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30754"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcd1GA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Automatic refetch fails on iOS host, clicking refetch succeeds",
        "issueNumber": 30754
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSetup experience hangs, shows 6 apps as installed, but in Host Details, only 2 apps are showing as installed in Activity feed\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add several VPP apps to setup experience configuration (I used ~16)\n2. Wipe an ADE mac and go through setup experience\n\n\n### üïØÔ∏è More info _(optional)_\n\n\u003cimg width=\"720\" height=\"494\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a7ada72f-cabd-44e7-b7bb-4d8e9d70817f\" /\u003e\n\nLogs:\n```\nlevel=info ts=2025-07-08T19:12:11.784035Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:11.796392Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\nlevel=info ts=2025-07-08T19:12:14.055474Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:14.060028Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\nlevel=info ts=2025-07-08T19:12:14.301417Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:14.306267Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\nlevel=info ts=2025-07-08T19:12:14.550349Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:14.555421Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\n```\nThis is the app it got stuck on:\n```\nmysql\u003e SELECT * FROM nano_command_results WHERE command_uuid='cb0b2f96-1737-4df7-9d69-b7c49d7e0a79'\\G\n*************************** 1. row ***************************\n           id: 8FA05CF3-20AA-5541-BA9F-81B84B4523CC\n command_uuid: cb0b2f96-1737-4df7-9d69-b7c49d7e0a79\n       status: Acknowledged\n       result: \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n\u003cdict\u003e\n        \u003ckey\u003eCommandUUID\u003c/key\u003e\n        \u003cstring\u003ecb0b2f96-1737-4df7-9d69-b7c49d7e0a79\u003c/string\u003e\n        \u003ckey\u003eIdentifier\u003c/key\u003e\n        \u003cstring\u003ecom.doodlejoy.dh\u003c/string\u003e\n        \u003ckey\u003eState\u003c/key\u003e\n        \u003cstring\u003eInstalling\u003c/string\u003e\n        \u003ckey\u003eStatus\u003c/key\u003e\n        \u003cstring\u003eAcknowledged\u003c/string\u003e\n        \u003ckey\u003eUDID\u003c/key\u003e\n        \u003cstring\u003e8FA05CF3-20AA-5541-BA9F-81B84B4523CC\u003c/string\u003e\n\u003c/dict\u003e\n\u003c/plist\u003e\n\n   not_now_at: NULL\nnot_now_tally: 0\n   created_at: 2025-07-08 17:55:37\n   updated_at: 2025-07-08 17:55:37\n1 row in set (0.00 sec)\n```\n```\n*************************** 8. row ***************************\n                       id: 10\n                  host_id: 2\n                  adam_id: 6448680146\n             command_uuid: cb0b2f96-1737-4df7-9d69-b7c49d7e0a79\n                  user_id: NULL\n             self_service: 0\n      associated_event_id: \n               created_at: 2025-07-08 17:55:14\n               updated_at: 2025-07-08 17:55:14\n                 platform: darwin\n                  removed: 0\n             vpp_token_id: NULL\n                policy_id: NULL\n                 canceled: 0\nverification_command_uuid: NULL\n          verification_at: NULL\n   verification_failed_at: NULL\n```\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30678,
          "repository": "fleetdm/fleet",
          "title": "Setup Experience gets stuck when more than a few VPP app installs are included",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30678"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcagK8",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Setup Experience gets stuck when more than a few VPP app installs are included",
        "issueNumber": 30678
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.0\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nhttps://github.com/user-attachments/assets/caf5f833-cc19-4621-9182-45fa36eeb8bb\n\nDatabase for repro can be found here:\nhttps://drive.google.com/file/d/1DJDOk0Dr5d1UdP12AbxxgnwBBUsLAADF/view?usp=drive_link\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a label to fleet, make sure the label isn't applied to any hosts\n2. Add an FMA or custom package to a team, use \"Custom\" target, exclude any, for the label that no hosts have. Make it available in Self service.\n3. For an enrolled host on that team, check the software that is \"Available for install\"\n4. Open Self service for the host\n\n### üïØÔ∏è Expected Behavior\n\"Software will only be available for install on hosts that don't have any of these labels\"\nOur host does not have the label, so the software should be available for install for this host. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nManual labels should not consider timestamps for membership.\n",
          "number": 29315,
          "repository": "fleetdm/fleet",
          "title": "ü™≤FMA/Custom packages not respecting custom scoping \"exclude any\" for label that doesn't exist on host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29315"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8dE",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤FMA/Custom packages not respecting custom scoping \"exclude any\" for label that doesn't exist on host",
        "issueNumber": 29315
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nhttps://github.com/user-attachments/assets/2927ea40-4477-4a09-a393-e1583a85cb75\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to dogfood CVE details page https://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-24162 and note the detected date\n2. Go to dogfood vulnerabilities table page  https://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-24162\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0 and note the detected date\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nDetected date on software vuln table should match detected date in details ",
          "number": 26618,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Software vuln detected dates do not match between screens",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26618"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7LA",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤Software vuln detected dates do not match between screens",
        "issueNumber": 26618
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nMSI uninstall scripts on FMAs use ProductCode rather than UpgradeCode, so attempts to uninstall an app with a different version than the one contained in the installer won't find the app. This is important because many apps (e.g. Chrome, 1Password) get updated at high frequency, so the version that is on a host has a good chance of not matching the version of the installer added to Fleet.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install an older version of Cloudflare Warp (e.g. the one mentioned in the old version of [this diff](https://github.com/fleetdm/fleet/commit/b0d0b2217f08ca195e2f9603096435eaf17d4c19)) on a Windows host.\n2. Add the current version of the Cloudflare Warp FMA.\n3. Attempt to uninstall Warp on the host that has it.\n\nThe above steps are equivalent to if someone added Warp as an FMA, had it installed via the FMA on a host, then later updated the FMA.\n\n### üïØÔ∏è More info\n\nThis ticket is separate from the identical problem for custom installers as the fix doesn't impact automatic policy creation or installer parsing, and while there's some overlap in fix code, the two fixes can happen independently and the FMA one can go out without a release.\n\n### üõ†Ô∏è To fix\n\nUse UpgradeCode (which seems to be available in a couple of WinGet manifests I checked, but could also be extracteed from an MSI and wouldn't change for subsequent version MSIs) and [finding related installers by upgrade code](https://stackoverflow.com/a/49077469/2476827) to generate the uninstall script, uninstalling all software with the associated UpgradeCode rather than just the exact version with the ProductCode.\n\nA side effect for this should be that our uninstall scripts for MSIs are stable across app versions.",
          "number": 27757,
          "repository": "fleetdm/fleet",
          "title": "ü™≤FMA MSI uninstall scripts don't uninstall other versions of the software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27757"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzga9uJ8",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~windows",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤FMA MSI uninstall scripts don't uninstall other versions of the software",
        "issueNumber": 27757
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "Issue to track the release of fleetd 1.45.0 to `edge` and `stable`.",
          "number": 30602,
          "repository": "fleetdm/fleet",
          "title": "Release fleetd 1.45.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30602"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVNHM",
        "labels": [
          "story",
          ":release"
        ],
        "milestone": {
          "title": "Fleetd-1.45.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release fleetd 1.45.1",
        "issueNumber": 30602
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True\n- Desktop: True\n- Chrome extension: False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.44.0` \u003e `v1.45.0`\n- Desktop `v1.44.0` \u003e `v1.45.0`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 30601,
          "repository": "fleetdm/fleet",
          "title": "Release QA: Fleetd 1.45.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30601"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVMug",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.45.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release QA: Fleetd 1.45.0",
        "issueNumber": 30601
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003eNot run, patch release\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n",
          "number": 30607,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.70.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30607"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVU_Q",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-09T00:00:00Z",
          "title": "4.70.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Release QA: 4.70.1",
        "issueNumber": 30607
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.63.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nPackage shows as `MacFULL`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nUpload [SubEthaEdit](https://subethaedit.net/) as a custom package.\n\n### üïØÔ∏è More info\n\nSplit from #24873, as the package structure for this installer is different from SentinelOne and Cold Turkey, so the fix for those packages doesn't work here.\n",
          "number": 25587,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Incorrect software title name (MacFULL) when uploading SubEthaEdit",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25587"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5dM",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "~sw-upload"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Incorrect software title name (MacFULL) when uploading SubEthaEdit",
        "issueNumber": 25587
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Latest\n\n**Web browser and operating system**: Any\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nA prospect pointed this out and I've confirmed the same in dogfood. We are observing a lot of CVE data associated with Safari 18.5 that has been specifically addressed and resolved in this version. Some of these CVEs should only be associated with Safari 18.4 and below.\n\nSee here: https://dogfood.fleetdm.com/software/versions/557682\nAnd here: https://support.apple.com/en-us/122719\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Observe vulnerability data in dogfood\n\n\n### üïØÔ∏è More info _(optional)_\nIssues are resolved here: https://support.apple.com/en-us/122719\n\n\n### üõ†Ô∏è To fix \nRemove false positives for Safari 18.5\n\n",
          "number": 29476,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Vulnerability detection false-positive for Safari 18.5",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29476"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX51M",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "prospect-lastrucci"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤Vulnerability detection false-positive for Safari 18.5",
        "issueNumber": 29476
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.63.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nPackage shows as `SU_TITLE`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nUpload [Avid Codecs](https://avidtech.my.salesforce-sites.com/pkb/articles/en_US/download/Avid-QuickTime-Codecs-LE) as a custom package.\n\n### üïØÔ∏è More info\n\nSplit from #24873, as the package structure for this installer is different from SentinelOne and Cold Turkey, as well as from SubEthaEdit, so the fix for #24873 doesn't work here, and the fix for SubEthaEdit probably won't.\n",
          "number": 25588,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Incorrect software title name (SU_TITLE) when uploading Avid Codecs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25588"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5XY",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "~sw-upload"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤Incorrect software title name (SU_TITLE) when uploading Avid Codecs",
        "issueNumber": 25588
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a IT admin,\n| I want to show my end users only relevant actions\n| so that I provide my end users a clear self-service software experience.\n\n## Key result\n\nNone. Prioritized this because it's mission critical for `numa` to use Fleet as their software self-service tool.\n\n## Original requests\n\n- #30214\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @mostlikelee, @RachelElysia, @iansltx , @jacobshandling \n\n## Changes\n\n### Product\n- [ ] UI changes: Figma [here](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/Template--Copy-?node-id=0-1\u0026t=BVXxwI7m9syoqGiA-1)\n- [ ] CLI (fleetctl) usage changes: No changes\n- [ ] YAML changes: No changes\n- [ ] REST API changes: No changes\n- [ ] Fleet's agent (fleetd) changes: No changes\n- [ ] GitOps changes: No changes\n- [ ] Activity changes: No changes\n- [ ] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Ensure guides referencing software (self-service, software packages) correctly reference the UI as it currently stands, including caveats around software updates\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n- [ ] [UI Status and UI actions spreadsheet ](https://docs.google.com/spreadsheets/d/1GKYTQ80RP_Zec32heeniav2rUS9Snegy4S3ob0lgXYc/edit?usp=sharing)\nTest on macOS, Windows, Linux hosts for Self-service\nTest with Chrome, Safari, Edge and Firefox\nTest with FMA, Custom packages, and VPP software\n\nOn host details page or Self service with several installers available:\n\n- [x] Default sorting order is by Name ascending\n- [x] Name sort order can be reversed\n- [x] Sorting by status sorts software by status in the order mentioned in Figma (and can be reversed)\n- [x] Font weight should be \"regular\"\n- [x] If software is not in software inventory, status is \"---\"\n- [x] If status is \"---\", available action is \"Install\" (Uninstall should not be available)\n- [x] When a user clicks \"Install\", status changes to \"Installing\"\n- [ ] If software installs successfully, status changes to \"Installed\"\n- [x] If software fails to install, status changes to \"Failed\"\n- [x] If software is in software inventory, Status is \"Installed\"\n- [x] If software status is \"Installed\", available actions are \"Reinstall\" and \"Uninstall\"\n- [x] When a user clicks \"Reinstall\", status changes to \"Installing\", and when the action completes, the status changes to \"Installed\"\n- [ ] When a user clicks \"Uninstall\", status changes to \"Uninstalling\" and when the action completes, the status changes to \"---\"\n- [x] If software fails to uninstall, status changes to \"Failed (uninstall)\"\n- [x] If software is in software inventory, and other criteria are met (see [#27983](https://github.com/fleetdm/fleet/issues/27983) ) status is \"Update available\"\n- [x] If status is \"Update available\", available actions are \"Update\" and \"Uninstall\"\n- [ ] If Update available is clicked, details modal is shown with detail of installed software and possible actions to take\n- [ ] When a user clicks \"Update\", modal closes and status changes to \"Updating\", and when the action completes, the status changes to \"Installed\"\n- [x] If software fails to update, status changes to \"Failed\"\n- [ ] If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n- [x] If software is a tarball (`tgz_packages`), Fleet won't do inventory, and status in Library tab will only reflect if install is triggered from Fleet.\n- [x] Make sure that when the tarball is installed by Fleet, show `Installed` status + `Reinstall` and `Uninstall` actions.\n- [x] Make sure that when tarball install failed, to show `Failed` status and `Install` action only.\n- [x] Make sure that when tarball is available in library that no status is displayed and only `Install` action is available.\n- [ ] Make sure that the new copy as specified in Figma is added to \"Install details\" modal for each package that is missing version information (no inventory). \n\n\nNOTE: Host details modal and Self service modal have different copy, see Figma\n- [ ] Clicking on any status for any operating system should open a details modal\n- [ ] Details modal title should match the status and should conform to Figma\n- [ ] Install and Uninstall details dropdown should be collapsed by default and only show for installs or uninstalls completed by fleet (If the software was installed by the user, the modal will still show but will not contain a details dropdown, see Figma)\n- [ ] Clicking on an available action button within the modal closes the modal and updates the status in the list, according to the action that was taken, the action completes, and the status is updated again.\n- [ ] Confirm multiple versions installed \n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30240,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service actions based on whether software is on the host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30240"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX1-s",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-numa",
          "#g-software",
          "~context"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Show appropriate self-service actions based on whether software is on the host",
        "issueNumber": 30240
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `af417c1`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nWe added Google Chrome (Fleet-maintained) to the \"Workstations (canary)\" team in dogfood. \n\nOn the Software title page, Google Chrome show \"no_check\" as the hash:\n\n\u003cimg width=\"545\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0e7abbac-299a-46c3-a325-5d6da2d90078\" /\u003e\n\nThe value in the software title API is also \"no_check\":\n\n\u003cimg width=\"210\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ae40fa3f-3a41-4997-a761-e0f2d5b4a289\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üïØÔ∏è More info\n\nMore discussion in [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1750882925073179).\n\n### üõ†Ô∏è To fix\n\nPersist the installer bytes' SHA256 when saving an FMA via GitOps, not the SHA256 from the manifest. This fix is already in place for UI-added FMAs.",
          "number": 30325,
          "repository": "fleetdm/fleet",
          "title": "Fleet-maintained apps: Google Chrome has no hash",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30325"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcImZk",
        "labels": [
          "bug",
          ":product",
          "P2",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Fleet-maintained apps: Google Chrome has no hash",
        "issueNumber": 30325
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.70\n\n**Web browser and operating system**: Latest Chrome\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\ncustomer-pingali reported the following:\n\n\u003e It looks like the Fleet webUI is needlessly paginating the list of versions for a specific application. It seems to always limit it to 5 items before it splits to multiple pages, but should probably be more like 50. This example has 51 versions, but only lists 5 at a time.\n\n![Image](https://github.com/user-attachments/assets/e469bd6b-9a9c-42c2-9382-496e6967987d)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. View any software that has more than 5 versions.\n \n\n### üïØÔ∏è More info _(optional)_\n\n@RachelElysia said this should have been at least 10 (but could be more) items per this Figma: https://www.figma.com/design/IK3Pxmz4qlaHhajpkfDuwf/-28053-%E2%9D%A4%EF%B8%8F%E2%80%8D%F0%9F%A9%B9-See-policies-on-Software-title-page?node-id=5357-1312\u0026t=fEZ5JRlm83NZ97gf-0\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica \n\nShow 10 items per page.",
          "number": 30393,
          "repository": "fleetdm/fleet",
          "title": "Pagination limited to 5 apps when displaying software versions in Fleet UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30393"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcUXp4",
        "labels": [
          "bug",
          ":release",
          "customer-pingali",
          "~csa",
          "~mdm-maturity",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Pagination limited to 5 apps when displaying software versions in Fleet UI",
        "issueNumber": 30393
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n- Software that is available for install is showing up in ListHostSoftware when available_for_install is false\n\n\u003cimg width=\"793\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4591e4d0-4ee4-464e-9840-d024698166ff\" /\u003e\n\n\u003cimg width=\"1280\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/358dfdbb-f568-4d11-a034-ec5065f55253\" /\u003e\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Find a software available for install that is not on a host, and go to that host details page and search for that software that is not installed and see it under all software installed on your host\nExample: https://dogfood.fleetdm.com/hosts/1339/software?query=microsoft%20teams\u0026order_direction=asc\u0026order_key=name\u0026page=0\n2. Install and uninstall a software and search on Fleet Desktop \u003e Software and see the software show up in the list even though it's not installed and version is returned correct empty state\n\n5. ### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\nAllow somehow available_for_install: false or something similar to hide installers from the:\n1.  `GET /hosts/:id/software` API response\n2. `GET /device/:token/software` API response\n",
          "number": 30188,
          "repository": "fleetdm/fleet",
          "title": "Host Software API bugs: Allow listhostsoftware to only show installed software and hide installers",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30188"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgb2dpg",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Host Software API bugs: Allow listhostsoftware to only show installed software and hide installers",
        "issueNumber": 30188
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.69.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nHost software counts aren't updated on a vulnerabilities run.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Enroll some hosts with software\n2. Insert a row into `host_software` with `software_id` set to 0\n3. Run vulnerabilities\n\n### üïØÔ∏è More info\n\nObserved in `customer-schur`. We're seeing this because we use uint64s for IDs, and wrap around to a large positive ID when batching up IDs: https://github.com/fleetdm/fleet/blob/efa265f6b0da16f478b16bf51b593186e22a11b5/server/datastore/mysql/software.go#L1856-L1869\n\n### üõ†Ô∏è To fix\n\nWhen we see zero as the minimum ID, warn-level log and increment the minimum ID by 1 in the above code so things don't wrap around. We might miss a software ID o zero here, but we shouldn't have that in the database anyway (and in the above customer's case they didn't have a corresponding software entry with ID 0).\n\n### To QA\n\nFollow the repro instructions. Handling step 3 via the `vuln_processing` command is probably preferred because it'll be easier to pick out a warn-level log e.g.\n\n```\nlevel=warn ts=2025-07-02T18:30:39.346888Z vulnerabilities=(MISSING) msg=\"software_id 0 found in host_software table; performing counts without those entries\"\n```\n\nAt the end of the process, you should have host software counts populated. Without the fix you'd have no software counts at the end of a vulns run.",
          "number": 30522,
          "repository": "fleetdm/fleet",
          "title": "Host counts don't update as part of vulnerabilities job if host_software table includes a row with software_id 0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30522"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcLw-M",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Host counts don't update as part of vulnerabilities job if host_software table includes a row with software_id 0",
        "issueNumber": 30522
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: main (4.71.0)\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nDropdown is reset to \"All available\"\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to Host details \u003e\u003e Software \u003e\u003e Library tab\n2. In the dropdown, select \"Self-service\"\n3. Either change the Name sort order or type something in the search bar\n\n### üïØÔ∏è Expected results\nDropdown value should remain unchanged, sort order or search value should apply and show results accordingly\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30514,
          "repository": "fleetdm/fleet",
          "title": "Dropdown reset to \"All available\" when sort order or search is applied on Host \u003e\u003e Software \u003e\u003e Library tab",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30514"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcLd1w",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Dropdown reset to \"All available\" when sort order or search is applied on Host \u003e\u003e Software \u003e\u003e Library tab",
        "issueNumber": 30514
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.66.0\n**Web browser and operating system**: n/a\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nNo activity item is added for policy creation\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. From /software/add/ add a software installer to a team and enable \"Automatic install\" in Options\n2. Click save, and ensure the policy is created in /policies/manage for the team\n3. Go to the Global activity feed\n\n### üïØÔ∏è Expected behavior\nAn activity item is created for both adding the software installer and creating the policy.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nWhen adding an automatic install policy when adding a custom package, VPP app, or FMA, ensure the appropriate `created_policy` activity is added, authored by the user that added the software.\n",
          "number": 28259,
          "repository": "fleetdm/fleet",
          "title": "No global activity item is shown when a policy is automatically created during software installer add",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28259"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga2Az8",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "No global activity item is shown when a policy is automatically created during software installer add",
        "issueNumber": 28259
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\n\u003cimg width=\"1250\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/57b4303f-0483-4caf-b7b0-3b25a6403f5c\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to dashboard \u003e ChromeOS dropdown in platform\n2. Hover over low disk space hosts\n3. See it has an outline even though it's not clickable\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nRemove outline for \"Not supported\" host count cards",
          "number": 26765,
          "repository": "fleetdm/fleet",
          "title": "Fleet UI: Not supported shouldn't look clickable",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26765"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbbDa8",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Fleet UI: Not supported shouldn't look clickable",
        "issueNumber": 26765
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Since FMA was created\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nPost-edit, software is Fleet-maintained even though the package was swapped for a different installer.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add a Fleet-maintained app\n2. Edit the package on the Fleet-maintained app to another installer file\n3. In the database, confirm that `fleet_maintained_app_id` on the `software_installers` entry is still set\n\n### üïØÔ∏è More info\nCreated from design review 4/30 given that we don't want to show that we're maintaining something that an admin has now taken over.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nDrop the fleet_maintained_app_id when the package for the installer is updated manually.\n",
          "number": 28687,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Package edits to FMA software still indicate that the software is Fleet-maintained",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28687"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga9tz4",
        "labels": [
          "bug",
          "~good first issue",
          "~backend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Package edits to FMA software still indicate that the software is Fleet-maintained",
        "issueNumber": 28687
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: all versions\n\n**Web browser and operating system**: N/A\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nError while attempting gitops apply\n```\n[+] applying 1 software packages for team Virtual Machines\nError: applying software installers for team \"Virtual Machines\": POST /api/latest/fleet/software/batch received status 403 unknown\nError: Process completed with exit code 1.\n```\n\nSever logs:\n```\n\"message\": \"NotImplemented: A header or query you provided requested a function that is not implemented.\\n\\tstatus code: 400, request id: , host id: \"\n```\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Configure Fleet to use Google Cloud Storage (GCS) for the software installer backend, using HMAC keys for S3-compatible access.\n2. Upload some software installers.\n3. Attempt to delete one or more software installers through Fleet (e.g., via UI, API, or by triggering a cleanup during a GitOps apply).\n\n### üïØÔ∏è More info _(optional)_\n\nFleet's current implementation for deleting objects from S3-compatible storage uses the AWS Go SDK's DeleteObjects function for bulk deletion. This function appears to be incompatible with Google Cloud Storage (GCS) when used via its S3 compatibility API (with HMAC keys). Attempts to delete software installers stored in GCS using this method fail.\n\nThis issue was identified during testing and confirmed with a standalone Go program (see context below) that demonstrates DeleteObjects failing against GCS while individual DeleteObject calls succeed.\n\n*Impact:*\n\nDirect software cleanup operations (e.g., removing old installer versions) fail when GCS is used as the backend.\nGitOps apply workflows that trigger software cleanup also fail due to this underlying deletion error.\nAffected Code:\nThe relevant code using DeleteObjects is in server/datastore/s3/common_file_store.go:\nhttps://github.com/fleetdm/fleet/blob/34b552c235b0003e80cb82dbd7abff9de7974858/server/datastore/s3/common_file_store.go#L133\n\n*Expected behavior*\nSoftware installers stored in the GCS bucket should be deleted successfully without errors. GitOps workflows involving software cleanup should complete successfully.\n\n*Actual behavior*\nAn error occurs when Fleet calls the DeleteObjects S3 API against the GCS endpoint. Software installers are not deleted from the GCS bucket. GitOps apply operations fail if they trigger this cleanup logic. The error observed in Fleet matches the error produced by the test program when using DeleteObjects against GCS.\n\n```go\n// Snippet from test program showing the failing call\nres, err := s3Client.DeleteObjects(\u0026s3.DeleteObjectsInput{\n    Bucket: aws.String(\"your-gcs-bucket-name\"), // GCS Bucket\n    Delete: \u0026s3.Delete{\n        Objects: []*s3.ObjectIdentifier{\n            { Key: aws.String(\"path/to/object\") },\n            // ... potentially more objects\n        },\n    },\n})\nif err != nil {\n    log.Fatalf(\"Failed to delete objects (bulk): %v\", err) // \u003c-- This fails against GCS\n}\n\n// Snippet showing the working call\n// result, err := s3Client.DeleteObject(\u0026s3.DeleteObjectInput{\n//     Bucket: aws.String(\"your-gcs-bucket-name\"), // GCS Bucket\n//     Key:    aws.String(\"path/to/object\"),\n// })\n// if err != nil {\n//     log.Fatalf(\"Failed to delete object (single): %v\", err) // \u003c-- This works against GCS\n// }\n```\n\n### üß∞ To fix\n\nEnsure that deleting software through Fleet removes them from GCS when CGS is configured for the software installer backend.",
          "number": 28420,
          "repository": "fleetdm/fleet",
          "title": "Software cleanup fails when using GCP Cloud Storage",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28420"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzga2Rys",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "customer-calabria"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Software cleanup fails when using GCP Cloud Storage",
        "issueNumber": 28420
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\nTODO\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\nTODO\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\nTODO\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29494,
          "repository": "fleetdm/fleet",
          "title": "Spec/Design: Self-service update",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29494"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga2PAg",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Spec/Design: Self-service update",
        "issueNumber": 29494
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "## Related user story\n\n\n#29183\n\n## Task\n\nEngineering DRI Spec\n\n## Condition of satisfaction\n\nSee software team agreement for Eng DRI\n",
          "number": 30037,
          "repository": "fleetdm/fleet",
          "title": "FMA Test Automation Spec",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30037"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgbioRs",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "FMA Test Automation Spec",
        "issueNumber": 30037
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# Goal: easy-to-follow test steps for checking a release manually\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass/fail\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.69.0: pass\n4.70.0: pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30387,
          "repository": "fleetdm/fleet",
          "title": "Release QA: fleetd 1.44.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30387"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcAB0Y",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.44.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Release QA: fleetd 1.44.0",
        "issueNumber": 30387
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "docker cask rename caused failure, resulting on Github action to skip all further macos ingestions.\n\n### üí• ¬†Actual behavior\nSee error in the ingestion step\nhttps://github.com/fleetdm/fleet/actions/runs/15901481523/job/44845306469\n\n### üßë‚Äçüíª ¬†Steps to reproduce\nRename a Homebrew input's associated cask (`token`) to an invalid value, then run FMA ingestion (`go run cmd/maintained-apps/main.go`).\n\n### More info\nWinGet has a similar issue (also fixed in the associated PR) where we silently continue, rather than silently quitting ingestion. Repro is comparable, but with `package_identifier`.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nBail with a panic if we error when generating an FMA manifest.\n",
          "number": 30338,
          "repository": "fleetdm/fleet",
          "title": "Renamed homebrew cask fails silently in FMA",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30338"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgb9EIw",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Renamed homebrew cask fails silently in FMA",
        "issueNumber": 30338
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass (only release blocker is for 4.71.0)\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n",
          "number": 30049,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.70.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30049"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbiiW4",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Release QA: 4.70.0",
        "issueNumber": 30049
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.66\n\n**Web browser and operating system**: Chrome on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nCVE-2024-54559 was a macOS related vulnerability. 'An app may be able to access sensitive user data.' This was fixed in Sequoia 15.2. However, many Apple apps - Mail.app, Music.app, iCloud.app show as impacted. The CVE makes no mention of particular impacted software, just the operating system itself.\n\n![Image](https://github.com/user-attachments/assets/4bab9410-31f9-4305-900c-b64585c60a2d)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\nSearch for CVE-2024-54559 in Fleet vuln tab.\n\n### üß∞  To fix\n\nVulnerability should not appear for the built-in macOS software",
          "number": 28207,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Incorrect software association for CVE-2024-54559",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28207"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgbitHs",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "customer-ufa",
          "~released bug",
          "customer-faltona",
          "#g-software",
          "customer-kokkola",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤Incorrect software association for CVE-2024-54559",
        "issueNumber": 28207
      },
      {
        "assignees": [
          "noahtalerman",
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `af417c1`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nOn the Software page, when filtering by \"All teams\", the Available for install / Self-service dropdown appears but is disabled:\n\n![Image](https://github.com/user-attachments/assets/e3997691-5d62-4470-a049-bb7e5c1706b6)\n\nThe dropdown also appears in Fleet Free:\n\n![Image](https://github.com/user-attachments/assets/2a937bd4-1a49-41f1-9773-bc2f5e83f643)\n\nThe dropdown also appears in Fleet free in the host details \u003e software tab\n\n![Image](https://github.com/user-attachments/assets/251c7c2b-9cea-4754-9c92-a3b888001e22)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: During drafting, we missed the fact that this dropdown doesn't provide any value when filtering by \"All teams\" or in Fleet Free. This was a good catch by whoever decided to disable the dropdown.\n\n  - @noahtalerman: That said, in Fleet, we want to hide UI elements that don't provide any value. To be consistent, the fix here is to hide the dropdown to be consistent with the rest of the UI: https://fleetdm.com/handbook/company/product-groups#product-design-conventions:~:text=tuck%20away%20things%20you%20don%27t%20need%20by%20default%20(when%20possible%2C%20given%20time)\n\n- @noahtalerman: I opened [a PR with the fix](https://github.com/fleetdm/fleet/pull/30274) but didn't get a chance to test it locally.\n\n### QA Plan\n- Fleet Premium: The table filter dropdown is removed from All teams view only of the Software page\n- Fleet Free: The table filter dropdown is removed from the Software page\n- Fleet Free: The table filter dropdown is removed from the host details page \u003e software tab\n",
          "number": 30273,
          "repository": "fleetdm/fleet",
          "title": "Software page/Host's software tab: \"Available for install / Self-service\" dropdown is visible for \"All teams\" and Fleet Free",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30273"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgb2LvQ",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Software page/Host's software tab: \"Available for install / Self-service\" dropdown is visible for \"All teams\" and Fleet Free",
        "issueNumber": 30273
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 4.67.3\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n@eugkuo and I fired up fleetctl preview with the dev license key:\n\n```\nfleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw\n```\n\nWe successfully added a Fleet-maintained app. When we went to install the software on a host from the Host details page, we saw this error in the host's activity feed. The software didn't get installed. Gong snippet [here](https://us-65885.app.gong.io/call?id=6746941010567256994\u0026highlights=%5B%7B%22type%22%3A%22SHARE%22%2C%22from%22%3A1365%2C%22to%22%3A1387%7D%5D).\n\n\u003cimg width=\"567\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e917d61b-6ecb-471f-8df3-4cede47c6c2f\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nFollow the same steps in the actual behavior above.\n\n### üïØÔ∏è More info _(optional)_\n\nWe decided to continue supporting fleetctl preview because we use it for testing. More info here.\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: Unsure what the exact fix is. We want to be able to install software using fleetctl preview.\n",
          "number": 29216,
          "repository": "fleetdm/fleet",
          "title": "ü™≤fleetctl preview: Can't install software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29216"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiqBw",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤fleetctl preview: Can't install software",
        "issueNumber": 29216
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#29362 \n\n## Task\n\nResearch existing install details behavior/assist with impl design for this story\n\n## Condition of satisfaction\n\nStory is ready to estimate",
          "number": 30087,
          "repository": "fleetdm/fleet",
          "title": "Include uninstall results in software details modal: Eng DRI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30087"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgblupM",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Include uninstall results in software details modal: Eng DRI",
        "issueNumber": 30087
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `61e5617`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nAt least Notion and Chrome are missing \"File path\". There could be more Windows software missing it. \n\nHere's what I see when I select **Show details** in the **Host details \u003e Software** tab for [this host in dogfood](https://dogfood.fleetdm.com/hosts/1111/):\n![Image](https://github.com/user-attachments/assets/91c680b2-29d1-4944-8ca9-7d1187eb507f)\n\n![Image](https://github.com/user-attachments/assets/774ddeae-fc3b-446a-8648-a362012ff47c)\n\nHere's what the `GET /hosts/:id/software` API response looks like:\n\n![Image](https://github.com/user-attachments/assets/98daae7e-6ca0-4da5-9577-7e550860698f)\n\n![Image](https://github.com/user-attachments/assets/2e1f0607-7a31-4f92-9e3a-e603a289c535)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above for steps to reproduce in dogfood.\n",
          "number": 29449,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Missing file path for some Windows software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29449"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiq44",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤Missing file path for some Windows software",
        "issueNumber": 29449
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 0.0.0-SNAPSHOT-3a7c45c ‚Ä¢ Go go1.24.2\n\n**Web browser and operating system**: Safari on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAfter clicking on 'uninstall' for MS Excel, Fleet says MS Excel on macOS is uninstalled but it's still on my computer.\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add MS Excel from https://github.com/fleetdm/fleet/pull/29214\n2. Install software\n3. Uninstall software.\n\n### üïØÔ∏è More info _(optional)_\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nUninstalling MS Excel on macOS should remove it from the host.",
          "number": 29221,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ FMA MS Excel on macOS doesn't uninstall",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29221"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga9ngs",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤ FMA MS Excel on macOS doesn't uninstall",
        "issueNumber": 29221
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 0.0.0-SNAPSHOT-3a7c45c ‚Ä¢ Go go1.24.2\n\n**Web browser and operating system**: Safari on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAfter clicking on 'uninstall' for MS Word, Fleet says MS Word on macOS is uninstalled but it's still on my computer.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add MS Word from https://github.com/fleetdm/fleet/pull/29214\n2. Install software\n3. Uninstall software.\n\n### üïØÔ∏è More info _(optional)_\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nUninstalling MS Word on macOS should remove it from the host.",
          "number": 29220,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ FMA Word on macOS doesn't uninstall",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29220"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga9m2Q",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤ FMA Word on macOS doesn't uninstall",
        "issueNumber": 29220
      },
      {
        "assignees": [
          "eugkuo",
          "iansltx"
        ],
        "content": {
          "number": 30030,
          "repository": "fleetdm/fleet",
          "title": "Rebuild self-service article to reflect 4.69 changes, add self-service uninstall highlight to release notes",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30030"
        },
        "estimate": 0,
        "id": "PVTI_lADOBDAnic4A4BEUzgbrzQc",
        "labels": [
          ":improve documentation",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Rebuild self-service article to reflect 4.69 changes, add self-service uninstall highlight to release notes",
        "issueNumber": 30030
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n`main` as of b55d12605e987c4cd89603821e633a9c46d39dd2\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\nN/A\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n```\n=== NAME  TestTranslateCPEToCVE/find_vulns_on_cpes\n    cve_test.go:707: \n        \tError Trace:\t/home/runner/work/fleet/fleet/server/vulnerabilities/nvd/cve_test.go:707\n        \tError:      \telements differ\n        \t            \t\n        \t            \textra elements in list B:\n        \t            \t([]interface {}) (len=1) {\n        \t            \t (nvd.cve) {\n        \t            \t  ID: (string) (len=14) \"CVE-2024-38395\",\n        \t            \t  resolvedInVersion: (string) \"\"\n        \t            \t }\n        \t            \t}\n        \t            \t\n        \t            \t\n        \t            \tlistA:\n        \t            \t([]nvd.cve) \u003cnil\u003e\n        \t            \t\n        \t            \t\n        \t            \tlistB:\n        \t            \t([]nvd.cve) (len=1) {\n        \t            \t (nvd.cve) {\n        \t            \t  ID: (string) (len=14) \"CVE-2024-38395\",\n        \t            \t  resolvedInVersion: (string) \"\"\n        \t            \t }\n        \t            \t}\n        \tTest:       \tTestTranslateCPEToCVE/find_vulns_on_cpes\n        \tMessages:   \tcpe:2.3:a:iterm2:iterm2:3.5.2:*:*:*:*:*:*:*\n--- FAIL: TestTranslateCPEToCVE (27.50s)\n    --- FAIL: TestTranslateCPEToCVE/find_vulns_on_cpes (28.74s)\n```\n\nSee e.g. https://github.com/fleetdm/fleet/actions/runs/15740139526/job/44363129782\n\n### üßë‚Äçüíª ¬†Steps to reproduce\nRun the test.\n\n### üïØÔ∏è More info _(optional)_\nLikely something that changed in the external data source used by the test? I think this kind of failure happened in the past.\n\n",
          "number": 30118,
          "repository": "fleetdm/fleet",
          "title": "CI failing test: `TestTranslateCPEToCVE/find_vulns_on_cpes` (not flaky, constantly failing)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30118"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbpXk4",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "CI failing test: `TestTranslateCPEToCVE/find_vulns_on_cpes` (not flaky, constantly failing)",
        "issueNumber": 30118
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleetie,\n| I want \"here\" and \"click here\" link anchors to be caught before they're merged into the website\n| so that the [website stays accessible and SEO/GEO-friendly](https://fleetdm.com/handbook/company/communications#use-links-in-your-writing).\n\n## Key result\n\nSmall UX improvements\n\n## Context\n\nFollow-on to #29720 to avoid regressions there.\n\nEng. DRI: @iansltx \n\n## Changes\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] CI job that, for any changes involving Markdown files, fails if `[here]` or `[click here]` are in the files. This can be park of an existing job as long as that job casts a wide enough net (e.g. the docs up-to-date check job).\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n1. Open a PR with a trivial docs change anywhere. It should pass CI.\n2. Change the PR to include a link in a Markdown file with an anchor of `[here]`. It should now fail CI.\n3. Update code without the CI tool on a branch to add `[here]` as a link anchor. Add the CI tool in a PR, plus a change to an unrelated Markdown file. Ci should fail.\n\n### Testing notes\n\nShould be QA'd on-branch.\n\n### Confirmation\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30019,
          "repository": "fleetdm/fleet",
          "title": "Ensure [here] / [click here] link anchors don't creep back into Markdown on the website",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30019"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbgqkI",
        "labels": [
          "story",
          ":release",
          "~engineering-initiated",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Ensure [here] / [click here] link anchors don't creep back into Markdown on the website",
        "issueNumber": 30019
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\nTODO\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\nTODO\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\nTODO\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29539,
          "repository": "fleetdm/fleet",
          "title": "Spec/design: Ability to edit icon for custom packages uploaded to Fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29539"
        },
        "estimate": 0,
        "id": "PVTI_lADOBDAnic4A4BEUzga5E74",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Spec/design: Ability to edit icon for custom packages uploaded to Fleet",
        "issueNumber": 29539
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nPR was opened for Cloudflare but nothing changed: https://github.com/fleetdm/fleet/pull/28890/files\n\nUpdate: after further review, this seems to only occur on the macOS Cloudflare WARP FMA.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee above PR\n\n### üõ†Ô∏è To fix\n\n[See fix](https://github.com/fleetdm/fleet/issues/28912#issuecomment-2978374725)\n\n### To QA\n\n1. Run `go run cmd/maintained-apps/main.go` on `main` to get a baseline for apps.\n2. Using `jq`, extract the uninstall script for Cloudflare WARP on Darwin, e.g. `cat ee/maintained-apps/outputs/cloudflare-warp/darwin.json| jq -r '.refs.\"605d7157\"' \u003e old.sh`\n3. Switch to a new branch and cherry-pick `ec7400cece88f7788c3c274ba084ffd43d33bc59` to get the ingester fix.\n4. Run `go run cmd/maintained-apps/main.go`. It should exit successfully.\n5. Confirm that the only file changed was Cloudflare WARP on Darwin. This serves as a regression test on manifest generation elsewhere.\n6. Using `jq`, extract the uninstall script for Cloudflare WARP on Darwin to a new file.\n7. Diff the two files. The new one should have deleted `-u $LOGGED_IN_USER` on the `uninstall.sh` command, and should have entirely deleted the line containing `'%!s(bool=true)'`.\n8. Confirm the PR connected to this issue has the same uninstall script ref as what you generated locally (to ensure the next step is representative).\n9. Point your local Fleet to the `28912-warp-fma-fix` branch for FMA manifests, then add, install, and uninstall Cloudflare WARP to confirm it works as expected.\n\nNOTE: This switches Cloudflare WARP uninstall from as-user to sudo for uninstall.sh. We might've been silently failing to uninstall before, not sure.",
          "number": 28912,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Automated Fleet-maintained app update PR opens when nothing changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28912"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgbipgw",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "ü™≤Automated Fleet-maintained app update PR opens when nothing changes",
        "issueNumber": 28912
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet contributor testing updates to Fleet-maintained apps,\n| I want to version pin a single FMA if it doesn't pass tests\n| so that it doesn't block updates of other FMAs.\n\n## Key result\n\nGet to 100 Fleet-maintained apps for macOS \u0026 Windows (50 each)\n\n## Original requests\n\nNone. Filed to update Fleet-maintained apps sooner.\n\n## Context\n- Product Designer: @mostlikelee \n- Engineer: @iansltx \n\n## Changes\n\n### Engineering\n- [ ] Add a `frozen` boolean to input file formats that causes ingestion to avoid overwriting the corresponding output if it exists\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Update Fleet-maintained apps build documentation\n\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n1. Check out the `fleet` repo at a commit old enough that some Fleet-maintained apps are out of date\n2. Add `frozen: true` to an input file of a macOS FMA and a Windows FMA that would normally be updated\n3. Run `go run cmd/maintained-apps/main.go`\n4. Confirm that the outputs files of the frozen app was not modified\n5. Confirm that the outputs files of other apps were modified\n6. Delete the corresponding outputs files\n7. Run `go run cmd/maintained-apps/main.go`\n8. Confirm that the outputs file of the frozen app was created with current version data (compare to Homebrew/WinGet)\n\n### Testing notes\n\nThe above testing can be performed locally, vs. needing to run in GitHub Actions.\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 29218,
          "repository": "fleetdm/fleet",
          "title": "Add version freezing to Fleet-maintained app (FMA) manifest updates",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29218"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiR7Q",
        "labels": [
          "story",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Add version freezing to Fleet-maintained app (FMA) manifest updates",
        "issueNumber": 29218
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent: 1.43.0\n\nIncludes updates to: \n- Orbit: True\n- Desktop: False\n- Chrome extension: False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.42.0` \u003e `v1.43.0`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 29502,
          "repository": "fleetdm/fleet",
          "title": "Release QA: fleetd 1.43.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29502"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzga2aeU",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-05-31T00:00:00Z",
          "title": "Fleetd-1.43.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Release QA: fleetd 1.43.0",
        "issueNumber": 29502
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e",
          "number": 29419,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.69.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29419"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbeJGo",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Release QA: 4.69.0",
        "issueNumber": 29419
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.65.0\n\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nWhen uploading  Google Workspace Sync for Outlook MSI in the Fleet UI, the upload fails:\n\n![Image](https://github.com/user-attachments/assets/1b2ff457-144e-466f-b74a-ffcecc70afd7)\n\nThe following error is seen in the Fleet server logs:\n\n\n`level=error ts=2025-03-25T19:47:39.261709672Z component=http user=admin@fleetdm.com method=POST uri=/api/latest/fleet/software/package took=1.008759917s err=\"matching or creating software installer: get or generate software installer title ID: insert: Error 1366 (HY000): Incorrect string value: '\\\\x99 for ...' for column 'name' at row 1\"`\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. [Download .msi](https://tools.google.com/dlpage/gssmo/) - I selected the 64 bit .msi option. Others are untested.\n2. Attempt to upload downloaded .msi to a Fleet Team in the UI\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nSanitize software name so it successfully inserts in the DB, allowing the package to upload.",
          "number": 27522,
          "repository": "fleetdm/fleet",
          "title": "Error when uploading  Google Workspace Sync for Outlook MSI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27522"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga1sd4",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "customer-preston",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Error when uploading  Google Workspace Sync for Outlook MSI",
        "issueNumber": 27522
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "{\n  \"version\": \"4.64.0\",\n  \"branch\": \"HEAD\",\n  \"revision\": \"eb0e4efbd7bfa58efae640ef8a73f7d54523f3a6\",\n  \"go_version\": \"go1.23.4\",\n  \"build_date\": \"2025-02-18\",\n  \"build_user\": \"runner\"\n}\n\nGoogle Chrome Version 133.0.6943.127 (Official Build) (arm64)\n\n### üí• ¬†Actual behavior\n\nSentinelOne install configured correctly for macOS failed because Policy created for automatic install is pulling an incorrect bundle ID from the package metadata:\n\nAutomatic Policy:\n\n\u003cimg width=\"834\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/eca7164e-d395-4dcf-97a6-af458da6f43a\" /\u003e\n\nPolicy fixed after editing bundle ID:\n\n\u003cimg width=\"846\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e917c615-d44f-4f63-a310-995cf6314bb7\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Install SentinelOne\n2. Set to automatic install\n\nCorrect bundle ID found by inspecting package in Suspicious Pacakge:\n\n\u003cimg width=\"700\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/18ed32fc-9ca5-4892-bfe0-1be73edc53e7\" /\u003e\n\n\u003cimg width=\"770\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80c6c968-8480-4fe7-a494-ce2ba0a0b023\" /\u003e\n\n### üïØÔ∏è More info _(optional)_\n\nNA\n\n### üõ†Ô∏è To fix\n\nEnsure that correct bundle ID is pulled from pacakge metadata.",
          "number": 26597,
          "repository": "fleetdm/fleet",
          "title": "SentinelOne Automatic Policy For Install Is Not Pulling Correct Bundle Identifer",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26597"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga1sZg",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "customer-preston",
          "#g-software",
          "customer-beatrix"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "SentinelOne Automatic Policy For Install Is Not Pulling Correct Bundle Identifer",
        "issueNumber": 26597
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "number": 29438,
          "repository": "fleetdm/fleet",
          "title": "SHA-256 in vitals: fleetd tables revisions",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29438"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgaxnq0",
        "labels": [
          "~agent",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-05-31T00:00:00Z",
          "title": "Fleetd-1.43.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "SHA-256 in vitals: fleetd tables revisions",
        "issueNumber": 29438
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Observed in 4.59.0 **and** Fleet 0.0.0-SNAPSHOT-8f94247\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nAfter uploading the Microsoft Company Portal app as a custom package, Fleet names the software title \"Microsoft AutoUpdate.app\"\n\u003cimg width=\"1246\" alt=\"Screenshot 2024-11-22 at 12 31 16‚ÄØPM\" src=\"https://github.com/user-attachments/assets/bbc4b3b0-416a-4fd1-a715-ccf7aaef12ed\"\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Download the Microsoft Company Portal app from: https://go.microsoft.com/fwlink/?linkid=853070\n2. Log into Fleet, select a team, and navigate to **Software \u003e Add software \u003e Custom package \u003e Choose file**. Select the `CompanyPortal-Installer.pkg` file and upload it to Fleet.\n3. After the file uploads, observe that Fleet has named the software title \"**Microsoft AutoUpdate.app**\"\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nInspecting this .pkg with Suspicious Package shows multiple apps and receipts being installed:\n\u003cimg width=\"1066\" alt=\"Screenshot 2024-11-22 at 12 29 41‚ÄØPM\" src=\"https://github.com/user-attachments/assets/fbdcc077-b089-4bb6-984f-51ae03c36dbf\"\u003e\n\n\u003cimg width=\"1066\" alt=\"Screenshot 2024-11-22 at 12 30 04‚ÄØPM\" src=\"https://github.com/user-attachments/assets/1f1d0052-a7f1-46ec-becf-64c1ab43a5c6\"\u003e\n\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nWe'd like the software title to be \"Intune Company Portal.app\" (given how Microsoft documents the name [here](https://go.microsoft.com/fwlink/?linkid=853070))\n\n\n",
          "number": 24083,
          "repository": "fleetdm/fleet",
          "title": "Incorrect software title name (Microsoft AutoUpdate) when uploading Microsoft Company Portal App",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/24083"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga1sXA",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~dogfood",
          "customer-numa",
          "#g-software",
          "~sw-upload"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Incorrect software title name (Microsoft AutoUpdate) when uploading Microsoft Company Portal App",
        "issueNumber": 24083
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\nCurrent version\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nThis copy button is unlike the others. Every other copy button is inline with the input field\n\n\u003cimg width=\"986\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/29188040-1105-42de-bce3-ccb75f63f00d\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to: https://dogfood.fleetdm.com/settings/integrations/automatic-enrollment/windows\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\n- [ ] These copy buttons match other copy buttons being within the input field for consistent UX\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nUse the following storybook component: https://fleetdm.com/storybook/?path=/story/components-formfields-inputfield--with-copy-enabled-inside-input \nNewly named: https://fleetdm.com/storybook/?path=/story/components-formfields-inputfield--with-copy-enabled-input ",
          "number": 28652,
          "repository": "fleetdm/fleet",
          "title": "Fleet UI: Copy button input field inconsistency",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28652"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga1iwc",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Fleet UI: Copy button input field inconsistency",
        "issueNumber": 28652
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "number": 28846,
          "repository": "fleetdm/fleet",
          "title": "Self-service uninstall: BE",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28846"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzga1tIQ",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Self-service uninstall: BE",
        "issueNumber": 28846
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "number": 28845,
          "repository": "fleetdm/fleet",
          "title": "Self-service uninstall: FE",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28845"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzga1tQ0",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Self-service uninstall: FE",
        "issueNumber": 28845
      },
      {
        "assignees": [
          "lucasmrod"
        ],
        "content": {
          "body": "## Related user story\n\n#29502\n\nThis story is used to track the release of fleetd `v1.43.0` to `edge` and `stable` channels.",
          "number": 29837,
          "repository": "fleetdm/fleet",
          "title": "Release fleetd v1.43.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29837"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbSd0o",
        "labels": [
          ":release",
          "~sub-task"
        ],
        "milestone": {
          "dueOn": "2025-05-31T00:00:00Z",
          "title": "Fleetd-1.43.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Release fleetd v1.43.0",
        "issueNumber": 29837
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in dogfood (commit `e50dce0`)\n\n**Web browser and operating system**: Google Chrome Version 137.0.7151.69\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nAfter selecting \"Install\" and watching the \"Installing...\" loading spinner, I see the \"Installed\" status but \"Reinstall\" is disabled:\n![Image](https://github.com/user-attachments/assets/e0c16686-703d-43ec-8821-7f15a0cc088f)\n\nAfter I refresh the page, \"Reinstall\" is enabled.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nCheck out [this video in Google Drive](https://drive.google.com/file/d/1at1CikIkxYTuU1VjjBDzaqyGrHYiCY2l/view?usp=sharing).\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: I think we want \"Reinstall\" to be enabled without having to refresh that page. See [Figma wireframes](https://www.figma.com/design/aARzaMNM5auScSMXu2Yh4x/-27245-Fleet-Desktop-%3E-Self-service--Add-ability-to-categorize-software?node-id=5338-3215\u0026t=QvrlpslKti2RIF8v-1).\n",
          "number": 29860,
          "repository": "fleetdm/fleet",
          "title": "My device \u003e Self-service: \"Reinstall\" is disabled",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29860"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbVPwg",
        "labels": [
          "bug",
          ":reproduce",
          "~frontend",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "My device \u003e Self-service: \"Reinstall\" is disabled",
        "issueNumber": 29860
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.65.0\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n![Image](https://github.com/user-attachments/assets/48d7b168-e0e5-4201-b799-ff5632fc9850)\n\nOrbit log reports: `ERR running config receivers error=\"exit status 1\"`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add Docker Fleet-maintained app to a team\n2. In the host details (I used a macOS 15 VM), software tab, click Actions \u003e\u003e Install for Docker \n3. View results of software install \n\n### üïØÔ∏è More info _(optional)_\n\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nUpdate reporting to accurately reflect the state of the Docker software install.\n",
          "number": 27577,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Fleet maintained app Docker installs but reports as failed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27577"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzga9nZs",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Fleet maintained app Docker installs but reports as failed",
        "issueNumber": 27577
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.69RC\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nA \"something went wrong\" error\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Perform a failing uninstall from host details on software that is available for self-service\n2. In \"My device\", click the \"Failed\" status to open uninstall failure details\n\n### üïØÔ∏è More info\n\nRelated to #28038. Oversight on my part where I was filtering results too heavily.\n\n### üõ†Ô∏è To fix\n\n#29838.",
          "number": 29840,
          "repository": "fleetdm/fleet",
          "title": "Viewing failed uninstall details from self-service fails when the uninstall wasn't initiated via self-service",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29840"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbSju4",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Viewing failed uninstall details from self-service fails when the uninstall wasn't initiated via self-service",
        "issueNumber": 29840
      },
      {
        "assignees": [
          "jahzielv",
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\nTODO\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\nTODO\n\u003c!-- What needs to be done. --\u003e\n\n## Condition of satisfaction\n\nTODO\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29495,
          "repository": "fleetdm/fleet",
          "title": "Spec/Design: VPP Verify",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29495"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzga2PZY",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Spec/Design: VPP Verify",
        "issueNumber": 29495
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.67.0\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nApp fails to install with:\n```\nInstalling software...\nFailed\ncp: /private/tmp/1186567650/Microsoft Edge.app: No such file or directory\n```\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add Microsoft Edge to a team as a Fleet maintained app\n2. Attempt to install on a macOS host\n\n\n### üïØÔ∏è More info _(optional)_\nAppears to have been introduced with \nhttps://github.com/fleetdm/fleet/pull/28022/\nScript doesn't appear to mount dmg and fails when it can't copy the app file that hasn't been unpacked yet.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nEnsure that MS Edge FMA will install on macOS\n\nI was able to get Microsoft Edge to install by including this in the install script:\n\n```\n# extract contents\n MOUNT_POINT=$(mktemp -d /tmp/dmg_mount_XXXXXX)\n hdiutil attach -plist -nobrowse -readonly -mountpoint \"$MOUNT_POINT\" \"$INSTALLER_PATH\"\n sudo cp -R \"$MOUNT_POINT\"/* \"$TMPDIR\"\n hdiutil detach \"$MOUNT_POINT\"\n```\n\nI added it before the `# copy to the applications folder` line. ",
          "number": 28466,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Microsoft Edge FMA fails to install on macOS",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28466"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga9nq4",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Microsoft Edge FMA fails to install on macOS",
        "issueNumber": 28466
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.69.0\n**Web browser and operating system**: Chrome 137.0.7151.41 running on macOS \n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n500: Oh, something went wrong\n\nNo API response to indicate what the issue was, no error in the fleet log.\n\n![Image](https://github.com/user-attachments/assets/abc10615-87a8-488d-955b-2bd7980d1b39)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a custom package for Ubuntu\n2. Install package on Ubuntu host\n3. Refetch host vitals\n4. Go to Host \u003e\u003e Software\n5. Click \"Show details\" for the custom package that was added and installed on the host\n\n### üïØÔ∏è More info _(optional)_\nI was using fleetd 1.43.0 (built locally with TUF) which may be the issue\nDatabase for repro: https://drive.google.com/file/d/1gu7JgI9ud1JNFyyUbLenxbDbGHOUyWCg/view?usp=drive_link\nHost 43 with software containerd.io is having this issue\nHost 39 with software PuTTY release 0.81 (64-bit) is having this issue\n\n![Image](https://github.com/user-attachments/assets/7a1b223a-e264-4610-b3b7-28c3821ad57c)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n\n\nTest plan:\n1. Confirm \"Show details\" works for Windows host\n2. Confirm \"Show details\" works for Linux host\n3. Confirm \"Shown details\" works for macOS host with non-cask Homebrew packages with no hash (ex: `brew install wget`",
          "number": 29513,
          "repository": "fleetdm/fleet",
          "title": "500 Error when attempting to navigate to Software details on non-macOS host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29513"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzga2q7g",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "500 Error when attempting to navigate to Software details on non-macOS host",
        "issueNumber": 29513
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.0\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nhttps://github.com/user-attachments/assets/7cc19593-2170-4b3c-a9b9-98c7286884b0\n\nDatabase backup for reproduction can be found here:\nhttps://drive.google.com/file/d/1NiOnbb_og6hLZr7iUq17BjmgxA8p24B7/view?usp=drive_link\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a VPP app to a team (also need to have a vulnerable version of the software already installed on the host, so that it shows as a vulnerability)\n2. On the host details page, click the software tab\n3. Search for the VPP app name, notice that vulnerabilities are listed for the software. \n4. Add filter \"Vulnerable software\"\n\n### üïØÔ∏è Expected behavior\nIf the software has vulnerabilities, it is shown when filtered to \"Vulnerable software\"\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 29308,
          "repository": "fleetdm/fleet",
          "title": "Vulnerable VPP apps are not returned when filtering by vulnerable software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29308"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzga1tBM",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Vulnerable VPP apps are not returned when filtering by vulnerable software",
        "issueNumber": 29308
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.69.0\n\n**Web browser and operating system**: Chrome 136.0.7103.114 on macOS \n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n![Image](https://github.com/user-attachments/assets/788fecad-aecf-4e7d-b738-a6d53f9a9988)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a custom package with an unknown version (tar package works well for this)\n2. On the /software/titles/XXX screen for the uploaded package make the width 768px\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n- [See figma design](https://www.figma.com/design/Oxl5MjSzAZouW5A5OWh5nL/-29397-Software-hash-causes-squishing-at-low-widths?node-id=7301-2765\u0026t=RE4TMZB3WNDIDHh8-11)\n- Product designer: @eugkuo ",
          "number": 29397,
          "repository": "fleetdm/fleet",
          "title": "Software hash causes squishing at low widths",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29397"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzga2A80",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Software hash causes squishing at low widths",
        "issueNumber": 29397
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in dogfood (commit `e50dce0`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n1. Table disappears with loading spinner inside a box:\n![Image](https://github.com/user-attachments/assets/3a025ebf-ecc2-4b68-a917-1765fac0d5b6)\n\n2. No self-service software shows the filters along with the empty state\n\n\u003cimg width=\"1528\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d30a87b6-9304-4d7d-b196-87bb51734f0f\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Head to **My device \u003e Self-service** \n2. Open your browser's dev console and, in the Network tab, switch the mode to offline\n3. Search for software on the Self-service tab\n\n--\n\n1. Have no self-service software for a particular host\n2. Head to **My device \u003e Self-service** \n3. Notice users still have access to search / filter by category even though there's no software\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: I think we want to use the loading state (veil over table) that we use on the **Software** page:\n\n![Image](https://github.com/user-attachments/assets/c9697f4d-6aae-4bd6-9b95-6c6dee56fc96)\n\n- Remove search and category filters if there are absolutely no self-service software\n\n## Test plan\n\n1. With Self-service software added for a host, head to **My device \u003e Self-service** \n2. Open your browser's dev console and, in the Network tab, switch the mode to offline\n3. Search for software on the Self-service tab\n- [ ] Verify loading spinner when searching or filtering by category shows as an overlay over the table\n\n1. Remove all Self-service software for a particular host\n2. Head to **My device \u003e Self-service** \n- [ ] Confirm empty state with no self-service software at all hides the categories and search filters\n\n\n- [ ] Check for regressions. confirm empty state/loading state with self-service software always shows the categories and search filters",
          "number": 29822,
          "repository": "fleetdm/fleet",
          "title": "My device \u003e Self-service: inconsistent loading state",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29822"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbiP00",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "My device \u003e Self-service: inconsistent loading state",
        "issueNumber": 29822
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\n\u003cimg width=\"1581\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c07b28e5-1d2d-4f2b-aec7-78e4a09b671d\" /\u003e\n\nOther pages have normal padding:\n\n\u003cimg width=\"1600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dac8665e-ba08-4d05-b7ec-08f4a2d7bc36\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Have a banner show\n2. Go to the vuln page\n3. Notice this banner margins compared to all other pages\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nFE, Software, self assigning\nAlso check if this might be happening elsewhere",
          "number": 29578,
          "repository": "fleetdm/fleet",
          "title": "Fleet UI: Banner padding and flex direction on Vuln page only",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29578"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga7Ovc",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Fleet UI: Banner padding and flex direction on Vuln page only",
        "issueNumber": 29578
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `61e5617`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n![Image](https://github.com/user-attachments/assets/8ef35f2b-d2f9-4604-aa65-6aee5551db58)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nVisit dogfood or trigger the VPP expiration banner.\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: I think we want 24px in between the text and link on the right side. See related bug here: https://github.com/fleetdm/fleet/issues/14725\n",
          "number": 29448,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Missing padding in VPP expiration banner",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29448"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbNuAU",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Missing padding in VPP expiration banner",
        "issueNumber": 29448
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "number": 29439,
          "repository": "fleetdm/fleet",
          "title": "SHA-256 in vitals: FE",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29439"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgaxnrw",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "SHA-256 in vitals: FE",
        "issueNumber": 29439
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n#28110\n\n## Task\n\nClean up https://github.com/fleetdm/fleet-gitops/tree/main/lib so that it reflects Fleet best practices wrt naming conventions and directory structure, etc.\n\n\n## Condition of satisfaction\n\nTODO\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work.  But especially keep in mind there is no external quality assurance check for sub-tasks.  (Only user stories get automatic external QA.  With sub-tasks, it's up to you.)  --\u003e\n",
          "number": 29293,
          "repository": "fleetdm/fleet",
          "title": "Clean up the example repository shown to clients so that it reflects Fleet best practices",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29293"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgambig",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Clean up the example repository shown to clients so that it reflects Fleet best practices",
        "issueNumber": 29293
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.68.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nUbuntu 25.04 and 24.10 hosts are unsupported for vulnerability scanning.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add hosts of the above versions with vulnerabilities\n2. Scan vulnreabilities\n\n### üïØÔ∏è More info\n\n24.10 has an OVAL file already in the nvd repo but isn't listed as a supported OS in code. 25.04 doesn't exist in either the OVAL file nist or the enumeration of supported OSes.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nEnsure ubuntu_2410 and ubuntu_2504 exist in both supported OS lists and the OVAL files list in the `nvd` repo.",
          "number": 29345,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Vulnerabilities are not pulled for Ubuntu 24.10 and 25.04",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29345"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga1sto",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Vulnerabilities are not pulled for Ubuntu 24.10 and 25.04",
        "issueNumber": 29345
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n[#25497](https://github.com/fleetdm/fleet/issues/25497)\n[#28738](https://github.com/fleetdm/fleet/issues/28738)\n\n## Task\n\nCreate a public Google doc with the following research:\n1. What‚Äôs the time lag between uninstall command ack and actual app uninstall?\n2. Is there a way to verify uninstall like we‚Äôre planning on doing for install (https://github.com/fleetdm/fleet/issues/28738) via osquery query?\n3. For App store VPP installs/verification what's the over under for using https://developer.apple.com/documentation/devicemanagement/installedapplicationlistcommand vs osquery\n    1. Consider in the future we want to verify installs for all apps.\n\n\n## Condition of satisfaction\n\nThe doc is created and decision is made.\n- @noahtalerman: Doc is here: https://docs.google.com/document/d/1-GFDw7FSipaI19WOwGQzjHoYLYcKzTo1rEl_lYUwfyM/edit?tab=t.0\n\n@mostlikelee: We decided to use the MDM protocol because we get more visibility. The MDM command returns installed, installing, or empty (not installed). Osquery would only tell us installed v. uninstalled.",
          "number": 29300,
          "repository": "fleetdm/fleet",
          "title": "Research for install / uninstall verification",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29300"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzga1s-s",
        "labels": [
          ":release",
          "~timebox",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "cc83b42d",
          "startDate": "2025-05-05",
          "title": "Sprint 41"
        },
        "status": "Done",
        "title": "Research for install / uninstall verification",
        "issueNumber": 29300
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003e **This issue contains confidential information.**\n\nDuring the upgrade of the Fleet Managed Cloud instance for Snowflake from v4.66.0 to v4.67.3, a Migration failure was encountered that lead to the deployment failing, after approximately ~10 minutes according to the terraform null-resource used to kick off the migrations. \n\nThe terraform logs in the github action output showed\n\n![Image](https://github.com/user-attachments/assets/be665617-7224-4fc0-8eeb-5b54eed89c51)\n\nThe following line in our migration script is likely the culprit to the failure we observed in the github action. However, had it not failed on the below, it does not guarantee it would have completed successfully.\n- https://github.com/fleetdm/fleet-terraform/blob/tf-mod-addon-migrations-v2.0.1/addons/migrations/migrate.sh#L52\n\nObserved similar behavior with the test migration that we conducted with our test migration for `rh`.\n- https://fleetdm.slack.com/archives/C062D0THVV1/p1746485773191949?thread_ts=1746467640.273819\u0026cid=C062D0THVV1 \n\nThe ECS task logs showed the following:\n![Image](https://github.com/user-attachments/assets/cf5026b6-402a-468c-b9e2-34664640eb8e)\n\nKicking off the deployment a second time went through without an issue within approximately 2 minutes.\n\n![Image](https://github.com/user-attachments/assets/37805951-1291-4d7d-b317-de62d0d1d5e6)\n\n## To QA\n\n1. Snapshot a 4.66.0 dataset including software/host software.\n2. Do a `time` wrapped DB migration to 4.67.3, then export the `host_software` table.\n3. Restore from the snapshot, then migrate using the fixed version (wrapped by `time` as well). Compare exports of `host_software`. They should be identical, but the migration should have taken less time (scaling with host/software count).\n\n",
          "number": 10596,
          "repository": "fleetdm/confidential",
          "title": "Snowflake v4.66.0 -\u003e v4.67.3 migration failure",
          "type": "Issue",
          "url": "https://github.com/fleetdm/confidential/issues/10596"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzga1syI",
        "labels": [
          "bug",
          ":release",
          "customer-sarahwu",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/confidential",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Snowflake v4.66.0 -\u003e v4.67.3 migration failure",
        "issueNumber": 10596
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "number": 29437,
          "repository": "fleetdm/fleet",
          "title": "SHA-256 in vitals: BE (detail query + API)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29437"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgaxnpw",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "SHA-256 in vitals: BE (detail query + API)",
        "issueNumber": 29437
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n- Seeing the \"something's gone wrong error as an end user\" (bug noticed during sprint demo 5/2/25)\n\u003cimg width=\"1437\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6dabd405-f04e-47a5-a3f8-4eea4c01abf9\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to self-service page\n2. Wait up to 30 minutes to let the self-service token expire\n3. Click around (see QA steps for more details)\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nReplace \"Something's gone wrong error\" with Fleet Desktop's \"URL expired\" error instead in all parts of UI that can be navigated to without refreshing the page entirely\n\nQA plan\n- [ ] when letting the token expire on the self service page showing a failure, opening the failure modal will show the URL expired error\n- [ ] when letting the token expire on any page, clicking on the software tab will show the URL expired error\n- [ ] when letting the token expire on any page, clicking on the self-service tab will show the URL expired error\n",
          "number": 28929,
          "repository": "fleetdm/fleet",
          "title": "Fleet Desktop: Incorrect error states when token expires",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28929"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga1ioI",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Fleet Desktop: Incorrect error states when token expires",
        "issueNumber": 28929
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 0.0.0-SNAPSHOT-ce43cb8 ‚Ä¢ Go go1.24.2\n\n**Web browser and operating system**:  Safari Version 18.4 (20621.1.15.11.10), macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nA 500 error\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Log in\n2. Click on the \"Software\" tab\n3. Select a team (Ducks in this case)\n4. Click the \"Add Software\" button\n5. Use the search box to search for software that does not exist\nExpected: No results to appear\nActual: 500 error screen. Console error: \"Cannot read properties of null (reading 'forEach')\"\nVideo: \nhttps://www.loom.com/share/5ca31ac6e67d43899a459badeaa76d00?sid=372e5c91-a875-452a-8339-d065a3d9c74f (https://www.loom.com/share/5ca31ac6e67d43899a459badeaa76d00?sid=372e5c91-a875-452a-8339-d065a3d9c74f)\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nShow no items match criteria as on the main software page (see below)\n\n![Image](https://github.com/user-attachments/assets/913dcb2e-8add-4378-aea0-91fbb7cba23d)",
          "number": 29197,
          "repository": "fleetdm/fleet",
          "title": "ü™≤500 error when searching for a software that does not exist",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29197"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzga1shA",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤500 error when searching for a software that does not exist",
        "issueNumber": 29197
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, set up a load test environment and allow it at least 24hrs of run time.\n3. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the load test run. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 29706,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.68.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29706"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbD9t8",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "4.68.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Release QA: 4.68.1",
        "issueNumber": 29706
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nA bunch of links in Markdown files in the repo (primarily on the website) have \"here\" or \"click here\" anchors. Per the handbook (see #29664) this is not how we're supposed to anchor links, both for a11y and SEO/GEO reasons.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSearch for `[here]` and `[click here]` in `.md` files in the repo.\n\n### üõ†Ô∏è To fix\n\nReplace the above anchors with more semantically valuable anchors, such that reading the link alone (e.g. via a screen reader) would be sufficiently informative to understand where the link is going.",
          "number": 29720,
          "repository": "fleetdm/fleet",
          "title": "Links on website have \"here\" and \"click here\" anchors",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29720"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgbGDZM",
        "labels": [
          "bug",
          ":improve documentation",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Links on website have \"here\" and \"click here\" anchors",
        "issueNumber": 29720
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.69.0\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nCan not delete package\n![Image](https://github.com/user-attachments/assets/35cd7b62-7bc3-43c9-b54e-26f0881baace)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Enable GitOps mode\n2. Go to /software/add/package\n3. Upload a custom package\n4. Realize you added the wrong package and try to delete it\n\n### üïØÔ∏è More info _(optional)_\n\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n ### üõ†Ô∏è To fix\n\nEnable the delete button in the UI and allow users to delete uploaded packages while in GitOps mode\n\n[Figma design link](https://www.figma.com/design/Em3tzD4CFJiwMNqknMvqex/-29509-Unable-to-delete-software-that-was-just-added-while-in-GitOps-mode?node-id=7301-2936\u0026t=larVoBsXb0AXurW7-11)\n\nProduct designer: @eugkuo \n",
          "number": 29509,
          "repository": "fleetdm/fleet",
          "title": "Unable to delete software that was just added while in GitOps mode",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29509"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzga2j84",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-13T00:00:00Z",
          "title": "4.69.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Unable to delete software that was just added while in GitOps mode",
        "issueNumber": 29509
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in dogfood (commit `e50dce0`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nThe slug and URL fields have a dashed line indicator and tooltip without an arrow that appear above the fields instead of below the lines.\n\n![Image](https://github.com/user-attachments/assets/aec0240e-39ef-4b48-8270-c5bb72e56ba7)\n\nThis creates an effect in which it looks like the URL tooltip applies to the slug field:\n\n![Image](https://github.com/user-attachments/assets/f5bcf068-f0ab-43d2-ab48-de615a5e0b84)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Head to **Software \u003e Add software** and select a Fleet-maintained app\n2. Select Show details and hover over the slug and URL fields.\n\n\n### üõ†Ô∏è To fix\n\nFields with the dashed line tooltip indicator tooltips without an arrow always appear below the dashed line. If we want to move the tooltip to a different location, in this case, above, then we want to use an arrow to point to the field.\n\nSee tooltips in the [design system in Figma](https://www.figma.com/design/8oXlYXpgCV1Sn4ek7OworP/%F0%9F%A7%A9-Design-system?node-id=62-847\u0026t=r4X4CgJ9lIc3nMPx-1).\n",
          "number": 29857,
          "repository": "fleetdm/fleet",
          "title": "Add Fleet-maintained app \u003e Software details: tooltips above underlined text",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29857"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbVPz8",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Add Fleet-maintained app \u003e Software details: tooltips above underlined text",
        "issueNumber": 29857
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `61e5617`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nOn the Host details page, I see sort for \"Installed version\" but when I click on the column, nothing happens:\n![Image](https://github.com/user-attachments/assets/3fce1c5e-4ec0-48af-8624-6bdcaf127fcb)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\n Remove the sort option in the UI for both install status and install version\n",
          "number": 29447,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Host details \u003e Software: \"Installed version\" sort doesn't work",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29447"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgba0AE",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Host details \u003e Software: \"Installed version\" sort doesn't work",
        "issueNumber": 29447
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68\n\n**Web browser and operating system**: Firefox 138.0.1 running on macOS 15.5\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nWhen installed as a Fleet maintained app, Firefox requires an extra step to update. Where this would normally be completed by selecting the highlighted option here:\n\n![Image](https://github.com/user-attachments/assets/43ef2a60-8bc5-4cc7-87fe-bd6f3cefe41c)\n\nInstead, a window is created behind the open Firefox browser, prompting the user to restart Firefox.\n\n![Image](https://github.com/user-attachments/assets/2a2406df-7b6a-47cc-a0bc-4eb6bc2fecc0)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Install Firefox as a FMA on macOS.\n2. Select \"Firefox\" in the menu bar \u003e About Firefox \u003e Restart to update Firefox.\n3. Observe that when Firefox attempts to update, it reopens without updating and instead populates the window from the second screenshot above behind the open window.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nThis bug is not present when the application is installed manually on a Fleet managed or unmanaged device. As an FYI we've received similar reports from `customer-mozartia` for the Slack FMA, but that has not been reproduced.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nAllow FMA Firefox to update itself properly when user-initiated through the app itself.",
          "number": 29402,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Firefox FMA requiring additional steps to upgrade",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29402"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbX3KU",
        "labels": [
          "bug",
          ":release",
          "customer-mozartia",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤Firefox FMA requiring additional steps to upgrade",
        "issueNumber": 29402
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68.0\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nError is shown, \n\n\u003cimg width=\"1506\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5610c36e-bf46-4fc0-83c6-c8d685fc51f7\" /\u003e\n\nURL does not resolve\nhttps://dl.pstmn.io/download/version/11.45.0/osx_arm64\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to /software/add/fleet-maintained\n2. Click Add for Postman for macOS\n3. Attempt to add the app\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nUse the latest homebrew metadata in the FMA feed",
          "number": 29754,
          "repository": "fleetdm/fleet",
          "title": "ü™≤FMA Postman download URL no longer resolves",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29754"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbX3R4",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "ü™≤FMA Postman download URL no longer resolves",
        "issueNumber": 29754
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nWe have ~24 Fleet-maintained apps that aren't on current versions (#29836, minus #29925). Stale apps may be missing security updates, and in some cases downloads may fail due to the installer being taken offline by the vendor.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nCheck the current version of e.g. Brave vs. the version in FMA manifests.\n\n### üïØÔ∏è More info\n\nThis ticket exists to track the effort of manually testing outstanding updates, then merging FMA manifest updates that pass QA. We can also decide to merge updates for software that is currently broken on `main` and broken in the same or less intrusive ways in the updated manifests.\n\nThis ticket will sit primarily in the \"Awaiting QA\" column while being actioned, as most of the work is QA, and serves as both an audit of existing behavior (making sure we know about all of the blocking bugs for FMAs) and a more manual freshness update of Fleet-maintained apps.\n\nThis ticket is _not_ intended as a full solution going forward for FMA updates; #29183 covers building what we need to basically automate an equivalent to this ticket.\n\n### üõ†Ô∏è To fix\n\n1. Create one or more PRs for Fleet-maintained app updates (either all apps at once or a few at a time) (@iansltx)\n2. Smoke-test installs/uninstalls manually (@jmwatts)\n3. Merge PR(s) containing apps that passed QA.\n4. For apps failing QA, confirm that the failure doesn't already exist in `main`. If it does, decide whether to merge the update anyway and ensure a bug ticket exists for the failure.",
          "number": 29934,
          "repository": "fleetdm/fleet",
          "title": "Current Fleet-maintained app versions are out of date",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29934"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgbYHG8",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Current Fleet-maintained app versions are out of date",
        "issueNumber": 29934
      },
      {
        "content": {
          "body": "By default, we shouldn't override FMA manifest locations, and these overrides pinned manifests to a specific, outdated commit. Stray lines added in 1353b9cbc46000cf159753872287aadcc39fa98d, merged as part of #20974.",
          "number": 29943,
          "repository": "fleetdm/fleet",
          "title": "Remove stray Fleet Maintained App manifest location overrides",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/29943"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbavqY",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "ef21f1dc",
          "startDate": "2025-05-26",
          "title": "Sprint 42"
        },
        "status": "Done",
        "title": "Remove stray Fleet Maintained App manifest location overrides",
        "issueNumber": 29943
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30136,
          "repository": "fleetdm/fleet",
          "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30136"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "labels": [
          ":release",
          "#g-mdm",
          "~csa",
          "~mdm-maturity",
          "#g-orchestration",
          "#g-software",
          "macos26"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
        "issueNumber": 30136
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.53.2\n\n**Web browser and operating system**: TODO\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n`customer-blanco` is observing the following server errors after upgrading Orbit from 1.19 to 1.37. \n\n```\nerr=\"internal error: fetch base config: load team agent options for host: select team: Error 1461 (42000): Can't create more than max_prepared_stmt_count statements (current value: 16382)\"\n```\n`customer-blanco` is seeing up to 500k of these errors per minute.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. TODO\n2. TODO\n3. \n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### To QA\nOnce both PRs are merged, QA is covered in normal smoke tests, plus ensuring Windows and macOS MDM migrations work, and macOS Setup Experience works.\n\nFor load testing, I'd expect measurably lower database load (probably slight) compared to versions of Fleet without the fixes applied, and measurably lower results for SHOW GLOBAL STATUS LIKE '%prepared_stmt_count%'; and potentially SHOW GLOBAL STATUS LIKE '%Threads_connected%';. I would expect the differences to be more significant with MDM turned on than with it turned off.\n\n",
          "number": 30199,
          "repository": "fleetdm/fleet",
          "title": "Hitting limit on max_prepared_stmt_count",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30199"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgbu3hU",
        "labels": [
          "bug",
          ":release",
          "customer-blanco",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Hitting limit on max_prepared_stmt_count",
        "issueNumber": 30199
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.68.0\n**Web browser and operating system**: Chrome on Windows\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nWhen a Fleet-maintained app (FMA) with a defined URL is added via the UI ~~or GitOps~~, the URL is not persisted to the database, nor is it exported in the fleetctl generate-gitops YAML output. As a result, even though the application metadata contains a URL, it does not show up in the exported GitOps spec.\nNo URL is exported. This affects both:\n1. fleetctl generate-gitops\n2. Software listings in the UI after an FMA is added\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add the Cloudflare WARP Fleet-maintained app (via UI ~~or GitOps~~).\n2. Attach a host (if needed) to trigger software inventory sync.\n3. Run `fleetctl generate-gitops`.\n4. Check the exported YAML ‚Üí `url` field is missing from the `packages` section.\n\n\nRoot cause (suspected)\nThe URL field from pkg.URL inside FMA metadata is not being persisted to the software_installers table during:\n- UI-based FMA creation (ee/server/service/maintained_apps.go)\n- ~~GitOps upload~~\n\nTo Do:\nEnsure that when an FMA is added:\n- The SoftwareInstaller.URL field is written to the DB.",
          "number": 30282,
          "repository": "fleetdm/fleet",
          "title": "Fleet-maintained apps do not persist or export their URL after being added via UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30282"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgb7Ypc",
        "labels": [
          "bug",
          ":product",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Fleet-maintained apps do not persist or export their URL after being added via UI",
        "issueNumber": 30282
      },
      {
        "assignees": [
          "jmwatts"
        ],
        "content": {
          "body": "Automated ingestion of latest Fleet-maintained app data.",
          "number": 30334,
          "repository": "fleetdm/fleet",
          "title": "Update Fleet-maintained apps",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30334"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgb9gHY",
        "labels": [
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Update Fleet-maintained apps",
        "issueNumber": 30334
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**:  Fleet 4.68.1 ‚Ä¢ Go go1.24.2\n\n\n**Web browser and operating system**: MacOS, however other platforms may have the same issue.\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nWe use the latest [Hashicorp vault](https://github.com/hashicorp/vault) cli in our envionrment. Fleet reports this as vulnerable to `CVE-2015-5711`. https://nvd.nist.gov/vuln/detail/CVE-2015-5711 appears to be unrelated to hashicorp:\n\n\n\u003e TIBCO Managed File Transfer Internet Server before 7.2.5, Managed File Transfer Command Center before 7.2.5, Slingshot before 1.9.4, and Vault before 2.0.1 allow remote authenticated users to obtain sensitive information via a crafted HTTP request.\n\n\nTIBCO seems to have some sort of Vault offering ([ref](https://docs.tibco.com/products/tibco-vault/archive)).\n\n\u003cimg width=\"1100\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/72f58135-2898-4e10-aced-f0f7584ae855\" /\u003e\n\n\n\n\n\u003cbr class=\"Apple-interchange-newline\"\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\nFirst install vault via homebrew via the official hashicorp tap ([docs](https://developer.hashicorp.com/vault/tutorials/get-started/install-binary))\n1. `brew tap hashicorp/tap`\n2. `brew install hashicorp/tap/vault`\n3. Refetch host details  \u003cimg width=\"355\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fd7f5e56-8d35-473b-a224-1e8ea13a4063\" /\u003e\n4. See vulnerability appear \n\n### üïØÔ∏è More info _(optional)_\nThe CPE strings found here: https://nvd.nist.gov/vuln/detail/CVE-2015-5711\n```\n  cpe:2.3:a:tibco:vault:*:*:*:*:*:*:*:*\n```\nIndicate that the version of vault is incorrect.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30229,
          "repository": "fleetdm/fleet",
          "title": "Hashicorp Vault client vulnerability false positive (CVE-2015-5711)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30229"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgb98yM",
        "labels": [
          "bug",
          ":release",
          "~vulnerability-management",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-06-30T00:00:00Z",
          "title": "4.70.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Hashicorp Vault client vulnerability false positive (CVE-2015-5711)",
        "issueNumber": 30229
      },
      {
        "assignees": [
          "zwass"
        ],
        "content": {
          "body": "# Checklist for submitter\r\n\r\nIf some of the following don't apply, delete the relevant line.\r\n- [x] Manual QA for all new/changed functionality\r\n",
          "number": 30369,
          "repository": "fleetdm/fleet",
          "title": "Update osquery versions for fleetctl preview",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30369"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgb-XuA",
        "labels": [
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Update osquery versions for fleetctl preview",
        "issueNumber": 30369
      },
      {
        "assignees": [
          "lucasmrod"
        ],
        "content": {
          "body": "What's wrong?\nYou have open medium severity vulnerabilities.\n\nAWS ECR Container Vulnerability\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://console.aws.amazon.com/inspector/v2/home?region=us-east-2#/findings?findingArn=arn%3Aaws%3Ainspector2%3Aus-east-2%3A611884880216%3Afinding%2F1a86e98bc090947304b4ec1a77bd2ffc\"\u003egithub.com/aws/aws-sdk-go:v1.44.288/CVE-2020-8911 (fleet)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://console.aws.amazon.com/inspector/v2/home?region=us-east-2#/findings?findingArn=arn%3Aaws%3Ainspector2%3Aus-east-2%3A611884880216%3Afinding%2F648b074db7eb2069d5b284efc2f4545f\"\u003egithub.com/aws/aws-sdk-go:v1.44.288/CVE-2020-8911 (fleet-tests)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\nHow to fix?\n1. Visit the \u003ca href=\"https://app.vanta.com/vulnerabilities/findings-by-vulnerability?source=aws\u0026severity=MEDIUM\"\u003eVulnerabilities page\u003c/a\u003e to see all unresolved vulnerabilities.\n2. Remediate or deactivate monitoring for each unresolved vulnerability.\n3. \u003ca href=\"https://app.vanta.com/vulnerabilities/history?tab=sla-misses\"\u003eOptional] If the vulnerability was resolved outside of the SLA you‚Äôve defined, explain the reason to your auditor on the [SLA violations page\u003c/a\u003e.\n\n\u003ci\u003eThis issue was automatically created from Vanta. \u003ca href=\"https://app.vanta.com/c/fleetdm.com/tests/container-packages-checked-for-vulnerabilities-v2-records-closed-aws-medium\"\u003eView test in Vanta\u003c/a\u003e\u003c/i\u003e\n\n## Test plan\n\nWe need to QA all features that make use of AWS Go's SDK:\n\n- [x]  Software installation (upload, download, installation, removal, etc.)\n\n  - Serving software via Cloudfront: This feature was already using aws-sdk-go-v2, but should be re-tested just in case. This can be tested in the Dogfood environment.\n- [x] Bootstrap packages on ABM/DEP enrollments of macOS.\n- [x] File carving with osquery.\n- [x] \"Status\" and \"result\" logging with the following destinations:\n  - Firehose (see [\"Testing and local development\" entry](https://github.com/fleetdm/fleet/blob/306b1e8decfede8acf8636cced27e1cb61c4ca70/docs/Contributing/getting-started/testing-and-local-development.md?plain=1#L549))\n  - Kinesis (see [\"Testing and local development\" entry](https://github.com/fleetdm/fleet/blob/306b1e8decfede8acf8636cced27e1cb61c4ca70/docs/Contributing/getting-started/testing-and-local-development.md?plain=1#L412))\n  - Lambda (somewhat hard to test locally so I created a Lambda on our AWS Dogfood account to test this.)\n- [x] Email using Amazon SES (this is what Dogfood uses and a few customers). We decided to test this in Dogfood or Load test environments which run in AWS.",
          "number": 29482,
          "repository": "fleetdm/fleet",
          "title": "Due July 4: [Vanta] Remediate \"Medium vulnerabilities identified in packages are addressed (AWS Container)\"",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29482"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcIlsU",
        "labels": [
          "bug",
          ":release",
          "~risk-reduction",
          "P2",
          "#g-orchestration"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "Due July 4: [Vanta] Remediate \"Medium vulnerabilities identified in packages are addressed (AWS Container)\"",
        "issueNumber": 29482
      },
      {
        "assignees": [
          "iansltx",
          "JordanMontgomery"
        ],
        "content": {
          "body": "**Fleet version**: v4.70.0\n\n**Web browser and operating system**: NA\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nHigh load was observed in the db with a query that matched the following pattern:\n\n```\nDELETE FROM host_certificate_sources WHERE host_certificate_id IN (\u003cids\u003e)';\n```\n\nIn fact there was a count of 455 for the exact same id in the db at the time of examination.\n\nIn looking at what was actually matching for these deletes, I the username in the host certificate sources seemed to change almost every time the query was run:\n\n```\nselect * from host_certificate_sources WHERE host_certificate_id in (\u003cid\u003e);\n````\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nDeploy the same certificate on user keychains of two or more hosts, with distinct usernames for each.\n\n---\n\n**Original**: While this requires v4.70.0 to present itself, it is unknown at this time why these stomp over the top of each other.  I would guess that it has to due with multiple users on the same host and an inconsistent reply from the underlying osquery queries leveraged to get this information.\n\n### üïØÔ∏è More info\n\nThe bug means that the first host certs for a given SHA1 would have source information attributed, rather than the host certs for the correct host, causing entries to flap between multiple likely-incorrect values as hosts checked in.\n\n### üõ†Ô∏è To fix\n\nFilter host certificates by host when grabbing information by SHA for update. Also ensure a consistent sort on source when comparing incoming host certs to newly deployed certs so we don't push updates when we don't need to.",
          "number": 30574,
          "repository": "fleetdm/fleet",
          "title": "High database load from DELETE queries in MySQL",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30574"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcR7rI",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-mdm",
          "customer-sarahwu",
          "P0"
        ],
        "milestone": {
          "dueOn": "2025-07-09T00:00:00Z",
          "title": "4.70.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "Done",
        "title": "High database load from DELETE queries in MySQL",
        "issueNumber": 30574
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `af417c1`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nOn the Host details \u003e Software tab, when I select Show details for software that's installed on the host I see the new grey box styles:\n\n\u003cimg width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3aa14955-e790-4e7f-b26f-b911e94f12fb\" /\u003e\n\nWhen I select software that's available for install but not yet installed on the host I don't see the new grey box:\n\n\u003cimg width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a146d1b5-f3b6-4638-aa26-7666cae07792\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üõ†Ô∏è To fix \n\n- @noahtalerman: We want to show to the new grey box in the details modal for all software.\n",
          "number": 30232,
          "repository": "fleetdm/fleet",
          "title": "Inconsistent style: Host details \u003e Software \u003e Show details",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30232"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX9VU",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Inconsistent style: Host details \u003e Software \u003e Show details",
        "issueNumber": 30232
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n- Inventory versions use the short format (ie.  16.98 or 16.97.2)\n- Vulnerability scanning [uses](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac) the short format (same as above)\n- FMA/homebrew uses the build number format (ie. 16.98.25060824)\n\nThe mismatch between inventory and package versions will cause issues when attempting to update the version with a policy because 16.98.25060824 \u003e 16.98 (they are the same version)\n\nFMAs affected:\n- Microsoft Excel\n- Microsoft Word\n\nGoal: use the same version throughout fleet for version compare and vuln scanning\n\nOption 1:  Change the FMA version number\nHomebrew does not contain the short format.  The short format could be gathered via:\n- extracting short bundle version from the package\n- referencing an external source such as the [office release notes](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac) used in vulnerability scanning\n- Not considered due to software ingestion load risk and version parity with the VPP app which uses the short format\n\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install Microsoft Excel on host, refetch host vitals\n2. Note version number in inventory\n3. add Microsoft Excel FMA, note version number on package\n\n### üïØÔ∏è More info _(optional)_\nalso considered:\nOption 2: Change the inventory version number / update vulnerability logic\n- add bundle_version to detail queries, which contains the build number format\n- update vuln scan logic to utilize the build number format.  Fleet uses the mac office release notes for this which contains the build number.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nOption 1:  Change the FMA version number\nHomebrew does not contain the short format.  The short format could be gathered via:\n- extracting short bundle version from the package\n- referencing an external source such as the [office release notes](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac)\n",
          "number": 30082,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Microsoft Office for Mac Fleet-maintained apps version mismatches",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30082"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4XA",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤ Microsoft Office for Mac Fleet-maintained apps version mismatches",
        "issueNumber": 30082
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#27983\n\n## Task\n\nWrite a feature guide for self-service updates, linked from [the existing self-service guide](https://fleetdm.com/guides/software-self-service). We'll want the extra space of a full guide to walk through how we determine what shows up for updates I think, versus adding update references as a subheading for the existing article.\n\nCriteria are in Figma dev notes + [the self-service update flowchart](https://drive.google.com/file/d/1dtCo-CzVIcJkk1GIDHMKflqu6mSNyzfw/view?usp=sharing)\n\n## Condition of satisfaction\n\nGuide is written and merged into the appropriate release docs branch.",
          "number": 29914,
          "repository": "fleetdm/fleet",
          "title": "Self-Service Updates: Guide/Docs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29914"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX120",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü•ö Ready",
        "title": "Self-Service Updates: Guide/Docs",
        "issueNumber": 29914
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer on the Software page,\n| I want to filter by a custom severity (CVSS score) range\n| so that I can filter software by a vulnerability threshold my security team uses (ex. CVSS ‚â• 7.5).\n\n## Key result\n\nNone. Prioritized because the current behavior makes it look like Fleet does not understand how people actually use CVSS. But now we do.\n\n## Original requests\n\n- #30237\n\n## Context\n- Product Designer: @RachelElysia + @iansltx \n- Engineer: @RachelElysia \n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma](https://www.figma.com/design/J2mqgWcS9RG3jaQc43V67m/-30248--Software-page--filter-by-custom-severity--CVSS-score--ranges?node-id=0-1\u0026p=f\u0026t=YQB8wo6YOLyUzyFu-0)\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes (API endpoint already supports min/max)\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Follows existing CVSS score filtering, so Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [x] Contributor API changes: No changes\n- [ ] Feature guide changes: Make sure the [vulns filtering article](https://fleetdm.com/guides/filtering-software-by-vulnerability) is current with the UI\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n\u003e Note: See Figma for single source of truth for exact text copies \n\nTest modals on Host \u003e Software \u003e Inventory page and Software page\n\n1. Min max is present and new help text is present\n2. Min max is enabled only if vuln software toggle is enabled\n3. Defaults to \"Any severity\"\n4. If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n5. If a user clicks on \"Any severity\", the min and max are cleared\n6. If a user clicks on \"Custom severity\", the min and max do not change\n7. If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n8. If a user clears a custom min/max, the dropdown will not change to \"Any severity\" as they still might be typing\n9. If the user hits apply with no severity entered, it will apply any severity\n10. If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n11. If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n12. If the user types in an invalid string into either min/max (e.g. 4.11 or abc), the Apply button is disabled with a tooltip stating it must be a number between 0-10 with an increment of 0.1\n13. If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n14. By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n15. Clearing the filter should show all software \n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30248,
          "repository": "fleetdm/fleet",
          "title": "Software page: filter by custom severity (CVSS score) ranges",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30248"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "labels": [
          "story",
          ":release",
          "~pushed",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü•ö Ready",
        "title": "Software page: filter by custom severity (CVSS score) ranges",
        "issueNumber": 30248
      },
      {
        "assignees": [
          "fuhry"
        ],
        "content": {
          "body": "github.com/urfave/cli/v2 doesn't parse flags after it encounters the first argument. This left me very confused when trying to call `fleetctl api some/route -F arg=value` and the query string wasn't being updated.\r\n\r\nMake this an error case to prevent future confusion.\r\n\r\nNote that v3 of `urfave/cli` [supports arguments](https://pkg.go.dev/github.com/urfave/cli/v3#Argument), so the right thing to do in the long term is upgrade this library to v3.\r\n\r\n# Checklist for submitter\r\n\r\nIf some of the following don't apply, delete the relevant line.\r\n\r\n\u003c!-- Note that API documentation changes are now addressed by the product design team. --\u003e\r\n\r\n- [x] Input data is properly validated, `SELECT *` is avoided, SQL injection is prevented (using placeholders for values in statements)\r\n- [x] Added/updated automated tests\r\n- [x] Manual QA for all new/changed functionality\r\n",
          "number": 30797,
          "repository": "fleetdm/fleet",
          "title": "[fleetctl] fail api command when args present after uri",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30797"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcgXr8",
        "labels": [
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "[fleetctl] fail api command when args present after uri",
        "issueNumber": 30797
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent: 1.45.1\n\nIncludes updates to: \n- Fleet Desktop tray icon application\n- No changes to Orbit functionality.\n\n- Desktop `v1.44.0` \u003e `v1.45.1`\n\nFleet 1.45.1 has been released to the `edge` channel.\nCompared to 1.45.0 it only contains changes to the \"Fleet Desktop\" tray application (in particular updates to the offline indicator).\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 30846,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 1.45.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30846"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgckdFo",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.45.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release QA: 1.45.1",
        "issueNumber": 30846
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: Beekeeper Studio\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name` (macOS) \n- [x] Manifest version scheme matches osquery `app.short_bundle_version` (macOS)\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [x] App adds successfully to team's library\n- [x] App installs successfully on host\n- [x] App opens successfully on host\n- [x] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog",
          "number": 30884,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Beekeeper Studio",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30884"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcmzng",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "New FMA: Beekeeper Studio",
        "issueNumber": 30884
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\nPart of #30240 \n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- [ ] Create version comparison function and appropriate test to compare various types of versions\n\nStatus column\n- [ ] Update the status column to not reflect the API `status` but whether a software is actually installed on a host\n- [ ] Update the status column to have an update available for software installers that have a newer version available to install\n- [ ] Add \"Updating...\", \"Update (pending)\", and \"Update available\" to the status column\n- [ ] Add polling to \"Updating...\" status but specifically not to \"Update (pending)\" status\n- [ ] Ensure there is no regression in statuses\n- [ ] Allow for client-side sort by status for Self-service page\n- [ ] Add client-side pagination to Self-service page\n\nAction column\n- [ ] Update the actions to appropriately reflect action verbs for software that is currently installed/uninstalled\n- [ ] Update the actions to hide uninstall on software that is detected as not installed\n- [ ] Update the actions to say \"Update\" instead of install if an older version of the software is currently installed in relation to the installer version\n- [ ] Ensure disabled state when updating/ update pending and action text does not change\n\n- [ ] Update all this on both the h**ost details \u003e software \u003e inventory page ** and **self-service page**\n\n\n## Condition of satisfaction\n\nSee story's [Figma](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/-30240-Show-appropriate-self-service-actions-based-on-whether-software-is-on-the-host?node-id=5301-1746\u0026t=wQkHuan83PAwlqaW-0) ",
          "number": 30861,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service status and actions in the self-service table at all times",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30861"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgck8sI",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Show appropriate self-service status and actions in the self-service table at all times",
        "issueNumber": 30861
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#27983\n\n## Task\n\nImplement the frontend as shown in the [Figma for the parent story](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=2-130\u0026p=f\u0026t=4BUeL3i6REY46HIb-11), with behavior corresponding to the [associated flowcharts](https://fleetdm.slack.com/files/U07GHNRUK17/F093LL7E30A/self-service_update_filtering___workflow_-_simplified.drawio). Note that all functionality is expected to happen client-side; if API bugs/misses prevent this, raise these issues as unreleased bugs during development.\n\n## Condition of satisfaction\n\nFrontend is implemented according to the above specs. Note that \"update all\" should be performed by a bunch of install calls rather than an action at a bulk endpoint.",
          "number": 29944,
          "repository": "fleetdm/fleet",
          "title": "Self-Service Update: Frontend",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29944"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Self-Service Update: Frontend",
        "issueNumber": 29944
      },
      {
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe host will switch to MDM off, and pending activity items will be cancelled, but the pending install just spins. Verification isn't sent, and there's no way to \"cancel\" the install. \nThere are other situations that have resulted in a vpp app install command being sent, and a VPP verify command being sent, but then verification never completes for some reason.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\nTo get a forever \"installing\" scenario, and you can't cancel the activity item:\n1. Add a VPP software item to the team's Library\n2. For an MDM enabled host, initiate the install, then turn off Wifi on the host\n3. Remove the MDM profile on the host \n4. Turn WiFi back on, refetch host vitals\n\nYou'll also get funny states if the app installs and you shut off WiFi before the verification is sent.\nI've also seen a state where a verification was sent but never verified... I don't recall exactly how I got in that state.\n\n### üïØÔ∏è More info _(optional)_\nIn the described scenario, if you turn MDM off again while connected to WiFi, the install will be marked as failed. But this requires manual user intervention and it would be nice if we had an automatic way to clean up lingering unverified VPP installs\n\nIn other scenarios, if you can delete the upcoming activity, it will cancel the pending install, but having to manually cancel these installs could be time consuming, especially if there was an event that caused a large number of the VPP install verifications to fail (perhaps an APNS outage or something)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e",
          "number": 30902,
          "repository": "fleetdm/fleet",
          "title": "App Store (VPP) apps are stuck in pending",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30902"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcs61c",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "App Store (VPP) apps are stuck in pending",
        "issueNumber": 30902
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "Fleet version: 4.67.0\n\nWeb browser and operating system: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nWhatsApp version is different when adding the Fleet-maintained app (screenshot 1), after adding (2), and after installing (3):\n\n![Image](https://github.com/user-attachments/assets/21e5d017-3589-47ba-aa1c-0874740c2a5f)\n\n![Image](https://github.com/user-attachments/assets/965ca8ff-07a9-42d8-a05b-27d51161c66e)\n\n![Image](https://github.com/user-attachments/assets/ad5fd5ce-e462-493e-a839-3c1c6a5f0853)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add whatsapp FMA app to a team\n2. Install the whatsapp on a host, then refetch host vitals\n3. Run the vulnerabilities cron\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n- When adding the Fleet-maintained app and on the software title page, show the version that gets installed (in this case: `25.11.76`)\n",
          "number": 31185,
          "repository": "fleetdm/fleet",
          "title": "ü™≤WhatsApp version different in software inventory",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31185"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc5Hl8",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "ü™≤WhatsApp version different in software inventory",
        "issueNumber": 31185
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nBrave is not showing as updatable because the versions do not match\n\nVersion reported by homebrew: `1.79.123.0`\nVersion reported by osquery: `137.1.79.123`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add macOS FMA\n2. Install FMA\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nFix this in the FMA manifest:\n- drop the last part (0)\n- ~~add 58 to the 2nd part (79) to create a new first part (137)~~ needs research\n",
          "number": 31122,
          "repository": "fleetdm/fleet",
          "title": "macOS Brave Browser FMA version mismatch",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31122"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc5rCE",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "macOS Brave Browser FMA version mismatch",
        "issueNumber": 31122
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT Admin\n| I want FMA updates to be available quickly\n| so that I can patch host software with the latest version\n\n## Key result\n\n100 FMAs\n\n## Original requests\n\nFMA updates are currently tested manually, delaying customer value by holding back the ability for them to download the latest version of a software.\n\nCurrent [update frequency](https://docs.google.com/spreadsheets/d/1Z0I9y1cx_L_HJ57oWdyl23Ek0OpXbERRnXZ-kFulG6M/edit?usp=sharing) : 3 / day\nCurrent unique FMA apps updated: 19\n\nWith the conservative goal of testing apps within 1 day of release, our current manual testing strategy will not scale as we add FMAs:\nGoal: 100 FMAs\nEstimated updates per day to test: 15\n\nTest automation here is not meant to replace all manual testing, but it will greatly reduce the scope of regression testing.  Testing 100 FMAs per release will have a large impact on QA and likely result in further release delays.\n\nWe are starting with the macosx platform first. We have a total of 21 apps for the mac platform and 6 windows applications. While this code should be written generically enough to support mac, windows, and eventually linux. Primarily focus on macosx support. \n\n## Context\n- Product Designer: @mostlikelee  \n- Engineer: @ksykulev \n\nSome things discovered during the POC.\n1. Unfortunately `act` the local github actions testing tool https://github.com/nektos/act, does not support mac osx machines. Only linux. So developing/testing on github is required.\n2. osquery is used as a primary means of checking if an application was installed and uninstalled. However, because the `apps` table primarily uses `LaunchServices`. You must be careful to deal with caching. https://github.com/osquery/osquery/blob/master/osquery/tables/system/darwin/apps.mm#L259. Check the `forceLaunchServicesRefresh` function in the POC code for more details on how to reset.\n3. Macosx also has a piece of software called gatekeeper. Most applications installed from the internet require user authorization to run for the first time. Although I do not think this impacts osquery's ability to find the application. View the `removeAppQuarentine` function for details on how to potentially deal with that. \n4. There are a number of version mis-matches that occurred between the manifest file and what osquery returns.\n```\nApps with errors: [Brave Amazon DCV Google Chrome WhatsApp]\n\nFound app: 'Brave Browser.app' at /Applications/Brave Browser.app, Version: 137.1.79.123, Bundled Version: 179.123\nApp version '1.79.123.0' was not found by osquery\n\nFound app: 'DCV Viewer.app' at /Applications/DCV Viewer.app, Version: 2024.0 (r8004), Bundled Version: 2024.0 (r8004)\nApp version '2024.0.8004' was not found by osquery\n\nFound app: 'Google Chrome for Testing.app' at /Applications/Google Chrome for Testing.app, Version: 137.0.7151.119, Bundled Version: 7151.119\nFound app: 'Google Chrome.app' at /Applications/Google Chrome.app, Version: 138.0.7204.50, Bundled Version: 7204.50\nApp version '137.0.7151.104' was not found by osquery\n\nFound app: 'WhatsApp.app' at /Applications/WhatsApp.app, Version: 25.16.81, Bundled Version: 738641321\nApp version '2.25.16.81' was not found by osquery\n```\n5. Chrome is especially tricky. \n  - It appears that it comes pre-installed on the macosx images on github. \n  - We cannot check for a specific version when verifying. The chrome installer uses a generic url that does not include the version, so the versions may change at any time. It might be best to use a `\u003e` operator for this app. \n\n## Changes\nPhase 1: Improve tooling for manual testing\nPhase 2: Port existing tooling into CI\n\n### Engineering\n- [ ] Test plan is finalized\n- [X] Contributor API changes: No changes\n- [X] Feature guide changes: No changes\n- [X] Database schema migrations: No changes\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: oN\n- Risk level: Low\n\n### Test plan\n\n1.   Open FMA Updates PR\n2.  Confirm only FMA CI tests are performed\n3.  Confirm CI tests report results and gate the merge \n\n### Confirmation\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.",
          "number": 29183,
          "repository": "fleetdm/fleet",
          "title": "Create Fleet Maintained Apps test automation",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29183"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4P8",
        "labels": [
          "story",
          ":release",
          "~engineering-initiated",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "Create Fleet Maintained Apps test automation",
        "issueNumber": 29183
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAmazon DCV Viewer not showing correct update status because of version mismatch\n\nHomebrew: `2024.0.8004`\nInventory: `2024.0 (r8004)`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add FMA to Fleet\n2. Install FMA\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nThis should be fixed ingestion side.  While we need to bring back software ingestion modification patterns we also need to account for FMA test automation.  \n",
          "number": 31123,
          "repository": "fleetdm/fleet",
          "title": "Amazon DCV Viewer FMA version mismatch",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31123"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc8aTI",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Amazon DCV Viewer FMA version mismatch",
        "issueNumber": 31123
      },
      {
        "content": {
          "body": "# Checklist for submitter\r\n\r\nVulnerability incremental jobs are broken.  NVD introduced a breaking change in their feed to use inconsistent time formats.\r\n\r\n## Testing\r\n\r\n- [ ] Added/updated automated tests\r\n- [X] QA'd all new/changed functionality manually:\r\nhttps://github.com/mostlikelee/vulnerabilities/actions/workflows/nvd.yml\r\n",
          "number": 31258,
          "repository": "fleetdm/fleet",
          "title": "Fix NVD feed generation",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/31258"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgc98wI",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Fix NVD feed generation",
        "issueNumber": 31258
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 31274,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.72.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31274"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgc-TB0",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: 4.72.0",
        "issueNumber": 31274
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "**Fleet version**: 4.70.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nType column sort is actually sorting by name even though the UI buttons light up correctly and the URL sort column is correct\n\nhttps://github.com/user-attachments/assets/3cbe7c75-2cee-412d-b109-299f006f1716\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to Fleet Desktop\n2. Go to software tab\n3. Try to sort software by type\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nEnsure the backend supports sorting by type column\nIf so, it's a FE fix, if not, need to confirm design if it should or not (maybe it was unintentional to have sort on type and we accidentally added it to the UI?)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix \nProduct designer: @marko-lisica \n\nAs backend doesn't support this I believe we didn't design it. Remove sort indicator from Type column on the frontend and if needed we can always add later.",
          "number": 30746,
          "repository": "fleetdm/fleet",
          "title": "Fleet UI: Fleet Desktop \u003e Software \u003e Type sort broken",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30746"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgc-Xts",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Fleet UI: Fleet Desktop \u003e Software \u003e Type sort broken",
        "issueNumber": 30746
      }
    ]
  },
  {
    "timestamp": "2025-07-27T20:00:13.768769396Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb7YjQ",
        "title": "Wrong software version field is used for explanatory comment on `fleetctl generate-gitops` software export",
        "issueNumber": 29618,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1tIQ",
        "title": "Self-service uninstall: BE",
        "issueNumber": 28846,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcIlsU",
        "title": "Due July 4: [Vanta] Remediate \"Medium vulnerabilities identified in packages are addressed (AWS Container)\"",
        "issueNumber": 29482,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcp5UA",
        "title": "Incorrect copy in modal shown when VPP app install is not verified",
        "issueNumber": 30938,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcs61c",
        "title": "App Store (VPP) apps are stuck in pending",
        "issueNumber": 30902,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb-XuA",
        "title": "Update osquery versions for fleetctl preview",
        "issueNumber": 30369,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbinUw",
        "title": "Successful install refetch: Docs",
        "issueNumber": 30038,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX51M",
        "title": "ü™≤Vulnerability detection false-positive for Safari 18.5",
        "issueNumber": 29476,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcVLvY",
        "title": "Release QA: Fleet 4.71.0",
        "issueNumber": 30600,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgblupM",
        "title": "Include uninstall results in software details modal: Eng DRI",
        "issueNumber": 30087,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcd1GA",
        "title": "Automatic refetch fails on iOS host, clicking refetch succeeds",
        "issueNumber": 30754,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgckdFo",
        "title": "Release QA: 1.45.1",
        "issueNumber": 30846,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1sXA",
        "title": "Incorrect software title name (Microsoft AutoUpdate) when uploading Microsoft Company Portal App",
        "issueNumber": 24083,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbVPwg",
        "title": "My device \u003e Self-service: \"Reinstall\" is disabled",
        "issueNumber": 29860,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5pQ",
        "title": "ü™≤CPE for python urllib is not generated",
        "issueNumber": 28490,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbYHG8",
        "title": "Current Fleet-maintained app versions are out of date",
        "issueNumber": 29934,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbSju4",
        "title": "Viewing failed uninstall details from self-service fails when the uninstall wasn't initiated via self-service",
        "issueNumber": 29840,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2q7g",
        "title": "500 Error when attempting to navigate to Software details on non-macOS host",
        "issueNumber": 29513,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcVU_Q",
        "title": "Release QA: 4.70.1",
        "issueNumber": 30607,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcLd1w",
        "title": "Dropdown reset to \"All available\" when sort order or search is applied on Host \u003e\u003e Software \u003e\u003e Library tab",
        "issueNumber": 30514,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgambig",
        "title": "Clean up the example repository shown to clients so that it reflects Fleet best practices",
        "issueNumber": 29293,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgaxnpw",
        "title": "SHA-256 in vitals: BE (detail query + API)",
        "issueNumber": 29437,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2Rys",
        "title": "Software cleanup fails when using GCP Cloud Storage",
        "issueNumber": 28420,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiciI",
        "title": "Wrong error message when changing teams and a software filter is set",
        "issueNumber": 26258,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiq_Q",
        "title": "Verify VPP: UI updates",
        "issueNumber": 29893,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbD9t8",
        "title": "Release QA: 4.68.1",
        "issueNumber": 29706,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcf5_w",
        "title": "Modifying cve feed for powershell version change",
        "issueNumber": 30767,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcq9R8",
        "title": "Linux OS Vulns: Design/Spec",
        "issueNumber": 30979,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1syI",
        "title": "Snowflake v4.66.0 -\u003e v4.67.3 migration failure",
        "issueNumber": 10596,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbX3KU",
        "title": "ü™≤Firefox FMA requiring additional steps to upgrade",
        "issueNumber": 29402,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb9gHY",
        "title": "Update Fleet-maintained apps",
        "issueNumber": 30334,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgaxnq0",
        "title": "SHA-256 in vitals: fleetd tables revisions",
        "issueNumber": 29438,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbVPz8",
        "title": "Add Fleet-maintained app \u003e Software details: tooltips above underlined text",
        "issueNumber": 29857,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2PAg",
        "title": "Spec/Design: Self-service update",
        "issueNumber": 29494,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgctKwA",
        "title": "Previously failed VPP Verifications due to turning MDM off prevent further verifications from being sent",
        "issueNumber": 31020,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiqBw",
        "title": "ü™≤fleetctl preview: Can't install software",
        "issueNumber": 29216,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcR7rI",
        "title": "High database load from DELETE queries in MySQL",
        "issueNumber": 30574,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbavqY",
        "title": "Remove stray Fleet Maintained App manifest location overrides",
        "issueNumber": 29943,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiP00",
        "title": "My device \u003e Self-service: inconsistent loading state",
        "issueNumber": 29822,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbimd4",
        "title": "Successful install refetch: VPP app installs",
        "issueNumber": 29980,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcAB0Y",
        "title": "Release QA: fleetd 1.44.0",
        "issueNumber": 30387,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga9ngs",
        "title": "ü™≤ FMA MS Excel on macOS doesn't uninstall",
        "issueNumber": 29221,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbrzQc",
        "title": "Rebuild self-service article to reflect 4.69 changes, add self-service uninstall highlight to release notes",
        "issueNumber": 30030,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbdarQ",
        "title": "Activity feed missing actor name for actions performed during setup experience",
        "issueNumber": 29897,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbicys",
        "title": "Hosts page: software title filter breaks page if software isn't on any hosts in the team",
        "issueNumber": 29823,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcImZk",
        "title": "Fleet-maintained apps: Google Chrome has no hash",
        "issueNumber": 30325,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb2LvQ",
        "title": "Software page/Host's software tab: \"Available for install / Self-service\" dropdown is visible for \"All teams\" and Fleet Free",
        "issueNumber": 30273,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5uA",
        "title": "ü™≤Acrobat Reader CPEs don't match expectations",
        "issueNumber": 29570,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga9uJ8",
        "title": "ü™≤FMA MSI uninstall scripts don't uninstall other versions of the software",
        "issueNumber": 27757,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1iwc",
        "title": "Fleet UI: Copy button input field inconsistency",
        "issueNumber": 28652,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga9m2Q",
        "title": "ü™≤ FMA Word on macOS doesn't uninstall",
        "issueNumber": 29220,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2A80",
        "title": "Software hash causes squishing at low widths",
        "issueNumber": 29397,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2aeU",
        "title": "Release QA: fleetd 1.43.0",
        "issueNumber": 29502,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbitHs",
        "title": "ü™≤Incorrect software association for CVE-2024-54559",
        "issueNumber": 28207,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2PZY",
        "title": "Spec/Design: VPP Verify",
        "issueNumber": 29495,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2j84",
        "title": "Unable to delete software that was just added while in GitOps mode",
        "issueNumber": 29509,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcVNHM",
        "title": "Release fleetd 1.45.1",
        "issueNumber": 30602,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgba0AE",
        "title": "ü™≤Host details \u003e Software: \"Installed version\" sort doesn't work",
        "issueNumber": 29447,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcna-8",
        "title": "Android copy for Software tab should be removed",
        "issueNumber": 30905,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbSd0o",
        "title": "Release fleetd v1.43.0",
        "issueNumber": 29837,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcvhSQ",
        "title": "Reinstalling VPP Apps that were installed previously to 4.71.0 is not making them managed",
        "issueNumber": 31060,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbu3hU",
        "title": "Hitting limit on max_prepared_stmt_count",
        "issueNumber": 30199,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbX3R4",
        "title": "ü™≤FMA Postman download URL no longer resolves",
        "issueNumber": 29754,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbNuAU",
        "title": "ü™≤Missing padding in VPP expiration banner",
        "issueNumber": 29448,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcmzng",
        "title": "New FMA: Beekeeper Studio",
        "issueNumber": 30884,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb2dpg",
        "title": "Host Software API bugs: Allow listhostsoftware to only show installed software and hide installers",
        "issueNumber": 30188,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbpXk4",
        "title": "CI failing test: `TestTranslateCPEToCVE/find_vulns_on_cpes` (not flaky, constantly failing)",
        "issueNumber": 30118,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcVMug",
        "title": "Release QA: Fleetd 1.45.0",
        "issueNumber": 30601,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbim7o",
        "title": "Verify VPP: Mark VPP installs as failed when MDM gets turned off",
        "issueNumber": 29902,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiiW4",
        "title": "Release QA: 4.70.0",
        "issueNumber": 30049,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1s-s",
        "title": "Research for install / uninstall verification",
        "issueNumber": 29300,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcLw-M",
        "title": "Host counts don't update as part of vulnerabilities job if host_software table includes a row with software_id 0",
        "issueNumber": 30522,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcagK8",
        "title": "Setup Experience gets stuck when more than a few VPP app installs are included",
        "issueNumber": 30678,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbuZ1w",
        "title": "ü™≤If I add a VPP app for iOS and macOS, I can't add it to macOS Setup Experience",
        "issueNumber": 29506,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbimuk",
        "title": "Verify VPP: Implement interface for InstallApplicationCommand handler",
        "issueNumber": 29851,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbimzo",
        "title": "Verify VPP: Implement interface for InstalledApplicationListCommand hander",
        "issueNumber": 29852,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbioRs",
        "title": "FMA Test Automation Spec",
        "issueNumber": 30037,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1ioI",
        "title": "Fleet Desktop: Incorrect error states when token expires",
        "issueNumber": 28929,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1sZg",
        "title": "SentinelOne Automatic Policy For Install Is Not Pulling Correct Bundle Identifer",
        "issueNumber": 26597,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbinQY",
        "title": "Successful install refetch: Non-VPP software installs",
        "issueNumber": 29916,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga9nq4",
        "title": "ü™≤Microsoft Edge FMA fails to install on macOS",
        "issueNumber": 28466,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbeJGo",
        "title": "Release QA: 4.69.0",
        "issueNumber": 29419,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga2Az8",
        "title": "No global activity item is shown when a policy is automatically created during software installer add",
        "issueNumber": 28259,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbipgw",
        "title": "ü™≤Automated Fleet-maintained app update PR opens when nothing changes",
        "issueNumber": 28912,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbgqkI",
        "title": "Ensure [here] / [click here] link anchors don't creep back into Markdown on the website",
        "issueNumber": 30019,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiq44",
        "title": "ü™≤Missing file path for some Windows software",
        "issueNumber": 29449,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1shA",
        "title": "ü™≤500 error when searching for a software that does not exist",
        "issueNumber": 29197,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga7Ovc",
        "title": "Fleet UI: Banner padding and flex direction on Vuln page only",
        "issueNumber": 29578,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1sto",
        "title": "ü™≤Vulnerabilities are not pulled for Ubuntu 24.10 and 25.04",
        "issueNumber": 29345,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiq_U",
        "title": "Verify VPP: guide updates",
        "issueNumber": 29896,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbGDZM",
        "title": "Links on website have \"here\" and \"click here\" anchors",
        "issueNumber": 29720,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5XY",
        "title": "ü™≤Incorrect software title name (SU_TITLE) when uploading Avid Codecs",
        "issueNumber": 25588,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcbSkI",
        "title": "Vulnerabilities count mismatch for various macOS versions",
        "issueNumber": 29988,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcs0UM",
        "title": "Self service modal displays incorrect message for VPP install status",
        "issueNumber": 31003,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1sd4",
        "title": "Error when uploading  Google Workspace Sync for Outlook MSI",
        "issueNumber": 27522,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1tQ0",
        "title": "Self-service uninstall: FE",
        "issueNumber": 28845,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbiR7Q",
        "title": "Add version freezing to Fleet-maintained app (FMA) manifest updates",
        "issueNumber": 29218,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga9tz4",
        "title": "ü™≤Package edits to FMA software still indicate that the software is Fleet-maintained",
        "issueNumber": 28687,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcUXp4",
        "title": "Pagination limited to 5 apps when displaying software versions in Fleet UI",
        "issueNumber": 30393,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb98yM",
        "title": "Hashicorp Vault client vulnerability false positive (CVE-2015-5711)",
        "issueNumber": 30229,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgaxnrw",
        "title": "SHA-256 in vitals: FE",
        "issueNumber": 29439,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga9nZs",
        "title": "ü™≤Fleet maintained app Docker installs but reports as failed",
        "issueNumber": 27577,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbim3M",
        "title": "Verify VPP: DB migration",
        "issueNumber": 29830,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb3feM",
        "title": "ü™≤ Software URLs are not exported in `fleetctl generate-gitops`",
        "issueNumber": 29617,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbipnA",
        "title": "Tooltip issue while fetching host vitals",
        "issueNumber": 22796,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga1tBM",
        "title": "Vulnerable VPP apps are not returned when filtering by vulnerable software",
        "issueNumber": 29308,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbbDa8",
        "title": "Fleet UI: Not supported shouldn't look clickable",
        "issueNumber": 26765,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgckQ9g",
        "title": "Allow specifying (un)install scripts manually for Homebrew-based Fleet-maintained apps",
        "issueNumber": 30780,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb9EIw",
        "title": "Renamed homebrew cask fails silently in FMA",
        "issueNumber": 30338,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzga5E74",
        "title": "Spec/design: Ability to edit icon for custom packages uploaded to Fleet",
        "issueNumber": 29539,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgb7Ypc",
        "title": "Fleet-maintained apps do not persist or export their URL after being added via UI",
        "issueNumber": 30282,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbirk8",
        "title": "ü™≤Existing false-positive OVAL vulnerabilities for Amazon Linux 2 don't clear when upgrading to 4.56.0 goval-dictionary based scanning",
        "issueNumber": 21947,
        "changeType": "removed"
      }
    ]
  }
]