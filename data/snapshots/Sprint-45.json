[
  {
    "timestamp": "2025-07-28T23:39:54.88270301Z",
    "items": [
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin managing software via GitOps,\n| I want to override FMA install/uninstall scripts\n| so that I can customize the install/uninstall behavior.\n\n## Key result\n\n- Auto-update (patch) any software without writing custom policies\n- Customer request\n\n## Original requests\n\n- #21825\n\n## Context\n- Product designer: @iansltx  \n- Engineering: @iansltx  \n\n## Changes\n\n### Product\n- [x] UI changes: No changes\n- [x] CLI (fleetctl) usage changes: No changes (we'll make changes in GitOps code that lives in fleetctl, but nothing in the CLI interface changes not covered by YAML)\n- [ ] YAML changes: #30826\n- [x] GitOps generation changes: No changes; FMAs are currently generated as custom packages with URLs, with install/uninstall/pre-install/post-install specified, and switching generated YAML to use FMA slugs is out of scope of this story.\n- [x] REST API changes: No changes to public API endpoints\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] Changes to paid features or tiers: Software is Fleet Premium\n- [x] Transparency changes: No changes\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor endpoint for uploading custom packages + FMAs no longer overrides install/uninstall scripts when a slug is supplied and install/uninstall scripts are supplied\n- [ ] Add pre-install query, install/uninstall/post-install scripts to fields recognized when deserializing FMA YAML, pass to batch software endpoint\n\nNOTE: There are no contributor API docs changes for this story because the requisite fields already exist on the batch payload.\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n1. Create a YAML file with all four new fields added. Apply the YAML. Confirm that the FMA in the UI reflects all fields.\n2. Remove all but the install script, revise the install script, and re-apply. Confirm that the FMA in the UI blanks out pre-install query/post-install script, revises the install script, and reverts to the manifest version of the uninstall script.\n3. Remove the install script field in YAML and re-apply. Confirm that the FMA in the UI reverts to the manifest version of the install script.\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 25636,
          "repository": "fleetdm/fleet",
          "title": "GitOps: Override Fleet-maintained app install/uninstall scripts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25636"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoeo",
        "labels": [
          "story",
          ":release",
          "customer-schur",
          "customer-eponym",
          "customer-easterwood",
          "customer-numa",
          "customer-mozartia",
          "customer-gispen",
          "customer-fourier",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "üê£ In progress",
        "title": "GitOps: Override Fleet-maintained app install/uninstall scripts",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reviewing the #25499 recording from yesterday, the topic came up of what is/isn't editable for FMAs in the Edit UI.\n\nThinking that now that we have install scripts for FMAs on GitHub, and those scripts can be pushed as part of an FMA update as of this ticket, we remove editability for install and uninstall scripts in particular. If we got something wrong, we can link users to the FMA slug to suggest a change. This has the side effect of notifying us when we have something wrong, versus an IT admin performing a one-off fix that we don't know anything about.\n\nPost-install script and pre-install query would stay editable since we don't have defaults for either.\n\nIf we need an escape hatch, we can offer admins the ability to unlink the package from being Fleet-maintained, at which point it behaves as a custom package (and we'd switch any Fleet-maintained policies to \"you're on your own for this\" mode at the same time). If an admin wants to opt back into us maintaining the package, they can delete/re-add, which is relatively low-effort since we're handling the heavy parts of config."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review today, we'll keep all scripts editable, and overwrite them when we import a new FMA version."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Self-assigning this to give @jahzielv more room this sprint."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman @eugkuo this was requested by `customer-numa` yesterday.  I think we should prioritize this in the next design sprint.\n\nCC: @zayhanlon @ddribeiro "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo during feature fest, we decided to come back to this in a future design sprint. Prioritizing other work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One tricky bit on FMA updates is for (un)install scripts where the script needs to be modified by the IT admin to e.g. add a license key as an argument to a vendor-supplied install script. Idea is that these actions can't be performed in a post-install script (which we don't manage with FMAs), so an IT admin would need to munge the install script, and on an update of the app we'd need to either give them a heads-up or incorporate their changes.\n\n@mostlikelee you mentioned that this is already an issue with Cloudflare WARP for a license key or similar. Do you have docs on that? I saw #24216 and [Cloudflare's manual deployment docs](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/manual-deployment/), but the former doesn't appear to be configurable via the CLI, and the latter references a CLI that could be included in a post-install script (similar to what we see with SentinelOne configuration).\n\nSo either I'm missing something or there's probably a better example out there of install/uninstall (not post-install) scripts that would need to be tweaked by an IT admin after an FMA is imported, and we can use that example to determine how we can reasonably persist config across FMA updates (e.g. via extra env vars)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman the customer ask here is to manage this via gitops to support the following workflow:\n1. customer updates app to latest version on canary team\n2. customer deploys app to hosts on canary team\n3. customer tests app on canary team\n4. customer deploys app to production team\n\nMy proposal:\n\n1. Add a `version` field to FMAs:\n```\nfleet_maintained_apps:\n    - slug: zoom/darwin\n      self_service: true\n      version: 1.0.1\n      categories:\n        - Productivity\n```\n\n2.  Add an option to bump versions in gitops config:\n\nbump all apps in file:\n```\nfleetctl gitops --bump-fma -f canary.yml\n```\nbump one app in file:\n```\nfleetctl gitops --bump-fma --app zoom/darwin -f canary.yaml\n```"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@allenhouchins what do you think ^"
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "@noahtalerman I added a note for us to start with this at tomorrow's unpacking meeting. "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee just chatted with @allenhouchins and we think the IT admin expectation is that Fleet, on each GitOps run, will just update any out-of-date Fleet-maintained apps.\n\nMeaning, we think we don't want to add any new keys as part of this story. When we ship this improvement, Fleet's Fleet-maintained apps should update without updating the [`it-and-security/` YAML](https://github.com/fleetdm/fleet/blob/main/it-and-security/teams/workstations.yml).\n\nThe best practice for the staged rollout will be to update the canary team's automatic install policy first and then the production team's policy after things look good.\n\nCheck out the \"Unpacking the why\" recording from 2025-06-24 for more context."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Flagging the suggested behavior as a BC break from the previously decided implementation. Existing impl doesn't change FMAs once they've been uploaded, and we intentionally opted into that when we spec'd FMAs-in-GitOps the first time.\n\nAdding `version: latest` as an opt-in for the logic you're describing resolves the BC break."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e the suggested behavior as a BC break from the previously decided implementation\n\n@iansltx that's ok. I think we want to be brave here and update the default behavior now that we understand what the IT admin expects.\n\nThat's why we marked these features as experimental!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Given this change in expected development for this story, does it still make sense to lump script edits in here? At this point those changes are orthogonal to what we'd need to do to switch from \"never update if the FMA is already in the library\" to \"always update.\"\n\nIf script override ability was discussed and determined to be required as part of this behavior change in Unpacking the why, fair enough, though without that scope this story is nearly spec-complete."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e The best practice for the staged rollout will be to update the canary team's automatic install policy first and then the production team's policy after things look good.\n\nHere is a scenario that may occur if we don't support version pinning:\n1. Prod team is currently getting patched to MyApp v1.0 via policy (rule: install if version less than 1.0)  \n2. MyApp v2.0 is added to canary team\n3. MyApp 2.0 is deployed to canary team via policy (rule: install if version less than 2.0) and tests successfully\n4. MyApp updated to 3.0 in FMA catalog\n5. Cannot add 2.0 to prod because it's no longer available in FMA catalog.  MyApp 3.0 cannot be deployed to prod because it's not tested.\n6. Gitops updates MyApp to 3.0 in canary\n7.  Wait for 3.0 to finish deploying again to canary team\n8.  GitOps run updates app to 4.0\n9.  etc... customer can never deploy to prod because canary is updating too frequently\n\nOne workaround here is to not run GitOps unless you plan on bumping FMA versions, but this will block other GitOps runs that have other intentions.\n\nAnother option could be to support a flag that does not bump FMAs (ie.  `fleetctl gitops --no-fma-updates`)\n\n@noahtalerman @allenhouchins \n "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e does it still make sense to lump script edits in here? At this point those changes are orthogonal to what we'd need to do to switch from \"never update if the FMA is already in the library\" to \"always update.\"\n\n@iansltx I think we want to keep the script edits as part of this story for now. At least during drafting. Why? To think a bit broader. I don't think we've fully thought through the world in which Fleet-maintained apps are updated but some apps have scripts that are overridden. \n\nDoes Fleet update the package for those apps but leave the scripts alone? I'm thinking probably but worth discussing and putting ourselves in `numa`'s shoes before deciding.\n\nThen, once the designs are settled then we can decide to split it up.\n"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Here is a scenario that may occur if we don't support version pinning\n\nI understand what you're saying @mostlikelee. \n\nI still think we want to update the default behavior to match IT admin expectations: that Fleet, on each GitOps run, will update any out-of-date Fleet-maintained apps.\n\nYou're thinking about the version pinning (version ceiling) problem. I think we want to solve that too."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Re: updating packages but leaving scripts alone, unless scripts are being explicitly provided we _wouldn't_ want to take that route, because:\n\n1. If we find a bug in our (un)install scripts, we want to be able to broadcast the fix to that bug aloneside other maintained app updates, vs. requiring admins to take manual action. The ability to push bugfixes on scripts was a big reason for the rearchitecture of Fleet-maintained apps that landed in v4.66.\n2. As versions of software get bumped, sometimes what counts as the correct (un)install script changes, so if we bump the software package but not the associated scripts we'll wind up delivering a broken (un)install. Currently, \"sometimes\" is \"all the time\" for MSI uninstall scripts, since we use ProductCode for uninstalls there; without bumping scripts alongside installer packages, as soon as a maintained app's version is bumped the associated uninstall script will silently stop working.\n\nOf the above, reason 2 will come up more often."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Re: updating packages but leaving scripts alone, unless scripts are being explicitly provided we wouldn't want to take that route\n\n@iansltx I think we're saying the same thing!\n\nTo rephrase [my comment above](https://github.com/fleetdm/fleet/issues/25636#issuecomment-3002016399), I think Fleet always updates/fixes scripts if they're not explicitly provided.\n\nFleet only leaves scripts along, but updates packages, if scripts are explicitly provided."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@iansltx given the change in scope above, do you think the tshirt size is still an `M`?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee With revised scope, inclusive of adding script overrides (plus post-install script and pre-install query) this feels like at/just above XS. Hard to call this an S tee-shirt size because S is ~3x the size of XS and swapping default plus adding the requisite gitops params isn't going to take a whole dev-sprint."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we don't think we'll have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Customer feedback:\n\nCan the update mechanism run server side instead? Updating FMAs only during gitops runs will impact processes and how we think about gitops.  ie.  if you want to ensure FMAs update 1x/hr you have to schedule gitops runs (with no yaml changes) at that frequency.\n\ncc: @kennyb-222 "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "updated the title as this ability already exists for custom packages"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on https://github.com/fleetdm/fleet/issues/27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time (and, with the reduction in scope of this story due to FMAs already being bumped on each GitOps run, T-shirt size is more like an XS, so it's rather easy to fit in). Happy to help get this ready, as the correct scope of work here (we're also missing post-install script and pre-install query) is covered in #30250."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica I believe the above may be ready for User Story Review, depending on your thoughts on the product part of the story description, plus answers to the below questions:\n\n1. Do we want to allow specifying FMA details in a separate file, similar to software packages? I'm assuming not in the YAML PR. If we _do_ want that option, do we want to deprecate the current inline option like we did for software packages, or do we want to keep it since the common case would involve specifying slug, self-service, and nothing else?\n2. Do we want to include pre-install query/post-install script as part of this work? I assumed that we do.\n\nOne caveat: 4.71 docs are out of date with `main` and have conflicts, and my bet is that 4.73 docs are even further behind. Let me know when the 4.73 docs branch is caught up with main/4.71/4.72 and I'll re-roll the YAML PR as needed. It's ready for review as-is (/cc @rachaelshaw) but I expect I'll need to re-roll it, as if I recall correctly the software YAML docs have changed a fair amount recently. The anticipated re-roll won't change the semantics of specified behavior though, so the embedded product decisions can be reviewed now, and exact verbiage can be dialed in post-reroll."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx This looks good to me! Let's review it once more with Noah today during design review, and I think we can move it to the user story review after that."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Async User Story Review signoffs:\n\n- [x] @mostlikelee \n- [x] @jmwatts "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Just one thing from the test plan:\n\u003e Create a YAML file with all four new fields added\n\nthere are only 3 based on the yaml PR, which is correct?\n\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee\n\n1. install script\n2. Uninstall script\n3. Pre-install query\n4. Post-install script"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The YAML PR mentions pre-install query in the description but not the example, matching what we're doing elsewhere."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a user of vulnerability management,\n| I want to see fixed false-positive vulnerabilities cleared as soon as I finish a vulnerabilities cron run\n| so that I can quickly see the results of fixed false-positives.\n\n## Key result\n\nPreventing erroneous customer bug report noise where the solution is \"wait for vulnerabilities to run a few more times\" and speeding up dev/QA of functionality touching vulnerabilities.\n\n## Context\n- Product designer: @iansltx  \u003c!-- Who is the product designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n\nOriginally filed as bug #25898, to both mitigate QA overhead for vulnerability fixes and avoid customer back-and-forth e.g. #25571.\n\n## Changes\n\n### Product\n- [x] First draft of test plan added\n- [ ] Other reference documentation changes: Last paragraph of [this section of the vulnerabilities article](https://fleetdm.com/guides/vulnerability-processing#coverage)\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Revise `DeleteOutOfDateVulnerabilities` and `DeleteOutOfDateOSVulnerabilities` in the datastore to clear vulnerabilities updated before a set timestamp, rather than by a lookback period\n- [ ] Get the current time right before `checkNVDVulnerabilities` is called in `scanVulnerabilities` in `cron.go` (probably directly from the database to avoid clock skew issues between app servers and the database) and pass that to the modified `DeleteOutOfDate*Vulnerabilities` calls\n- [x] Test plan is finalized\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\n### Test plan\n\n1. Introduce a false positive vulnerability (e.g. by reverting a previous false positive fix in the CPE matching rules JSON file).\n2. Run vulnerability scanning.\n3. Confirm that the false positive shows up.\n4. Fix the false positive.\n5. Run vulnerability scanning again.\n6. Confirm that the false positive no longer shows up.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 26404,
          "repository": "fleetdm/fleet",
          "title": "Clean up timing for clearing stale false-positive vulnerabilities",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26404"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCo1s",
        "labels": [
          "story",
          ":release",
          "~engineering-initiated",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Clean up timing for clearing stale false-positive vulnerabilities",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Thanks for following the new [engineering-initiated process](https://fleetdm.com/handbook/engineering#create-an-engineering-initiated-story). This sounds like a good value add effort, so I'm prioritizing for drafting and assigning you as the product designer to complete the [draft an engineering-initiated story](https://fleetdm.com/handbook/engineering#draft-an-engineering-initiated-story) process."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This actually looks product-complete, so pulling into User Story Review."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Note that per the eng-init section of the handbook, irrelevant product checkboxes were deleted from the issue description."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx One thing I'm not clear on from this ticket is what is the current state? How long does it currently take for the false positive to clear?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Current state is two hours. See\n\nhttps://github.com/fleetdm/fleet/blob/33a703920378a7084319da99a5af5c52a1cff6a2/articles/vulnerability-processing.md?plain=1#L28\n\n(I have a PR to fix the typo there)\n\nwhich maps to this code:\n\nhttps://github.com/fleetdm/fleet/blob/33a703920378a7084319da99a5af5c52a1cff6a2/server/vulnerabilities/nvd/cve.go#L326-L336"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Got it. And currently the Fleet cron runs hourly, so this change will take it from up to two hour to up to one hour? "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath (sorry, misunderstood your comment, one moment)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath With this revision, the vulns run after a false positive is fixed would correct the issue. Via cron, that would happen every hour, but you could make it happen more quickly by triggering the job manually."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/26404?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@lukeheath chatted with @mostlikelee and decided to deprioritize this one. We want to get to customer requests first and we need to make some room."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "```go\nnumberOfTimesExistingStaleVulnHandlingIncreasedFrictionOnVulnManagementWork++\n```\n\nFor #28983.\n"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "yeah I forgot about that this morning: https://fleetdm.slack.com/archives/C086V2QK76X/p1747311488652479"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Ready for async User story review. Whoever signs off on this last, please move this directly to \"Ready for estimate\" and start Planning Poker, as this one's already spec-complete.\n\n- [x] @mostlikelee \n- [x] @jmwatts (you checked the \"test plan finalized\" box back on April 8, and the test plan hasn't been modified since, so...should be good here?)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx yes this one should be good"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753214019845799)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tested this by inserting an extra `software_cve` entry pointed at a combination of existing CVE and existing software (but a CVE that didn't actually apply to that software), with NVD as the source ID, then ran the cron. Existing vulns stuck around, but my manually inserted false positive didn't. Still traverses the relevant code paths, but took less time to verify."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n4.70.1\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe customer added a software installer with install/uninstall scripts that used Fleet secrets. The secrets were present as gitops env variables, but dry run failed.\n\n\u003cimg width=\"2350\" height=\"1254\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a4aaca6e-277b-4152-9e97-516ea347fbce\" /\u003e\n\nThe workaround is to use contributor API to add dummy secrets: https://github.com/fleetdm/fleet/blob/main/docs/Contributing/reference/api-for-contributors.md#store-secret-variables\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Create software installer with install/uninstall scripts with secrets.\n2. Make sure the secrets are NOT saved in the Fleet DB `secret_variables`\n3. Run gitops dry run.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30853,
          "repository": "fleetdm/fleet",
          "title": "Unable to apply software installers with Fleet secrets via GitOps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30853"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "#g-software",
          "prospect-coppelia"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Unable to apply software installers with Fleet secrets via GitOps",
        "comments": [
          {
            "author": {
              "login": "getvictor"
            },
            "body": "@mostlikelee I believe this is a P1 since this feature is broken right now. However, I've marked it a P2 since customer was OK waiting until 4.73 for the fix.\n\n@harrisonravazzolo Please add the customer label since I couldn't find it."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752521340977199"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "To track carry over work",
          "number": 31334,
          "repository": "fleetdm/fleet",
          "title": "FMA automation carryover",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31334"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdC06A",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "Done",
        "title": "FMA automation carryover"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.70 RC\n\nSpotted in dogfood logs from June 27 2025, so probably not running the final released build\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSaw the following message while reviewing dogfood logs with @MagnusHJensen . Also saw similar errors for installers 6189 and 6190.\n{\"component\":\"uninstall_software_migration\",\"cron\":\"uninstall_software_migration\",\"err\":\"unsupported file type\",\"level\":\"warn\",\"msg\":\"extracting metadata from installer\",\"software_installer_id\":6187,\"storage_id\":\"72b23a02f937043caa03ebf88b83a2651249b68c00590d13dd835bcd73d46dd7\",\"ts\":\"2025-06-27T21:34:33.733540456Z\"}\n\nThese installers represent the following apps:\n6187 Brave-Browser-arm64.dmg 1.79.126.0 \n6189 Docker.dmg 4.42.1\n6190 MicrosoftEdge-137.0.3296.93.dmg\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Upload a variety of package types\n2. Run `fleetctl trigger --name uninstall_software_migration` and watch the logs for warnings\n\n### üïØÔ∏è More info _(optional)_\nLink to relevant slack thread: https://fleetdm.slack.com/archives/C071NNMSP2R/p1751552544401869\nThe following log insights query will find them:\n```\nfields @timestamp, @message, @logStream, @log\n| filter ispresent(error) or ispresent(err) or level = 'error'\n| filter @message like /uninstall_software_migration/\n| filter level != 'debug'\n| filter level != 'info'\n| sort @timestamp desc\n| limit 10000\n```\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30565,
          "repository": "fleetdm/fleet",
          "title": "Warning from uninstall_software_migration cron: unsupported file type",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30565"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCos4",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Warning from uninstall_software_migration cron: unsupported file type",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced. Had many installers uploaded to my fleet instance. Ran `fleetctl trigger --name uninstall_software_migration` and observed the following output:\n\n\n```\nlevel=debug ts=2025-07-07T15:20:22.899346Z component=http user=admin@fake.com method=POST uri=\"/api/latest/fleet/trigger?name=uninstall_software_migration\" took=8.484917ms\nlevel=debug ts=2025-07-07T15:20:22.90024Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=\"done, trigger received\"\nlevel=info ts=2025-07-07T15:20:22.915365Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" status=pending\nlevel=debug ts=2025-07-07T15:20:22.915439Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=starting jobID=uninstall_software_migration\nSDK 2025/07/07 10:20:22 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nlevel=warn ts=2025-07-07T15:20:24.777168Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=543 storage_id=no_check err=\"unsupported file type\"\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nlevel=warn ts=2025-07-07T15:20:25.682907Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=544 storage_id=no_check err=\"unsupported file type\"\nlevel=warn ts=2025-07-07T15:20:28.107299Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=545 storage_id=3ccb062c081bd7ac5b8a9183ebb6a52cfd6046411e6d51a89f12e132b6672f63 err=\"unsupported file type\"\nlevel=warn ts=2025-07-07T15:20:28.308374Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=547 storage_id=67dfa6f184794373a490d5d7ae1ae00b5db80d710c946f8be1ee210d12e54a05 err=\"unsupported file type\"\nlevel=info ts=2025-07-07T15:20:28.314756Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" status=completed\nlevel=debug ts=2025-07-07T15:20:28.317486Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=\"23h55m27.682518s remaining until next tick\"\n```\n\n\nThose ids correspond to:\n```\nmysql\u003e select id, filename, extension from software_installers where id in (543, 544, 545, 547);\n+-----+----------------------------------------+-----------+\n| id  | filename                               | extension |\n+-----+----------------------------------------+-----------+\n| 543 | googlechrome.dmg                       | dmg       |\n| 544 | googlechromestandaloneenterprise64.msi | msi       |\n| 545 | AcroRdrDC_2500120529_MUI.dmg           | dmg       |\n| 547 | nice-dcv-viewer-2024.0.8004.arm64.dmg  | dmg       |\n+-----+----------------------------------------+-----------+\n4 rows in set (0.01 sec)\n```\n\nI noticed earlier occurrences of this in my logs as well, those packages corresponded to:\n```\n+-----+--------------------------------+-----------+\n| id  | filename                       | extension |\n+-----+--------------------------------+-----------+\n| 341 | A+ Suite for Mac_sign.pkg      | pkg       |\n| 342 | AcrobatUpd10116.pkg            | pkg       |\n| 343 | AddWindowsExplorerShortcut.exe | exe       |\n| 345 | Airtame.pkg                    | pkg       |\n| 346 | AutodeskFusion-005.pkg         | pkg       |\n| 347 | AutoPkg-2.7.3.pkg              | pkg       |\n| 348 | AWS VPN Client.pkg             | pkg       |\n| 349 | AWS_VPN_Client.msi             | msi       |\n| 351 | BoxDrive.pkg                   | pkg       |\n| 353 | cli-arm64.exe                  | exe       |\n| 354 | cli.exe                        | exe       |\n| 355 | CloudflareWARP.pkg             | pkg       |\n| 358 | Egnyte Connect-3.14.18.pkg     | pkg       |\n| 360 | Elmedia Player-8.22.pkg        | pkg       |\n+-----+--------------------------------+-----------+\n```\n\nSo, not certain this is related to a specific package type. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts FWIW `no_check` in the DB was a different issue (fixed in 4.71 or 4.72; we shouldn't have anything with a storage ID of `no_check`). Other errors were likely because the DB had software in it that wasn't in object storage. Fix I just PR'd fixed the original issue; the other ones look to be environmental to your local and/or resolved elsewhere already."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "merged before kickoff, so i'm assigning this to sprint 44.  will do the same next sprint so it's consistent."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "changing my mind here. this wont actually affect the burndown chart.  moving back to 45"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#27983\n\n## Task\n\nWrite a feature guide for self-service updates, linked from [the existing self-service guide](https://fleetdm.com/guides/software-self-service). We'll want the extra space of a full guide to walk through how we determine what shows up for updates I think, versus adding update references as a subheading for the existing article.\n\nCriteria are in Figma dev notes + [the self-service update flowchart](https://drive.google.com/file/d/1dtCo-CzVIcJkk1GIDHMKflqu6mSNyzfw/view?usp=sharing)\n\n## Condition of satisfaction\n\nGuide is written and merged into the appropriate release docs branch.",
          "number": 29914,
          "repository": "fleetdm/fleet",
          "title": "Self-Service Updates: Guide/Docs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29914"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX120",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "Self-Service Updates: Guide/Docs"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "number": 31319,
          "repository": "fleetdm/fleet",
          "title": "Eng DRI: Custom Icons",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31319"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnk8",
        "labels": [
          ":release",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "üê£ In progress",
        "title": "Eng DRI: Custom Icons"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738.\n\n## Task\n\nImplement the specified API so that vulnerabilities show up in the OS list endpoint for Linux hosts, and kernels show up on the OS entity endpoint, with host counts reflecting only hosts with that combination of OS and kernel software (filtering out hosts with the same kernel software but a different OS version).\n\nThis includes validating which software packages correspond to kernels on all supported Linux distributions, adding an is-kernel flag on software titles, populating the flag on software ingestion, and setting up the flag when running the database migration.\n\nPotentially helpful query:\n\n```\nSELECT DISTINCT software_cve.cve\nFROM software_cve\nJOIN software ON software.id = software_cve.software_id\nJOIN software_titles ON software_titles.id = software.title_id AND software.is_kernel = TRUE\nJOIN host_software ON host_software.software_id = software.id\nJOIN host_operating_system ON host_operating_system.host_id = host_software.host_id\nJOIN operating_systems ON operating_systems.id = host_operating_system\nWHERE [operating system query]\n```\n\n## Condition of satisfaction\n\nAPI responses are available, in unoptimized form; data should be pulled in realtime via a bunch of joins; optimization is its own subtask.\n\nInventorying kernels that we don't already see in software inventory via revised detail queries is out of scope, though if we can't get kernel information for an OS, document it on the parent issue.\n\n- [ ] Database schema migrations: Add an is_kernel column to software_titles and populate as appropriate for all supported Linux distributions (test with a VM for each; kernels won't show up in containers). Going forward, is_kernel should be set when a software title is created.",
          "number": 31213,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: API changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31213"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoc",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "üê£ In progress",
        "title": "Linux Vulns: API changes",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962030809)"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nWinGet based Chrome FMAs refer to a non-versioned download URL, so the latest version of Chrome gets downloaded rather than the version specified in the manifest we pulled. This means that the hash of the installer won't match if we don't immediately detect and merge an update to the installer in our own manifests, if we specify a hash. #27755 avoids this by dropping hash checking there as well, but this means that we don't verify that the installer downloaded matches the one we expected.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Point to a non-current Chrome Windows FMA manifest with a hash specified (anything at or earlier than April 1 ~3pm CDT).\n2. Attempt to add the Chrome Windows FMA.\n\n### üõ†Ô∏è To fix\n\nEXE versions of Chrome are available that include version in the URL. Tradeoff is those EXEs will need a custom install script, and may not include an UpgradeCode for building a version-agnostic uninstall script.",
          "number": 27756,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Windows Chrome FMAs don't have hashes specified in manifests",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27756"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6m4",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Windows Chrome FMAs don't have hashes specified in manifests",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Need to decide on a desired fix here. Only thing I'm sure about on my estimate is doing this for Windows, and I'm adding padding for macOS."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27756?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per discussion yesterday, split off the macOS work; this is now a Windows-only ticket, and was already estimated as such."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n- [x] Chrome can be added to library as FMA\n- [x] Chrome is added as .exe file, version 138.0.7204.158\n- [x] Chrome installs successfully on Windows host\n- [x] Chrome launches successfully\n- [x] Chrome uninstalls successfully on host\n- [x] Activity items are created"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Latest on dogfood\n\n**Web browser and operating system**: Any\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe default uninstall script that Fleet provides for msi custom packages, executes correctly (uninstalls the software) but outputs the following error:\n`script execution error: exec: WaitDelay expired before I/O complete`\n\nThis is because the command to execute the uninstall is not finishing before the script attempts to post the exit code and exit the script. \n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload an msi custom package\n2. Install the software\n3. Run the uninstall script and observe the error\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\n\n\u003cimg width=\"759\" height=\"405\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/98b5e423-6729-44fb-bf9b-447e5d94865d\" /\u003e\n\n ### üõ†Ô∏è To fix ",
          "number": 31077,
          "repository": "fleetdm/fleet",
          "title": "Fleet provided uninstall script for msi custom packages works but outputs errors",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31077"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcz8Es",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Fleet provided uninstall script for msi custom packages works but outputs errors",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Self-assigning this and pulling it onto the software release board as this interacts with #27758. Will set up a separate PR for FLeet-maintained apps, which will need this same fix, so there's less that needs to be QA'd on-branch."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Moving to In review because there are two PRs and one hasn't yet been approved, even though the whole thing has been QA'd."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Both PRs are merged. FMA updates (for Box/WARP) are now live. Custom package updates will be live in 4.72.0 alongside the other uninstall improvements."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSoftware shows in Inventory tab even though it has not been installed \n\n\u003cimg width=\"1482\" height=\"581\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bc8ccb34-503b-4421-b145-e34db2e9541d\" /\u003e\n\u003cimg width=\"1485\" height=\"623\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0c4c5159-d175-434b-83e1-f01c464f2391\" /\u003e\n\nThe software also shows in My device \u003e\u003e Software tab\n\n\u003cimg width=\"1143\" height=\"675\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3769f882-99f2-46c1-84b6-5c316cbdf730\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add software to the team's library\n2. From the Host record \u003e\u003e Software \u003e\u003e Library tab, click Install\n3. Before the software has been installed (or after a failed install) go to the Host record \u003e\u003e Software \u003e\u003e Inventory tab\n\n\n### üïØÔ∏è Expected behavior\nSoftware should not show on the Inventory tab unless it is installed on the host. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30747,
          "repository": "fleetdm/fleet",
          "title": "Pending and failed software installs show in Host \u003e\u003e Software \u003e\u003e Inventory tab",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30747"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdwYg",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Pending and failed software installs show in Host \u003e\u003e Software \u003e\u003e Inventory tab",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "changing the status to a released bug as we can duplicate this behavior in the API on an earlier version.  because this bug is now a lot more prominent after UI changes, we are prioritizing this for 4.72.0"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocked until we discuss API changes on Friday"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed software is no longer showing when:\n- It is not currently installed on the host\n- It is pending install or it has failed the install\n\nChecked both in the Self service software tab and on the Host \u003e\u003e Software \u003e\u003e Inventory tab"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.65.0\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nAPI call:\n`\n/api/latest/fleet/vulnerabilities?team_id=8\u0026order_key=hosts_count\u0026order_direction=desc\u0026page=0\u0026per_page=20\u0026exploit=true\u0026query=202`\n(Yes, 202 is the query, I was going for a year and just typed 202)\n\nAPI returning:\n```\n{\n  \"vulnerabilities\": [\n    {\n      \"cve\": \"CVE-2024-44308\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-44308\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.0549,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-11-20T00:15:00Z\",\n      \"cve_description\": \"The issue was addressed with improved checks. This issue is fixed in Safari 18.1.1, iOS 17.7.2 and iPadOS 17.7.2, macOS Sequoia 15.1.1, iOS 18.1.1 and iPadOS 18.1.1, visionOS 2.1.1. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited on Intel-based Mac systems.\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-24201\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-24201\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.00206,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-03-11T18:15:00Z\",\n      \"cve_description\": \"An out-of-bounds write issue was addressed with improved checks to prevent unauthorized actions. This issue is fixed in visionOS 2.3.2, iOS 18.3.2 and iPadOS 18.3.2, macOS Sequoia 15.3.2, Safari 18.3.1. Maliciously crafted web content may be able to break out of Web Content sandbox. This is a supplementary fix for an attack that was blocked in iOS 17.2. (Apple is aware of a report that this issue may have been exploited in an extremely sophisticated attack against specific targeted individuals on versions of iOS before iOS 17.2.).\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-03-12T14:06:31Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-24085\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-24085\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.07839,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-01-27T22:15:00Z\",\n      \"cve_description\": \"A use after free issue was addressed with improved memory management. This issue is fixed in visionOS 2.3, iOS 18.3 and iPadOS 18.3, macOS Sequoia 15.3, watchOS 11.3, tvOS 18.3. A malicious application may be able to elevate privileges. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 17.2.\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-01-28T15:26:19Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23222\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23222\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.00132,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-01-23T01:15:00Z\",\n      \"cve_description\": \"A type confusion issue was addressed with improved checks. This issue is fixed in iOS 17.3 and iPadOS 17.3, macOS Sonoma 14.3, tvOS 17.3. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23296\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23296\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.05242,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-03-05T20:16:00Z\",\n      \"cve_description\": \"A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23225\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23225\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.05242,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-03-05T20:16:00Z\",\n      \"cve_description\": \"A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 16.7.6 and iPadOS 16.7.6, iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-23397\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-23397\",\n      \"cvss_score\": 9.8,\n      \"epss_probability\": 0.93567,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-03-14T17:15:00Z\",\n      \"cve_description\": \"Microsoft Outlook Elevation of Privilege Vulnerability\",\n      \"hosts_count\": 8,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:53Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-35311\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-35311\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.24384,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-07-11T18:15:00Z\",\n      \"cve_description\": \"Microsoft Outlook Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 8,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:56Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-38226\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-38226\",\n      \"cvss_score\": 7.3,\n      \"epss_probability\": 0.70819,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-09-10T17:15:00Z\",\n      \"cve_description\": \"Microsoft Publisher Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 7,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:57Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-36761\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-36761\",\n      \"cvss_score\": 6.5,\n      \"epss_probability\": 0.79089,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-09-12T17:15:00Z\",\n      \"cve_description\": \"Microsoft Word Information Disclosure Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:53Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-38189\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-38189\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.87181,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-08-13T18:15:00Z\",\n      \"cve_description\": \"Microsoft Project Remote Code Execution Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:54Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-21413\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-21413\",\n      \"cvss_score\": 9.8,\n      \"epss_probability\": 0.92563,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-02-13T18:16:00Z\",\n      \"cve_description\": \"Microsoft Outlook Remote Code Execution Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:55Z\"\n    },\n    {\n      \"cve\": \"CVE-2021-42292\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2021-42292\",\n      \"epss_probability\": 0.55708,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2021-11-10T01:19:00Z\",\n      \"cve_description\": \"Microsoft Excel Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:55Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-44487\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\",\n      \"cvss_score\": 7.5,\n      \"epss_probability\": 0.91023,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-10-10T14:15:00Z\",\n      \"cve_description\": \"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-44309\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-44309\",\n      \"cvss_score\": 6.1,\n      \"epss_probability\": 0.00954,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-11-20T00:15:00Z\",\n      \"cve_description\": \"A cookie management issue was addressed with improved state management. This issue is fixed in Safari 18.1.1, iOS 17.7.2 and iPadOS 17.7.2, macOS Sequoia 15.1.1, iOS 18.1.1 and iPadOS 18.1.1, visionOS 2.1.1. Processing maliciously crafted web content may lead to a cross site scripting attack. Apple is aware of a report that this issue may have been actively exploited on Intel-based Mac systems.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-22226\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-22226\",\n      \"cvss_score\": 6,\n      \"epss_probability\": 0.08037,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-03-04T12:15:00Z\",\n      \"cve_description\": \"VMware ESXi, Workstation, and Fusion contain¬†an information disclosure vulnerability due to an out-of-bounds read in HGFS.¬†A malicious actor with administrative privileges to a virtual machine may be able to exploit this issue to leak memory from the vmx process.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-03-05T15:25:02Z\"\n    }\n  ],\n  \"count\": 22,\n  \"counts_updated_at\": \"2025-03-27T17:06:29Z\",\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}\n```\nNote the count says 22, but there's only 16 CVEs\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to Software \u003e Vulnerabilities tab \u003e Add those same filters above, look at count mismatching the vulns\n2. Here's an example: it's showing a count of 100 but there's only 14. https://dogfood.fleetdm.com/software/vulnerabilities?exploit=true\u0026query=2025\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nShow correct vulnerability count.",
          "number": 27580,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Software vuln count off",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27580"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7do",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Software vuln count off",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27580?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced in 4.65.0, updated Fleet version"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Note: QA Wolf reported this as well with #28459\n\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee @eugkuo @RachelElysia is this one relatively easy to fix? This is blocking a QA Wolf test and would be great to have it fixed if we can fit it in. Thanks!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts This is is backend FWIW, and probably not something super obvious on the backend. I _might_ be able to take this later in the sprint (can put it at the top of the Estimated column) but I figure the solution for this won't be trivial."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thanks @iansltx "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Confirmed the fix by grabbing a copy of the Dogfood DB and running the vulns list endpoint call against it. Pre-fix I was getting an artificially high count. After the fix I got a count that matched the number of rows (one per CVE) returned.\n\nIssue was one of deduplicating rows. Specifically, if a CVE got reported at different times or from different sources we'd get multiple entries. For example, a cross-platform CVE that was reported via OVAL for Linux and NVD for macOS, or a CVE that affected multiple pieces of software, where a host installed a new piece of affected software after the CVE was first found."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nTested a number of different combinations of filters and search terms and confirmed that all counts are now correct."
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "\n### Requestor\n\n- Application name: Yubikey Manager\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30739,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Yubikey manager",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30739"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdkTI",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: Yubikey manager",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"362\" height=\"126\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1daf41fb-0ab0-4db6-b383-297e4afdf4c2\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: iTerm2\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30724,
          "repository": "fleetdm/fleet",
          "title": "New FMA:  iTerm2",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30724"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdAFs",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA:  iTerm2",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"355\" height=\"131\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/29f22707-2e02-46c6-981f-fb23ccf38d2b\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "\n### Requestor\n\n- Application name: Beyond Compare\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30727,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Beyond Compare",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30727"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdLoc",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: Beyond Compare",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @mostlikelee is this targeted for 4.72? Just noticed we're missing a milestone so I added 4.72. Please feel free to update it."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"366\" height=\"123\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1551207a-82f3-4eb6-88b2-7183429cfed3\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: VNC Viewer\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30802,
          "repository": "fleetdm/fleet",
          "title": "New FMA: VNC Viewer (macOS)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30802"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcgftg",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: VNC Viewer (macOS)",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"353\" height=\"121\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9ed7b411-c2af-4496-aa18-ce1b974a5de8\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nGenerated MSI uninstall scripts use ProductCode rather than UpgradeCode, so attempts to uninstall an app with a different version than the one contained in the installer won't find the app. Even if an app hasn't changed in Fleet, auto-update (e.g. for Chrome or Box) will likely break this uninstall script as the product code will change.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add an older version of Cloudflare Warp (e.g. the one mentioned in the old version of [this diff](https://github.com/fleetdm/fleet/commit/b0d0b2217f08ca195e2f9603096435eaf17d4c19)) as a custom package, and install it on a Windows host.\n2. Switch the package to the current version of Cloudflare Warp.\n3. Attempt to uninstall Warp on the host that has it.\n\n### üïØÔ∏è More info\n\nThis ticket is separate from the identical problem for FMAs as this fix needs to be rolled out in the context of a Fleet release, and touches more things (and has impacts on the ability to build automatic install policies).\n\n### Chosen Fix\n\nSee https://github.com/fleetdm/fleet/issues/27758#issuecomment-3079478169\n\n### To QA\n\n1. :white_check_mark: Start on v4.71.0. Add the Chrome enterprise MSI as a custom package. \n2. :white_check_mark: Upgrade to the fixed version. Check `software_installers` in the database. A job should run within a minute or so that populates the Chrome enterprise MSI's `upgrade_code`. The uninstall script won't change as part of this (it'll still have the product code based uninstall script).\n3. :white_check_mark: Delete the Chrome MSI and re-add via the UI with no overrides on the script. The uninstall script should now be the same as the Windows FMA uninstall script as of 2025-07-15, and this script (with an $UPGRADE_CODE placeholder) should be shown as the placeholder uninstall script when adding an MSI.\n4. :white_check_mark: Delete the Chrome MSI and re-add via GitOps. The uninstall script should be the same as when added via the UI.\n5. :white_check_mark:  Delete and re-add via the UI, but make slight edits to the script before saving, while keeping the $UPGRADE_CODE placeholder there. The placeholder should still be substituted for the upgrade code.\n6. :white_check_mark:  Edit the app, replacing the uninstall script with one using both package ID and upgrade code placeholders. Both should populate on the saved script.\n7. :white_check_mark: Add an MSI that doesn't have an upgrade code, without modifying the uninstall script. Confirm that the uninstall script is the one-liner using ProductCode.\n8. :white_check_mark: Attempt to include $UPGRADE_CODE in the uninstall script via a package edit. You should get an error message.\n9. :white_check_mark: Attempt to edit the uninstall script in a way that does _not_ include $UPGRADE_CODE. The operation should succeed.\n10. :white_check_mark: Confirm that MSIs no longer show an extra uninstall warning in self-service.\n11. :white_check_mark:  Confirm that uninstall script help text mentions $UPGRADE_CODE for (and only for) MSIs.\n\n### Potential Fixes\n\nExtract UpgradeCode from MSI packages instead of ProductCode, and use [finding related installers by upgrade code](https://stackoverflow.com/a/49077469/2476827) to generate the uninstall script, uninstalling all software with the associated UpgradeCode rather than just the exact version with the ProductCode.\n\nWe'll need to decide what to do with existing uninstall scripts. We can detect when an uninstall script is the default, ProductCode based one, but in order to upgrade the script we'll need to download and re-parse the MSI (similar to what we did when initially adding uninstall scripts). Otherwise we'll be generating a script that won't work, as currently MSI `package_ids` are the ProductCode, and the new uninstall script would assume UpgradeCode.\n\nAlternative would be to leave scripts as-is and document that admins should delete and re-add MSIs to get the better script (\"editing\" the MSI package with the same installer will be a no-op, and emptying the uninstall script and saving will populate the wrong script).\n\nAdditionally, without additional changes this will break automatic install policies (moreso than they're already broken), as we're currently using assuming that package IDs will contain product code. We can work around this right now by passing product code separately when creating the auto-install policy on app upload, but that breaks as soon as we switch auto-install policies to be add-able after a package has been uploaded (#25499), so we have three choices from what I can see:\n\n1. Drop automatic policy creation for MSIs until UpgradeCode is visible via osquery (or wait to fix this issue until UpgradeCode is visible via osquery and switch automatic policy creation to use UpgradeCode in the same release that we switch uninstalls to use UpgradeCode)\n2. Add a way to store ProductCode on the installer package so we can allow generating the current (overly precise) policy queries for MSIs\n3. Add a way to store package vendor on the installer package so we can temporarily switch the policy query to a more generic name + vendor check that we currently use for Windows FMAs.\n\n",
          "number": 27758,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Custom package MSI uninstall scripts don't uninstall other versions of the software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27758"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6Nk",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~windows",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Custom package MSI uninstall scripts don't uninstall other versions of the software",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27758?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "My estimate is based on the ability to either implement this simultaneously with UpgradeCode changes on the automatic install query, or being able to drop that query until UpgradeCode starts coming in in inventory. Estimated scope also _does not_ include migrating existing uninstall scripts."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "For context, osquery upgrade code PR https://github.com/osquery/osquery/pull/8587"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reassigning since this got pulled back during sprint kickoff today."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "IIRC this got estimated as a 5 previously, so moving this back to estimated. There's a little more scope in here for a fallback, but given that we need the fallback anyway that means we don't need to retroactively fix package IDs/uninstall scripts on existing installers so this should wash out back to a 5."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving due to scope increases"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Plan here is to\n\n- [x] Add a ~nullable~ (changing to not null default blank because zero values) `upgrade_code` field to `software_installers`\n- [x] Refer to it via a new `$UPGRADE_CODE` var\n- [x] Retroactively populate UpgradeCode for existing MSIs (similar to uninstall population cron), but _don't_ retroactively change the uninstall script.\n- [x] Continue to map `$PACKAGE_ID` to ProductCode\n- [x] Update the UI to mention the new variable and show the upgrade code based script as a default, even though if we can't extract an UpgradeCode from an MSI we'll fall back to the product code based script if the uninstall script is either blank or the same as the golden script\n- [x] Have the same behavior for GitOps\n\nFYI @mostlikelee @marko-lisica "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Bonus points: we can get rid of the MSI uninstall disclaimer on self-service now that this is in place, so I'm including that cleanup in the PR."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "QA Notes: \n\nWas able to reproduce the initial issue on 4.71, but after moving to main, any custom software can be uninstalled with any new script, even if there's a version mismatch. \nWent through the test plan and checked off all the items. Additionally, nothing has stood out during additional exploratory testing. "
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.62.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAutomatic install policies for MSIs use a query based on ProductCode, a GUID that changes when newer versions of the software are released. This means that the policy query will not only fail if no version of the software is installed, but also if any _other_ version of the software is installed.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install an older version of an app (preferably as an MSI) on a host\n2. Upload a newer-version MSI of the same app, with automatic install turned on\n3. See the policy generated in step 2 fail, queueing up an install even though the app already exists\n\n### üïØÔ∏è More info\n\nNoticed this in manifest updates for #27443, which is a valid check in this case as at the time we were using the same method for building queries as we do for custom package MSIs.\n\n### üõ†Ô∏è To fix\n\nTwo options (in the case osquery work is required that work is tracked in its own ticket):\n\n#### Use program name and vendor (available now, less reliable, not recommended)\n\nWe could extract vendor and program name from the MSI and use that for existence queries, similar to what we do now for FMA. Catch is this is imprecise and may actually create more reliability issues than it solves (AKA the reason we don't create automatic policies for EXE installers). We probably _shouldn't_ bother doing this.\n\n#### Use UpgradeCode (requires osquery changes, more reliable)\n\nWe could extract UpgradeCode from MSIs and then, when osquery adds UpgradeCode support for `programs`, build our queries based on that. MSIs are highly recommended to have UpgradeCode, such that most if not all have them (and we can bail on automatic policy creation if an MSI doesn't). If we fix this concurrently with #27758 we can switch the `package_ids` DB column in `software_installers` to mean UpgradeCode for MSIs.",
          "number": 27447,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Auto-install queries for custom MSI packages fail when a different version of the same software is installed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27447"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6VI",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "~windows",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Auto-install queries for custom MSI packages fail when a different version of the same software is installed",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee So if I am to understand this, in step 2 it's the same _version_ of the same app? The issue is that the MSI version is newer which is reinstalling the same _version_ of the same app?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Same app, different version.\n\nThe auto-install policy query should pass (no install queued) for any version of the same app (once installed the app isn't updated when checking that box). Instead, for MSIs, if you install a different version of the app than the custom package you uploaded, the policy will fail and the install will be triggered."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh! so this isn't a patching thing. The way things currently work we shouldn't update things b/c patching isn't a thing yet. Let me update the 'to fix' section. Thanks!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee Sounds like you're still doing research on this. Moving back to Ready to spec since if we're already using UpgradeCode and if that's the identifier being passed back by osquery this is a false alarm."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Moving this to Ready to Estimate now that we have a clearer idea of what we'd need to do here. osquery changes block this ticket, but aren't in scope for the ticket itself (going to add another ticket for the required osquery support so we can track that independently)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27447?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "1. Find an older version .msi file\n2. Upload it and have it set to auto-install\n3. Install a newer version on the host\n4. Run the policy\n\n- [x] Policy query should be using upgrade_code\n- [x] Policy should identify older and newer versions as being installed\n\nInstalled AWS Tools for Windows 2.9.371\nUploaded AWS Tools for Windows 3.7.660 - Policy was created from this version"
          }
        ]
      },
      {
        "assignees": [
          "jacobshandling",
          "RachelElysia"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an end user of Fleet desktop,\n| I want to be able to see when updates are available for apps I have installed\n| so that I can keep my computer's software up to date.\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #25784\n\n## Context\n- Design: @eugkuo \n- Dev: @mostlikelee, @iansltx \n- Original request: #25784\n- Broken out of https://github.com/fleetdm/fleet/issues/27245\n \n \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma link](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=2-130\u0026p=f\u0026t=4BUeL3i6REY46HIb-11)\n- [ ] CLI (fleetctl) usage changes: _No changes_\n- [ ] YAML changes: _No changes_\n- [ ] REST API changes: _No changes_ (all frontend for this iteration)\n- [ ] Fleet's agent (fleetd) changes: _No changes_\n- [ ] GitOps mode changes: _No changes_\n- [ ] Activity changes: _No changes_\n- [ ] Permissions changes: _No changes_\n- [ ] Changes to paid features or tiers: _No changes_\n- [ ] My device and fleetdm.com/better changes: _No changes_\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: _No changes_\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n  - @noahtalerman: Dogfood this story at the same time: https://github.com/fleetdm/fleet/issues/30035 \n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: See #29914\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: High\n- Risk description: Primary risk here is suggesting incompatible updates for software such that updates either fail or \"are successful\" but break the end user's install. This is partly because we're going to be assuming that all self-service software is opted into update notifications, including custom packages. Based on scope reductions, we're proceeding knowing that we'll post software for update that won't successfully update, so we're accepting this risk and seeing where it takes us.\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\nTest with Windows, macOS, Linux hosts\nTest with Chrome, Safari, Edge, Firefox\n\n#### UI\n\n1. Ensure that there there are more than 8 updates available for a host by installing older versions of the software (e.g. downloading old FMA copies based on previous manifest versions), then adding current versions as available in self-service on the same team.\n2. Navigate to Fleet Desktop.\n3. Verify that there the \"Updates\" section shows at the top of the page.\n4. Verify that the number next to the Self-service tab matches the number of available updates.\n5. Verify that selecting 'Next' swipes over to the next 4 update cards in the Updates section.\n6. Verify that the same software titles have 'Update' actions next to them in Self-service table.\n7. Select \"Update\" on a software title\n8. Verify that the status changes to 'Updating' with an animated circle progress spinner on both the app card and in the Self-service table..\n9. Navigate away from the page and navigate back and verify that the status remains.\n10. When the update is complete verify that the software is updated locally, the card shows \"Updated\", and a refetch has been queued.\n11. Once the refetch completes, verify that the card is removed from the top section and that the action in the Self-service table changes to \"Reinstall\" (when the one card is removed, the remaining 3 cards still show but the one that was removed is replaced with the next item in the list, so that it still shows 4 cards)\n12. Verify that the pagination always shows 4 items, so it goes from showing 1 2 3 4 to 5 6 7 8.\n13. Update four more apps.\n14. Verify that the Update section shows 3 cards and that the width of each card is the same as when there are 4 items in the Update section at widths above 1280\n15. Verify layout at 480, 768, and 1024 breakpoints. Note that 2 cards show at 768 and that 3 cards show at 1024.\n16. Verify that self-service is paginated and displays 20 items per page.\n\n- [x] Double check for the additional change in host details for the Self service hover text to add a learn more link\n\n- [ ] If there was only one update card and I update the app and it refetches, the Updates section disappears\n\n- [ ] Clicking the Update all option, refetches will occur until all updates are completed. The count will continue decreasing until no further updates are available and then the section will disappear \n\n- [x] Failed modal should show details when clicked\n\n#### Update eligibility criteria\n\n- [x] Software not available for self-service should not show in the available updates list\n- [x] Software not in inventory should not show in the available updates list\n- [x] VPP apps should not show in the available updates list if MDM is turned off\n- [x] Software in inventory that is \u003e= the version for the installer doesn't show\n- [ ] Software in inventory whose version can't be compared to the installer's version shouldn't show\n- [x] Software in inventory, installed multiple times, where one install is an older version and one install is a same-or-newer version, should show in the available updates list\n- [x] Software in inventory, installed once, that is older than the installer's version, should show in the available updates list\n- [ ] Software in the list that was previously successfully installed by Fleet should NOT show install status if a refetch has happened since the install\n- [x] Software in the list with a pending install SHOULD show install status, even if a refetch has happened since the install started\n- [x] Software in the list that has been successfully installed by Fleet since the last refetch SHOULD show install status\n- [x] Software that shows up in the list that has had an install failure by Fleet since the last refetch SHOULD show install status\n\nEdge cases:\nüî¥  Software installed in multiple locations - what happens when I update? Does it only update one of the applications? Does that mean the card remains after the update if the other locations weren't updated?\n\"It depends on the install script and the package\"\nShort answer: Yes, the card can still remain if an outdate version exists anywhere on the host\nüî¥ Will it install a new firefox in the expected location, and you may end up with more than one version?\nA: Yes\nüî¥ What do we show in the carousel for the version -\u003e version subtext?\nA: Design removed version -\u003e version and it's now just version\n\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 27983,
          "repository": "fleetdm/fleet",
          "title": "üñ•Ô∏è Fleet Desktop \u003e Self-service: Add \"Update\" actions when updates are detected for installed software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27983"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX12Q",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-cisneros",
          "customer-numa",
          "#g-orchestration",
          "#g-software",
          "prospect-waterman",
          "prospect-antonella",
          "~assisting g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "üñ•Ô∏è Fleet Desktop \u003e Self-service: Add \"Update\" actions when updates are detected for installed software",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman @mostlikelee Removed 'uninstall' from this ticket as the order of operations has determined that this ticket will go ahead of the uninstall ticket (#28038)"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I took a first pass at the test plan.\n\nQuestions for @mostlikelee:\n\n1. What YAML/API things might need done?\n\nQuestions for @RachelElysia \n\n1. On the carousel, if there are 6 items in the carousel are we thinking it would show 4 and 2 when paginating? Or would we always show four and selecting \"Next\" would go from showing 1 2 3 4 to showing 3 4 5 6?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Notes from 14 April 2025:\n\n1. @noahtalerman : Can we scope this down to Mac only and FMA? \n    1. There are extra complications around Windows due to known issues that we've been discussing. There are also current research tickets on upgrade codes for Windows that are outstanding (#27776) which would be a pre-req for Windows.\n2. Do we want to add activity changes at this time? @mostlikelee and I think no for simplicty's sake.\n"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @noahtalerman : Can we scope this down to Mac only and FMA?\n\n@eugkuo @mostlikelee I think let's draft for all support we support on macOS, Windows, and Linux (custom packages, App Store apps, and Fleet-maintained apps).\n\nAfter we have designs, I think let's discuss and decide how to cut the story up.\n\nWhy? So we know where we're heading and we tease out more complications/unknowns. Then we can come up with a plan for how to address Windows and Linux even if the first iteration we build is just macOS Fleet-maintained apps. Which is a valid first iteration.\n\n\u003e Do we want to add activity changes at this time?\n\n@eugkuo same for activities. I think let's draft activities and then cut."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo @mostlikelee I think let's draft for all support we support on macOS, Windows, and Linux (custom packages, App Store apps, and Fleet-maintained apps).\n\n@noahtalerman Coolio. I don't think the design changes. The UI will be the same regardless of platform. (@mostlikelee correct me if I'm wrong).\n\nWRT activities, I added [an example](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5318-3291\u0026t=LPfejWpLp8jclkAm-11) to the ticket above."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman @jmwatts @mostlikelee \n I've updated the selected state in the category filters to match work done on [#27245](https://github.com/fleetdm/fleet/issues/27245)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Question 1: what is expected behavior when multiple versions of a software are installed on a host:\n- On macOS, if an application is renamed (`Firefox.app` + `Firefox2.app`), Fleet will show both applications as pending updates in the carousel, but only 1 will patch successfully (Firefox.app because it matches the app name in the dmg)\n- This will also be the case on macOS with `/Applications/Firefox.app` + `~/Downloads/Firefox.app` (only the first will patch)\n- machine vs user installs will also see this symptom on Windows\n\nQuestion 2: Does the update disappear from the carousel if the software install executed successfully, but the app did not actually update?\nexamples:\n- macOS: Firefox.app is renamed to Firefox2.app, install completes successfully and the host now has Firefox.app + Firefox2.app\n- Windows: machine scope is installed, and installer is user scoped (or vice-versa)"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee @noahtalerman Updates from 7 May 2025 DR:\n\n1. Added [tooltip](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5366-4609\u0026t=3kh7v4Aj5lLSDppW-11) on `installed` status\n\n"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman @mostlikelee \n\nUpdated the designs with the following:\n\n1. Removed \"Installed\" status from the update cards at the top of the page.\n2. Upgraded the 'update' action to a button.\n3. For installed apps, updated the action to 'reinstall'"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@eugkuo @noahtalerman we realized that we need design when multiple versions of an updatable app is installed"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I'm not exactly sure what you mean by this. Wouldn't we still have a single update button for the app? I mean we'd want to update it all to the most recent. I think I might be missing some nuance here.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Chatted with @mostlikelee and here are the use cases:\n\n1. N different versions in the Applications folder\n2. N copies of the same version in the Applications folder\n    1. Currently can only update the one with the name we expect.\n4. N copies of various versions in different locations.\n\nWe can only update if have following criteria:\n1. Existing path needs to be what's expected (name, location, etc.)\n    1. Works for FMAs\n    2. Does not work as well for custom packages.\n    4. Big question mark around VPP.\n\nLet's discuss in USR.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like there's an off-by-one in step 11 in the test plan.\n\nAlso, for \"Updating\", can we show that status string always when inventory says a piece of software is installed but there's also a pending install? That would allow us to use the existing API there rather than having to build a new one.\n\nI have an idea on making this frontend-only to expedite: use the existing self-service filter, no pagination, and client-side filter to results that have only installed versions where version differs from the installer package. This gets this work out from behind further ListHostSoftware tweaks/derisks it a bit, at the cost of additional frontend munging."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \n\u003e Looks like there's an off-by-one in step 11 in the test plan.\nThanks! Fixed.\n\n\u003eAlso, for \"Updating\", can we show that status string always when inventory says a piece of software is installed but there's also a pending install? That would allow us to use the existing API there rather than having to build a new one.\n\nSo there could be a pending install and we and updating over that? At any rate, if we're updating that software it seems reasonable to show the 'updating' status.\n\n@noahtalerman thoughts?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo To clarify, I'm saying that if we have a piece of software already in inventory and there's a pending install (from whatever Fleet-initiated source...Install button, update button, policy execution, whatever), we use the word \"Updating...\" rather than \"Installing...\" in the self-service UI. Then reserve \"Installing...\" for cases where a host _doesn't_ have the same software in inventory already.\n\nSo the pending statuses would be:\n\n* Installing - wasn't in inventory, install is pending\n* Updating - was in inventory, install is pending\n* Uninstalling - uninstall is pending\n\nIf the above are the rules, the frontend already has all of the information it needs (with existing API endpoints) to show the correct status (so, no backend/DB changes to differentiate between \"installing\" and \"updating\")."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Ohhhh! This works for me. Also,  in future we shouldn't have 'Install' as an action on installed software. It'll say 'uninstall' or 'update' so this would mesh nicely.\n\ncc @noahtalerman @mostlikelee "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman Reverted to secondary update buttons in the update cards."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Bumping this as an unresolved question as we expedite this story: https://github.com/fleetdm/fleet/issues/27983#issuecomment-2877468972"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "During a call on \"Updates in self-service\" call on 2025-05-26, here's what @mostlikelee and I decided for the first iteration: \n\n![Image](https://github.com/user-attachments/assets/1b98c30b-6dc8-444e-826b-a6fc81e8d715)\n\nFleet will document this behavior is the self-service software guide. The UI will link IT admins to this guide (redirect PR is [here](https://github.com/fleetdm/fleet/pull/29445)):\n\n![Image](https://github.com/user-attachments/assets/f6ca58b1-8ce0-473b-a9f3-a9e574e7aaa0)\n\n![Image](https://github.com/user-attachments/assets/30d73148-cd03-4ad8-9b84-5ee89467e68a)\n\nEventually, Fleet will iterate on this behavior. Plan is to ship iterative improvements such that more apps show up in ‚ÄúUpdates.‚Äù\n\ncc @eugkuo "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @eugkuo I moved this 480px width screen into scratchpad [here](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5408-9141\u0026t=2qzAG36eyoKjsBAb-1). Looking the discussion in [this closed PR](https://github.com/fleetdm/fleet/pull/28465), it sounds like we haven't added support for screen widths down to 480px yet.\n\n![Image](https://github.com/user-attachments/assets/d3909d83-841e-41be-a74c-319dffe80946)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Thinking through workflow for a moment, if an app shows up in the updates carousel, it's because we've seen it in inventory, and the version in inventory is less than the version of the corresponding installable software (FMA, custom package, or VPP) for that team (and we don't show a card if criteria around installed paths aren't met, see dev note mentioned above). Good so far? This has a side effect of VPP apps being most likely to be in that carousel, as we'll display a new version there within an hour of the version being published via Apple, with no ability for an admin to override this, but...that's probably okay?\n\nNext, an end user clicks \"Update\", at which point we either send the MDM command to install or queue up a package-based install. In both cases, currently there will be a point where the software is reported as installed but software invenotry has not yet been refreshed, even with #28738 implemented. This means that we can show the \"updating\" spinner right up until the install completes, at which point a purely inventory-based system would flip back to having the \"Update\" action displayed until inventory gets run again, which isn't what we want.\n\n## Update status alternative: install status\n\nOne alternative would be to take installation status into account in some form when installs are successful/failed, rather than just when they're pending. Catch here is that we're replicating issues around freshness that affect our existing host software inventory, where an out-of-band update (e.g. Chrome auto-updating) would cause the update card to show when it isn't necessary. This issue is relevant when the update installation fails but the software eventually gets updated out-of-band.\n\n### Install status freshness: version comparison\n\nOne mitigation for the freshness comparison issue would be to compare versions between inventory and the install receipts, and have the higher version win, but VPP installs currently break this as `host_vpp_software_installs` doesn't include the version that was installed, so we'd wind up in a case where VPP apps would never show up in the updates list once installed the first time because installed version would just reference back to the latest available version.\n\n### Install status freshness: refetch wins when more recent than install\n\nAnother mitigation would be to only take install statuses into account when they're more recent than the most recent host vitals refetch. We have install timestamp info and last refetch timestamp info, so this should be reliable, and we can use this nuance to show available updates with e.g. \"Update successful\" or \"Update failed\" if we wanted between getting an install result back and the next refetch.\n\nWe could actually extend this logic to host software listing in general, explicitly ignoring install receipts (success or failure) unless they've happened since the most recent vitals refetch as the vitals refetch should at that point be the source of truth.\n\n## Update status alternative: refetch on install success\n\nAnother alternative would be to retech host vitals (or at least rerun software inventory) after each successful install. Doing this right needs #28738 as a prerequisite so we don't refetch too early. If we did this, the window where software inventory alone was too stale for correctly showing the update carousel would be minimized.\n\n---\n\nWe could combine \"refetch wins when more recent than install\" and \"refetch on install success\", plus maybe polling of host details on the **My device** page while refetching, to get a nearly realtime view of what's actually installed. Clicking Update on a piece of software would pop up a spinner in place of the Update button, then the status would flip to Update Successful for \u003c 1 minute while a vitals refresh was triggered, then the update card would disappear entirely once the vitals refresh triggered by that install was completed. For failed updates, we'd show the \"Update failed\" status until the next vitals refetch, with a retry button, and that failure would go away (replaced with an \"Update\" action with no status) after the next refetch.\n\nThis combined approach will require API changes (but no fleetd changes) to work, but in return we get a clear path to cleaning up inventory-vs-install idiosyncrasies, and we avoid end-user frustration stemming from varying degrees of staleness on the updates list compared to what they have installed."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Unrelated to the above: hopefully installers get targeted properly with labels for e.g. Intel Macs in this customer's deployment, since otherwise we'll be presenting end users with prompts to update apps to versions that won't work on their architecture."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looking over the wireframes, looks like we have a different activity description than the standard \"installed X app.\" Given the complexity of this ticket as it stands, can we remove the activity from scope, reverting to the standard \"an end user installed X\" activity that we have right now? Otherwise we need to decide how we'll differentiate an update from an install (new param on the install reqeuest? Automatically server-side based on what's in inventory on the machine?) and define a structure for the revised activity record (I assume a new field on `installed_software`), neither of which we've spec'd. Feels like those changes can be added in a follow-up ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One interesting side effect of \"refetch vitals after every install\" is it could resolve the software install \"half\" of #25969/#28523, albeit in a heavier-weight fashion since IIRC a vitals refetch runs policy queries as well as software inventory queries. If we just run software inventory (so, not a full refetch) those issues are unaffected. TBD whether we'd want to start with a full vitals refetch hre since that's more computationally expensive both client- and server-side and once we implement it it's more likely that admins would rely on the full-refetch behavior so it'd be hard to back out.\n\nBut if we _didn't_ collect the entire set of host vitals, we'd need another timestamp on hosts to indicate how fresh software inventory was relative to the rest of host vitals, so just doing a full refetch is a lot less risky from a development perspective. So \"do a full refetch after an install completes\" still makes sense here I think.\n\nNote that this is _in addition to_, and _after_, the MDM polling covered in #28738, as that polling would only affect software install status and not inventory (even on iOS/iPadOS the polling would be checking for managed apps, while software inventory grabs the entire installed app list)."
          },
          {
            "author": {
              "login": "gillespi314"
            },
            "body": "FYI, we have some existing framework for refetching [critical queries](https://github.com/fleetdm/fleet/blob/f018066beef248bdb67700a3f458809f9bad410a/server/fleet/hosts.go#L361-L362) that might be useful here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@gillespi314 Thanks for pointing that out! I think that in this case once we implement #28738 we'll only need to refetch once, after the install is confirmed succeeded (on script exit 0 + post-install for package-based, on MDM managed apps success for VPP) so we won't need to take the perf hit of a full refetch on every host check-in (we're making the assumption that the MDM managed app inventory command is less expensive to poll than our standard vitals suite)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx @mostlikelee Removed the updated activity feed and wrote a [FR](https://github.com/fleetdm/fleet/issues/29492) to update this in the future.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee @eugkuo, just checking, is this story ready to move to \"Estimated\"? Looks like it has an estimate on it."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "The estimate is from our expedited estimation session.  I'll remove the estimate as we're going to want to estimate this again after Spec.  This story is in the correct spot.  We'll move it over when https://github.com/fleetdm/fleet/issues/29494 is complete."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @iansltx just a reminder that this story is ready for spec? Can you please work with the team to get it estimated ahead of next sprint?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman on my list after my responsibilities for 4.69 are concluded."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts This test plan is ready for a last look. Make any edits that you need to make, and once it looks good pull this to Ready to Estimate. I've already pulled subtasks to Ready to Estimate as I'm sufficiently confident that I have them spec'd correctly and wanted to give folks a little more runway to put down their own estimates."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Workflow diagrams:\n\n![Image](https://github.com/user-attachments/assets/c265a375-fc3e-437e-8350-b685c605d56d)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan looks good. \n\n\u003e Windows apps don't show in the available updates list if they don't have an associated install path \n\nDo we know if we plan to address https://github.com/fleetdm/fleet/issues/29449 before this ticket?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts That would get addressed in the same sprint at the earliest, given that this will be going into the next sprint. There isn't a direct dependency here, and these shouldn't touch the same code, so if/once that bug is fixed this implementation will \"just work.\""
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman adding this back into your queue based on our design review discussion re: copy/UI changes for unpatchable software"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee can you please update the test plan? We made a change to not worry about where the software is installed (paths). Tip: CMD+F for \"path\" in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Revised the spec here (didn't touch Figmas), including test plan, to drop host paths interactions, and drop this down to FE-only. We'll likely need to reimplement with server-side changes in the next iteration, but workload-wise if we tried to implement this plus #30240 in a single sprint with backend changes we'd miss the release cut due to waiting for dependencies.\n\nThis story now consists of frontend changes plus docs changes, so tee shirt sizing is just above an XS. Likely scenario here is that dev gets done in the 4.72 sprint, and docs get updated during the 4.73 dev sprint but prior to 4.72 going GA.\n\nAPI change/path-related subtasks have been dissociated from this story and moved back to the \"New requests\" column; they'll need to be either associated with a new follow-up story or converted to stories themselves to be actionable.\n\nPulled the story back to USR to revalidate the test plan, while keeping subtasks in Estimated based on previous discussions."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "after some discussion, keeping the original estimates and moving to Estimated."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica thanks for jumping right into our team and the mountain of dev/design sync needed. Here's some recap of stuff I need/needed clarified.\n\nPrevious conversations:\n\n000. This isn't in the spec to be able to sort status from host details \u003e software \u003e library. But if we did it would be consistent with self-service status sort. I tried to implement but it proved difficult because of the server side pagination/query/sort happening and sorting on a column that is built in the FE doesn't play nice with server side sort. (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175433082329?thread_ts=1752168568.807959\u0026cid=C086V2QK76X) Confirm we are intentionally scratching sorting on host details \u003e software \u003e library \u003e status column or I need to jump through a lot of hoops to make everything client side sort an then implement\n\n00. I dev-ed in clientside paginating self-service page to 20. When there's updates to specs like this, are you DRI for updating the Figma and QA plan? (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175280199089)\n\n0. We either needed to make 2 API calls, one for update software and the other for filtered software in the self-service section OR move the self-service software search query to be client side. We chose to make everything client side so we don't have to make so many API calls and deal with making 2x the API calls every time an install/uninstall/update action is clicked. It's sticky, partially because this is all frontend hoops jumped through because the API doesn't paginate, doesn't filter categories, and doesn't have a 1:1 map of status's in the API with status shown in the UI.  (https://fleetdm.slack.com/archives/C086V2QK76X/p1752180334175959)\n\nQuestions from [Self-service/Library updates thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1752184798822479):\n\n1. I asked the channel, If there's more than one version installed on a host, what should go on the software updates card for the \"125.0.1 -\u003e 126.0.1\". If recalled correctly, we think the Figma is not correct, and should just show the library version.\n\n2. Do we show the update available modal if you click update in the carousel or does it just automatically make the API call to update\n\n3. When you click the Update all button, do we disable the \"update all\" button?\n\nMore questions not on the thread:\n\n5. Similarly, when you are updating all and there's no other software to update since they're all pending \"Updating...\", do we disable the \"update all\" button?\n\n6. This pagination but changing the number of update software tiles per page on page size might be a little too tricky. For example, you have 20 software that need updates, you're looking at the third page which shows software 9,10,11,12. You shrink your browser horizontally to only see 3 software, which 3 should be shown?? What page are you on now?\n\n7. Do we forsee an update section in host details \u003e software \u003e library? Is it in the works, any heads up might be good in making sure the code is reusable across fleet desktop \u003e self-service and host details \u003e software \u003e library\n\nI'm OOO tomorrow but I'll be back Monday and Thursday next week. If you can address any of these, that would be amazing, ty!\n "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @RachelElysia, thanks for collecting all the questions in one place, it's really helpful.\n\n\u003e This isn't in the spec to be able to sort status from host details \u003e software \u003e library. But if we did it would be consistent with self-service status sort. I tried to implement but it proved difficult because of the server side pagination/query/sort happening and sorting on a column that is built in the FE doesn't play nice with server side sort. (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175433082329?thread_ts=1752168568.807959\u0026cid=C086V2QK76X) Confirm we are intentionally scratching sorting on host details \u003e software \u003e library \u003e status column or I need to jump through a lot of hoops to make everything client side sort an then implement\n\nLet‚Äôs skip this. I‚Äôll add follow up story to do some additional UI improvements (details modals without 2 tabs on library page, sorting by status on library page and pagination for self-service in API).\n\n\u003e I dev-ed in clientside paginating self-service page to 20. When there's updates to specs like this, are you DRI for updating the Figma and QA plan? (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175280199089)\n\nClient-side pagination sounds good to me. I added spec to Figma and test case.\n\n\u003e We either needed to make 2 API calls, one for update software and the other for filtered software in the self-service section OR move the self-service software search query to be client side. We chose to make everything client side so we don't have to make so many API calls and deal with making 2x the API calls every time an install/uninstall/update action is clicked. It's sticky, partially because this is all frontend hoops jumped through because the API doesn't paginate, doesn't filter categories, and doesn't have a 1:1 map of status's in the API with status shown in the UI. (https://fleetdm.slack.com/archives/C086V2QK76X/p1752180334175959)\n\nI'm not sure I understand this. Are we going to request all self-service software, and then the frontend will find and display those with available updates in the \"Updates\" section? If that's correct, then I think that's fine.\n\n\u003e I asked the channel, If there's more than one version installed on a host, what should go on the software updates card for the \"125.0.1 -\u003e 126.0.1\". If recalled correctly, we think the Figma is not correct, and should just show the library version.\n\nWe decided to don‚Äôt show current version, to simplify in this iteration. We can add that later. It makes things complicated when user has multiple versions of the same app installed in different paths.\n\n\u003e Do we show the update available modal if you click update in the carousel or does it just automatically make the API call to update\n\nWe show update available modal only when user clicks on ‚Äúupdate available‚Äù in status column. If user click ‚ÄúUpdate‚Äù in self-service table or in the carousel we just directly start update (user sees ‚ÄúUpdating‚Äù status.\n\n\u003e When you click the Update all button, do we disable the \"update all\" button?\n\nI think we should disable ‚ÄúUpdate all‚Äú button and show ‚ÄúUpdating‚Äù status on each item in carousel and self-service table.\n\n\u003e Similarly, when you are updating all and there's no other software to update since they're all pending \"Updating...\", do we disable the \"update all\" button?\n\nI think so. Let‚Äôs disable the button if an update is started for all apps that have an update available.\n\n\u003e This pagination but changing the number of update software tiles per page on page size might be a little too tricky. For example, you have 20 software that need updates, you're looking at the third page which shows software 9,10,11,12. You shrink your browser horizontally to only see 3 software, which 3 should be shown?? What page are you on now?\n\nSorry, I don‚Äôt understand this. Let‚Äôs chat during the design review on Monday. If it‚Äôs too early for you, please add something to my calendar.\n\n\u003e Do we forsee an update section in host details \u003e software \u003e library? Is it in the works, any heads up might be good in making sure the code is reusable across fleet desktop \u003e self-service and host details \u003e software \u003e library\n\nI don‚Äôt think so. I don‚Äôt thin IT admin want‚Äôs to see that. They will probably make updates automatic based on some criteria. We might want an additional filter in the existing dropdown for apps that have updates available, but not planned AFAIK."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica thanks for all the clarification!\n\n\u003e I'm not sure I understand this. Are we going to request all self-service software, and then the frontend will find and display those with available updates in the \"Updates\" section? If that's correct, then I think that's fine.\n\nExactly\n\n\u003e Sorry, I don‚Äôt understand this. Let‚Äôs chat during the design review on Monday. If it‚Äôs too early for you, please add something to my calendar.\n\nWill add to your calendar\n\nI think everything else is addressed and unblocked so I can dev -- hvala!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica Another question re: https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5302-9691\u0026t=xsGXc1YLuwgfuqy1-0\n\nWhen the update fails, it shows \"Update\" button and a \"Failed\" button in the update card, but in the Self-service table view in the card below, should that installer show \"Failed\" or \"Update available\" in the status?\n\nNuances needing clarification from @marko-lisica :\n\n\u003cimg width=\"671\" height=\"187\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d94eb0bb-adeb-488e-a955-c7a2d365a791\" /\u003e\n\nScenario 1: Docker Desktop has an update available but it failed to update, what should be shown as the status in the table view?\n\nScenario 2: Docker Desktop has an update available but it failed to uninstall, what should be shown as the status in the table view?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @RachelElysia, I think that we should show \"Failed\" in self service table as well.\n\n\u003e Scenario 1: Docker Desktop has an update available but it failed to update, what should be shown as the status in the table view?\nWe should alwaythe s show latest status in the status column. If it's failed let's show it. Action should be update if update is available.\n\n\u003e Scenario 2: Docker Desktop has an update available but it failed to uninstall, what should be shown as the status in the table view?\n\nWhat do we display today if the uninstallation fails? Do we have a specific status like \"Failed (uninstall),\" or do we show \"Failed\" and then inform the user in the details modal that the uninstallation was unsuccessful?\n\n"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica \n\n\u003e What do we display today if the uninstallation fails? Do we have a specific status like \"Failed (uninstall),\" or do we show \"Failed\" and then inform the user in the details modal that the uninstallation was unsuccessful?\n\nWe show \"Failed (uninstall)\" which leads to the uninstall modal.\n\nI'll be sure to update these copies to not show update available and show \"Failed\" or \"Failed (uninstall)\" if it meets both criteria, I'll update the QA plan too since I'm in there RN, thank you!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica Update available has a tooltip and Failed/Failed (uninstall) has a separate tooltip. Because these options listed above fall into both, I made it so the tooltips show both the Update Available tooltip copy and Failed/Failed (uninstall) copy. WDYT?\n\n```\n  failed_install_update_available: {\n    iconName: \"error-outline\",\n    iconColor: \"ui-fleet-black-50\",\n    displayText: \"Failed\",\n    tooltip: ({ isSelfService, isHostOnline, lastInstalledAt }) =\u003e\n      isSelfService || isHostOnline ? (\n        \u003c\u003e\n          Fleet can update software.{\" \"}\n          \u003c\u003e\n            Software failed to install\n            {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}.{\" \"}\n            {isSelfService ? (\n              \u003c\u003e\n                Select \u003cb\u003eRetry\u003c/b\u003e to install again, or contact your IT\n                department.\n              \u003c/\u003e\n            ) : (\n              \u003c\u003e\n                Select \u003cb\u003eDetails \u0026gt; Activity\u003c/b\u003e to view errors.\n              \u003c/\u003e\n            )}\n          \u003c/\u003e\n        \u003c/\u003e\n      ) : (\n        \u003c\u003e\n          Fleet can update software\n          \u003cbr /\u003e when the host comes online.\n          \u003cbr /\u003e\n          Software failed to install\n          {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}.{\" \"}\n          {isSelfService ? (\n            \u003c\u003e\n              Select \u003cb\u003eRetry\u003c/b\u003e to install again, or contact your IT\n              department.\n            \u003c/\u003e\n          ) : (\n            \u003c\u003e\n              Select \u003cb\u003eDetails \u0026gt; Activity\u003c/b\u003e to view errors.\n            \u003c/\u003e\n          )}\n        \u003c/\u003e\n      ),\n  },\n  failed_uninstall_update_available: {\n    iconName: \"error-outline\",\n    iconColor: \"ui-fleet-black-50\",\n    displayText: \"Failed (uninstall)\",\n    tooltip: ({ isSelfService, isHostOnline, lastInstalledAt }) =\u003e\n      isSelfService || isHostOnline ? (\n        \u003c\u003e\n          Fleet can update software.\n          \u003cbr /\u003e\n          Software failed to uninstall\n          {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}. Select{\" \"}\n          \u003cb\u003eRetry\u003c/b\u003e to uninstall again\n          {isSelfService \u0026\u0026 \", or contact your IT department\"}.\n        \u003c/\u003e\n      ) : (\n        \u003c\u003e\n          Fleet can update software\n          \u003cbr /\u003e when the host comes online.\n          \u003cbr /\u003e Software failed to uninstall\n          {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}. Select{\" \"}\n          \u003cb\u003eRetry\u003c/b\u003e to uninstall again\n          {isSelfService \u0026\u0026 \", or contact your IT department\"}.\n        \u003c/\u003e\n      ),\n  },\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@RachelElysia I think we discussed this during standup. We decided not to don't show the update tooltip in the table if it fails. We'll show the update button in the \"Updates\" section + failed status."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#27983\n\n## Task\n\nImplement the frontend as shown in the [Figma for the parent story](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=2-130\u0026p=f\u0026t=4BUeL3i6REY46HIb-11), with behavior corresponding to the [associated flowcharts](https://fleetdm.slack.com/files/U07GHNRUK17/F093LL7E30A/self-service_update_filtering___workflow_-_simplified.drawio). Note that all functionality is expected to happen client-side; if API bugs/misses prevent this, raise these issues as unreleased bugs during development.\n\n## Condition of satisfaction\n\nFrontend is implemented according to the above specs. Note that \"update all\" should be performed by a bunch of install calls rather than an action at a bulk endpoint.",
          "number": 29944,
          "repository": "fleetdm/fleet",
          "title": "Self-Service Update: Frontend",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29944"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Self-Service Update: Frontend"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: main\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSoftware installs are queued but are never processed by osquery-perf hosts, they remain pending forever.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Set up a Fleet instance with several software items in the Library, all set to automatically install on policy failure\n2. Enroll some osquery-perf hosts (I used `go run ./cmd/osquery-perf/agent.go --enroll_secret \u003csecret_here\u003e --host_count 10 --os_templates macos_14.1.2 --start_period 5m --query_interval 60s --config_interval 5m -mdm_prob=0 -policy_pass_prob=\"0.5\"`\n3. See the policies fail and the software installs get queued up. Wait a while.\n\n### üïØÔ∏è More info _(optional)_\nThis is currently blocking load testing efforts for [#30035](https://github.com/fleetdm/fleet/issues/30035)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30913,
          "repository": "fleetdm/fleet",
          "title": "osquery-perf refuses to process software install requests for macOS",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30913"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcp4X0",
        "labels": [
          "bug",
          "~released bug",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "osquery-perf refuses to process software install requests for macOS",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nTested in load test environment, software is now installing for all types of packages. "
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: fleetctl - version rc-fleetctl-test-v4.63.0-1433-g2029cc98d9\n  branch: \tmain\n  revision: \t2029cc98d9e2f1f548d5567deafcea7485bc12f4\n  build date: \t2025-05-20\n  build user: \tjordan\n  go version: \tgo1.24.2\n\n**Web browser and operating system**: Chrome 136.0.7103.114 on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nI have created a fairly simple Gitops setup with a single team and 7 different common .pkg software installers, Chrome, Edge, Firefox, Box, Slack, Zoom, Cloudflare WARP\n\nEvery time I run gitops the software_installers entry for Box gets updated including all the usual update side effects that are applied such as deleting currently pending installations. This seems like a bug, confirmed with SW team here: https://fleetdm.slack.com/archives/C086V2QK76X/p1747675290738609\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Setup gitops\n2. Create a gitops team with some software\n3. Include the Box app. My latest-box-macos-pkg.yml is below. I've removed my ngrok URL from it but I've uploaded the exact package I am using [here](https://drive.google.com/file/d/1n3H1N3WuWgIHv2Qm5ghfP6bOkVF-g1qN/view?usp=sharing) on Google drive\n```\nurl: [url removed]/BoxDrive-2.43.205.pkg\nself_service: true\n```\n4. Run gitops, wait for it to complete\n5. Login to your mysql database and run `SELECT * FROM software_installers;` - note the updated_at time for the Box app\n6. Run gitops again, and rerun the query from 5 after it's done. Note the new updated_at time, and also that other apps didn't change\n\n \n### üïØÔ∏è More info _(optional)_\nI discovered this while debugging this ticket: https://github.com/fleetdm/fleet/issues/28664\n\nI am working to make the setup experience more resilient here in general as part of the ticket above however it does seem like this behavior of the software getting updated and side effects applied is unintended and suboptimal here and could lead to other unexpected behavior if not fixed.\n\n### üõ†Ô∏è To fix\nWhen gitops is run with the same box installer pkg included multiple times it should not result in that installer being \"updated\"",
          "number": 29286,
          "repository": "fleetdm/fleet",
          "title": "ü™≤One particular software installer gets updated every time gitops run is conducted",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29286"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8R4",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤One particular software installer gets updated every time gitops run is conducted",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1747760158772119"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "more context: https://fleetdm.slack.com/archives/C086V2QK76X/p1747675290738609"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "This is seemingly pretty easily reproducible by adding a new team yml with box drive in gitops.\n```\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:51:27.200080 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 21:49:11.554490 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n5 rows in set (0.00 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| Slack-4.44.59-macOS.pkg | 28 |      10 | 2025-07-15 22:44:36.454515 |\n| BoxDrive-2.43.205.pkg   | 29 |      10 | 2025-07-15 22:44:36.460138 |\n| googlechrome.dmg        | 30 |      10 | 2025-07-15 22:44:36.464730 |\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 22:45:00.940530 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 22:44:45.480426 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n8 rows in set (0.00 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| Slack-4.44.59-macOS.pkg | 28 |      10 | 2025-07-15 22:44:36.454515 |\n| BoxDrive-2.43.205.pkg   | 29 |      10 | 2025-07-15 22:46:52.967720 |\n| googlechrome.dmg        | 30 |      10 | 2025-07-15 22:44:36.464730 |\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 22:47:20.744843 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 22:47:03.419169 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n8 rows in set (0.00 sec)\n```\n\nIt returns different updated_at results after apply, and then after a while it seems to stop changing. Will investigate further."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Running it over and over again with a single team seems to keep the value consistent:\n```\n\u003e select filename, id, team_id, updated_at from software_installers;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:29:44.399978 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n+-------------------------+----+---------+----------------------------+\n3 rows in set (0.01 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:29:44.399978 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n+-------------------------+----+---------+----------------------------+\n3 rows in set (0.00 sec)\n```"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "So it looks like the uninstall script for box is changing. In specific:\n```\n  pkg_ids=(\n    \"com.box.desktop.installer.local.appsupport\"\n    \"com.box.desktop.installer.autoupdater\"\n    \"com.box.desktop.installer.desktop\"\n  )\n\n  pkg_ids=(\n    \"com.box.desktop.installer.desktop\"\n    \"com.box.desktop.installer.local.appsupport\"\n    \"com.box.desktop.installer.autoupdater\"\n  )\n```\n\nThen we have this fancy query to tell us if anything has changed:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software_installers.go#L2094-L2122\n```\nSELECT id,\nstorage_id != ? is_package_modified,\ninstall_script_content_id != ? OR uninstall_script_content_id != ? OR pre_install_query != ? OR\nCOALESCE(post_install_script_content_id != ? OR\n\t(post_install_script_content_id IS NULL AND ? IS NOT NULL) OR\n\t(? IS NULL AND post_install_script_content_id IS NOT NULL)\n, FALSE) is_metadata_modified FROM software_installers\nWHERE global_or_team_id = ?\tAND title_id IN (\n\tSELECT id FROM software_titles WHERE unique_identifier = ? AND source = ? AND browser = ''\n)\n```\nSo `is_metadata_modified` is returning true, because the `uninstall_script_content_id` is changing."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nThe Homebrew based Chrome FMA refers to a non-versioned download URL, so the latest version of Chrome gets downloaded rather than the version specified in the manifest. Homebrew explicitly skips a hash check on Chrome, ensuring downloads are successful when new versions are released at the expense of download verification.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee the FMA manifest for `chrome/darwin`.\n\n### More info\n\nWe've had this issue with macOS Chrome since FMAv1 rolled out, and FMAv2 inherits the issue as we're pulling from the same source.\n\n### üõ†Ô∏è To fix\n\nSee https://github.com/fleetdm/fleet/issues/27919#issuecomment-2791036030.\n\nAlso add a FMA docs update to indicate we're using Chrome Enterprise.\n\n[Figma design](https://www.figma.com/design/rSYo3wpfkJo0EklCbF7MFp/-27919-macOS-Chrome-FMA-doesn-t-have-hash-specified-in-manifest?node-id=2-130\u0026p=f\u0026t=NObiCXiVgHjCPeb3-11)\n\n### To QA\n\nWhile pointing at the associated branch for FMA manifests, confirm that adding Chrome shows the \"Latest\" copy on the FMA add page and details modal, and when added shows the current version of Chrome. Confirm install/uninstall work as expected. Delete the app from Fleet and re-add via GitOps to confirm the version number and scripts are the same as when you added via the UI. Confirm that a normal DMG or ZIP FMA is unaffected by these changes (still shows/adds version number from the manifest).",
          "number": 27919,
          "repository": "fleetdm/fleet",
          "title": "ü™≤macOS Chrome FMA downloads latest version instead of specified version in UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27919"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7Ag",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤macOS Chrome FMA downloads latest version instead of specified version in UI",
        "comments": [
          {
            "author": {
              "login": "atharva-navani16"
            },
            "body": "Hi @iansltx  , @mostlikelee you are right Google doesn‚Äôt expose a versioned URL for Chrome downloads (unlike tools like Winget on Windows).\n\nAs you mentioned finding another source can be an option but reliable alternative source is challenging. They might not offer long-term stability or guaranteed authenticity, which raises concerns for maintaining and future support.\n\nA few possible solutions could be:\n**1.Self-Host Chrome Binaries**\nHost .dmg files on FleetDM-controlled storage (e.g., S3) and reference them in manifests.\nPros: Full control, stable URLs/hashes.\nCons: Manual uploads, storage/maintenance overhead.\n\n**2.Chrome for Testing** \nUse Google‚Äôs testing URLs and fetch versions/hashes via metadata feeds.\nPros: Automatable, no hosting required.\nCons: Not intended for production, arch-specific URLs.\n\n**3.Enterprise Bundle**\nDownload official .pkg installers from Google‚Äôs enterprise portal and rehost them.\nPros: Supported and stable.\nCons: Manual effort, may require licensing.\n\nFeel free to review these options and see which one aligns best with your product requirements and workflows. If any of these approaches seem like a good fit, I‚Äôd be happy to help implement or contribute further.\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@atharva-navani16 Thanks for the research here; I wasn't aware of Chrome for Testing as an option.\n\nFor Chrome for Testing, you're talking about [this feed](https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json), right? Either way, arch-specific, and a quite different install format vs. the PKGs, is probably a dealbreaker there.\n\nOf self-host and enterprise bundle, seems like the latter winds up with more steps/more issues for the same result, since the self-hosting could be automated (when a new version is detected, grab the downloader and upload it via object storage to object storage)."
          },
          {
            "author": {
              "login": "atharva-navani16"
            },
            "body": "@iansltx  Makes sense! self-hosting with automation sounds like the way to go! \n\nGrab the latest .dmg from Google‚Äôs URL,\nAuto-upload it to S3 with versioned paths + SHA256,\nUpdate Fleet‚Äôs manifest.\n\nHappy to share reference scripts if useful"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Dropping this back to Ready since, while this is filed as a bug, it'll be useful to figure out prioritization here given that this will require a decent lift for a secondary feature of a single app that'll generally auto-update anyway. Which sounds like riding the line between a bug and a story but basically all of the story template is irrelevant because this work will be entirely done in either infrastructure or FMA ingestion."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Coolio. How does prioritization happen in cases like this?\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Async else design review, I think?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review today, we'll show the Chrome version as \"latest\" in the UI with a tooltip when adding the FMA, and extract version information from the package once we download it. We _will not_ do anything to actually version-pin the package at this time (/cc @mostlikelee).\n\nTo avoid breaking existing FMA processing, we can key this behavior off of the `no_check` hash; if we see that in a manifest, we:\n\n1. Show `latest` on the version field on `GET /fleet_maintained_apps/:id`\n2. Extract the version from the package when adding the FMA rather than using what's in the API\n3. Show \"latest\" with a tooltip in the UI\n\nThis means that we'll have changes to the experimental [Get FMA API endpoint](https://fleetdm.com/docs/rest-api/rest-api#get-fleet-maintained-app) as a result of this bugfix (documenting \"latest\" as a version number), but no changes to FMA ingestion.\n\nWhile QA'ing this, we need to test against both Windows and macOS Chrome FMAs, as both don't check hashes right now. If the current version shows as \"latest\" on the FMA add screen for both, and the correct version is extracted on app add (even on a manifest that's out of date), we're good to go here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo once you have the UI ready for this, ping me. Assuming the UI makes sense (it probably will) I'll move this back to Ready to Estimate and ping folks for Planning Poker on the backend side (and will ping Rachel to estimate the FE bit separately)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I added a [Figma design](https://www.figma.com/design/rSYo3wpfkJo0EklCbF7MFp/-27919-macOS-Chrome-FMA-doesn-t-have-hash-specified-in-manifest?node-id=2-130\u0026p=f\u0026t=NObiCXiVgHjCPeb3-11) to the **To Fix** section.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Works for me. Revised \"To fix\" to link to my comment above since 95% of the work will be the backend tweaks."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo small UI nit. It looks like we're using a mix of the underline and tooltip styles in your Figma [here](https://github.com/user-attachments/assets/f3097eed-f5ef-46fe-a0bf-fbf4cd6cb2c5).\n\nTooltips in Fleet either have an underline (tooltip shows up under the line with no arrow) or an arrow (no underline). I think we want to pick either one here. Up to you on which.\n\nHere's some examples live in dogfood:\n![Image](https://github.com/user-attachments/assets/539c00aa-1351-482e-a856-6b7ea4c6a8a3)\n\n![Image](https://github.com/user-attachments/assets/2a955b10-6718-4231-89c8-cfa4c8e0b76a)\n"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman Oh interesting. Perkins and I were trying to figure out what the convention was for where tooltips show. \n\nIs there an idea that the arrow one gives more information about the thing being rolled over and the one below provides more context about what the thing is?\n\nI updated this to show below using the above logic."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo I think it's mostly a stylistic choice. Thought process: for a specific scenario, which makes the most sense?\n\ncc @marko-lisica @rachaelshaw "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman I'm going to try using the framework I outlined above and see how it goes for the next few tooltip scenarios in order to try and formalize something.\n\ncc @marko-lisica @rachaelshaw "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "updated the bug title based on the solution discussed in the comments"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev @jahzielv @iansltx please add estimates to https://docs.google.com/forms/d/e/1FAIpQLSeGjTUV2G2NHQEAtLFodMgUSwpzGjdF-2SzUIa52J_j71hQbQ/viewform"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, we have a hangup here.\n\nThe version of Chrome that Homebrew links is a DMG. We don't parse those. Which means we can't extract the version on the Fleet server side as discussed in the recommended fix without making other changes.\n\nOne option would be to switch Chrome to use the PKG installer (https://dl.google.com/dl/chrome/mac/universal/stable/gcem/GoogleChrome.pkg), but question is whether we want to switch explicitly to Google CHrome Enterprise here (probably?) from the version Homebrew points to. There's also a PKG installer that @allenhouchins has listed https://github.com/fleetdm/fleet/blob/main/it-and-security/lib/macos/software/google-chrome.yml#L1.\n\nAt that point we _could_ extract version data on a \"latest\" tag (I already have that code written, though I think I still need to add support for FMA-via-GitOps), and our FMA manifest could be built without Homebrew entirely as everything in the manifest (version, URL, install/uninstall script) would be static (would just be a Chrome-specific version of our generic pkg install/uninstall scripts, which we know work because we're using them for dogfood).\n\nThe main alternative here would be to have an accelerated CI workflow _just for Mac Chrome_, where we run a copy of our FMA ingest pipeline dedicated to Chrome and immediately approve/merge changes there that only involve manifest version bumps. This is no worse from a QA perspective than our existing setup, since Fleet server admins are getting the new version anyway, and the level of effort required for this is quite low (and this would work with zero changes to Fleet server, and would let us keep the DMG package format).\n\nA final alternative would be to build at least version parsing from DMGs, but that would be a significantly larger undertaking, while the alternatives above could be completed within this ticket's estimate.\n\n@marko-lisica @mostlikelee which way do we want to go here?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "From Google:\n\n\"Google Chrome Enterprise is essentially the same Chrome browser used by consumers, but with additional features and management tools tailored for businesses and organizations\"\n\nI think having Google Chrome Enterprise is good solution. It's same browser for end-user, except it allows admins to specify org settings.\n\n@iansltx When you say static manifest, does that mean we'll need to add additional input method [here](https://github.com/fleetdm/fleet/tree/main/ee/maintained-apps/inputs)?\n\nHow does that change the contribution process?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Just as a small aside, google chrome enterprise on windows is one of the applications that was missing the install path in osquery because it didn't set the registry correctly.\nhttps://github.com/fleetdm/fleet/issues/29449#issuecomment-2989108748\n\nI know we are talking about mac here, but just wanted to drop that in here, in case there are some differences on the mac version as well."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "+1 on google chrome enterprise.  It's already what is used for [Windows FMA](https://github.com/microsoft/winget-pkgs/blob/master/manifests/g/Google/Chrome/138.0.7204.101/Google.Chrome.installer.yaml) so we could possibly rename the FMA across platforms to something like `Chrome Enterprise` if we wish."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica I'm planning on nuking the input file for macOS Chrome entirely. Our FMA ingestion tool won't modify JSON files that aren't in-scope so it's safe to take this approach (which also means no code changes required to ingestion).\n\n@mostlikelee Given inventory constraints, I don't think we can change the name...it's still going to show up as Google Chrome IIRC. But given our audience I agree that Chrome Enterprise makes sense to serve by default; if someone is using Fleet Premium there's a decent chance they want Chroem Enterprise anyway.\n\n@ksykulev I think I've grabbed the Chrome Enterprise pkg before and haven't noticed anything amiss there, so we _should_ be good.\n\nI'll proceed with \"option 1\" above, so this is now unblocked."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Given inventory constraints, I don't think we can change the name.\n\ntrue, if anything maybe we can update docs"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, I thought we'd be good to go with a static output file, but our generated PKG uninstall script doesn't clean up Chrome properly from what I can see, but the Homebrew version dos (gonna test with Chrome Enterprise momentarily; it successfully uninstalled the Chrome I had on this machine prior).\n\nSo we'll want Homebrew  + overrides rather than a static file.\n\nI'll want to build overrides off of @ksykulev's MSRC feed work _and_ @jahzielv's FMA Homebrew custom install script work, so first order of business is catching Konstantin's PR up to `main`. Then layer in updates on top of that.\n\nShould be able to get this turned tonight still, though it'll be in line behind the MS Office PR for merge."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Making one minor tweak to Figma: showing \"Google Chrome\" rather than \"Chrome\" so we can just use the FMA name there rather than a bespoke value."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Also, Figma doesn't show what to do in the \"Show details\" modal so I added a tooltip there (screenshots incoming on PR)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee Added Chrome Enterprise to the description in apps.json. Probably makes more sense to mention there than in the docs."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e @marko-lisica Making one minor tweak to Figma: showing \"Google Chrome\" rather than \"Chrome\" so we can just use the FMA name there rather than a bespoke value.\n\n\u003e Also, Figma doesn't show what to do in the \"Show details\" modal so I added a tooltip there (screenshots incoming on PR).\n\nLooks good to me! Thanks!"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Do we plan on using \"latest\" for the windows FMA as well? I know it's not part of this issue, but looking at the download URL in `ee/maintained-apps/outputs/google-chrome/windows.json`, it is also not versioned `https://dl.google.com/dl/chrome/install/googlechromestandaloneenterprise64.msi`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev No; @jahzielv is swapping Windows to a version-pinned installer in #27756."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68.1\n\n**Web browser and operating system**: Firefox 139 on Fedora 42\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nWhen uploading a .deb and a .rpm package to Fleet for self-service, on a host that is only compatible with one of the formats, both packages will be available in the self-service UI. When you attempt to install the mismatched package, the installation will fail.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a .deb and .rpm, enabling self-service for both, to a team with a Linux host.\n2. Navigate to self-service on the host and observe that both packages are available for installation.\n3. Attempt to install the mismatched package for your host.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nShow only the package that's compatible with the host.\n",
          "number": 29849,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Self-service serves incompatible packages to Linux hosts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29849"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX2sI",
        "labels": [
          "bug",
          ":release",
          "customer-numa",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤ Self-service serves incompatible packages to Linux hosts",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet self-service handling of custom packages for Linux distros #6554](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/f586902d-3b77-46a4-8c6a-8f9f231cbb1f)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "@mason-buettner, was this reproduced by you or reported by customer (and need reproduction)?\nAnyway, assigning Orchestration team."
          },
          {
            "author": {
              "login": "mason-buettner"
            },
            "body": "@sharon-fdm I've reproduced this. Attaching screenshots of the application details in self-service, and the view from the host that's still allowing me to retry the failed install.\n\n![Image](https://github.com/user-attachments/assets/acbc3f81-122f-4d2a-a64d-fd55ebdf004c)\n\n![Image](https://github.com/user-attachments/assets/e3c31560-93a8-4f93-a885-3b9a688a0339)\n\n![Image](https://github.com/user-attachments/assets/f5a9b126-cb74-4b85-8d52-656e4f46f6a9)"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I took a stab at the to fix. It seems like it'd be the reasonable expectation but I don't know what would really have to go into that."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nTested on Ubuntu and Fedora.\n\nUploaded .deb, .rpm, and .tar.gz files\nConfirmed only .deb and .tar.gz files were available in self service for Ubuntu hosts.\nConfirmed only .rpm and .tar.gz files were available in self service for Fedora hosts. "
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.65RC and older\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nCVE-2025-43200 is shown twice for macOS 15.1.1 in Dogfood.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Enroll a Mac with a vulnerable OS version and run vulnerabilities\n2. Enroll a Mac with a different architecture but the same (vulnerable) OS version and run vulnerabilities again\n3. Check the detail page for the shared OS version; you'll see duplicate CVEs\n\nThis is also visible in the OS list view when hovering the vulnerabilities column for an affected version (or, more easily, in the OS versions collection endpoint) that powers the list.\n\nSee [Dogfood](https://dogfood.fleetdm.com/software/os/144). The duplicate is from the API, so this is a backend issue.\n\n### üõ†Ô∏è To fix\nSince we don't split out different architectures in the UI for OS version, seems like we need to merge rows for the OS vulnerabilities query so there is one result row per CVE per name/version combo, even if there are multiple architectures and thus multiple rows.\n\nIf we want to split out OS versions by architecture later we can revise the query logic to look at vulns by OS version ID rather than by name/version, which will give us one row per vuln.",
          "number": 27061,
          "repository": "fleetdm/fleet",
          "title": "ü™≤OS list/detail shows the same CVE twice when an OS version has multiple architectures",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27061"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX420",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤OS list/detail shows the same CVE twice when an OS version has multiple architectures",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Marking this as a released bug as this is almost certainly an issue with the `ListVulnsByOsNameAndVersion` data store function query, probably for both Fleet Free and Fleet Premium versions of the query, due to multiple rows in the OS versions table for the same OS name and version due to differing architectures.\n\n@rfairburn can you pull the results of the following query from Dogfood?\n\n```sql\nSELECT id FROM operating_systems WHERE name = \"macOS\" AND version = \"15.3.1\"\n```\n\nPretty sure there will be two rows there, one per arch, in which case that'll confirm my suspicion of where the problem is.\n\nIf that's the issue, fix would probably be to add a group-by on CVE number, at which point we'll need to pick a reasonable value for `created_at` (probably `MIN()`) for cases where multiple rows are returned."
          },
          {
            "author": {
              "login": "rfairburn"
            },
            "body": "@iansltx \n\n```\n+-----+\n| id  |\n+-----+\n| 487 |\n| 504 |\n+-----+\n2 rows in set (4.12 sec)\n```\n\nFurther inspection confirms that they are differentiated by `arch` but the same name and version."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1750360526707539"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Updated repro steps based on further analysis (enrolling two different-arch same-version hosts at the same time won't trigger this), and swapped repro to reference OS versions/vulns where this is still an issue in Dogfood."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Enroll a Mac with a vulnerable OS version and run vulnerabilities\n2. Enroll a Mac with a different architecture but the same (vulnerable) OS version and run vulnerabilities again\n\n- [x] Check the detail page for the shared OS version there should not be duplicate CVEs"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.69.0\n\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nAfter uploading a custom package to Fleet and using the returned hash_sha256 to create a software yaml in my GitOps repo, I am unable to create a policy automation.  \n\nExample:\n\n#### /lib/software/1password.yml\n\n```\nhash_sha256: 8e6a49d6d26d01586dfbbb89b2c2b48d51ef535a9dccea573945bb776b3901ab\n```\n\n#### /teams/my-team.yml\n\n```\nsoftware:\n  packages:\n    - path: ../lib/software/1password.yml\npolicies:\n  - name: macOS - 1Password installed\n    query: SELECT 1 FROM apps WHERE bundle_identifier = 'com.1password.1password';\n    install_software:\n      package_path: ../lib/software/1password.yml\n    critical: false\n    description: Our SOC 2 policies require a password manager to be installed on all workstations.\n    resolution: 1Password should be automatically installed. If it is missing, install it from self-service. \n    platform: darwin\n```\n\nThe policy and software are successfully applied to the team, but the 'install software' automation is not created.\n\nFrom customer:\n\n\"The policy and the software are in Fleet. However, the Policy does not seem to have the software item associated with it, to be executed when the policy fails. I can add it manually in the UI.\"\n\n\u003e We did not explicitly test this using a policy yaml rather than an inline definition while reproducing.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Upload a custom package to the Fleet UI with GitOps mode enabled.\n2. Utilize the `hash_sha256` of the software to create a software yaml in GitOps repo.\n3. Add software YAML to a policy to install that software package\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica\n\nMake sure that user can add policy automation to install software when using GitOps mode and software `hash_sha256`.\n",
          "number": 30435,
          "repository": "fleetdm/fleet",
          "title": "[ GitOps ] Cannot create automation for software uploaded as a custom package in Fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30435"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX2Wc",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "customer-numa",
          "customer-mozartia",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "[ GitOps ] Cannot create automation for software uploaded as a custom package in Fleet",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Swapping this over to the product board for triage, as this hasn't been assigned a P1 so it can't hop onto the release board unestiamted."
          },
          {
            "author": {
              "login": "ksatter"
            },
            "body": "Thanks @iansltx "
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Help with potential Fleet bug in custom packages #7000](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/d55bc828-21c7-45e3-8626-613e52ada076)"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @mostlikelee, this issue appears to be preventing GitOps users from automatically installing software. We should prioritize this and assign it a `P2`. What do you think?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Hey [@mostlikelee](https://github.com/mostlikelee), this issue appears to be preventing GitOps users from automatically installing software. We should prioritize this and assign it a `P2`. What do you think?\n\nAgree, adding the P2 label\n\ncc: @lukeheath \n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I get a more explicit error rather than a silent failure:\n\n```\nError: 2 errors occurred:\n\t* software URL is required\n\t* failed to parse policy install_software \"macOS - Firefox installed\": install_software.package_path URL  not found on team: ../lib/software/firefox.yml\n```\n\nEDIT: Never mind. Old fleetctl version locally. Was able to repro what I believe to be the same issue."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Upload a custom package to the Fleet UI with GitOps mode enabled.\n2. Utilize the hash_sha256 of the software to create a software yaml in GitOps repo.\n3. Add software YAML to a policy to install that software package\n(I followed the format in the description of this ticket)\n- [x] Confirm after running GitOps that the software automation is applied to the policy\n\nNote: I also tried by using the hash_sha256 in both the packages section and the policy section like this:\nand confirmed after running GitOps that the software automation was applied to the policy\n\n\u003cimg width=\"734\" height=\"431\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/718f6915-775a-4577-aafa-13478c72e92b\" /\u003e\n\u003cimg width=\"724\" height=\"443\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/11114d03-53f7-4d12-ab5a-095910664f40\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.0\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nhttps://github.com/user-attachments/assets/caf5f833-cc19-4621-9182-45fa36eeb8bb\n\nDatabase for repro can be found here:\nhttps://drive.google.com/file/d/1DJDOk0Dr5d1UdP12AbxxgnwBBUsLAADF/view?usp=drive_link\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a label to fleet, make sure the label isn't applied to any hosts\n2. Add an FMA or custom package to a team, use \"Custom\" target, exclude any, for the label that no hosts have. Make it available in Self service.\n3. For an enrolled host on that team, check the software that is \"Available for install\"\n4. Open Self service for the host\n\n### üïØÔ∏è Expected Behavior\n\"Software will only be available for install on hosts that don't have any of these labels\"\nOur host does not have the label, so the software should be available for install for this host. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nManual labels should not consider timestamps for membership.\n",
          "number": 29315,
          "repository": "fleetdm/fleet",
          "title": "ü™≤FMA/Custom packages not respecting custom scoping \"exclude any\" for label that doesn't exist on host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29315"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8dE",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤FMA/Custom packages not respecting custom scoping \"exclude any\" for label that doesn't exist on host",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "I noticed in the database dump the label \"Nobody has this label\" was created at `2025-05-20 22:14:03`, however, the host's `label_updated_at` time was `2025-05-20 21:53:39`. In our previous available software query we are doing this check `:host_label_updated_at \u003e= lbl.created_at` with a comment above it stating\n```\nignore software that depends on labels created\n _after_ the label_updated_at timestamp of the host (because\nwe don't have results for that label yet, the host may or may\nnot be a member\n```\n\nWhich is why in this particular case firefox is getting excluded. When I run the following query `update hosts set label_updated_at = '2025-05-20 23:00:00' where id = 2;` and reload the page I get firefox in the result set.\n\n\u003cimg width=\"1639\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f99f21a8-171e-475e-abc5-d7c4e3999657\" /\u003e\n\nIt looks like that `label_updated_at` gets updated when we refetch the host vitals?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thanks @ksykulev I went back to 4.66.0 and confirm this works the same way. "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I'm leaving this as a bug because it's not intuitive for the end user to understand why it works the way it does. "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee @ksykulev I proposed a solution in the `to fix` area and am moving this to **Ready to estimate**.\n\n@mostlikelee do you want to keep this as a bug or convert it to a feature request?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "In the above case:\n1. A dynamic label was created (@jmwatts  can you confirm this is only for dynamic?)\n2. The host hasn't refreshed, so we don't know yet if it's a member of the label.  Fleet assumes the host does not have this label.\n3. This software has a target that excludes that label.\n\nSo the current state is that the host is not in the label, so it _should_ show in the list.\n\nCould use a sanity check from @lucasmrod here as this is the same behavior for policy targets."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee I was not using dynamic labels so it does apply to manual labels. "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e [@mostlikelee](https://github.com/mostlikelee) I was not using dynamic labels so it does apply to manual labels.\n\nok, let's scope this to remove timestamp consideration from manual labels.  updating the \"to Fix\" section."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1748525930809559"
          },
          {
            "author": {
              "login": "ksatter"
            },
            "body": "@ksykulev I'm seeing an issue where Manual labels are also not being respected for 'labels include any'. Do you think this is likely the same root problem, or should we break that out into a separate issue?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "@ksatter ~~Right now the logic stands that if a label (manual or dynamic) is created and we don't fetch host vitals, whatever the label is doing will not apply to the host. So in your case, `labels include any` also falls under this case.~~\n~~After this issue is fixed, any type of manual label will apply despite the `created_at` time or host `label_updated_at` time~~\n\nI was incorrect, looking at the query it doesn't look like it's checking timestamp for `include_any`.\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L2645-L2662\n\n@jmwatts In the case of `exclude_any`, manual labels will apply \"immediately\" and dynamic labels will require a host refetch. How do we want `include_any` to work? Same logic? Or does timestamp not matter in their case?"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nhttps://github.com/user-attachments/assets/2927ea40-4477-4a09-a393-e1583a85cb75\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to dogfood CVE details page https://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-24162 and note the detected date\n2. Go to dogfood vulnerabilities table page  https://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-24162\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0 and note the detected date\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nDetected date on software vuln table should match detected date in details ",
          "number": 26618,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Software vuln detected dates do not match between screens",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26618"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7LA",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Software vuln detected dates do not match between screens",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/26618?planning-poker) with Zenhub @iansltx @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm not able to repro this (wanted to check what was going on prior to throwing an estimate on). Both places have the same timestamp returned from the API (Jan 28 ~6:40a UTC), and both show the expected \"one month ago\" in the UI.\n\nMaybe we close this and if anyone sees this again we reopen?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Maybe we close this and if anyone sees this again we reopen?\n\ni'm onboard with this, unless @RachelElysia has any other info that may get us into this state\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per [Slack](https://fleetdm.slack.com/archives/C086V2QK76X/p1741109822016689?thread_ts=1741109272.543039\u0026cid=C086V2QK76X), @jmwatts has a repro."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Can you grab your vulnerabilities table and confirm which `created_at` timestamp is the correct one? This feels like a join is propagating things across a bunch of columns where it shouldn't be, so I'm assuming that the individual CVE page is correct and the list is wrong, but want to make sure."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "There's a lot in that table :D so here's one example but let me know if you need more than this\n\n![Image](https://github.com/user-attachments/assets/e2a4def4-7ace-4802-b833-55bb6ec2aa09)\n\n![Image](https://github.com/user-attachments/assets/b4b6c662-824b-4a93-a727-a19a0060d60a)\n\n![Image](https://github.com/user-attachments/assets/54b65a28-9216-4cdd-af88-7e3a7a24013a)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This is useful; thanks!\n\nLooks like we may have at least two bugs here. In the case you showed, the list view is correct but the individual vuln view shows detected as the current timestamp (though this seems to vary from vuln to vuln). In Rachel's example though both places have different values, both of which aren't the current timestamp. So we might need to scope this as \"fix the bugs that we can repro\", which won't necessarily be the original bug."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Here's one example that is showing detected as a minute ago, but the table view of vulns shows another time:\n\ndetails view\nhttps://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-0938\ntable view of vulns\nhttps://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-0938\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0"
          },
          {
            "author": {
              "login": "rachaelshaw"
            },
            "body": "I haven't seen this issue exactly, but was about to report a similar issue: currently, every CVE detail page is saying detected \"less than a minute ago\"; In the API response, `created_at` always seems to be set to the current time. (List view is fine, only seeing this w/ `GET /vulnerabilities/:cve`). \n\n@RachelElysia do you think this is related, or should I report that bug seperately?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@rachaelshaw The one you're seeing is the one I mentioned. Thinking we'll resolve that one with this ticket and see if we can repro the other one afterward."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.63.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nPackage shows as `MacFULL`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nUpload [SubEthaEdit](https://subethaedit.net/) as a custom package.\n\n### üïØÔ∏è More info\n\nSplit from #24873, as the package structure for this installer is different from SentinelOne and Cold Turkey, so the fix for those packages doesn't work here.\n",
          "number": 25587,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Incorrect software title name (MacFULL) when uploading SubEthaEdit",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25587"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5dM",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "~sw-upload"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Incorrect software title name (MacFULL) when uploading SubEthaEdit",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/g-software-current-sprint-67685f6ff1830a000f347a73/issues/fleetdm/fleet/25587?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "timebox - we may not have data to use"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Another unexpected naming scenario: this package uploads as \"trial\" https://drive.google.com/file/d/16UdYLIENNcFNBstrtBTl4ZHiLFe9-qDB/view?usp=drive_link\n\n\u003cimg width=\"1505\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/54fff766-d7bb-4010-9b63-aab84ead0400\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like there's a quick fix for this, as the app has an install path: if the install path ends with .app, grab that install path and use it as the name:\n\n```\n~/code/fleet main $ go run tools/custom-package-parser/main.go -path /Users/ian/Downloads/SubEthaEdit-5.2.4.pkg \n- Name: 'SubEthaEdit'\n- Bundle Identifier: 'de.codingmonkeys.SubEthaEdit.MacFULL'\n- Package IDs: 'SEEMode.ActionScript,SEEMode.Base,SEEMode.C,SEEMode.CPP,SEEMode.CSS,SEEMode.Conference,SEEMode.Diff,SEEMode.EEx,SEEMode.ERB,SEEMode.Elixir,SEEMode.Erlang,SEEMode.HTML,SEEMode.JSON,SEEMode.Java,SEEMode.Javascript,SEEMode.LaTeX,SEEMode.Lua,SEEMode.Markdown,SEEMode.Objective-C,SEEMode.PHP-HTML,SEEMode.Perl,SEEMode.Python,SEEMode.Ruby,SEEMode.Swift,SEEMode.TOML,SEEMode.XML,SEEMode.bash,SEEMode.go,SEEMode.wren,de.codingmonkeys.SubEthaEdit.SeeTextImporterFULL,de.monkeydom.TCMPortMapper,isao.sonobe.OgreKit,org.mozilla.universalchardet,org.sparkle-project.InstallerConnection,org.sparkle-project.InstallerLauncher,org.sparkle-project.InstallerStatus,org.sparkle-project.Sparkle,org.sparkle-project.Sparkle.Updater'\n- Version: 5.2.4\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The fix included here also handles the Pixelmator Pro Trial nicely:\n\n```\n~/code/fleet 25587-pkg-name-extraction $ go run tools/custom-package-parser/main.go -path /Users/ian/Downloads/PixelmatorProTrial_3.6.14.pkg \n- Name: 'Pixelmator Pro Trial'\n- Bundle Identifier: 'com.pixelmatorteam.pixelmator.x.trial'\n- Package IDs: 'com.pixelmator.PXMEngine,com.pixelmator.pixelmatorteam.LibRaw,com.pixelmator.pixelmatorteam.PDFEngine,com.pixelmator.pixelmatorteam.PSDEngine,com.pixelmator.pixelmatorteam.SVGEngine,com.pixelmatorteam.PTFoundation,com.pixelmatorteam.PTImageIO,com.pixelmatorteam.PTPaintTools,com.pixelmatorteam.PTPhotoKit,com.pixelmatorteam.extended-raw-support,com.pixelmatorteam.pixelmator.PXMKit,com.pixelmatorteam.pixelmator.object-removal,com.pixelmatorteam.pixelmator.paint-selection,com.pixelmatorteam.pixelmator.x.PXMPhotoKitUI,com.pixelmatorteam.pixelmator.x.PXMUIKit,com.pixelmatorteam.pixelmator.x.automator.apply-color-adjustments-to-images,com.pixelmatorteam.pixelmator.x.automator.apply-effects-to-images,com.pixelmatorteam.pixelmator.x.automator.auto-enhance-images,com.pixelmatorteam.pixelmator.x.automator.auto-white-balance-images,com.pixelmatorteam.pixelmator.x.automator.change-type-of-images,com.pixelmatorteam.pixelmator.x.automator.denoise-images,com.pixelmatorteam.pixelmator.x.automator.increase-resolution-of-images,com.pixelmatorteam.pixelmator.x.automator.scale-images,com.pixelmatorteam.pixelmator.x.automator.trim-images,com.pixelmatorteam.pixelmator.x.pxmspotlight,com.pixelmatorteam.pixelmator.x.trial.PXMPro,com.pixelmatorteam.pixelmator.x.trial.photos-extension,com.pixelmatorteam.pixelmator.x.trial.quicklookpreviewextension,com.pixelmatorteam.pixelmator.x.trial.remove-background,com.pixelmatorteam.pixelmator.x.trial.thumbnailextension,com.revenuecat.Purchases'\n- Version: 3.6.14\n```"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nUploaded SubEthaEdit and Pixelmator ProTrial. Names are much more reflective of the software that was uploaded. \n\n\u003cimg width=\"1506\" height=\"589\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8e72b528-b074-46c7-a28f-72acbe3abd29\" /\u003e\n\n\u003cimg width=\"1411\" height=\"537\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/db3728de-f429-49cf-bc88-4a979ae1166a\" /\u003e\n\nNOTE: If the software has been previously uploaded, the name will still be wrong until the installer has been deleted from all teams and the corresponding row in `software_titles` has been removed from the database. Once that's done and the package is re-uploaded, the name will be the corrected one. "
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a IT admin,\n| I want to show my end users only relevant actions\n| so that I provide my end users a clear self-service software experience.\n\n## Key result\n\nNone. Prioritized this because it's mission critical for `numa` to use Fleet as their software self-service tool.\n\n## Original requests\n\n- #30214\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @mostlikelee, @RachelElysia, @iansltx , @jacobshandling \n\n## Changes\n\n### Product\n- [ ] UI changes: Figma [here](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/Template--Copy-?node-id=0-1\u0026t=BVXxwI7m9syoqGiA-1)\n- [ ] CLI (fleetctl) usage changes: No changes\n- [ ] YAML changes: No changes\n- [ ] REST API changes: No changes\n- [ ] Fleet's agent (fleetd) changes: No changes\n- [ ] GitOps changes: No changes\n- [ ] Activity changes: No changes\n- [ ] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Ensure guides referencing software (self-service, software packages) correctly reference the UI as it currently stands, including caveats around software updates\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n- [ ] [UI Status and UI actions spreadsheet ](https://docs.google.com/spreadsheets/d/1GKYTQ80RP_Zec32heeniav2rUS9Snegy4S3ob0lgXYc/edit?usp=sharing)\nTest on macOS, Windows, Linux hosts for Self-service\nTest with Chrome, Safari, Edge and Firefox\nTest with FMA, Custom packages, and VPP software\n\nOn host details page or Self service with several installers available:\n\n- [x] Default sorting order is by Name ascending\n- [x] Name sort order can be reversed\n- [x] Sorting by status sorts software by status in the order mentioned in Figma (and can be reversed)\n- [x] Font weight should be \"regular\"\n- [x] If software is not in software inventory, status is \"---\"\n- [x] If status is \"---\", available action is \"Install\" (Uninstall should not be available)\n- [x] When a user clicks \"Install\", status changes to \"Installing\"\n- [ ] If software installs successfully, status changes to \"Installed\"\n- [x] If software fails to install, status changes to \"Failed\"\n- [x] If software is in software inventory, Status is \"Installed\"\n- [x] If software status is \"Installed\", available actions are \"Reinstall\" and \"Uninstall\"\n- [x] When a user clicks \"Reinstall\", status changes to \"Installing\", and when the action completes, the status changes to \"Installed\"\n- [ ] When a user clicks \"Uninstall\", status changes to \"Uninstalling\" and when the action completes, the status changes to \"---\"\n- [x] If software fails to uninstall, status changes to \"Failed (uninstall)\"\n- [x] If software is in software inventory, and other criteria are met (see [#27983](https://github.com/fleetdm/fleet/issues/27983) ) status is \"Update available\"\n- [x] If status is \"Update available\", available actions are \"Update\" and \"Uninstall\"\n- [x] If Update available is clicked, details modal is shown with detail of installed software and possible actions to take\n- [ ] When a user clicks \"Update\", modal closes and status changes to \"Updating\", and when the action completes, the status changes to \"Installed\"\n- [x] If software fails to update, status changes to \"Failed\"\n- [ ] If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n- [x] If software is a tarball (`tgz_packages`), Fleet won't do inventory, and status in Library tab will only reflect if install is triggered from Fleet.\n- [x] Make sure that when the tarball is installed by Fleet, show `Installed` status + `Reinstall` and `Uninstall` actions.\n- [x] Make sure that when tarball install failed, to show `Failed` status and `Install` action only.\n- [x] Make sure that when tarball is available in library that no status is displayed and only `Install` action is available.\n- [x] Make sure that the new copy as specified in Figma is added to \"Install details\" modal for each package that is missing version information (no inventory). \n\n\nNOTE: Host details modal and Self service modal have different copy, see Figma\n- [x] Clicking on any status for any operating system should open a details modal EXCEPT\n- [x] The only non-clickable status is for Host details \u003e software \u003e library \u003e status for VPP successful and failed installs before @ksykulev 4.72 fix merged 8/1/25, those will still have a tooltip to go to the activity feed to view success/fail information\n- [x] Details modal title should match the status and should conform to Figma\n- [x] Install and Uninstall details dropdown should be collapsed by default and only show for installs or uninstalls completed by fleet (If the software was installed by the user, the modal will still show but will not contain a details dropdown, see Figma)\n- [x] Clicking on an available action button within the modal closes the modal and updates the status in the list, according to the action that was taken, the action completes, and the status is updated again.\n- [x] Confirm multiple versions installed \n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [x] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30240,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service actions based on whether software is on the host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30240"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX1-s",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-numa",
          "#g-software",
          "~context"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Show appropriate self-service actions based on whether software is on the host",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@noahtalerman: Decided to cut this \"smarter\" logic to solve these problems:\n- Multiple instances of the software installed\n- User v. machine scope on Windows\n\nCurrently, for macOS, only software that's installed in Applications/ shows the \"Update required\" status. If the software isn't in Applications/ but it's in inventory, Fleet shows \"Installed\" regardless of version. Fleet will use the install_path to know if the software is in Applications/\n\nCode wise: if (macOS and install_path is applications/), check only that path if it‚Äôs outdated and then show ‚Äúupdate available‚Äù else show ‚ÄúInstalled‚Äù\n\nFor Windows Fleet-maintained apps, software only shows \"Update available\" if the installed software is the same scope (user or machine) as the Fleet-maintained app. Based on install_path. Otherwise, if the software is in inventory, Fleet shows \"Installed\".\n\nFor Windows custom packages, software only shows \"Update available\" if the software title has an install_path. Otherwise, if the software is in inventory, Fleet shows \"Installed\"."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @RachelElysia, I added copy and a link to the contact URL based on `numa` feedback. We met with them today (2025-06-27) and showed them this story's wireframes.\n\n![Image](https://github.com/user-attachments/assets/6ca4ef45-09f2-4ac3-afee-bd5c995e151a)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts I realize this is offloading work to you that should've been done earlier by someone else, but can you work through a test plan here based on what's in Figma?\n\nIf it's more helpful to delegate the test plan for this to #27983, since these changes touch largely the same UI (though this hits both self-service and host software), that works too, and I can do a first pass there.\n\nWent ahead and updated the story template to remove non-test-plan TODOs to help a little."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx I've added the first pass test plan, just a couple questions left here:\n\n\u003cimg width=\"135\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1a202f1e-a311-4ccd-9aff-76ec85ef8dac\" /\u003e\n\n~~This is kind of vague, what is the criteria for this \"Update Available\" status?~~\n~~- Software is installed on host~~\n~~- Software installer is available~~\n~~- Software is a different version?~~\n~~- Software installer is a higher version than the version that's installed?~~\n\nNevermind, found that criteria in the [#27983](https://github.com/fleetdm/fleet/issues/27983) ticket. Only question left is:\n\nWhat are the available statuses for tar.gz items? \n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts No update available status for tarballs as they don't have an associated version."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to estimated with an 8 based on prior discussions"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica \n\nIn the test plans it says:\n\n\u003e  If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n\nIs there a different tooltip? I currently have it with no tooltip if it was installed by the user not using Fleet. Can you add the tooltip to the Figma spec or remove this from the QA plan?"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "[Doc to track questions around the various modals](https://docs.google.com/document/d/1sAh752RZCCquWhI25emzNtnBVV3wA-GAhjbdlaB2Pls/edit?tab=t.0)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Heads up that we're marking this one for expedited drafting"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "@mostlikelee thanks. To over communicate, most of the remaining questions are regarding [the modals subtask](https://github.com/fleetdm/fleet/issues/30860)"
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30136,
          "repository": "fleetdm/fleet",
          "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30136"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "labels": [
          ":release",
          "#g-mdm",
          "~csa",
          "~mdm-maturity",
          "#g-orchestration",
          "#g-software",
          "macos26"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "The version reported in osquery is 16.0 but when I look in \"About this Mac\" and System Settings \u003e\u003e General it's 26.0\nIt does get the build right though... 25A5279m"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I try to enforce encryption I'm not seeing the banner instructing me to restart or log out, until I've restarted or logged out. Then it stays there no matter how many times I restart. I'm not seeing the banner clear and even after running the `cleanups_then_aggregation` cron the encryption status isn't updated and it says `unrecognized`:\n\n![Image](https://github.com/user-attachments/assets/f3c0b064-8aae-4c39-9993-bd01af2fbd84)\n\nOn the host, I can see the disk encryption profile in System Settings and Filevault is turned on and a recovery key has been set:\n\n\u003cimg width=\"741\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/013cc568-6b97-4bbb-be68-a458bbbdf56b\" /\u003e\n\n\u003cimg width=\"730\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/986b4c3e-42f2-4b9c-9756-f1acc8e1f302\" /\u003e"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Apple introduced a new Device Migration feature (that only works with the latest OSes) which will move your host from a 3rd party MDM server over to Fleet,  all via ABM. It works! however during the enrollment to Fleet the Setup Experience SwiftDialogue window did not display the software Fleet was installing in the background"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-numa\nmacOS 26 - MDM migration invokes Setup Experience (silently) - awaitconfigured\n\n- Upgraded endpoint to macOS 26 \n- ABM recognizes that\n- Able to set a deadline\n- Device starts to migrate\n- Unenrolled from previous MDM (didn‚Äôt have to initiate anything)\n- Recognizes that it needs to enroll into Fleet\n- Waiting for ‚Äòdevice configured‚Äô command\n- Starts going through setup experience again (calling through all apps, VPP apps, setup script)\n\nExpected behavior: Assume host has all apps already installed. It‚Äôs been previously managed. It‚Äôs not a net new device so it shouldn‚Äôt run setup experience. VPP apps would get removed from previous MDM so those would be the one thing that should run again\n\nNote from @mostlikelee : Technically, as soon as the device gets the Fleet MDM profile, the apps should come along with it. We should test"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-eponym\nFleet menu bar item doesn't show up after enrollment in beta 2"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet menu not showing after enrollment in macOS 26 beta 2 #6834](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3ec39176-1e2a-49ec-aea4-3c44108d90d0)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Changing MDMs without a deadline doesn't not show a notification on the host. Maybe it takes a lot more time (writing this after waiting for 2-3 hours)"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Hi all üëã , any issues directly related to the new MDM migration feature Apple introduced in ABM should be tracked separately here https://github.com/orgs/fleetdm/projects/58/views/9?pane=issue\u0026itemId=119675644\u0026issue=fleetdm%7Cfleet%7C30695\n"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `af417c1`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nOn the Host details \u003e Software tab, when I select Show details for software that's installed on the host I see the new grey box styles:\n\n\u003cimg width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3aa14955-e790-4e7f-b26f-b911e94f12fb\" /\u003e\n\nWhen I select software that's available for install but not yet installed on the host I don't see the new grey box:\n\n\u003cimg width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a146d1b5-f3b6-4638-aa26-7666cae07792\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üõ†Ô∏è To fix \n\n- @noahtalerman: We want to show to the new grey box in the details modal for all software.\n",
          "number": 30232,
          "repository": "fleetdm/fleet",
          "title": "Inconsistent style: Host details \u003e Software \u003e Show details",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30232"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX9VU",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Waiting",
        "title": "Inconsistent style: Host details \u003e Software \u003e Show details",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Weird behavior for sure -- I thought it was put in boxes only if there were multiple versions installed but I guess not!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "If we want to just add a grey box around this, it's a EST: 1 FE only and should take 10 minutes.\n\nFrom #20638:\n```\n  // special case when we dont have installed versions. We can only show the\n  // software type atm.\n  if (!installed_versions || installed_versions.length === 0) {\n    return (\n      \u003cdiv className={`${baseClass}__software-details`}\u003e\n        \u003cDataSet\n          title=\"Type\"\n          value={formatSoftwareType({ source: software.source })}\n        /\u003e\n      \u003c/div\u003e\n    );\n  }\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given the above movement, looks like this has been estimated, so moving forward."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n- Inventory versions use the short format (ie.  16.98 or 16.97.2)\n- Vulnerability scanning [uses](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac) the short format (same as above)\n- FMA/homebrew uses the build number format (ie. 16.98.25060824)\n\nThe mismatch between inventory and package versions will cause issues when attempting to update the version with a policy because 16.98.25060824 \u003e 16.98 (they are the same version)\n\nFMAs affected:\n- Microsoft Excel\n- Microsoft Word\n\nGoal: use the same version throughout fleet for version compare and vuln scanning\n\nOption 1:  Change the FMA version number\nHomebrew does not contain the short format.  The short format could be gathered via:\n- extracting short bundle version from the package\n- referencing an external source such as the [office release notes](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac) used in vulnerability scanning\n- Not considered due to software ingestion load risk and version parity with the VPP app which uses the short format\n\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install Microsoft Excel on host, refetch host vitals\n2. Note version number in inventory\n3. add Microsoft Excel FMA, note version number on package\n\n### üïØÔ∏è More info _(optional)_\nalso considered:\nOption 2: Change the inventory version number / update vulnerability logic\n- add bundle_version to detail queries, which contains the build number format\n- update vuln scan logic to utilize the build number format.  Fleet uses the mac office release notes for this which contains the build number.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nOption 1:  Change the FMA version number\nHomebrew does not contain the short format.  The short format could be gathered via:\n- extracting short bundle version from the package\n- referencing an external source such as the [office release notes](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac)\n",
          "number": 30082,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Microsoft Office for Mac Fleet-maintained apps version mismatches",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30082"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4XA",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤ Microsoft Office for Mac Fleet-maintained apps version mismatches",
        "comments": [
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Testing notes left on the PR: #30686"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer on the Software page,\n| I want to filter by a custom severity (CVSS score) range\n| so that I can filter software by a vulnerability threshold my security team uses (ex. CVSS ‚â• 7.5).\n\n## Key result\n\nNone. Prioritized because the current behavior makes it look like Fleet does not understand how people actually use CVSS. But now we do.\n\n## Original requests\n\n- #30237\n\n## Context\n- Product Designer: @RachelElysia + @iansltx \n- Engineer: @RachelElysia \n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma](https://www.figma.com/design/J2mqgWcS9RG3jaQc43V67m/-30248--Software-page--filter-by-custom-severity--CVSS-score--ranges?node-id=0-1\u0026p=f\u0026t=YQB8wo6YOLyUzyFu-0)\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes (API endpoint already supports min/max)\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Follows existing CVSS score filtering, so Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [x] Contributor API changes: No changes\n- [ ] Feature guide changes: Make sure the [vulns filtering article](https://fleetdm.com/guides/filtering-software-by-vulnerability) is current with the UI\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n\u003e Note: See Figma for single source of truth for exact text copies \n\nTest modals on Host \u003e Software \u003e Inventory page and Software page\n\n1. Min max is present and new help text is present\n2. Min max is enabled only if vuln software toggle is enabled\n3. Defaults to \"Any severity\"\n4. If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n5. If a user clicks on \"Any severity\", the min and max are cleared\n6. If a user clicks on \"Custom severity\", the min and max do not change\n7. If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n8. If a user clears both custom min/max, the dropdown will change to \"Any severity\" but returns to \"Custom severity\" if they start typing\n9. If the user hits apply with no severity entered, it will apply any severity\n10. If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n11. If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n12. If the user types in an invalid number into either min/max (e.g. 4.11 or -3), the in label error states it must be a number between 0-10 with an increment of 0.1\n12b. The user cannot type in string as the input is limited to type number\n14. If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n15. By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n16. Clearing the filter should show all software \n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30248,
          "repository": "fleetdm/fleet",
          "title": "Software page: filter by custom severity (CVSS score) ranges",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30248"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "labels": [
          "story",
          ":release",
          "~pushed",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "Software page: filter by custom severity (CVSS score) ranges",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @lukeheath marking this story as `P2`. The current behavior makes it look like Fleet does not understand how people actually use CVSS.  But now we do."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "TODO RAchel: first draft of test plan"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Just filled in this story checklist so it's ready for User Story Review (credit to @RachelElysia for the test plan)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "assigning to @RachelElysia to estimate"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath needs your estimate here and we can move it to the software board"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "For everyone's info, I was asked to estimate this this morning and estimated it at a 4. Looks like changing the project removed the estimate. @sharon-fdm @mostlikelee "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh no that's my bad.  we discussed in sprint kickoff review that Luke is going to take this one @jacobshandling "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I'll assign a 4 here and move it to the software board for Luke"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Might be minimal extra work to solve #30524 alongside this since filter + sort seems like it would be sufficient there. Maybe dev this with that request in mind and check with the customer to see whether that solves their issue?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "removing milestone.  will not get to this story this sprint"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Can you create Sprint 45 and move this into it?"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@RachelElysia Thanks for taking this. I thought I'd be able to squeeze it in, but wasn't able to."
          }
        ]
      },
      {
        "assignees": [
          "fuhry"
        ],
        "content": {
          "body": "github.com/urfave/cli/v2 doesn't parse flags after it encounters the first argument. This left me very confused when trying to call `fleetctl api some/route -F arg=value` and the query string wasn't being updated.\r\n\r\nMake this an error case to prevent future confusion.\r\n\r\nNote that v3 of `urfave/cli` [supports arguments](https://pkg.go.dev/github.com/urfave/cli/v3#Argument), so the right thing to do in the long term is upgrade this library to v3.\r\n\r\n# Checklist for submitter\r\n\r\nIf some of the following don't apply, delete the relevant line.\r\n\r\n\u003c!-- Note that API documentation changes are now addressed by the product design team. --\u003e\r\n\r\n- [x] Input data is properly validated, `SELECT *` is avoided, SQL injection is prevented (using placeholders for values in statements)\r\n- [x] Added/updated automated tests\r\n- [x] Manual QA for all new/changed functionality\r\n",
          "number": 30797,
          "repository": "fleetdm/fleet",
          "title": "[fleetctl] fail api command when args present after uri",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30797"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcgXr8",
        "labels": [
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "[fleetctl] fail api command when args present after uri"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "Tracking carry over work \n\n\n- Refactor work [request](https://github.com/fleetdm/fleet/pull/31018#discussion_r2225913183): Pull out Update card and Self Service card into components  on their own files \n- Unreleased bug: Multiple requests now timing out because 60 second FE timeout is not being reset",
          "number": 31309,
          "repository": "fleetdm/fleet",
          "title": "Self-service actions carryover",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31309"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdAjcc",
        "labels": [
          "~frontend",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "Self-service actions carryover"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "Fleet version: 4.67.0\n\nWeb browser and operating system: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nWhatsApp version is different when adding the Fleet-maintained app (screenshot 1), after adding (2), and after installing (3):\n\n![Image](https://github.com/user-attachments/assets/21e5d017-3589-47ba-aa1c-0874740c2a5f)\n\n![Image](https://github.com/user-attachments/assets/965ca8ff-07a9-42d8-a05b-27d51161c66e)\n\n![Image](https://github.com/user-attachments/assets/ad5fd5ce-e462-493e-a839-3c1c6a5f0853)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add whatsapp FMA app to a team\n2. Install the whatsapp on a host, then refetch host vitals\n3. Run the vulnerabilities cron\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n- When adding the Fleet-maintained app and on the software title page, show the version that gets installed (in this case: `25.11.76`)\n",
          "number": 31185,
          "repository": "fleetdm/fleet",
          "title": "ü™≤WhatsApp version different in software inventory",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31185"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc5Hl8",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "ü™≤WhatsApp version different in software inventory",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev can you pop an estimate on this one?"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nBrave is not showing as updatable because the versions do not match\n\nVersion reported by homebrew: `1.79.123.0`\nVersion reported by osquery: `137.1.79.123`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add macOS FMA\n2. Install FMA\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nFix this in the FMA manifest:\n- drop the last part (0)\n- ~~add 58 to the 2nd part (79) to create a new first part (137)~~ needs research\n",
          "number": 31122,
          "repository": "fleetdm/fleet",
          "title": "macOS Brave Browser FMA version mismatch",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31122"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc5rCE",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "macOS Brave Browser FMA version mismatch",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Here is a bit of a mapping between legacy versions\nhttps://github.com/brave/brave-browser/wiki/Brave-Release-Schedule-Archive\nHere is the upcoming release schedule\nhttps://github.com/brave/brave-browser/wiki/Brave-Release-Schedule\n\nAnd we do have a mapping on github\nhttps://github.com/brave/brave-browser/releases/tag/v1.80.122\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per further discussion, we'll do the simplest possible fix, with test automation as a prerequisite, hence the 1 estimate here."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT Admin\n| I want FMA updates to be available quickly\n| so that I can patch host software with the latest version\n\n## Key result\n\n100 FMAs\n\n## Original requests\n\nFMA updates are currently tested manually, delaying customer value by holding back the ability for them to download the latest version of a software.\n\nCurrent [update frequency](https://docs.google.com/spreadsheets/d/1Z0I9y1cx_L_HJ57oWdyl23Ek0OpXbERRnXZ-kFulG6M/edit?usp=sharing) : 3 / day\nCurrent unique FMA apps updated: 19\n\nWith the conservative goal of testing apps within 1 day of release, our current manual testing strategy will not scale as we add FMAs:\nGoal: 100 FMAs\nEstimated updates per day to test: 15\n\nTest automation here is not meant to replace all manual testing, but it will greatly reduce the scope of regression testing.  Testing 100 FMAs per release will have a large impact on QA and likely result in further release delays.\n\nWe are starting with the macosx platform first. We have a total of 21 apps for the mac platform and 6 windows applications. While this code should be written generically enough to support mac, windows, and eventually linux. Primarily focus on macosx support. \n\n## Context\n- Product Designer: @mostlikelee  \n- Engineer: @ksykulev \n\nSome things discovered during the POC.\n1. Unfortunately `act` the local github actions testing tool https://github.com/nektos/act, does not support mac osx machines. Only linux. So developing/testing on github is required.\n2. osquery is used as a primary means of checking if an application was installed and uninstalled. However, because the `apps` table primarily uses `LaunchServices`. You must be careful to deal with caching. https://github.com/osquery/osquery/blob/master/osquery/tables/system/darwin/apps.mm#L259. Check the `forceLaunchServicesRefresh` function in the POC code for more details on how to reset.\n3. Macosx also has a piece of software called gatekeeper. Most applications installed from the internet require user authorization to run for the first time. Although I do not think this impacts osquery's ability to find the application. View the `removeAppQuarentine` function for details on how to potentially deal with that. \n4. There are a number of version mis-matches that occurred between the manifest file and what osquery returns.\n```\nApps with errors: [Brave Amazon DCV Google Chrome WhatsApp]\n\nFound app: 'Brave Browser.app' at /Applications/Brave Browser.app, Version: 137.1.79.123, Bundled Version: 179.123\nApp version '1.79.123.0' was not found by osquery\n\nFound app: 'DCV Viewer.app' at /Applications/DCV Viewer.app, Version: 2024.0 (r8004), Bundled Version: 2024.0 (r8004)\nApp version '2024.0.8004' was not found by osquery\n\nFound app: 'Google Chrome for Testing.app' at /Applications/Google Chrome for Testing.app, Version: 137.0.7151.119, Bundled Version: 7151.119\nFound app: 'Google Chrome.app' at /Applications/Google Chrome.app, Version: 138.0.7204.50, Bundled Version: 7204.50\nApp version '137.0.7151.104' was not found by osquery\n\nFound app: 'WhatsApp.app' at /Applications/WhatsApp.app, Version: 25.16.81, Bundled Version: 738641321\nApp version '2.25.16.81' was not found by osquery\n```\n5. Chrome is especially tricky. \n  - It appears that it comes pre-installed on the macosx images on github. \n  - We cannot check for a specific version when verifying. The chrome installer uses a generic url that does not include the version, so the versions may change at any time. It might be best to use a `\u003e` operator for this app. \n\n## Changes\nPhase 1: Improve tooling for manual testing\nPhase 2: Port existing tooling into CI\n\n### Engineering\n- [ ] Test plan is finalized\n- [X] Contributor API changes: No changes\n- [X] Feature guide changes: No changes\n- [X] Database schema migrations: No changes\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: oN\n- Risk level: Low\n\n### Test plan\n\n1.   Open FMA Updates PR\n2.  Confirm only FMA CI tests are performed\n3.  Confirm CI tests report results and gate the merge \n\n### Confirmation\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.",
          "number": 29183,
          "repository": "fleetdm/fleet",
          "title": "Create Fleet Maintained Apps test automation",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29183"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4P8",
        "labels": [
          "story",
          ":release",
          "~engineering-initiated",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Create Fleet Maintained Apps test automation",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@mostlikelee Thanks for filing! This is a good investment and definitely something we need to do. Before I prioritize to drafting, would you please review the [create an engineering-initiated story](https://fleetdm.com/handbook/engineering#create-an-engineering-initiated-story) process? This should only have one user story, and the only section that should be removed is the \"Product\" section. \n\nOne user story allows us to focus on a single user and use case, and implement a simpler iteration. We can do a separate iteration if we want to focus on admin experience. "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath thanks, updated!"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@mostlikelee Thanks, I've prioritized to the drafting board and assigned to you as the product designer. You'll be responsible for moving this through the drafting board per the drafting engineering-initiated stories process (or assign to someone else to take it over.)"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee are we aiming to ship this in 4.72?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I think we need to rewrite the name and story here to better reflect the scope (i think we're starting with macos), but yes we want to make some progress on this front in the next sprint to get in front of FMA issues.\n\n@ksykulev can you take a pass at updating this so we can estimate any further work needed outside the POC?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Applied estimate arrived at on Friday in chat."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "- add ability to skip slugs for version mismatches\n- add ability to skip version check"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\nPart of #30240 \n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- [x] Create version comparison function and appropriate test to compare various types of versions\n\nStatus column\n- [x] Update the status column to not reflect the API `status` but whether a software is actually installed on a host\n- [x] Update the status column to have an update available for software installers that have a newer version available to install\n- [x] Add \"Updating...\", \"Update (pending)\", and \"Update available\" to the status column\n- [x] Add polling to \"Updating...\" status but specifically not to \"Update (pending)\" status\n- [x] Ensure there is no regression in statuses\n- [x] Allow for client-side sort by status for Self-service page\n- [x] Add client-side pagination to Self-service page\n\nAction column\n- [x] Update the actions to appropriately reflect action verbs for software that is currently installed/uninstalled\n- [x] Update the actions to hide uninstall on software that is detected as not installed\n- [x] Update the actions to say \"Update\" instead of install if an older version of the software is currently installed in relation to the installer version\n- [x] Ensure disabled state when updating/ update pending and action text does not change\n\n- [x] Update all this on both the h**ost details \u003e software \u003e inventory page ** and **self-service page**\n\n\n## Condition of satisfaction\n\nSee story's [Figma](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/-30240-Show-appropriate-self-service-actions-based-on-whether-software-is-on-the-host?node-id=5301-1746\u0026t=wQkHuan83PAwlqaW-0) ",
          "number": 30861,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service status and actions in the self-service table at all times",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30861"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgck8sI",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Show appropriate self-service status and actions in the self-service table at all times",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@RachelElysia can you add an estimate on this subtask?"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAmazon DCV Viewer not showing correct update status because of version mismatch\n\nHomebrew: `2024.0.8004`\nInventory: `2024.0 (r8004)`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add FMA to Fleet\n2. Install FMA\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nThis should be fixed ingestion side.  While we need to bring back software ingestion modification patterns we also need to account for FMA test automation.  \n",
          "number": 31123,
          "repository": "fleetdm/fleet",
          "title": "Amazon DCV Viewer FMA version mismatch",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31123"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc8aTI",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Amazon DCV Viewer FMA version mismatch",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to ready for spec to discuss the best path forward here"
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 31274,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.72.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31274"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgc-TB0",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: 4.72.0"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.70.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nType column sort is actually sorting by name even though the UI buttons light up correctly and the URL sort column is correct\n\nhttps://github.com/user-attachments/assets/3cbe7c75-2cee-412d-b109-299f006f1716\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to Fleet Desktop\n2. Go to software tab\n3. Try to sort software by type\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nEnsure the backend supports sorting by type column\nIf so, it's a FE fix, if not, need to confirm design if it should or not (maybe it was unintentional to have sort on type and we accidentally added it to the UI?)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix \nProduct designer: @marko-lisica \n\nAs backend doesn't support this I believe we didn't design it. Remove sort indicator from Type column on the frontend and if needed we can always add later.",
          "number": 30746,
          "repository": "fleetdm/fleet",
          "title": "Fleet UI: Fleet Desktop \u003e Software \u003e Type sort broken",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30746"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc-Xts",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Fleet UI: Fleet Desktop \u003e Software \u003e Type sort broken",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced on 4.70.1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Done and merged this morning to not drag to next sprint"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nUpdate OS list and entity pages to conform to the parent ticket's wireframes. No API changes should be required on the OS list page. The OS entity details page will need to use the new `kernel` array, and should toggle the vulnerabilities/kernels cards based on platform matching.\n\n## Condition of satisfaction\n\nFrontend changes match Figma wireframes, and pull data from the new API response field.\n\n- [ ] For the kernels list, host counts should navigate to a host set filtered by both OS ID and software ID",
          "number": 31212,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: Frontend",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31212"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdB-kE",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Linux Vulns: Frontend",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "**Final est: 5**\n1 update OS page, 3 add new table, 1 ensure software details page works\n\n**Bold estimate: 3** since those two 1s are tiny and the table is basic so might not be quite a 3"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: n/a (Testing new FMA apps)\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSquished icon on /software/add/fleet-maintained list \n\n![Image](https://github.com/user-attachments/assets/305793c3-502c-482f-ad38-28741ac8691d)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add Fleet-maintained app Company Portal to software library using allenhouchins-add-company-portal-as-fma branch\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30367,
          "repository": "fleetdm/fleet",
          "title": "Intune Company Portal - FMA Icon issue",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30367"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCIqk",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "Done",
        "title": "Intune Company Portal - FMA Icon issue",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts updated this and the other 2 bugs you filed to be filed according to the clarified process \u003c3 out of your court now, grazie"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like a combo icon + install script issue."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the error also occurs after manual install, so i don't think we should block this on vendor pkg errors."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1 (\u003c 2 hours)\n\nNote: the scope of this ticket will only be the FE icon portion"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: n/a (Testing new FMA apps)\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSquished icon on /software/add/fleet-maintained list \n\n![Image](https://github.com/user-attachments/assets/14461093-3198-4a29-aa7a-d3d1da7e9c58)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add Fleet-maintained app Santa to software library using allenhouchins-add-santa-to-fma branch\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nMake sure the icon is formatted correctly, and make sure when we merge in the new app that the latest currently available version is in the manifest.\n",
          "number": 30364,
          "repository": "fleetdm/fleet",
          "title": "Incorrect icon on Santa FMA",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30364"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCIzs",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "Done",
        "title": "Incorrect icon on Santa FMA",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts updated this and the other 2 bugs you filed to be filed according to the clarified process \u003c3 out of your court now, grazie"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts This is just the icon issue right?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx Yes. The only other strange thing I noticed while testing was that if you double click on the Santa app it doesn't seem to do anything which, to me, is strange for a macOS app. But it does the same thing if you download it from github, and I can access santactl from terminal, so probably a non-issue. \n\nAlso looks like there's a new version of Santa as of yesterday https://github.com/northpolesec/santa/releases/tag/2025.6"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify setup experience, custom targets (labels), self-service, \u0026 categories for all my software in the team YAML\n| so that I can define scoping at the team level and not at the software level.\n\n## Key result\n\nNone. Prioritized because it's mission critical for `customer-numa` to replace their current self-service software solution.\n\n## Original requests\n\n- #30067\n- #29567\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @iansltx  \n\n## Changes\n\n### Product\n- [x] UI changes: No changes.\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: #30837 (includes VPP/FMA)\n- [x] REST API changes: No changes\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: `fleetctl generate-gitops` includes the `setup_experience` flag in the inline software package/VPP app YAML when a software package or VPP app is included in Setup Experience, omits it otherwise (same as how self-service behaves).\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Script or command to migrate removed keys from package YAML files to the team level\n- [ ] Contributor API changes: No changes; use the existing `install_during_setup` parameter in software batch endpoints (already wired up in `fleetctl`)\n- [ ] Feature guide changes: No changes\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\n### Test plan\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### Setup experience w/GitOps\n\nFor the purposes of this test plan, this format is what is meant by in-line on the team YAML:\n\n\u003cimg width=\"532\" height=\"167\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/859273cd-a1bf-4eb4-a3af-5d170772ec9f\" /\u003e\n\nAnd this is what is meant by referenced by path:\n\n\u003cimg width=\"238\" height=\"58\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/476be359-104f-431a-9e97-43b887ed754f\" /\u003e\n\nWhere the referenced file is of this format:\n\n\u003cimg width=\"478\" height=\"108\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4b7c570e-0eef-401b-8acb-22cc3ac5ee95\" /\u003e\n\n- [ ] Add App Store app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add Fleet-maintained app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add a custom package in-line, on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Don't specify the new `setup_experience` key.  Verify that the software isn't added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `true`.  Verify that the software is added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `false`.  Verify that the software is not added to macOS Setup Experience when GitOps is run. \n- [ ] ERROR PATH: Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key within the package YAML, setting the value to `true`. Run GitOps and confirm there is an easy to understand error message.\n\n#### Custom target (labels)\n\n- [ ] In the team YAML, set `labels_include_any` for a custom package that is defined in-line. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_include_any` for a custom package that is referenced by path. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is defined in-line. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is referenced by path. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the package YAML, set `labels_include_any` to include a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n- [ ] In the package YAML, set `labels_exclude_any` to exclude a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### Categories\n\n- [ ] In the team YAML, set `categories` to include one or more categories that exist in Fleet for a custom package that is defined in-line. Verify that the categories are applied when GitOps is run.\n- [ ] In the package YAML, set `categories` to include one or more categories that exist in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### No team\n\n- [ ] Verify that setup experience, custom targets (labels), and categories work as defined above for \"No team\" (`no-team.yml`)\n\n\n#### Backwards compatibility\n\n- [ ] In the team YAML, specify the old `macos_setup.software` key, add software in-line, and do not specify the new `setup_experience` for any software. Confirm the software is added to setup experience. \n- [ ] In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n- [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see the same error message.\n\n#### GitOps speed\n\n- [ ] Run GitOps with 99 packages and 500 teams before and after this change. Verify that the speed of GitOps isn't negatively impacted.\n\n#### Migration script\n\n- [ ] Run the script to migrate the the old package YAML format to the new format and verify that the script works. [#31165](https://github.com/fleetdm/fleet/issues/31165)\n\n#### Generate-GitOps\n- [ ] fleetctl generate-gitops includes the setup experience flag on software for which it is set.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30095,
          "repository": "fleetdm/fleet",
          "title": "GitOps: Setup experience, custom targets (labels), self-service, \u0026 categories for all software in team YAML",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30095"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "labels": [
          "story",
          ":release",
          "customer-faltona",
          "customer-numa",
          "#g-software",
          "~context"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps: Setup experience, custom targets (labels), self-service, \u0026 categories for all software in team YAML",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev Per comments on the original request from @noahtalerman and @mostlikelee, we want to:\n\n1. Add a `setup_experience` bool on the same level as `self_service` on custom packages, VPP apps, and FMAs, default `false`. Use that to determine whether software is included in setup experience.\n2. Stub the `macos_setup.software` key in GitOps; if it exists in a config, hard-fail with a link to docs for the new way of specifying setup experience.\n\nPlan will be that we _don't_ have a deprecation period on this to keep the code clean and avoid drawing out instances where we have to support both cases. Throwing a prompt at an LLM or two to see if we can make a bot do the work of moving YAML around (we might want a step 3 above of providing a tool to move YAML around)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually, scratch the LLM option for now, as the migration path is more nuanced. One nuance here is that if Team A and Team B both import a set of software, but Team A has a piece of software marked for setup experience and Team B does not, we now need two software files (one with the setup experience flag set, one without) where we previously had one.\n\n@allenhouchins Does this tweak (and its downstream requirements) make sense? In our case the Workstations team has setup experience software defined, but the corresponding canary team doesn't, so for our own setup we'd need to split package YAMLs.\n\nFor reference, here's the prompt I threw into JetBrains Junie, as well as Zed + Claude Sonnet 4:\n\n```\nIn `it-and-security`, for each app store app under `macos_setup.software`, remove it from there and add `setup_experience: true` under the corresponding entry in `app_store_apps` in the same team file. For each software package under `macos_setup.software`, remove it from there and add `setup_experience: true` inside the corresponding YAML file. Finally, remove the `macos_setup.software` key in the YAML file.\n```\n\nNote that the above does _not_ cover the package YAML splitting nuance, and my attempts at making this work with an open-weights model small enough to run in 64GB unified memory failed."
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "I much prefer the current set up of adding it to the `software` block to basically say \"make this software available to this team\" then creating a secondary reference in `macos_setup.software` to say \"make this software available through this method\". For any software we expect all employees to use (\"critical\"), I want it to be installed via `macos_setup`, `auto-install` if its removed, and available in `self-service` for patching and easy re-installation/troubleshooting. I don't want to have to create multiple `software_title.yml` to achieve this. \n\nI'm already running into challenges with some of the recent changes we've made to software where I will have to [create multiple software entries if I want software scoped differently in teams](https://github.com/fleetdm/fleet/issues/29567) so anything we can do to handle additional logic behind the scenes and avoid having to create multiple software entries of the same software just to use it differently, will always get my vote.\n\n\u003e run in 64GB unified memory failed.\n\n64GB?! Yikes! "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I much prefer the current set up of adding it to the software block to basically say \"make this software available to this team\" then creating a secondary reference in macos_setup.software to say \"make this software available through this method\".\n\n@allenhouchins interesting! I added you to Tuesday's #g-software design review to take a look at the current designs and discuss."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on #27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time, though based on the source of this original request the software GitOps update activity should be split into its own story, as the customer isn't asking for that, \"core to Fleet\" notwithstanding, as the activity work is likely the majority of the effort on this ticket if it's brought in. Splitting stories allows for easier parallelization, and allows for derisking both stories."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Based on linked issues, looks like we missed calling out some scope here. I'm assuming that allowing specifying macOS setup experience in `fleet_maintained_apps`, as well as in `app_store_apps`, is in scope here. Revising YAML docs so that's clearer now (as well as contributor API docs).\n\nEDIT: Never mind. YAML docs don't include this explicitly, but it's dev note'd in a comment on the PR. And it's in the test plan."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Turns out, the contributor API for this already has the correct (per-package) format, so these changes won't have a server-side component (all `fleetctl`)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman I thought we had missed frontend scope here because there might have been changes to the modals/exports we added in #28110. But it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?\n\n@iansltx that's right!"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] REST API changes: No changes\n\n@iansltx also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\nThis helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\nWe've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\""
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e \u003e * [x]  REST API changes: No changes\n\u003e \n\u003e [@iansltx](https://github.com/iansltx) also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\u003e \n\u003e This helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\u003e \n\u003e We've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\"\n\n@noahtalerman All of the \"no changes\" items are still in the issue description, under the \"No-ops\" heading (\"Product no-ops\" probably makes more sense here, and I've used that heading title on other tickets where I've done this). Sounds like you missed them because they were \"below the fold\" but they're there, and splitting them out should actually make the \"we intentionally didn't do these things\" rundown easier. Thoughts on maintaining that \"split out into a subheading\" pattern, but moving that subheading up above the Engineering section?\n\nMy reason for doing this tweak (was going to mention this in chat channels but ran out of time, but discussed this with @mostlikelee ahead of time) is that stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development has more serious consequences than having to scroll down in the Confirm and celebrate ritual.\n\nAdditionally, the act of explicitly moving items to a \"these are the things that won't change\" heading during spec provides another \"are we _sure_ this isn't changing\" checkpoint prior to estimation. That actually wound up helpful on #30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes. Moving the Figma link to the more appropriate checkbox decreased likelihood of confusion during both development (imminently) and Confirm and celebrate (later), while maintaining an explicit list of parts of the product that are out of scope for the story.\n\nI hadn't PR'd a handbook/story template change for this because I wanted to dial in how it looked with real-world examples first, hence why you're seeing this for the first time here."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development\n\n@iansltx ah, I hear you but the current way has been working for the other product groups. We just have to look at all the checkboxes to see which have \"No changes\".\n\nTo keep things consistent across product groups and reduce change for now let's please keep the story issue template the same. I removed \n\nThanks for testing it out!\n\n\u003eThat actually wound up helpful on https://github.com/fleetdm/fleet/issues/30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes.\n\nIt sounds like we (it was me) messed up in this case. That's a whoops from me. I forgot about the new GitOps mode checkbox."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulled this back to Ready for spec as there are outstanding test plan questions that we're working through."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30095\n\n## Task\n\nUpdate `fleetctl gitops` to accept YAML in the format specified in #30837 for software packages, Fleet-maintained apps, and VPP apps. This includes adding support to GitOps for the first time for Fleet-maintained apps in macOS setup experience.\n\nThese changes are fleetctl-only as sufficient APIs are already in place.\n\n## Condition of satisfaction\n\nSoftware YAML conforms to #30837, including backward compatibility maintenance or breaks as documented.",
          "number": 31163,
          "repository": "fleetdm/fleet",
          "title": "GitOps software/setup experience restructure: `fleetctl gitops` changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31163"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8s",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps software/setup experience restructure: `fleetctl gitops` changes",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243530523269)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30095\n\n## Task\n\nUpdate `fleetctl generate-gitops` to reflect the inline format documented in #30837, including the new `setup_experience` flag on VPP apps and custom packages.\n\nSwitching `fleetctl generate-gitops` to export Fleet-maintained apps with slugs is out of scope.\n\n## Condition of satisfaction\n\n`fleetctl generate-gitops` includes the setup experience flag on software for which it is set.",
          "number": 31164,
          "repository": "fleetdm/fleet",
          "title": "GitOps software/setup experience restructure: `fleetctl generate-gitops` changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31164"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk80",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps software/setup experience restructure: `fleetctl generate-gitops` changes",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243569811379)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30095\n\n## Task\n\nBuild a tool that, given YAML compatible with the previous GitOps format, pulls fields removed from software package YAML up to the corresponding team YAML file(s), resulting in YAML that is semantically identical with as small of a diff as possible but is compatible with the new documentation.\n\nMoving deprecated-but-not-removed fields (`macos_setup.software`) is out of scope.\n\n## Condition of satisfaction\n\nA tool exists, either built into `fleetctl` or otherwise, and is referenced in the \"this field is no longer valid\" error message added in #31163.\n\nThis tool should automatically scan all team files that would normally be picked up by the `gitops.sh` script, find all software paths in those files, and transform all found software package YAML files, without needing to specify each manually. Specifying a single team file should also be allowed.\n\nBonus: adding compatibility checks for software package files directly (just checks if any no-longer-supported fields are included).\n\nNot in scope: doing this for multi-package software YAML files, as those shouldn't exist until this work is released.",
          "number": 31165,
          "repository": "fleetdm/fleet",
          "title": "GitOps software/setup experience restructure: YAML migration tool",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31165"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps software/setup experience restructure: YAML migration tool",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243609663689)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Please include instructions on how to use said tool, esp for environments with many teams and packages please!"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "number": 31316,
          "repository": "fleetdm/fleet",
          "title": "Eng DRI: Self-service open instructions",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31316"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCluM",
        "labels": [
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Eng DRI: Self-service open instructions"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "Bug observed during sprint [demos](https://fleetdm.slack.com/archives/C03C41L5YEL/p1753461589429129).\n\n[This](https://github.com/fleetdm/fleet/blob/02c5026436072355a70f97e756ecb04a569ee6b8/frontend/pages/hosts/details/cards/Software/HostSoftwareTable/HostSoftwareTable.tsx#L153-L154) seems to be the problem area. Looks like the check is purely based on the platform but it should be also checking for the presence of vulnerability query params.\n\n\n```tsx\n  const memoizedEmptyComponent = useCallback(() =\u003e {\n    const vulnFilterAndNotSupported = isIPadOrIPhone(platform);\n    return vulnFilterAndNotSupported ? (\n      \u003cVulnsNotSupported\n        platformText={APPLE_PLATFORM_DISPLAY_NAMES[platform as ApplePlatform]}\n      /\u003e\n    ) : (\n      \u003cEmptySoftwareTable noSearchQuery={searchQuery === \"\"} /\u003e\n    );\n  }, [platform, searchQuery]);\n```\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica \n\nUI changes: [Figma](https://www.figma.com/design/bLdsOyLfY0IlyhxKSCBcHR/-31329-%F0%9F%AA%B2-HostSoftwareTable-shows-wrong-empty-state?node-id=2-130\u0026t=O3ljmyNs4PlpzS3j-1)\n",
          "number": 31329,
          "repository": "fleetdm/fleet",
          "title": "HostSoftwareTable shows wrong empty state",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31329"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCntE",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "~assisting g-mdm",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "üê£ In progress",
        "title": "HostSoftwareTable shows wrong empty state",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "This was surfaced with BYOD Apple devices. I tagged it with g-software but it could be `#g-mdm`\n@georgekarrv @mostlikelee preference on who tackles this one?\n\nWhen a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps). \nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\n\u003cimg width=\"1186\" height=\"374\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8c7dc1a7-ac0e-497a-91df-08dc8fb31702\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@georgekarrv we're going to take this.  removing it off your board"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30849\n\n## Task\n\nReview/assistance as needed for #30790.\n\n## Condition of satisfaction\n\n#30790 is merged, along with any other work necessary to implement the YAML changes in #31086, and test plan is verified passing by the assigned engineer.",
          "number": 31206,
          "repository": "fleetdm/fleet",
          "title": "GitOps software multi-package files: Contributor review + tweaks",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31206"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnxU",
        "labels": [
          "~fleetctl",
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps software multi-package files: Contributor review + tweaks",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753680845308789)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30849\n\n## Task\n\nUpdate sample YAML in the \"Show YAML\" view for software packages.\n\n## Condition of satisfaction\n\n\"Show YAML\" dialog conforms to the attached [Figma designs](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1).",
          "number": 31207,
          "repository": "fleetdm/fleet",
          "title": "GitOps software multi-package files: View YAML changes in software UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31207"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCn44",
        "labels": [
          "~fleetctl",
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps software multi-package files: View YAML changes in software UI",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753681073584279)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify multiple software (custom) packages in one YAML file\n| so that I can reuse those across teams and edit in one place.\n\n## Key result\n\nNone.\n\n## Original requests\n\nNone. This user story was prioritized after @fuhry (community member) opened this PR with a proposed solution:\n- #30790\n\n## Context\n- Product Designer: @noahtalerman\n- Engineering DRI: @iansltx \n\n## Changes\n\n### Product\n- [x] GitOps Mode UI changes: [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1)\n- [x] YAML changes: [YAML design PR](https://github.com/fleetdm/fleet/pull/31086)\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes (only docs changes required are covered in the YAML design PR)\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## Product No-ops\n\n- CLI (fleetctl) usage\n- UI changes (other than in GitOps Mode)\n- REST API\n- Fleet's agent (fleetd)\n- GitOps generation\n- Activities\n- Permissions\n- My device and fleetdm.com/better\n- Other reference documentation\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\nWhile performance regressions etc. aren't at issue, we'll now have three formats for specifying software packages in YAML (inline, list in separate file, individual in separate file) so future development runs the risk of forgetting to implement functionality in all three. So, not a risk for this particular story, but a maintainability risk going forward.\n\n\n### Documentation \nReview [Updated Documentation](https://github.com/fleetdm/fleet/pull/31086/files?short_path=b711042#diff-b71104232d8fbaaf4bd537065533cbf39ec5f9bf028ec1d8083346953ed5178d) \n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\nNOTE: #30095 must be merged prior to this ticket or this test plan is invalid.\n[#31165](https://github.com/fleetdm/fleet/issues/31165) will need to be used to migrate yaml files or some parts of this test plan may fail.\n\n**New functionality**\n- [ ] Create a package YAML file with two custom packages specified by `url`. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet.\n- [ ] Next, In the team YAML, for your two custom packages, specify `self_service`, `categories`, and labels. Run GitOps, and verify that the options are applied to both packages. \n- [ ] Edit your package YAML file to have the two custom packages specified by `hash`. Ensure these packages have already been uploaded to Fleet. Run GitOps and verify that the two packages remain in the correct team in Fleet and that all additional settings in the team YAML are applied (Self service, categories, labels).\n- [ ] Edit your package YAML file to have one custom package specified by `hash` and the other specified by `url`. Ensure the software specified by hash has already been uploaded to Fleet. Run GitOps and verify that the two packages remain in the correct team in Fleet and that all additional settings in the team YAML list are applied (Self service, categories, labels).\n- [ ] Edit your package YAML file by removing one of the packages. Run GitOps and verify that the removed package is removed from Fleet.\n- [ ] ERROR PATH: Create a package YAML file in the \"list format\" to have two versions of the same software, one custom package specified by `hash` and the other specified by `url`. Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.\n- [ ] ERROR PATH: Create a package YAML file in the \"list format\" to have one version of a software, and another package YAML to have a different version of the same software. Try both specified with just hash, both with just url, and one specified by `hash` and the other specified by `url`. Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.\n- [ ] ERROR PATH: Add multiple FMA and/or VPP apps to a package YAML file in the \"list format\". Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.\n\n**Backwards compatibility**\n- [ ] Backwards compatibility: Add packages in-line to the team YAML file. Run GitOps and verify that the package(s) is added to the correct team in Fleet.\n- [ ] Backwards compatibility: Create a package YAML file with one custom package in the [old package YAML format](https://github.com/fleetdm/fleet/pull/31086/files#r2219494344) (no array). Run GitOps and verify that the package is added to the correct team in Fleet. NOTE: self service, categories, labels will no longer be allowed in the package YAML due to #30095\n\n**Multiple YAML formats**\n- [ ] Without duplicating any packages, specify some packages in-line on the team YAML, specify some packages in a multi-package YAML, specify a single package in an individual YAML in the \"Old format\", and specify a single package in an individual YAML in the new \"List format\". Reference the multipackage, single \"old format\", and single new \"list format\" yaml files in-line on the Team YAML, alongside the in-line specified package. Run GitOps and verify that all packages are added to the correct team in Fleet.\n- [ ] ERROR PATH: Using the same package info for all methods: Specify some packages in-line on the team YAML, specify some packages in a multi-package YAML, specify a single package in an individual YAML in the \"Old format\", and specify a single package in an individual YAML in the new \"List format\". Reference the multipackage, single \"old format\", and single new \"list format\" yaml files in-line on the Team YAML, alongside the in-line specified package. Run GitOps and make sure there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error. Try specifying the same package with all methods at once, and then de-duplicating them as you go, working through the gitops errors, to ensure you can resolve the issue. \n\n**Setup experience**\n- [ ] Create a single package YAML file in the new list format. Reference the package YAML on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the new list format. Reference the file in-line on the team YAML in the macos_setup.software key. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the old format. Reference the file in-line on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the old format. Reference the file in-line on the team YAML in the macos_setup.software key. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a package YAML file in the new list format with multiple software items in it. Reference the package YAML on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure all packages are added to Setup experience. \n\n\n**Policy automations**\n- [ ] Create a package YAML with one package, in the old non-list format using `hash_sha256`. Create a policy YAML and reference the package using `hash_sha256`. Run GitOps and verify that the package is tied to the policy.\n\n\u003cimg width=\"645\" height=\"145\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1e945b7a-a845-4e40-a518-7d6b0d17cb9c\" /\u003e\n\n- [ ] Create a package YAML with one package, in the old non-list format using either `url` or `hash_sha256`. Create a policy YAML and reference the `package_path`. Run GitOps and verify that the package is tied to the policy.\n\n\u003cimg width=\"693\" height=\"143\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b3229af0-1fe5-47eb-940b-5f8f5038dbb6\" /\u003e\n\n- [ ] Create a package YAML with one package, in the new format. Create a policy YAML and reference the `package_path`. Run GitOps and verify that the package is tied to the policy. (Same as above, but the package.yml is in the list format)\n- [ ] Create a package YAML with multiple installers listed in it. Create a policy YAML and reference the `hash_sha256` of ONE of the software installers in the list from the file with multiple packages. Run GitOps and verify that the package is tied to the policy.\n- [ ] Create a package YAML with multiple installers listed in it. Create a policy YAML and reference the `package_path`. Verify that you see an easy to understand error message.\n\n**Large Environments**\n- [ ] A large environment with no changes to YAML that successfully applied in the previous version of Fleet without error should continue to apply without error. (Provided they have gone through the migration from #31165\n\n**UI Changes**\n- [ ] Turn on GitOps mode in Fleet and add a custom package. Verify that the UI changes [specified in Figma](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) show up.\n\n**`fleetctl generate-gitops`**\n- [ ] Add several packages in Fleet, and then run `fleetctl generate-gitops`. Use the YAML output in a GitOps run and verify that all the packages are still present in Fleet.\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n\n\n---\n## Problem\n\nThe list of software configured via GitOps might be dynamic, for example if the GitOps pipeline builds and pushes packages just before fleet gitops is called, or if partial package lists are shared between teams.\n\nIn these cases, it's useful to be able to include one file containing multiple packages. [This PR](https://github.com/fleetdm/fleet/pull/30790) refactors parseSoftware to support that use case.\n",
          "number": 30849,
          "repository": "fleetdm/fleet",
          "title": "GitOps: Support multiple software packages in one YAML file",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30849"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoAQ",
        "labels": [
          "story",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "GitOps: Support multiple software packages in one YAML file",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "DONE @noahtalerman: What do we do about policy automations? Right now policies in GitOps assume one package per package YAML file.\n  - @iansltx: Today, `fleetctl generate-gitops` works around this by using a `hash_256` to specify the hash. Maybe we can use the same to solve this.\n \n@noahtalerman: Decided like this: either use hash or path to a file. If the file has more than one package, Fleet will error. Specified in [this dev note](https://github.com/fleetdm/fleet/pull/31086/files#r2222732518)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [ ] In your team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\u003e   - @noahtalerman: I think testing this requires the changes in this separate user story: https://github.com/fleetdm/fleet/issues/30095\n\nDONE: @noahtalerman: Pull this into #30095\n\n- @noahtalerman: Added the below to the test plan for #30095.\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @iansltx @jmwatts ^"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "TODOs (will write these up better later):\n\n* Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n* Documenting \"error if multiple packages in setup experience YAML file\"\n* Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n\nWe decided to deprecate support for the non-list behavior but maintain backwards compatibility. See this dev note: https://github.com/fleetdm/fleet/pull/31086/files#r2219494344\n\n\u003e Documenting \"error if multiple packages in setup experience YAML file\"\n\nIn this [separate GitOps story](https://github.com/fleetdm/fleet/issues/30095), we decided to support applying `setup_experience`. From that separate stories QA plan:\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\n\u003e Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?\n\nI think this is covered by the [YAML reference doc updates](https://github.com/fleetdm/fleet/pull/31086). We're showing that a list length of 1 is the best practice."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman FYI we'll need to make some slight tweaks to the modal implemented in #28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nAlso, thoughts on removing the old functionality and adding a script to fix existing software YAML files (linked from the \"this was removed\" error) instead of moving the schema to undocumented but still incurring the maintenance burden of supporting it? If we think this is the proper way to format software packages, \"indent the existing file by two spaces and prepend a `- ` to the first line might be simple enough to perform with a single sed/awk command."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "- UPDATE: @noahtalerman: Added [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) to the issue description (including test plan).\n\n\u003e FYI we'll need to make some slight tweaks to the modal implemented in https://github.com/fleetdm/fleet/issues/28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nYep! We want to tweak the UI here with an indent and a hyphen.\n\nDONE: @noahtalerman \n\nAlso, update the package name to include `.package`:\n\n\u003cimg width=\"597\" height=\"83\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b09f13a-630f-48bf-81b7-4555fc4c81a5\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Sorry for the delay on this one. Subtasks are created. Ask away with questions you have."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a security analyst,\n| I want to see vulnerabilities of Linux operating systems\n| so that I can prioritize remediation effectively.\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n#26804\n\n## Context\n- Product Designer: @marko-lisica  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @iansltx \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/857ERt8x6l5fnLC1Yuy0bA/-30738-Surface-Linux-OS-vulnerabilities?node-id=0-1\u0026t=WEmHWkALSDBpIMwE-1)\n- [x] REST API changes: #31130\n- [x] Changes to paid features or tiers: Fleet Free\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n#### Product no-ops\n\n- CLI (fleetctl) usage\n- YAML\n- Fleet's agent (fleetd)\n- GitOps Mode UI\n- GitOps generation\n- Activities\n- Permissionss\n- My device and fleetdm.com/better\n- Other reference documentation\n\n**NOTE: ** Since Linux vulnerabilities are with the kernel package rather than at the OS level, any vulnerability web hooks will correspond to the affected software item, _not_ at the OS level. This maintains existing behavior for Linux kernel vulnerabilities.\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Populate vulnerabilities lists (on OS list/version endpoints, _not_ in the OS CVEs list in the database, _not_ in the operating systems section of the vulnerabilities endpoints) for Linux OS versions with a deduplicated list of CVEs affecting kernels installed on all hosts with that OS specified\n- [ ] For the kernels list, host counts should navigate to a host set filtered by both OS ID and software ID\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Mention OS vulnerabilities in the [vulnerability processing feature guide](https://fleetdm.com/guides/vulnerability-processing)\n- [ ] Database schema migrations: Add an `is_kernel` column to `software_titles` and populate as appropriate for all supported Linux distributions (test with a VM for each). Going forward, `is_kernel` should be set when a software title is created. May also need one or more tables to ensure vulnerability counts are retrieved quickly (e.g. `host_kernel_software_counts` containing both OS ID and kernel software ID).\n\n#### Database joins\n\n```\nSELECT DISTINCT software_cve.cve\nFROM software_cve\nJOIN software ON software.id = software_cve.software_id\nJOIN software_titles ON software_titles.id = software.title_id AND software.is_kernel = TRUE\nJOIN host_software ON host_software.software_id = software.id\nJOIN host_operating_system ON host_operating_system.host_id = host_software.host_id\nJOIN operating_systems ON operating_systems.id = host_operating_system\nWHERE [operating system query]\n```\n\nThe above is heavy enough that we likely need a table for `host_kernel_software_counts`, calculated at the same time as `host_software_counts`, that flattens the above, at which point we're trading freshness for ability to quickly pull information.\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n- Requires load test: Probably; need to load a bunch (~50k, don't care about MDM) of Linux hosts with kernel software (need to ensure osquery-perf will return these items) and confirm performance impact of calculating kernel software stats. This may be doable locally.\n\n### Test plan\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch. Also enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. Also enroll a Linux host in a container with a different OS version unique to that container.\n2. Run vulnerabilities + cleanups/aggregations jobs.\n3. Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n4. On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show `---`. \n5. Confirm that the API response populates the `vulnerabilities` key for Linux OS versions.\n6. Navigate to an OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version, and clicking a host count in this card should navigate to a host list filtered by both software ID and OS version ID. Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n7. Confirm that the API response for the individual OS version includes `vulnerabilities` and `kernels` entries, with `kernels` format matching what you'd see in `software_title.versions[]` when viewing an individual software title.\n8. Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nAdditionally, verify that the above works in Free and Premium, with extra vulnerability details (scores etc.) omitted in Fleet Free.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30738,
          "repository": "fleetdm/fleet",
          "title": "Software \u003e OS: Surface Linux kernel vulnerabilities",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30738"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "labels": [
          "story",
          ":release",
          "~vulnerability-management",
          "customer-rialto",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "üê£ In progress",
        "title": "Software \u003e OS: Surface Linux kernel vulnerabilities",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica (/cc @mostlikelee) We have three issues that'll need product direction here.\\, based on some initial research.\n\nIn descending order of magnitude:\n\n## Multiple kernels\n\nLinux hosts generally have multiple kernels installed, though only one is active at a time. How do we want to handle this, given that a host can be actively using an older/vulnerable kernel, or that kernel may be available but not loaded, and we won't be able to tell one way or the other based on software inventory (we _can_ based on the `kernel_info` table but we don't currently inventory that)?\n\nFor example, I cross-referenced `kernel_info` version with inventoried packages on Dogfood to see how Linux hosts there lined up:\n\n* [fedora 41](https://dogfood.fleetdm.com/hosts/1348) - `kernel-core` RPM package (`kernel` would work too but doesn't on the other host; was running the later of multiple versions)\n* [ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1319) - `linux-image-*-generic` (`linux-image-generic-hwe-*` returned one of the two kernels, and not the one the host was actually running)\n* [another fedora 41](https://dogfood.fleetdm.com/hosts/1318) - `kernel-core` RPM package (was running the older kernel)\n* [another ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1267) - `linux-image-*-genreric` (was running the older kernel IIRC)\n\nAll of the above hosts have more than one kernel version installed, and it's a toss-up on whether a given host is using the latest installed kernel or some other one (using `kernel_info` as the source of truth). The two Ubuntu hosts have quite different kernel versions installed as well between each other.\n\n## No kernel\n\nHow do we want to handle Linuxes that don't have a kernel? Linux running in a container shares the host kernel, so won't have kernel vulnerabilities of its own. I'm assuming we need to show these hosts in the OS list UI, but we'll need to communicate that no, those hosts didn't have a kernel of their own, so there won't be kernel-level vulns inside the container, though the host might have some. For example, `SELECT * FROM kernel_info` on an Ubuntu container running in Docker for Mac gets me a kernel version of `6.10.14-linuxkit`, which won't match anything in OVALs for the OS inside the container.\n\n## Where to display kernel version\n\nThinking we want to just show the kernel version, and only the version number part of it (so, software `version` field), as part of the Version column in the OS list, leaving the OS name as-is. This will mean that there will be multiple rows for the same OS name, but that's probably still cleaner than having two versions in the name line."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Temporarily assigning this to @marko-lisica we I'm blocked on decisions about no-kernel/multi-kernel. I'll self-assign to continue spec'ing once unblocked."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "FYI @marko-lisica I'm baking in the assumption that individual CVE UIs do _not_ change as part of this story, so we won't be showing Linux OSes in the Operating Systems section of individual vulns. The vulnerability affected hosts will be fully covered in the software section anyway (for each kernel) so we aren't hiding information here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "For reference: per discussions yesterday, we're keeping the OS list to one item per OS version, rolling up all kernel vulns into that single entry, and splitting out kernels when viewing a single OS version's details. This ensures that hosts aren't double-counted in list views when they have multiple kernels installed, and aren't skipped when they have no kernel of their own."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Two pieces of feedback from @jmwatts as we were walking through UI/test plans today (corresponding to Figma comments):\n\n1. Add a dev note or example UI row indicating \"view all hosts\" when kernel rows are rolled over\n2. Add help text above the kernels list (inside the kernels card) explaining why host counts are expected to not sum up from kernels to the overall number. Something like:\n\n\u003e Each Linux host may have multiple kernels instealled. Containerized and paravirtualized hosts do not have a kernel of their own.\n\n@jmwatts Let me know if we need to explicitly say \"host counts won't sum up\" or whether the above is enough."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @iansltx @jmwatts, thanks for the feedback.\n\nI added few more dev notes in Figma:\n\u003cimg width=\"921\" height=\"887\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/524bb7a9-33fc-47f3-88be-8e41ad922db6\" /\u003e\n\n "
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nOptimize data storage retrieval for Linux vulnerabilities such that at large host counts retrieval is quick and doesn't create undue database load.\n\nThis likely requires creating another indexed database table or two and populating host counts when other vulnerability counts are populated, e.g. host_kernel_software_counts containing both OS ID and kernel software ID.\n\n- [ ] Load a bunch (~50k, don't care about MDM) of Linux hosts with kernel software and confirm performance impact of calculating kernel software stats. If osquery-perf needs modifications as part of this work to show a distribution of realistic kernel versions, that work is in-scope. Local testing can be used to measure read performance. This probably requires a loadtest instance, but may be doable locally.\n- [ ] Document how to configure osquery-perf to simulate the set of hosts mentioned above.\n\n## Condition of satisfaction\n\nLoading the operating systems list on 50k Linux hosts with a large number of kernels/kernel vulns is performant, as is loading each individual operating system version, and any write optimizations to make reads performant are confirmed to incur an acceptable amount of database load.",
          "number": 31214,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: Optimization",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31214"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpok",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Linux Vulns: Optimization",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962273099)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jakestenger this is a subtask.  you'll want to add customer labels to the parent story"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nUpdate the [vulnerability processing feature guide](https://fleetdm.com/guides/vulnerability-processing) with details on how Linux OS level vulnerabilities are inventoried.\n\n## Condition of satisfaction\n\nGuide is updated.\n",
          "number": 31215,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: Guide Updates",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31215"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpos",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Linux Vulns: Guide Updates"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: All since software titles were added\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nI can see automatic install policies attached to installers from the /software/titles page but not from the /hosts/:id/software page\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Try to look for the automatic_install_policies key while looking at host software (hosts/:id/software API) of a software that has automatic_install_policies set when looking at software (software/ API)\n2. Notice it's always set to null even if it's set on the software title\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nHere's screenrecordings of the mismatch\n\nFirst 30 or so seconds only shows there's automatic policies attached to that software title\nhttps://github.com/user-attachments/assets/ddb5e4b7-1a75-4bdf-8539-2a5a765a7c81\n\nShows there's no automatic policies attached to that software title for the particular host\nhttps://github.com/user-attachments/assets/31fd1395-c440-46f0-b964-fcb4d8b8a1d1\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n- [Figma design](https://www.figma.com/design/neuhhOaQ0Qvh74xdqwmu6C/-30197-Host-Software-API--Surface-automatic-install-policies?node-id=5301-26\u0026t=RHjnRKdNhkv48TVg-11). When there is no self-service the icon changes to the recycle icon.",
          "number": 30197,
          "repository": "fleetdm/fleet",
          "title": "Host Software API: Surface automatic install policies",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30197"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Host Software API: Surface automatic install policies",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "cc: @iansltx \n\nSecond backend bug that will be highly noticeable with hackathon work\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulling back to drafting as, while this means we can't show the automatic policies icon in software library/inventory in the host details view yet, we're no worse off than we are right now. @RachelElysia it still makes sense for the FE to consume the data when it's available, but unlike #30188 this isn't going to be an immediate source of user confusion, so there are items currently in the sprint we don't want to evict in favor of this, and potentially stuff we want to bring in instead of this."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added the following to this ticket which I think resolves the issue in question?\n\n- [Figma design](https://www.figma.com/design/neuhhOaQ0Qvh74xdqwmu6C/-30197-Host-Software-API--Surface-automatic-install-policies?node-id=5301-26\u0026t=RHjnRKdNhkv48TVg-11). When there is no self-service the icon changes to the recycle icon.\n\nI'll move this to ready to estimate and add planning poker. If there's other things to do please pull it back so that any remaining items can be addressed. Thanks!\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1750684407360969\n\nHoping this is FE only."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Coolio. I added a design to this and moved it to ready to estimate, but it can sit there I guess until such time as we want to pull it forward."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo This is actually _backend_-only. FE work for this is already done. This is another ListHostSoftware related case, and we'll want to take care to _not_ have an N+1 here I think."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "Are there plans to create separate web API endpoints for the library and inventory? That could help simplify `ListHostSoftware`."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jahzielv In this case, that wouldn't help, as current designs call for showing the \"this has auto-install policies\" icon on both library and inventory pages within host software details. If we stopped showing installer-related icons on inventory that would clean things up a bit (though this would still need to implement this for the library side) but that'd require a change to the desired fix here.\n\nRe: splitting endpoints, that would be out of scope for this bug, and would need a new issue filed."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "\u003e Re: splitting endpoints, that would be out of scope for this bug, and would need a new issue filed.\n\nOh yeah for sure! I don't think it should be done here, but seeing this ticket made me think about it :D"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.67.3\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nSee #28626. We've avoided the nil pointer panic (via #28674) but there's still probably an underlying issue for getting us to the warning point in the first place.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nTODO; primary effort for this ticket will be finding a valid repro scenario, and confirmaing expected behavior on software ingest for that repro behavior.\n\n### üïØÔ∏è More info\n\nThusfar we have only been able to reproduce this issue in customer environments, so what we probably need is enough logging to determine which host(s) have this issue, and then both snapshots of current host software and incoming detail queries to reproduce the broad issue.\n\n### üõ†Ô∏è To fix\n\nIt sounds like this is a little bit open pending the TODO in steps to reproduce and that the initial task will be that TODO task.",
          "number": 29061,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Warning state on last-opened time calculation when changing the name of an existing software entry",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29061"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxBg",
        "labels": [
          "bug",
          ":release",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "ü™≤Warning state on last-opened time calculation when changing the name of an existing software entry",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I see that the steps to reproduce is still a **to do**.\n\nHowever, the way you've written it sounds like part of the ticket will be to find a way to reproduce this. I'm a little uncertain how to proceed. Should I move this forward and indicate that todo as part of the fix area?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Whoops, my bad on removing `:reproduce`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Yeah, this will need to be moved through to engineering with the reproduce tag intact as we'll likely need to coordinate with customers to get a repro."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "let's timebox this, whether it is reproduction, or adding logging"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulling the :reproduce label off of this since that makes it less clear whose work queue this is in. Timebox is for investigation/repro by an engineer."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev heads up that this is a related ticket: https://github.com/fleetdm/fleet/issues/29050"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.67.2\n\n### üí• ¬†Actual behavior\nSome macOS apps have been found to have duplicate bundleIdentifiers, in particular electron helper apps like:\n`Postman Helper (GPU)  | com.postmanlabs.mac.helper`\n`Postman Helper (Renderer) com.postmanlabs.mac.helper`\n\nBecause they have duplicate bundleIDs, they are identified as the same app.  This behavior seems to be limited to helper apps, electron being the most common occurence.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1.  Install Postman on macOS\n2. Refresh host\n3. view software on host\n4. Only one software entry is present with bundleID com.postmanlabs.mac.helper\n\n### üïØÔ∏è More info _(optional)_\nThe scope of this fix is to reduce the amount of expected macOS apps not appearing in fleet, not to eliminate the issue.  The below fix accomplishes this by reducing the scope of expected macOS apps.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\n1. Document current behavior (duplicate app won't show up; will only show first instance).\n2. Get rid of embedded apps and see what's left.\n  -  update macos software detail query to filter out embedded apps: `WHERE path NOT LIKE '%.app/Contents%'`\n\nOmitting embedded apps (app bundles inside of app bundles) from software inventory provides additional customer value by reducing the noise associated with reporting helper apps in software inventory.  Vulnerabilities are reported on the \"parent\" app, so there is less value in reporting on these helper apps in inventory.\n\nFeedback from @allenhouchins:\n```\nTo me its more noise than benefit. It would be good to see child/parent relationship in the UI with child apps hidden by default but ultimately you can't do anything with those embedded apps, like patch/update them, that you wouldn't do by targeting the parent app.\n```\n\nFeedback from @nonpunctual:\n```\nAdmins can use these tools to dig into apps we don't need to do it for them:\nSuspicious Package\nApparency\nArchaeology\n```\n\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 28788,
          "repository": "fleetdm/fleet",
          "title": "ü™≤macOS apps with duplicate bundleIDs do not appear in Fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28788"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxDU",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "ü™≤macOS apps with duplicate bundleIDs do not appear in Fleet",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@eugkuo look under the `To Fix`, the proposed solution here needs product input"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003eOmitting embedded apps (app bundles inside of app bundles) from software inventory may resolve this issue AND provide additional customer value by reducing the noise associated with reporting helper apps in software inventory. Vulnerabilities are reported on the \"parent\" app, so there is less value in reporting on these helper apps in inventory.\n\n@noahtalerman works for me. You?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Omitting embedded apps (app bundles inside of app bundles) from software inventory may resolve this issue AND provide additional customer value by reducing the noise associated with reporting helper apps in software inventory.  Vulnerabilities are reported on the \"parent\" app, so there is less value in reporting on these helper apps in inventory.\n\u003e \n\u003e Feedback from @allenhouchins:\n\u003e ```\n\u003e To me its more noise than benefit. It would be good to see child/parent relationship in the UI with child apps hidden by default but ultimately you can't do anything with those embedded apps, like patch/update them, that you wouldn't do by targeting the parent app.\n\u003e ```\n\u003e \n\u003e Feedback from @nonpunctual:\n\u003e ```\n\u003e Admins can use these tools to dig into apps we don't need to do it for them:\n\u003e Suspicious Package\n\u003e Apparency\n\u003e Archaeology\n\u003e ```\n\n@mostlikelee @eugkuo sounds good to me! \n\nFYI @zayhanlon please in case you forsee any customer concerns with omitting these helper apps from software inventory.\n\nFor example, these Chrome \"Helper\" items wouldn't show up in the UI/API:\n\n\u003cimg width=\"1376\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d978561e-1618-41be-9b3b-5513b355fdf2\" /\u003e"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Thanks @noahtalerman . I've put this bug in 'ready to estimate' and assigned @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per discussions in standup-and-then-some, we want to see whether we get where we want to be by excluding some path patterns from our apps detail query:\n\n```\n%.app/Contents/%\n/System/%\n```\n\nThe former to remove embedded apps, the latter to remove SIP'd apps built into the OS that can't get patched individually anyway.\n\nThen we'll see where that gets us in terms of a less noisy app list (and potentially clean up a bunch of cases where there are duplicate bundle IDs where we don't care about inventorying the duplicates)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1748526293420649"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \n\n```\n{\n  \"version\": \"0.0.0-SNAPSHOT-9e5a9a0\",\n  \"branch\": \"rc-minor-fleet-v4.71.0\",\n  \"revision\": \"9e5a9a045e9ba739985175fb85aeb07abde96ed3\",\n  \"go_version\": \"go1.24.4\",\n  \"build_date\": \"2025-07-10\",\n  \"build_user\": \"runner\"\n}\n```\n\n**Web browser and operating system**: latest Chrome\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n\u003cimg width=\"308\" height=\"78\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a30c63e4-fd27-4712-b5fc-4aecd8415dcf\" /\u003e\n\nArchive Utility.app has been natively installed on macOS for years. In the Fleet software inventory it's showing a Linux icon.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Look at Software inventory on any Mac enrolled in Fleet.\n\n### üïØÔ∏è More info _(optional)_\n\nThe app is not shipped in /Applications - It is located in `/System/Library/CoreServices/Applications/Archive Utility.app` so perhaps there is some sort of hard coded assumptions about native macOS apps based on filepath.\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica \n\nApple icon should be displayed instead of Linux.\n\nOS icons (penguin, Windows, Apple, etc.) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software titles/versions. See issue comments for more context\n",
          "number": 30803,
          "repository": "fleetdm/fleet",
          "title": "Linux icon showing in software inventory for macOS native app",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30803"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxFk",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Linux icon showing in software inventory for macOS native app",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The reason for this is we starts-with match on Linux platform names for app icons, and `arch` is a Linux platform name.\n\nWe wind up using the same code paths for software icons as for OS icons, so this code winds up being rather brittle; just dropping \"Arch\" out of the list would mean we'd get a generic package icon for Arch Linux hosts rather than the penguin. So getting this right without breaking something else is going to require a bit of a refactor as the current algorithm is too naive.\n\n@marko-lisica do we even want to show the penguin for software packages? Our default for Linux packages of various types is a generic package icon, so right now we have a mix of penguins (for items that have a linux platform inside the name) and generic package icons (for everything else), for no reason that's obvious to an admin. Maybe OS icons (penguin, Windows, Apple OSes, Android, ChromeOS) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software?\n\nPushing this back to In Progress to get an answer on the above."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Maybe OS icons (penguin, Windows, Apple OSes, Android, ChromeOS) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software?\n\n@iansltx I think this is a good solution. We have a default icon for Linux packages, so we won't need the \"penguin\" icon for that purpose. Also, other platforms have a default icon for packages."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752671903129569"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks for filing @nonpunctual and looking into the root cause @iansltx and product designing/updating the to-fix @marko-lisica .\n\nBold Est: 1 rounding up to 2 to add tests and internal documentation\n\n"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 4.70.0\n**Web browser and operating system**: 138.0.7204.100\n\n\u003chr/\u003e\n\n### üí•  Actual behavior\nFleet is incorrectly reporting that macOS and Linux hosts running the latest patched versions of Google Chrome are vulnerable to CVE-2025-6554. This appears to be a false positive caused by incomplete CPE data from NVD for this vulnerability.\n\n### üßë‚Äçüíª  Steps to reproduce\n1. Enroll a macOS host running Google Chrome version `138.0.7204.92` or `138.0.7204.93` (or a Linux host running `138.0.7204.92`) or later into Fleet.\n2. Navigate to the **Vulnerabilities** page in the Fleet UI.\n3. Search for `CVE-2025-6554`.\n4. Observe that the host is listed as vulnerable, despite running a version of Chrome where the vulnerability has been patched.\n\n### üïØÔ∏è More info _(optional)_\nThis issue stems from the vulnerability data for CVE-2025-6554, which was addressed in Google Chrome's stable channel update on June 30, 2025.\n\nAccording to the [[Google Chrome release notes](https://chromereleases.googleblog.com/2025/06/stable-channel-update-for-desktop_30.html)](https://chromereleases.googleblog.com/2025/06/stable-channel-update-for-desktop_30.html), the patched versions are:\n*   **Windows**: `138.0.7204.96` / `.97`\n*   **Mac**: `138.0.7204.92` / `.93`\n*   **Linux**: `138.0.7204.92`\n\nHowever, the CVE data (e.g., on [[VulnCheck](https://vulncheck.com/cve/cve-2025-6554)](https://vulncheck.com/cve/cve-2025-6554)) seems to only list the Windows version (`138.0.7204.96`) as the fix. This causes Fleet to incorrectly flag patched Mac and Linux systems as vulnerable.\n\nThe suggestion from the internal discussion was to implement a data override in the Fleet vulnerability feed to correct this false positive until the CNA/NVD updates the official record.",
          "number": 30682,
          "repository": "fleetdm/fleet",
          "title": "Bug: False-positive for CVE-2025-6554 on Linux/macOS hosts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30682"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxHA",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Bug: False-positive for CVE-2025-6554 on Linux/macOS hosts",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Repro'd](https://dogfood.fleetdm.com/software/versions/568346)"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet contributor,\n| I want to research the different ways Fleet can deploy custom iOS apps (`.ipa`'s)\n| so that I can draft and build this feature in Fleet.\n\n## Key result\n\nNone.\n\n## Original requests\n\n- https://github.com/fleetdm/fleet/issues/23736\n\n## Context\n- Product Designer: @noahtalerman \n- Engineering DRI: @mostlikelee \n  \n\n## Changes\n\n### Product\n- [ ] Research: Create a public Google doc that answers the following questions:\n  - Current understanding: `customer-pingali` will compile an `.ipa` file and add it to Fleet. Fleet will install the `.ipa` on iOS/iPadOS hosts with an MDM command (more discussion in [this Google doc](https://docs.google.com/document/d/1zXsIxdpOVgZWJP74V9-2qaIuzZDPbg6MC_ZSlI8Jy74/edit?tab=t.0))\n    - What MDM command can Fleet use to deploy the app?\n    - What MDM command can Fleet use to check if the app is installed and add it to software inventory?\n- [x] UI changes: No changes\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps Mode UI changes: No changes\n- [x] GitOps generation changes: TODO \u003c!-- Specify changes to results from the fleetctl generate-gitops command. Put \"No changes\" if there are no changes necessary. --\u003e\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] Changes to paid features or tiers: No changes\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] Other reference documentation changes: No changes\n- [x] First draft of test plan added\n- [x] Once shipped, requester has been notified: WONT for this research story.\n- [x] Once shipped, dogfooding issue has been filed: WONT for this research story.\n\n### Engineering\n\nNo changes for this research story.\n\n## QA\n\nNo changes for this research story.\n",
          "number": 31174,
          "repository": "fleetdm/fleet",
          "title": "Research: Deploy custom (in-house) iOS app",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31174"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxJc",
        "labels": [
          "story",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Research: Deploy custom (in-house) iOS app",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [ ] Research: Create a public Google doc that answers the following questions:\n\u003e   - Current understanding: `customer-pingali` will compile an `.ipa` file and add it to Fleet. Fleet will install the `.ipa` on iOS/iPadOS hosts with an MDM command (more discussion in [this Google doc](https://docs.google.com/document/d/1zXsIxdpOVgZWJP74V9-2qaIuzZDPbg6MC_ZSlI8Jy74/edit?tab=t.0))\n\u003e     - What MDM command can Fleet use to deploy the app?\n\u003e     - What MDM command can Fleet use to check if the app is installed and add it to software inventory?\n\n@mostlikelee moved this research story to reach to spec. Please feel free to update the research task (see issue description) if I'm missing anything.\n\ncc @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "bringing this to standup today"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "https://support.apple.com/guide/deployment/distribute-proprietary-in-house-apps-depce7cefc4d/web#:~:text=Apps%20need%20to%20be%20in,access%20a%20server%20at%20Apple.\n\nApps need to be in .ipa format and be built with an in-house provisioning profile.\n\nThey need to have an XML manifest file.\n\nThey need to be downloaded from a website whose address begins with HTTPS.\n\nThey need to be signed by a certificate that‚Äôs trusted on the device.\n\nTheir network configuration needs to allow devices to access a server at Apple. For more information, see the Apple Support article [Use Apple products on enterprise networks](https://support.apple.com/101555)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this missed parking lot yesterday, bringing back today"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Jamf has this feature and has documentation that may be worth looking over:\n\nhttps://learn.jamf.com/en-US/bundle/jamf-pro-documentation-current/page/In-House_Apps.html\nhttps://learn.jamf.com/en-US/bundle/jamf-pro-documentation-current/page/Provisioning_Profiles_for_In-House_Apps.html"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: 7-zip\n- Application platform: Windows\n\n---\n\n### Validation\n\n- [ ] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/windows.json` created\n        - `/outputs/apps.json` updated\n- [ ] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [ ] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [ ] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [ ] App adds successfully to team's library\n- [ ] App installs successfully on host\n- [ ] App opens successfully on host\n- [ ] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog",
          "number": 31345,
          "repository": "fleetdm/fleet",
          "title": "New FMA: 7-zip for Windows",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31345"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdC-p0",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "New FMA: 7-zip for Windows"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "create a json schema doc for Windows FMA PRs and associated CI",
          "number": 31349,
          "repository": "fleetdm/fleet",
          "title": "Windows FMA schema validator",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31349"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdDFlI",
        "labels": [
          ":release",
          "~engineering-initiated",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Windows FMA schema validator",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding to sprint as low hanging fruit"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: v4.69.0\n**Web browser and operating system**: ChromeOS: 137.0.7151.132 (Official Build) (64-bit), Chrome Browser:\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nhttps://github.com/user-attachments/assets/f3ebb70c-6ea7-4770-99dd-9b1bed540470\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to Queries \u003e Add query.\n2. Start typing in the query composer.\n3. Use arrow keys to move cursor.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nSame as #27233, but still present in v4.69.0 on ChromeOS.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30691,
          "repository": "fleetdm/fleet",
          "title": "Query cursor out of alignment on ChromeOS",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30691"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOLw",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "customer-knopfia",
          "~assisting g-orchestration",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Query cursor out of alignment on ChromeOS",
        "comments": [
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Was able to reproduce on the chrome book. No repro on either macos, windows or ubuntu. \n\nhttps://github.com/user-attachments/assets/64c4ad2a-094e-4c5b-b594-f6cfc7a5e18f"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Estimations:\n\n\u003cimg width=\"528\" height=\"221\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/064ef5bc-4a66-4ec4-aec8-e80ef397cc0a\" /\u003e\n\nDecided: Timebox to 3"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nWhen setting up a policy automation, the background page scrolls unexpectedly. \n\nThis only occurs when the browser window is not full height, and the selection dropdown overflows the bottom of the page. \n\nLoom recording:\n\nhttps://www.loom.com/share/c796032677724e649c6af960ed3b0fc2?sid=216d9868-60eb-4d4e-b347-393800f46e2f\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Create a team \n2. Add policies (creating a large number of policies makes this easier to reproduce without making the screen 100px tall)\n3. Add scripts (see above)\n4. Navigate to the team's Policy view\n5. Adjust height of the browser window until the policy table overflows the bottom of the page. \n6. Make sure you are scrolled up to the top of the page. \n7. Click on **Manage automations**\n8. Select the last listed policy\n9. Open the dropdown menu \n10. Observe scrolling\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica\n\nSet dropdown menu `max-height` to 200px, so that the dropdown menu fits the modal. This should be changed for Scripts and Software automations modal. \n\n### est.\n\n\u003cimg width=\"467\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80331afe-b6e9-41ca-a219-9e4c52336bcd\" /\u003e",
          "number": 30004,
          "repository": "fleetdm/fleet",
          "title": "UI - Background page scrolls while editing Policy automations.",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30004"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOYo",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "~assisting g-orchestration",
          ":incoming",
          "customer-cisneros",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "UI - Background page scrolls while editing Policy automations.",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet UI scrolling issue on policy automations page #6515](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/e0769c7b-805a-4272-897a-de7c5f7af36b)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Timebox to 1 point."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.69 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nIf you had a VPP token tied to a specific team you won't see \"All teams\" option in the dropdown until you save it empty and reopen\n![Image](https://github.com/user-attachments/assets/781018b8-8275-42c8-9ac6-e619e2204a9c)\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Obtain a VPP token\n2. Go to: https://andrey.ngrok.app/settings/integrations/mdm/vpp\n3. Add the token\n4. Select Actions \u003e Edit teams \u003e Select any team \u003e Save5. \n6. Reopen \n7. Remove the previously selected individual team\n8. Try to select All Teams\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nTo reproduce this, you first need to save the token with any other team and then reopen. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica \n\nOn `/settings/integrations/mdm/vpp` page in \"Edit teams\" modal:\n- When the user selects \"All teams\" in the dropdown and afterward selected team or \"No team\", \"All team\" should disappear from the dropdown\n- When the user selects team or \"No team\" in the dropdown and opens the dropdown, \"All teams\" should be available (if no team (or \"No team\") is selected for another VPP token).\n  - When \"All teams\" is selected it will remove all selected teams from dropdown and those will be available in dropdown list.",
          "number": 30357,
          "repository": "fleetdm/fleet",
          "title": "\"All Teams\" option is missing on the VPP token actions dropdown if another team was selected prior to it",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30357"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOeo",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-mdm",
          "customer-nortia"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "\"All Teams\" option is missing on the VPP token actions dropdown if another team was selected prior to it",
        "comments": [
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @AndreyKizimenko, this works as intended. Please look at [this dev note](https://www.figma.com/design/j2M1heOh8eZD6LcUJks6HE/-9956-Add-multiple-Apple-Business-Manager-and-Volume-Purchasing-Program-connections?node-id=5530-8689\u0026t=D4pAdmkTE5HFzdo8-11) and the others related to team selection.\n\nI'm closing this one. Let me know if that makes sense to you."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "\"All Teams\" lost sight,\nIn dropdown's clouded height,\nRestored, it takes flight."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Hi @marko-lisica, this is on me, could've definitely described it better. I understand the reason why we want to hide All Teams, the issue that I'm seeing is that it isn't brought back when the user removes individual teams. You can see on the screenshot bellow that no team is selected by All Teams is still missing. \n\n\u003cimg width=\"823\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7a59eda1-8bab-4e63-b5ad-4448bdd8bb8b\" /\u003e"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "I'm also re-reading through the dev notes and I'm not sure whether we are referring about removing an option from the dropdown or just clearing it out from the selection. Selecting All Teams clears out individual teams from the selection and the other way around, selecting any team while you have All Teams clears out All Teams, which I think matches what design is describing. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@AndreyKizimenko Do you have one or more VPP tokens? Not sure, but the reason why you don't see \"All teams\" might be that you already selected some team for another VPP token.It would be easier for me to understand if you could record the behavior you observe and believe is a bug."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "@marko-lisica No, another VPP token doesn't have any teams assigned. Attaching a video with the whole flow \n\nhttps://github.com/user-attachments/assets/b453a5f2-38dd-4473-bb16-d89981748ae5"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Thanks @AndreyKizimenko! I just specified a fix in the `üõ†Ô∏è To fix` section in the issue description. Let me know if that solves the problem. "
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Yeah, I think this will solve it. Thank you, Marko! "
          }
        ]
      }
    ]
  },
  {
    "timestamp": "2025-07-29T19:06:41.731205762Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCo1s",
        "status": "‚úîÔ∏èAwaiting QA",
        "issueNumber": 26404,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "status": "üê£ In progress",
        "issueNumber": 30853,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX120",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 29914,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX12Q",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 27983,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "status": "‚úîÔ∏èAwaiting QA",
        "issueNumber": 29944,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: v4.68.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nWhen setting up a policy automation, the background page scrolls unexpectedly. \n\nThis only occurs when the browser window is not full height, and the selection dropdown overflows the bottom of the page. \n\nLoom recording:\n\nhttps://www.loom.com/share/c796032677724e649c6af960ed3b0fc2?sid=216d9868-60eb-4d4e-b347-393800f46e2f\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Create a team \n2. Add policies (creating a large number of policies makes this easier to reproduce without making the screen 100px tall)\n3. Add scripts (see above)\n4. Navigate to the team's Policy view\n5. Adjust height of the browser window until the policy table overflows the bottom of the page. \n6. Make sure you are scrolled up to the top of the page. \n7. Click on **Manage automations**\n8. Select the last listed policy\n9. Open the dropdown menu \n10. Observe scrolling\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica\n\nSet dropdown menu `max-height` to 200px, so that the dropdown menu fits the modal. This should be changed for Scripts and Software automations modal. \n\n### est.\n\n\u003cimg width=\"467\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80331afe-b6e9-41ca-a219-9e4c52336bcd\" /\u003e"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOYo",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet UI scrolling issue on policy automations page #6515](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/e0769c7b-805a-4272-897a-de7c5f7af36b)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Timebox to 1 point."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @marko-lisica ! What a great, simple solution \u003c3\n\nEst: 1"
          }
        ],
        "issueNumber": 30004,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "Related to https://github.com/fleetdm/fleet/issues/27756\r\nand https://github.com/fleetdm/fleet/pull/31118\r\n\r\nNoNewWindow prevents powershell from opening a new window when starting the process.\r\nforce-uninstall bypasses Chrome's confirmation dialog\r\n\r\nFixes were discovered when working on https://github.com/fleetdm/fleet/pull/31210\r\n\r\n# Checklist for submitter\r\n\r\n## Testing\r\n\r\n- [x] QA'd all new/changed functionality manually\r\n\r\n## Manual Testing\r\nregression test Chrome Windows FMA (#27756)\r\n",
          "number": 31367,
          "repository": "fleetdm/fleet",
          "title": "Forcing chrome to uninstall and no new powershell window",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/31367"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdFX6o",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "Done",
        "title": "Forcing chrome to uninstall and no new powershell window",
        "issueNumber": 31367,
        "changeType": "added"
      },
      {
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSome deb packages ask user questions during installation causing the install script to timeout.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. TODO\n2. TODO\n3. \n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nFrom community contributor:\n\nSetting this variable within orbit itself, instead of in the default installation script template, accomplishes two things:\n\nAccomplishes what is usually considered the desired behavior retroactively, without requiring administrators to go back and update all of their install scripts\nAllows administrators to override the default behavior in their scripts, in case there is a need for package installation to actually prompt the currently logged-in user for information.\nNote that this does NOT prevent dpkg from blocking when a conffile has been changed since the previous installation. In these cases, the administrator should include\n-o Dpkg::Options=\"--force-(confdef|confold|confnew)\" in the dpkg or apt command in the install script.\n",
          "number": 31396,
          "repository": "fleetdm/fleet",
          "title": "deb package hangs during install",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31396"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.46.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Waiting",
        "title": "deb package hangs during install",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocking waiting on replication steps for QA steps from contributor"
          }
        ],
        "issueNumber": 31396,
        "changeType": "added"
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: TODO\n- Application platform: TODO (macOS/Windows)\n\n---\n\n### Validation\n\n- [ ] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [ ] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [ ] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [ ] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [ ] App adds successfully to team's library\n- [ ] App installs successfully on host\n- [ ] App opens successfully on host\n- [ ] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog",
          "number": 31398,
          "repository": "fleetdm/fleet",
          "title": "New FMA: \u003cApp Name\u003ei cant add my windows device to the server it says default ssl error even though i added the pem file to the correct folder",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31398"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdF8xw",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "New FMA: \u003cApp Name\u003ei cant add my windows device to the server it says default ssl error even though i added the pem file to the correct folder",
        "comments": [
          {
            "author": {
              "login": "LuckZo0o"
            },
            "body": "\u003cimg width=\"2414\" height=\"1121\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9bf67a33-27b7-49d0-9ac8-de54a128c740\" /\u003e"
          }
        ],
        "issueNumber": 31398,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-07-30T07:08:45.979422614Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCntE",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "This was surfaced with BYOD Apple devices. I tagged it with g-software but it could be `#g-mdm`\n@georgekarrv @mostlikelee preference on who tackles this one?\n\nWhen a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps). \nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\n\u003cimg width=\"1186\" height=\"374\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8c7dc1a7-ac0e-497a-91df-08dc8fb31702\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@georgekarrv we're going to take this.  removing it off your board"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "\u003e When a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps).\nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\nAbout to put in a PR to show the generic No software detected empty state (plus tests). @marko-lisica if @jmwatts is correct for a different empty state, can you update this ticket if it's imperative for 4.72, or open a new ticket for 4.73 to track the new empty state?\n\nThank you!"
          }
        ],
        "issueNumber": 31329,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8R4",
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1747760158772119"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "more context: https://fleetdm.slack.com/archives/C086V2QK76X/p1747675290738609"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "This is seemingly pretty easily reproducible by adding a new team yml with box drive in gitops.\n```\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:51:27.200080 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 21:49:11.554490 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n5 rows in set (0.00 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| Slack-4.44.59-macOS.pkg | 28 |      10 | 2025-07-15 22:44:36.454515 |\n| BoxDrive-2.43.205.pkg   | 29 |      10 | 2025-07-15 22:44:36.460138 |\n| googlechrome.dmg        | 30 |      10 | 2025-07-15 22:44:36.464730 |\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 22:45:00.940530 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 22:44:45.480426 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n8 rows in set (0.00 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| Slack-4.44.59-macOS.pkg | 28 |      10 | 2025-07-15 22:44:36.454515 |\n| BoxDrive-2.43.205.pkg   | 29 |      10 | 2025-07-15 22:46:52.967720 |\n| googlechrome.dmg        | 30 |      10 | 2025-07-15 22:44:36.464730 |\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 22:47:20.744843 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 22:47:03.419169 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n8 rows in set (0.00 sec)\n```\n\nIt returns different updated_at results after apply, and then after a while it seems to stop changing. Will investigate further."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Running it over and over again with a single team seems to keep the value consistent:\n```\n\u003e select filename, id, team_id, updated_at from software_installers;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:29:44.399978 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n+-------------------------+----+---------+----------------------------+\n3 rows in set (0.01 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:29:44.399978 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n+-------------------------+----+---------+----------------------------+\n3 rows in set (0.00 sec)\n```"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "So it looks like the uninstall script for box is changing. In specific:\n```\n  pkg_ids=(\n    \"com.box.desktop.installer.local.appsupport\"\n    \"com.box.desktop.installer.autoupdater\"\n    \"com.box.desktop.installer.desktop\"\n  )\n\n  pkg_ids=(\n    \"com.box.desktop.installer.desktop\"\n    \"com.box.desktop.installer.local.appsupport\"\n    \"com.box.desktop.installer.autoupdater\"\n  )\n```\n\nThen we have this fancy query to tell us if anything has changed:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software_installers.go#L2094-L2122\n```\nSELECT id,\nstorage_id != ? is_package_modified,\ninstall_script_content_id != ? OR uninstall_script_content_id != ? OR pre_install_query != ? OR\nCOALESCE(post_install_script_content_id != ? OR\n\t(post_install_script_content_id IS NULL AND ? IS NOT NULL) OR\n\t(? IS NULL AND post_install_script_content_id IS NOT NULL)\n, FALSE) is_metadata_modified FROM software_installers\nWHERE global_or_team_id = ?\tAND title_id IN (\n\tSELECT id FROM software_titles WHERE unique_identifier = ? AND source = ? AND browser = ''\n)\n```\nSo `is_metadata_modified` is returning true, because the `uninstall_script_content_id` is changing."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\nWas able to reproduce original issue (randomly, not consistently) on 4.71.0 with local GitOps script. Upgraded to 4.72.0 and attempted to reproduce the same behavior repeatedly. Was not able to reproduce with the fix in place. "
          }
        ],
        "issueNumber": 29286,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7LA",
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/26618?planning-poker) with Zenhub @iansltx @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm not able to repro this (wanted to check what was going on prior to throwing an estimate on). Both places have the same timestamp returned from the API (Jan 28 ~6:40a UTC), and both show the expected \"one month ago\" in the UI.\n\nMaybe we close this and if anyone sees this again we reopen?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Maybe we close this and if anyone sees this again we reopen?\n\ni'm onboard with this, unless @RachelElysia has any other info that may get us into this state\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per [Slack](https://fleetdm.slack.com/archives/C086V2QK76X/p1741109822016689?thread_ts=1741109272.543039\u0026cid=C086V2QK76X), @jmwatts has a repro."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Can you grab your vulnerabilities table and confirm which `created_at` timestamp is the correct one? This feels like a join is propagating things across a bunch of columns where it shouldn't be, so I'm assuming that the individual CVE page is correct and the list is wrong, but want to make sure."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "There's a lot in that table :D so here's one example but let me know if you need more than this\n\n![Image](https://github.com/user-attachments/assets/e2a4def4-7ace-4802-b833-55bb6ec2aa09)\n\n![Image](https://github.com/user-attachments/assets/b4b6c662-824b-4a93-a727-a19a0060d60a)\n\n![Image](https://github.com/user-attachments/assets/54b65a28-9216-4cdd-af88-7e3a7a24013a)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This is useful; thanks!\n\nLooks like we may have at least two bugs here. In the case you showed, the list view is correct but the individual vuln view shows detected as the current timestamp (though this seems to vary from vuln to vuln). In Rachel's example though both places have different values, both of which aren't the current timestamp. So we might need to scope this as \"fix the bugs that we can repro\", which won't necessarily be the original bug."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Here's one example that is showing detected as a minute ago, but the table view of vulns shows another time:\n\ndetails view\nhttps://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-0938\ntable view of vulns\nhttps://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-0938\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0"
          },
          {
            "author": {
              "login": "rachaelshaw"
            },
            "body": "I haven't seen this issue exactly, but was about to report a similar issue: currently, every CVE detail page is saying detected \"less than a minute ago\"; In the API response, `created_at` always seems to be set to the current time. (List view is fine, only seeing this w/ `GET /vulnerabilities/:cve`). \n\n@RachelElysia do you think this is related, or should I report that bug seperately?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@rachaelshaw The one you're seeing is the one I mentioned. Thinking we'll resolve that one with this ticket and see if we can repro the other one afterward."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nGo to CVE details page (ex: /software/vulnerabilities/CVE-2025-24162) and note the detected date\nGo to vulnerabilities table page (ex: /software/vulnerabilities?exploit=false\u0026query=CVE-2025-24162\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0) and note the detected date\n\n- [x] Detected date on software vuln table should match detected date in details\n- [x] Check multiple CVEs"
          }
        ],
        "issueNumber": 26618,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 30853,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdAjcc",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 31309,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgc-Xts",
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced on 4.70.1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Done and merged this morning to not drag to next sprint"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n- [x] Sort function has been removed from Type column on software and host software pages"
          }
        ],
        "issueNumber": 30746,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-07-30T19:06:16.140612968Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "status": "üê£ In progress",
        "issueNumber": 30197,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdC06A",
        "status": "Waiting",
        "issueNumber": 31334,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "labels": [
          "story",
          ":release",
          "~vulnerability-management",
          "customer-rialto",
          "#g-software",
          "~qa-on-branch"
        ],
        "status": "üê£ In progress",
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdCntE",
        "issueNumber": 31329,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCIqk",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts updated this and the other 2 bugs you filed to be filed according to the clarified process \u003c3 out of your court now, grazie"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like a combo icon + install script issue."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the error also occurs after manual install, so i don't think we should block this on vendor pkg errors."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1 (\u003c 2 hours)\n\nNote: the scope of this ticket will only be the FE icon portion"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this may be a non issue, @RachelElysia will confirm"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I don't see the issue anymore\n\n\u003cimg width=\"347\" height=\"138\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0616ced5-f3d4-4b5a-8c05-68aeb578e5cf\" /\u003e\n\u003cimg width=\"244\" height=\"94\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d10d3821-9fd4-401a-baee-0c1c48a0d6be\" /\u003e\n\u003cimg width=\"170\" height=\"46\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f8b647b1-867c-40a8-ac23-0d03f0a4ad0c\" /\u003e"
          }
        ],
        "issueNumber": 30367,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCIzs",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts updated this and the other 2 bugs you filed to be filed according to the clarified process \u003c3 out of your court now, grazie"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts This is just the icon issue right?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx Yes. The only other strange thing I noticed while testing was that if you double click on the Santa app it doesn't seem to do anything which, to me, is strange for a macOS app. But it does the same thing if you download it from github, and I can access santactl from terminal, so probably a non-issue. \n\nAlso looks like there's a new version of Santa as of yesterday https://github.com/northpolesec/santa/releases/tag/2025.6"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "I thought I saw this issue too, but now I'm not seeing it. Checked on Chrome and FF on https://localhost:8080/software/add/fleet-maintained?team_id=9 and various other pages just in case. Also checked the code and looks like no one's updated it so I don't understand why its no longer an issue.\n\n@jmwatts are you still seeing this?\n\nPutting this in the waiting column."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Nope, looks fine now. I'll close this one out. \n\n\u003cimg width=\"396\" height=\"141\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e7d51b51-a89f-42a3-9d10-027596af42dd\" /\u003e\n\u003cimg width=\"91\" height=\"42\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d9423393-8f5c-4f0d-9320-2eb4d853c91a\" /\u003e\n\u003cimg width=\"196\" height=\"97\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/36a1fec9-30a9-4e66-9a05-3d739a3d712e\" /\u003e"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Icons squished, unclear,\nIn Fleet's cloud, they reappear,\nCalm, correct, and clear."
          }
        ],
        "issueNumber": 30364,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "number": 31417,
          "repository": "fleetdm/fleet",
          "title": "Research: Linux detection bug",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31417"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdIa8U",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Research: Linux detection bug",
        "issueNumber": 31417,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcp4X0",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "issueNumber": 30913,
        "changeType": "modified"
      },
      {
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "status": "‚úîÔ∏èAwaiting QA",
        "comments": [
          {
            "author": {
              "login": "getvictor"
            },
            "body": "@mostlikelee I believe this is a P1 since this feature is broken right now. However, I've marked it a P2 since customer was OK waiting until 4.73 for the fix.\n\n@harrisonravazzolo Please add the customer label since I couldn't find it."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752521340977199"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "lowered estimate, we already had validation logic"
          }
        ],
        "issueNumber": 30853,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "status": "üê£ In progress",
        "issueNumber": 30248,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX120",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Found this: \n\n```\n#### Articles\n\n[Create an \"üìù Article\" issue](https://github.com/fleetdm/fleet/issues/new?template=fleet-article.md) and follow the instructions in the template to propose a new article for Fleet to publish.\n```"
          }
        ],
        "issueNumber": 29914,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgc-TB0",
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "issueNumber": 31274,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "Related to https://github.com/fleetdm/fleet/issues/27756\r\nand https://github.com/fleetdm/fleet/pull/31118\r\n\r\nNoNewWindow prevents powershell from opening a new window when starting the process.\r\nforce-uninstall bypasses Chrome's confirmation dialog\r\n\r\nFixes were discovered when working on https://github.com/fleetdm/fleet/pull/31210\r\n\r\n# Checklist for submitter\r\n\r\n## Testing\r\n\r\n- [x] QA'd all new/changed functionality manually\r\n\r\n## Manual Testing\r\nregression test Chrome Windows FMA (#27756)\r\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdFX6o",
        "issueNumber": 31367,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocking waiting on replication steps for QA steps from contributor"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "contributor is OOO, and fleetd cut happened this morning.  I'll figure out next steps here"
          }
        ],
        "issueNumber": 31396,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF8xw",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "LuckZo0o"
            },
            "body": "\u003cimg width=\"2414\" height=\"1121\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9bf67a33-27b7-49d0-9ac8-de54a128c740\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this is not a Fleet maintained app request.  closing"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Windows device link,\nSSL error no more, peace.\nFleet's embrace expands."
          }
        ],
        "issueNumber": 31398,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdDFlI",
        "title": "Windows FMA schema validator",
        "issueNumber": 31349,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-07-31T07:07:36.210812112Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX9VU",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Weird behavior for sure -- I thought it was put in boxes only if there were multiple versions installed but I guess not!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "If we want to just add a grey box around this, it's a EST: 1 FE only and should take 10 minutes.\n\nFrom #20638:\n```\n  // special case when we dont have installed versions. We can only show the\n  // software type atm.\n  if (!installed_versions || installed_versions.length === 0) {\n    return (\n      \u003cdiv className={`${baseClass}__software-details`}\u003e\n        \u003cDataSet\n          title=\"Type\"\n          value={formatSoftwareType({ source: software.source })}\n        /\u003e\n      \u003c/div\u003e\n    );\n  }\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given the above movement, looks like this has been estimated, so moving forward."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@RachelElysia I'm confused. I don't get these modals when I go to Host details \u003e Software\n\nI only a modal if I look in Fleet desktop at the Software tab. I don't see anywhere in Self-service that I would get this modal, and \"Available for install\" isn't a thing anymore in Host details \u003e Software. Is that the only place this is applied? Or am I missing something?"
          }
        ],
        "issueNumber": 30232,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8dE",
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "I noticed in the database dump the label \"Nobody has this label\" was created at `2025-05-20 22:14:03`, however, the host's `label_updated_at` time was `2025-05-20 21:53:39`. In our previous available software query we are doing this check `:host_label_updated_at \u003e= lbl.created_at` with a comment above it stating\n```\nignore software that depends on labels created\n _after_ the label_updated_at timestamp of the host (because\nwe don't have results for that label yet, the host may or may\nnot be a member\n```\n\nWhich is why in this particular case firefox is getting excluded. When I run the following query `update hosts set label_updated_at = '2025-05-20 23:00:00' where id = 2;` and reload the page I get firefox in the result set.\n\n\u003cimg width=\"1639\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f99f21a8-171e-475e-abc5-d7c4e3999657\" /\u003e\n\nIt looks like that `label_updated_at` gets updated when we refetch the host vitals?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thanks @ksykulev I went back to 4.66.0 and confirm this works the same way. "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I'm leaving this as a bug because it's not intuitive for the end user to understand why it works the way it does. "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee @ksykulev I proposed a solution in the `to fix` area and am moving this to **Ready to estimate**.\n\n@mostlikelee do you want to keep this as a bug or convert it to a feature request?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "In the above case:\n1. A dynamic label was created (@jmwatts  can you confirm this is only for dynamic?)\n2. The host hasn't refreshed, so we don't know yet if it's a member of the label.  Fleet assumes the host does not have this label.\n3. This software has a target that excludes that label.\n\nSo the current state is that the host is not in the label, so it _should_ show in the list.\n\nCould use a sanity check from @lucasmrod here as this is the same behavior for policy targets."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee I was not using dynamic labels so it does apply to manual labels. "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e [@mostlikelee](https://github.com/mostlikelee) I was not using dynamic labels so it does apply to manual labels.\n\nok, let's scope this to remove timestamp consideration from manual labels.  updating the \"to Fix\" section."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1748525930809559"
          },
          {
            "author": {
              "login": "ksatter"
            },
            "body": "@ksykulev I'm seeing an issue where Manual labels are also not being respected for 'labels include any'. Do you think this is likely the same root problem, or should we break that out into a separate issue?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "@ksatter ~~Right now the logic stands that if a label (manual or dynamic) is created and we don't fetch host vitals, whatever the label is doing will not apply to the host. So in your case, `labels include any` also falls under this case.~~\n~~After this issue is fixed, any type of manual label will apply despite the `created_at` time or host `label_updated_at` time~~\n\nI was incorrect, looking at the query it doesn't look like it's checking timestamp for `include_any`.\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L2645-L2662\n\n@jmwatts In the case of `exclude_any`, manual labels will apply \"immediately\" and dynamic labels will require a host refetch. How do we want `include_any` to work? Same logic? Or does timestamp not matter in their case?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Add a label to fleet, make sure the label isn't applied to any hosts\n2. Add an FMA or custom package to a team, use \"Custom\" target, exclude any, for the label that no hosts have. Make it available in Self service.\n3. For an enrolled host on that team, check the software that is \"Available for install\"\n4. Open Self service for the host\n- [x] Confirm the software is showing as available in Self Service\n\nAlso confirmed for manual and dynamic labels:\n- [x] Software is not available when using \"Include any\" for only labels the host does not have\n- [x] Software is available when using \"Include any\" for labels the host does have\n- [x] Software is not available when using exclude any for one or more labels the host does have"
          }
        ],
        "issueNumber": 29315,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "issueNumber": 30136,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcgXr8",
        "status": "‚úÖ Ready for release",
        "issueNumber": 30797,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgc8aTI",
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to ready for spec to discuss the best path forward here"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "1. Add Amazon DCV Viewer as FMA\n2. Install app on host\n3. View installed version\n\n- [x] Confirm version is shown as 2024.0.8004"
          }
        ],
        "issueNumber": 31123,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "milestone": {
          "title": "Fleetd-1.47.0"
        },
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocking waiting on replication steps for QA steps from contributor"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "contributor is OOO, and fleetd cut happened this morning.  I'll figure out next steps here"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the PR is reverted from the 1.46 release branch so we don't block the fleetd release"
          }
        ],
        "issueNumber": 31396,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "create a json schema doc for Windows FMA PRs and associated CI",
          "number": 31349,
          "repository": "fleetdm/fleet",
          "title": "Windows FMA schema validator",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31349"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI8OQ",
        "labels": [
          ":release",
          "~engineering-initiated",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ü•ö Ready",
        "title": "Windows FMA schema validator",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding to sprint as low hanging fruit"
          }
        ],
        "issueNumber": 31349,
        "changeType": "added"
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [ ] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [ ] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [ ] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [ ] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [ ] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n- [ ] TODO\n- [ ] Complete MDM Smoke test\n- [ ] Complete Orchestration Smoke test\n- [ ] Complete Software Smoke test\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30696,
          "repository": "fleetdm/fleet",
          "title": "Validate MacOS Tahoe on Fleet so that we can provide same day support when it goes to general release",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30696"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "labels": [
          "story",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Validate MacOS Tahoe on Fleet so that we can provide same day support when it goes to general release",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@AndreyKizimenko While you will be leading this effort, it impacts all product groups, so feel free to request support from the rest of the QA team as needed. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @lukeheath @AndreyKizimenko, this got lost in drafting last two weeks. I don't think this needs to go through the drafting process, as it doesn't require product design or estimation. I moved this to \"Testing - QA board\" project."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@xpkoala @PezHub @jmwatts - @AndreyKizimenko will be taking lead on this, but we'll be bringing into each product group's release board on Monday after sprint kickoff. We expect each QA engineer will be involved at some point as we validate MacOS Tahoe. \n\ncc @sharon-fdm @georgekarrv @mostlikelee "
          }
        ],
        "issueNumber": 30696,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-07-31T19:06:37.246422562Z",
    "items": [
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "Bug observed during sprint [demos](https://fleetdm.slack.com/archives/C03C41L5YEL/p1753461589429129).\n\n[This](https://github.com/fleetdm/fleet/blob/02c5026436072355a70f97e756ecb04a569ee6b8/frontend/pages/hosts/details/cards/Software/HostSoftwareTable/HostSoftwareTable.tsx#L153-L154) seems to be the problem area. Looks like the check is purely based on the platform but it should be also checking for the presence of vulnerability query params.\n\n\n```tsx\n  const memoizedEmptyComponent = useCallback(() =\u003e {\n    const vulnFilterAndNotSupported = isIPadOrIPhone(platform);\n    return vulnFilterAndNotSupported ? (\n      \u003cVulnsNotSupported\n        platformText={APPLE_PLATFORM_DISPLAY_NAMES[platform as ApplePlatform]}\n      /\u003e\n    ) : (\n      \u003cEmptySoftwareTable noSearchQuery={searchQuery === \"\"} /\u003e\n    );\n  }, [platform, searchQuery]);\n```\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica \n\nUI changes: [Figma](https://www.figma.com/design/bLdsOyLfY0IlyhxKSCBcHR/-31329-%F0%9F%AA%B2-HostSoftwareTable-shows-wrong-empty-state?node-id=2-130\u0026t=O3ljmyNs4PlpzS3j-1)\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCntE",
        "status": "üê£ In progress",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "This was surfaced with BYOD Apple devices. I tagged it with g-software but it could be `#g-mdm`\n@georgekarrv @mostlikelee preference on who tackles this one?\n\nWhen a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps). \nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\n\u003cimg width=\"1186\" height=\"374\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8c7dc1a7-ac0e-497a-91df-08dc8fb31702\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@georgekarrv we're going to take this.  removing it off your board"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "\u003e When a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps).\nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\nAbout to put in a PR to show the generic No software detected empty state (plus tests). @marko-lisica if @jmwatts is correct for a different empty state, can you update this ticket if it's imperative for 4.72, or open a new ticket for 4.73 to track the new empty state?\n\nThank you!"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@RachelElysia I just realized this is already on g-software board. I added a few more copy changes that depend on the platform and enrollment type (MDM status). Not sure if you want to estimate this? I can add to planning poker.\n\nFigma link is in issue description."
          }
        ],
        "issueNumber": 31329,
        "changeType": "modified"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "Chrome on windows stalled trying to uninstall for FMA test automation:\nhttps://github.com/fleetdm/fleet/pull/31210\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nhttps://github.com/fleetdm/fleet/actions/runs/16580117238/job/46894005707?pr=31210\n```\nlevel=info ts=2025-07-28T21:00:13.5176998Z caller=app_commander.go:95 app=\"Google Chrome\" msg=\"Executing uninstall script for app...\"\nlevel=error ts=2025-07-28T21:05:13.5339387Z caller=app_commander.go:98 app=\"Google Chrome\" msg=\"Error uninstalling app: exit status 1\"\nlevel=error ts=2025-07-28T21:05:13.5339387Z caller=app_commander.go:99 app=\"Google Chrome\" msg=\"Output: \\n--------------------\\nUninstall command: C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\138.0.7204.158\\\\Installer\\\\setup.exe\\nUninstall args: --uninstall --system-level --uninstall\\n\\n--------------------\"\n```\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\nUninstall chrome FMA on github runner\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nhttps://github.com/fleetdm/fleet/pull/31367",
          "number": 31455,
          "repository": "fleetdm/fleet",
          "title": "Chrome FMA not uninstalling on CI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31455"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdLIg0",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úÖ Ready for release",
        "title": "Chrome FMA not uninstalling on CI",
        "issueNumber": 31455,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 30197,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX9VU",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Weird behavior for sure -- I thought it was put in boxes only if there were multiple versions installed but I guess not!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "If we want to just add a grey box around this, it's a EST: 1 FE only and should take 10 minutes.\n\nFrom #20638:\n```\n  // special case when we dont have installed versions. We can only show the\n  // software type atm.\n  if (!installed_versions || installed_versions.length === 0) {\n    return (\n      \u003cdiv className={`${baseClass}__software-details`}\u003e\n        \u003cDataSet\n          title=\"Type\"\n          value={formatSoftwareType({ source: software.source })}\n        /\u003e\n      \u003c/div\u003e\n    );\n  }\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given the above movement, looks like this has been estimated, so moving forward."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@RachelElysia I'm confused. I don't get these modals when I go to Host details \u003e Software\n\nI only a modal if I look in Fleet desktop at the Software tab. I don't see anywhere in Self-service that I would get this modal, and \"Available for install\" isn't a thing anymore in Host details \u003e Software. Is that the only place this is applied? Or am I missing something?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia TODO confirm that we can no longer access this UI. If that's confirmed, close this."
          }
        ],
        "issueNumber": 30232,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "status": "Waiting",
        "issueNumber": 29944,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCIqk",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts updated this and the other 2 bugs you filed to be filed according to the clarified process \u003c3 out of your court now, grazie"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like a combo icon + install script issue."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the error also occurs after manual install, so i don't think we should block this on vendor pkg errors."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1 (\u003c 2 hours)\n\nNote: the scope of this ticket will only be the FE icon portion"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this may be a non issue, @RachelElysia will confirm"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I don't see the issue anymore\n\n\u003cimg width=\"347\" height=\"138\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0616ced5-f3d4-4b5a-8c05-68aeb578e5cf\" /\u003e\n\u003cimg width=\"244\" height=\"94\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d10d3821-9fd4-401a-baee-0c1c48a0d6be\" /\u003e\n\u003cimg width=\"170\" height=\"46\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f8b647b1-867c-40a8-ac23-0d03f0a4ad0c\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Unable to repro. Closing."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Icon, squished, obscure,\nFleet's clarity restored,\nSoftware's sky, now pure."
          }
        ],
        "issueNumber": 30367,
        "changeType": "modified"
      },
      {
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdIa8U",
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "issueNumber": 31417,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer on the Software page,\n| I want to filter by a custom severity (CVSS score) range\n| so that I can filter software by a vulnerability threshold my security team uses (ex. CVSS ‚â• 7.5).\n\n## Key result\n\nNone. Prioritized because the current behavior makes it look like Fleet does not understand how people actually use CVSS. But now we do.\n\n## Original requests\n\n- #30237\n\n## Context\n- Product Designer: @RachelElysia + @iansltx \n- Engineer: @RachelElysia \n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma](https://www.figma.com/design/J2mqgWcS9RG3jaQc43V67m/-30248--Software-page--filter-by-custom-severity--CVSS-score--ranges?node-id=0-1\u0026p=f\u0026t=YQB8wo6YOLyUzyFu-0)\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes (API endpoint already supports min/max)\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Follows existing CVSS score filtering, so Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [x] Contributor API changes: No changes\n- [ ] Feature guide changes: Make sure the [vulns filtering article](https://fleetdm.com/guides/filtering-software-by-vulnerability) is current with the UI\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n\u003e Note: See Figma for single source of truth for exact text copies \n\nTest modals on Host \u003e Software \u003e Inventory page and Software page\n\n1. Min max is present and new help text is present\n2. Min max is enabled only if vuln software toggle is enabled\n3. Defaults to \"Any severity\"\n4. If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n5. If a user clicks on \"Any severity\", the min and max are cleared\n6. If a user clicks on \"Custom severity\", the min and max do not change\n7. If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n8. If a user clears both custom min/max, the dropdown will change to \"Any severity\" but returns to \"Custom severity\" if they start typing\n9. If the user hits apply with no severity entered, it will apply any severity\n10. If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n11. If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n12. If the user types in an invalid number into either min/max (e.g. 4.11 or -3), the in label error states it must be a number between 0-10 with an increment of 0.1\n12b. The user cannot type in string as the input is limited to type number\n14. If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n15. By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n16. Clearing the filter should show all software \n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "issueNumber": 30248,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdFX6o",
        "status": "Done",
        "issueNumber": 31367,
        "changeType": "modified"
      },
      {
        "assignees": [
          "noahtalerman"
        ],
        "content": {
          "body": "**Fleet version**: Latest snapshot on dogfood\n\n**Web browser and operating system**: Any\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe text in the Updates section of Self-service says the following even when multiple apps are needing updates: \n\n\u003e The following app require updating. If you need help, reach out to IT\n\nThere should be logic to detect when to use `app` vs `apps` or update the text to a more generic `app(s)` approach. \n\n`require` vs `requires` also need to be context aware. \n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Have a device with multiple updates available\n2. Go to Self-service and observe the Updates text\n3. PATCH YOUR APPS! \n\n### üïØÔ∏è More info _(optional)_\n\n\u003cimg width=\"1073\" height=\"268\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1527ae4d-85b6-4a07-b6a3-b195ff24977d\" /\u003e\n\n ### üõ†Ô∏è To fix \n\n- @noahtalerman: Let's update the copy to tell the end user \"why\" to update ([Figma wireframes](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5301-2182\u0026t=hxc2lNnNPhVI7pRT-1)):\n\n\"Your device has outdated software. Update to address potential security vulnerabilities or compatibility issues.\"\n\n- @noahtalerman: Also remove the \"If you need help...\"\n  - Why? Already exists in the \"Self-service\" section.\n\n\u003cimg width=\"727\" height=\"73\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0076f8b5-25cc-4857-998b-23b475659e93\" /\u003e\n\n- @noahtalerman: Copy style borrowed by the following:\n\n\u003cimg width=\"1243\" height=\"90\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/128ee478-a7a3-4ae8-a510-8fb83fe0376a\" /\u003e\n\n\u003cimg width=\"629\" height=\"290\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ceae2da2-0c1e-4dd4-99ce-0547257369cd\" /\u003e",
          "number": 31414,
          "repository": "fleetdm/fleet",
          "title": "Self-service: typo in Updates section",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31414"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdK3Mg",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "‚úÖ Ready for release",
        "title": "Self-service: typo in Updates section",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @jmwatts @mostlikelee I assigned myself and took a stab at this is an unreleased bug: \n- #31449\n\nWill move it to \"Ready for QA\" once the PR merges."
          }
        ],
        "issueNumber": 31414,
        "changeType": "added"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.71\n\nhttps://fleetdm.slack.com/archives/C086V2QK76X/p1753829605060219\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nIf we have a VPP app, that was installed by fleet, then indexed by osquery. We will lose the LastInstallInstalledAt. This makes the `app_store_app.last_install` value `null`. This is a problem on the host library page:\n\u003cimg width=\"5102\" height=\"2742\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b42eef59-cb6d-457d-8cf9-566e45904c20\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Trigger a vpp app to be installed by fleet\n2. Wait for the successful install\n3. Refetch host vitals\n4. Open up the library page\n\n### üïØÔ∏è More info _(optional)_\nWhen passing `OnlyAvailableForInstall` to `ListHostSoftware` , if we have a VPP app, that was installed by fleet, then indexed by osquery. We will lose the `LastInstallInstalledAt` , `LastInstallInstallUUID`.\n\nHere is the reason.\nWe pull in fleet initiated vpp installs here:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L3261\nThey include `last_install_install_uuid`, `last_install_installed_at`.\nThen later if we are asking for applications that are available for install, we run this query https://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L3614-L3632\nThe purpose of this query is to find osquery inventoried software that is not fleet installed but match vpp apps. The problem lays here:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L3647-L3649\n```\n\t\t\t\tif s.VPPAppAdamID != nil {\n\t\t\t\t\ttmpByVPPAdamID[*s.VPPAppAdamID] = s\n\t\t\t\t}\n```\nIf we find a vpp app installer we overwrite the record we pulled up from `hostInstalledVpps` (and lose the `last_install_*` data).\n\n### üõ†Ô∏è To fix\n\nWe should either:\nModify this query to exclude apps that are not installed by fleet\nModify that bit of code to say, if we already have that record in `tmpByVPPAdamID` we can copy over the `last_install_*` data vs just overwriting the record.\nSo why is this working properly on the self service page? Great question, it's because we are not filtering by \"only available for install\".\n\nself service opts:\n```\n\t\tSelfServiceOnly:            true,\n\t\tIncludeAvailableForInstall: true,\n\t\tOnlyAvailableForInstall:    false,\n\t\tIsMDMEnrolled:              true, \u003cmaybe true || false\u003e\n```\nhost library page opts:\n```\n\tSelfServiceOnly: false,\n\tIncludeAvailableForInstall: true,\n\tOnlyAvailableForInstall: true,\n```",
          "number": 31459,
          "repository": "fleetdm/fleet",
          "title": "null on app_store_app.last_install for VPP apps installed by fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31459"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdLKz4",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úÖ Ready for release",
        "title": "null on app_store_app.last_install for VPP apps installed by fleet",
        "issueNumber": 31459,
        "changeType": "added"
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: Windows App\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name`\n- [x] Manifest version scheme matches osquery `app.short_bundle_version`\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier`\n\n### QA\n\n- [ ] App adds successfully to team's library\n- [ ] App installs successfully on host\n- [ ] App opens successfully on host\n- [ ] App uninstalls successfully on host\n\n### Icon\n\n- [x] Icon added to Figma. @marko-lisica: macOS icon has a white background, and Windows app icon has blue background. Windows icon seems more recognizable, and I created SVG for it. [Link to Figma](https://www.figma.com/design/8oXlYXpgCV1Sn4ek7OworP/%F0%9F%A7%A9-Design-system?node-id=1365-4002\u0026t=Pqfnute9dj1VINxk-11)\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog",
          "number": 31468,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Windows App",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31468"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdLZck",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ü•ö Ready",
        "title": "New FMA: Windows App",
        "issueNumber": 31468,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgc5Hl8",
        "title": "ü™≤WhatsApp version different in software inventory",
        "issueNumber": 31185,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgc5rCE",
        "title": "macOS Brave Browser FMA version mismatch",
        "issueNumber": 31122,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-01T07:08:48.392085601Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdC06A",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Carryover tracked well,\nLike leaves in a gentle stream,\nFleet flows with more grace."
          }
        ],
        "issueNumber": 31334,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdIa8U",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "After looking at the XML feed data here: https://github.com/fleetdm/nvd/blob/master/oval_sources.json\nI found that we _are_ getting RHEL kernel-related vulns, but not processing them when we do vulns processing in Fleet. \n\nFiled a bug here: https://github.com/fleetdm/fleet/issues/31495"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Bug in Linux code,\nDetection now seamless, like\nWind through cloud city."
          }
        ],
        "issueNumber": 31417,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4P8",
        "status": "‚úîÔ∏èAwaiting QA",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@mostlikelee Thanks for filing! This is a good investment and definitely something we need to do. Before I prioritize to drafting, would you please review the [create an engineering-initiated story](https://fleetdm.com/handbook/engineering#create-an-engineering-initiated-story) process? This should only have one user story, and the only section that should be removed is the \"Product\" section. \n\nOne user story allows us to focus on a single user and use case, and implement a simpler iteration. We can do a separate iteration if we want to focus on admin experience. "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath thanks, updated!"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@mostlikelee Thanks, I've prioritized to the drafting board and assigned to you as the product designer. You'll be responsible for moving this through the drafting board per the drafting engineering-initiated stories process (or assign to someone else to take it over.)"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee are we aiming to ship this in 4.72?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I think we need to rewrite the name and story here to better reflect the scope (i think we're starting with macos), but yes we want to make some progress on this front in the next sprint to get in front of FMA issues.\n\n@ksykulev can you take a pass at updating this so we can estimate any further work needed outside the POC?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Applied estimate arrived at on Friday in chat."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "- add ability to skip slugs for version mismatches\n- add ability to skip version check"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Automated tests flow,\nLike rivers through code canals,\nPatch hosts swiftly grow.\n\nApps refreshed each day,\nIn the cloud city they play,\nFleet's light shows the way.\n\nNo delay in sight,\nMac platform takes flight, \nIn the glass city's light."
          }
        ],
        "issueNumber": 29183,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOeo",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "~assisting g-mdm",
          "customer-nortia",
          "#g-software"
        ],
        "issueNumber": 30357,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdK3Mg",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @jmwatts @mostlikelee I assigned myself and took a stab at this is an unreleased bug: \n- #31449\n\nWill move it to \"Ready for QA\" once the PR merges."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@noahtalerman Is this an unreleased bug for 4.72? If so, please add the milestone per https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes \n\nAdditionally we'll need a cherry pick into the RC branch. Thanks!"
          }
        ],
        "issueNumber": 31414,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nWhen setting up a policy automation, the background page scrolls unexpectedly. \n\nThis only occurs when the browser window is not full height, and the selection dropdown overflows the bottom of the page. \n\nLoom recording:\n\nhttps://www.loom.com/share/c796032677724e649c6af960ed3b0fc2?sid=216d9868-60eb-4d4e-b347-393800f46e2f\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Create a team \n2. Add policies (creating a large number of policies makes this easier to reproduce without making the screen 100px tall)\n3. Add scripts (see above)\n4. Navigate to the team's Policy view\n5. Adjust height of the browser window until the policy table overflows the bottom of the page. \n6. Make sure you are scrolled up to the top of the page. \n7. Click on **Manage automations**\n8. Select the last listed policy\n9. Open the dropdown menu \n10. Observe scrolling\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica\n\nSet dropdown menu `max-height` to 200px, so that the dropdown menu fits the modal. This should be changed for Scripts and Software automations modal. \n\n### est.\n\n\u003cimg width=\"467\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80331afe-b6e9-41ca-a219-9e4c52336bcd\" /\u003e",
          "number": 30004,
          "repository": "fleetdm/fleet",
          "title": "UI - Background page scrolls while editing Policy automations.",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30004"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdL8SA",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "~assisting g-orchestration",
          "customer-cisneros",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ü•ö Ready",
        "title": "UI - Background page scrolls while editing Policy automations.",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet UI scrolling issue on policy automations page #6515](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/e0769c7b-805a-4272-897a-de7c5f7af36b)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Timebox to 1 point."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @marko-lisica ! What a great, simple solution \u003c3\n\nEst: 1"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Was going to evict this bit the fix looks trivial so going to keep in for now."
          }
        ],
        "issueNumber": 30004,
        "changeType": "added"
      },
      {
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to see the CVE number displayed in the empty state on `/software/vulnerabilities/:cve` if no hosts are affected.\n| so that I can take a screenshot of that page and send it to my security team.\n\n## Roadmap item\n\nNone\n\n## Original requests\n\n#24807\n\n## Context\n- Product Designer: @marko-lisica  \n- Engineer: @iansltx \n\nThis story is the result of community PR: #31370\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [x] UI changes:\n  - Include CVE number in empty state on  `/software/vulnerabilities/:cve` page, when no hosts are affected with that CVE:\n  - \u003cimg width=\"1615\" height=\"466\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5a3f2a1d-8142-4860-9ae0-971bc2aed28f\" /\u003e\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: No changes.\n- [x] REST API changes: No changes.\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps mode UI changes: No changes.\n- [x] GitOps generation changes: No changes. \n- [x] Activity changes: No changes.\n- [x] Permissions changes: No changes.\n- [x] Changes to paid features or tiers: Fleet Free and Premium\n- [x] My device and fleetdm.com/better changes: No changes.\n- [x] Other reference documentation changes: No changes.\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### Fleet Premium\n\n1. Navigate to `/software/vulnerabilities/\u003ccve_that_isn't_detected\u003e`\n2. Verify that CVE number is included in the copy in empty state in both Fleet Free and Premium.\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 31377,
          "repository": "fleetdm/fleet",
          "title": "Include CVE number in empty state on vulnerability details",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31377"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdMZs8",
        "labels": [
          "story",
          "~frontend",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Include CVE number in empty state on vulnerability details",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\n\u003cimg width=\"697\" height=\"262\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/66df103f-b840-4d35-ac61-62b442934c0f\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\nCorrect, i'm DRI for anything Ready for Spec onward.   In many cases I'll delegate in those cases i'll re-assign the story."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta This is now spec'd; estimate is capacity allocation for my review. Feel free to self-assign (for some reason GitHub is fighting my ability to assign this to you), move from Waiting to In progress, and assign me for PR review when it's up. Thanks again!"
          }
        ],
        "issueNumber": 31377,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOLw",
        "title": "Query cursor out of alignment on ChromeOS",
        "issueNumber": 30691,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOYo",
        "title": "UI - Background page scrolls while editing Policy automations.",
        "issueNumber": 30004,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-01T19:05:55.788047706Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 30248,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "status": "üê£ In progress",
        "issueNumber": 29944,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.71\n\nhttps://fleetdm.slack.com/archives/C086V2QK76X/p1753829605060219\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nIf we have a VPP app, that was installed by fleet, then indexed by osquery. We will lose the LastInstallInstalledAt. This makes the `app_store_app.last_install` value `null`. This is a problem on the host library page:\n\u003cimg width=\"5102\" height=\"2742\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b42eef59-cb6d-457d-8cf9-566e45904c20\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Trigger a vpp app to be installed by fleet\n2. Wait for the successful install\n3. Refetch host vitals\n4. Open up the library page\n\n### üïØÔ∏è More info _(optional)_\nWhen passing `OnlyAvailableForInstall` to `ListHostSoftware` , if we have a VPP app, that was installed by fleet, then indexed by osquery. We will lose the `LastInstallInstalledAt` , `LastInstallInstallUUID`.\n\nHere is the reason.\nWe pull in fleet initiated vpp installs here:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L3261\nThey include `last_install_install_uuid`, `last_install_installed_at`.\nThen later if we are asking for applications that are available for install, we run this query https://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L3614-L3632\nThe purpose of this query is to find osquery inventoried software that is not fleet installed but match vpp apps. The problem lays here:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L3647-L3649\n```\n\t\t\t\tif s.VPPAppAdamID != nil {\n\t\t\t\t\ttmpByVPPAdamID[*s.VPPAppAdamID] = s\n\t\t\t\t}\n```\nIf we find a vpp app installer we overwrite the record we pulled up from `hostInstalledVpps` (and lose the `last_install_*` data).\n\n### üõ†Ô∏è To fix\n\nWe should either:\nModify this query to exclude apps that are not installed by fleet\nModify that bit of code to say, if we already have that record in `tmpByVPPAdamID` we can copy over the `last_install_*` data vs just overwriting the record.\nSo why is this working properly on the self service page? Great question, it's because we are not filtering by \"only available for install\".\n\nself service opts:\n```\n\t\tSelfServiceOnly:            true,\n\t\tIncludeAvailableForInstall: true,\n\t\tOnlyAvailableForInstall:    false,\n\t\tIsMDMEnrolled:              true, \u003cmaybe true || false\u003e\n```\nhost library page opts:\n```\n\tSelfServiceOnly: false,\n\tIncludeAvailableForInstall: true,\n\tOnlyAvailableForInstall: true,\n```"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdLKz4",
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 31459,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "status": "‚úîÔ∏èAwaiting QA",
        "issueNumber": 30197,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "The version reported in osquery is 16.0 but when I look in \"About this Mac\" and System Settings \u003e\u003e General it's 26.0\nIt does get the build right though... 25A5279m"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I try to enforce encryption I'm not seeing the banner instructing me to restart or log out, until I've restarted or logged out. Then it stays there no matter how many times I restart. I'm not seeing the banner clear and even after running the `cleanups_then_aggregation` cron the encryption status isn't updated and it says `unrecognized`:\n\n![Image](https://github.com/user-attachments/assets/f3c0b064-8aae-4c39-9993-bd01af2fbd84)\n\nOn the host, I can see the disk encryption profile in System Settings and Filevault is turned on and a recovery key has been set:\n\n\u003cimg width=\"741\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/013cc568-6b97-4bbb-be68-a458bbbdf56b\" /\u003e\n\n\u003cimg width=\"730\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/986b4c3e-42f2-4b9c-9756-f1acc8e1f302\" /\u003e"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Apple introduced a new Device Migration feature (that only works with the latest OSes) which will move your host from a 3rd party MDM server over to Fleet,  all via ABM. It works! however during the enrollment to Fleet the Setup Experience SwiftDialogue window did not display the software Fleet was installing in the background"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-numa\nmacOS 26 - MDM migration invokes Setup Experience (silently) - awaitconfigured\n\n- Upgraded endpoint to macOS 26 \n- ABM recognizes that\n- Able to set a deadline\n- Device starts to migrate\n- Unenrolled from previous MDM (didn‚Äôt have to initiate anything)\n- Recognizes that it needs to enroll into Fleet\n- Waiting for ‚Äòdevice configured‚Äô command\n- Starts going through setup experience again (calling through all apps, VPP apps, setup script)\n\nExpected behavior: Assume host has all apps already installed. It‚Äôs been previously managed. It‚Äôs not a net new device so it shouldn‚Äôt run setup experience. VPP apps would get removed from previous MDM so those would be the one thing that should run again\n\nNote from @mostlikelee : Technically, as soon as the device gets the Fleet MDM profile, the apps should come along with it. We should test"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-eponym\nFleet menu bar item doesn't show up after enrollment in beta 2"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet menu not showing after enrollment in macOS 26 beta 2 #6834](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3ec39176-1e2a-49ec-aea4-3c44108d90d0)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Changing MDMs without a deadline doesn't not show a notification on the host. Maybe it takes a lot more time (writing this after waiting for 2-3 hours)"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Hi all üëã , any issues directly related to the new MDM migration feature Apple introduced in ABM should be tracked separately here https://github.com/orgs/fleetdm/projects/58/views/9?pane=issue\u0026itemId=119675644\u0026issue=fleetdm%7Cfleet%7C30695\n"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Noticed that MacOS26 isn't getting orbit updates from a local tuf server. WIll retest it later next week and file an issue "
          }
        ],
        "issueNumber": 30136,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdK3Mg",
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @jmwatts @mostlikelee I assigned myself and took a stab at this is an unreleased bug: \n- #31449\n\nWill move it to \"Ready for QA\" once the PR merges."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@noahtalerman Is this an unreleased bug for 4.72? If so, please add the milestone per https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes \n\nAdditionally we'll need a cherry pick into the RC branch. Thanks!"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n\u003cimg width=\"981\" height=\"476\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4d2b9050-fb6d-42eb-aa71-6aca42cb56c8\" /\u003e"
          }
        ],
        "issueNumber": 31414,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "### Requestor\n\n- Application name: Windows App\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name`\n- [x] Manifest version scheme matches osquery `app.short_bundle_version`\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier`\n\n### QA\n\n- [ ] App adds successfully to team's library\n- [ ] App installs successfully on host\n- [ ] App opens successfully on host\n- [ ] App uninstalls successfully on host\n\n### Icon\n\n- [x] Icon added to Figma. @marko-lisica: macOS icon has a white background, and Windows app icon has blue background. Windows icon seems more recognizable, and I created SVG for it. [Link to Figma](https://www.figma.com/design/8oXlYXpgCV1Sn4ek7OworP/%F0%9F%A7%A9-Design-system?node-id=1365-4002\u0026t=Pqfnute9dj1VINxk-11)\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdLZck",
        "issueNumber": 31468,
        "changeType": "modified"
      },
      {
        "assignees": [
          "drvcodenta"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdMZs8",
        "status": "ü•ö Ready",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\n\u003cimg width=\"697\" height=\"262\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/66df103f-b840-4d35-ac61-62b442934c0f\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\nCorrect, i'm DRI for anything Ready for Spec onward.   In many cases I'll delegate in those cases i'll re-assign the story."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta This is now spec'd; estimate is capacity allocation for my review. Feel free to self-assign (for some reason GitHub is fighting my ability to assign this to you), move from Waiting to In progress, and assign me for PR review when it's up. Thanks again!"
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "I'm not a collaborator on the repository or part of the organization/team with write access, so GitHub isn‚Äôt letting me self-assign this issue"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Got it, that makes sense that I wasn't able to either. Either way, this is yours to move forward with as/when you see fit."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Apparently there's a weird GitHub idiosyncrasy (bug? anti-abuse measure?) where external folks have to comment on the issue before they show up as a potential assignee, so your comment actually allowed me to assign you, which I've done. Thanks @lukeheath for assisting with troubleshooting that one :)\n\nMoving this to Ready now, and you can move to In progress when you're actively working on it."
          }
        ],
        "issueNumber": 31377,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdC-p0",
        "title": "New FMA: 7-zip for Windows",
        "issueNumber": 31345,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4P8",
        "title": "Create Fleet Maintained Apps test automation",
        "issueNumber": 29183,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-02T07:05:18.244254322Z",
    "items": [
      {
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a IT admin,\n| I want to show my end users only relevant actions\n| so that I provide my end users a clear self-service software experience.\n\n## Key result\n\nNone. Prioritized this because it's mission critical for `numa` to use Fleet as their software self-service tool.\n\n## Original requests\n\n- #30214\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @mostlikelee, @RachelElysia, @iansltx , @jacobshandling \n\n## Changes\n\n### Product\n- [ ] UI changes: Figma [here](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/Template--Copy-?node-id=0-1\u0026t=BVXxwI7m9syoqGiA-1)\n- [ ] CLI (fleetctl) usage changes: No changes\n- [ ] YAML changes: No changes\n- [ ] REST API changes: No changes\n- [ ] Fleet's agent (fleetd) changes: No changes\n- [ ] GitOps changes: No changes\n- [ ] Activity changes: No changes\n- [ ] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Ensure guides referencing software (self-service, software packages) correctly reference the UI as it currently stands, including caveats around software updates\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n- [ ] [UI Status and UI actions spreadsheet ](https://docs.google.com/spreadsheets/d/1GKYTQ80RP_Zec32heeniav2rUS9Snegy4S3ob0lgXYc/edit?usp=sharing)\nTest on macOS, Windows, Linux hosts for Self-service\nTest with Chrome, Safari, Edge and Firefox\nTest with FMA, Custom packages, and VPP software\n\nOn host details page or Self service with several installers available:\n\n- [x] Default sorting order is by Name ascending\n- [x] Name sort order can be reversed\n- [x] Sorting by status sorts software by status in the order mentioned in Figma (and can be reversed)\n- [x] Font weight should be \"regular\"\n- [x] If software is not in software inventory, status is \"---\"\n- [x] If status is \"---\", available action is \"Install\" (Uninstall should not be available)\n- [x] When a user clicks \"Install\", status changes to \"Installing\"\n- [ ] If software installs successfully, status changes to \"Installed\"\n- [x] If software fails to install, status changes to \"Failed\"\n- [x] If software is in software inventory, Status is \"Installed\"\n- [x] If software status is \"Installed\", available actions are \"Reinstall\" and \"Uninstall\"\n- [x] When a user clicks \"Reinstall\", status changes to \"Installing\", and when the action completes, the status changes to \"Installed\"\n- [ ] When a user clicks \"Uninstall\", status changes to \"Uninstalling\" and when the action completes, the status changes to \"---\"\n- [x] If software fails to uninstall, status changes to \"Failed (uninstall)\"\n- [x] If software is in software inventory, and other criteria are met (see [#27983](https://github.com/fleetdm/fleet/issues/27983) ) status is \"Update available\"\n- [x] If status is \"Update available\", available actions are \"Update\" and \"Uninstall\"\n- [x] If Update available is clicked, details modal is shown with detail of installed software and possible actions to take\n- [ ] When a user clicks \"Update\", modal closes and status changes to \"Updating\", and when the action completes, the status changes to \"Installed\"\n- [x] If software fails to update, status changes to \"Failed\"\n- [ ] If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n- [x] If software is a tarball (`tgz_packages`), Fleet won't do inventory, and status in Library tab will only reflect if install is triggered from Fleet.\n- [x] Make sure that when the tarball is installed by Fleet, show `Installed` status + `Reinstall` and `Uninstall` actions.\n- [x] Make sure that when tarball install failed, to show `Failed` status and `Install` action only.\n- [x] Make sure that when tarball is available in library that no status is displayed and only `Install` action is available.\n- [x] Make sure that the new copy as specified in Figma is added to \"Install details\" modal for each package that is missing version information (no inventory). \n\n\nNOTE: Host details modal and Self service modal have different copy, see Figma\n- [x] Clicking on any status for any operating system should open a details modal EXCEPT\n- [x] The only non-clickable status is for Host details \u003e software \u003e library \u003e status for VPP successful and failed installs before @ksykulev 4.72 fix merged 8/1/25, those will still have a tooltip to go to the activity feed to view success/fail information\n- [x] Details modal title should match the status and should conform to Figma\n- [x] Install and Uninstall details dropdown should be collapsed by default and only show for installs or uninstalls completed by fleet (If the software was installed by the user, the modal will still show but will not contain a details dropdown, see Figma)\n- [x] Clicking on an available action button within the modal closes the modal and updates the status in the list, according to the action that was taken, the action completes, and the status is updated again.\n- [x] Confirm multiple versions installed \n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [x] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcX1-s",
        "status": "‚úîÔ∏èAwaiting QA",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@noahtalerman: Decided to cut this \"smarter\" logic to solve these problems:\n- Multiple instances of the software installed\n- User v. machine scope on Windows\n\nCurrently, for macOS, only software that's installed in Applications/ shows the \"Update required\" status. If the software isn't in Applications/ but it's in inventory, Fleet shows \"Installed\" regardless of version. Fleet will use the install_path to know if the software is in Applications/\n\nCode wise: if (macOS and install_path is applications/), check only that path if it‚Äôs outdated and then show ‚Äúupdate available‚Äù else show ‚ÄúInstalled‚Äù\n\nFor Windows Fleet-maintained apps, software only shows \"Update available\" if the installed software is the same scope (user or machine) as the Fleet-maintained app. Based on install_path. Otherwise, if the software is in inventory, Fleet shows \"Installed\".\n\nFor Windows custom packages, software only shows \"Update available\" if the software title has an install_path. Otherwise, if the software is in inventory, Fleet shows \"Installed\"."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @RachelElysia, I added copy and a link to the contact URL based on `numa` feedback. We met with them today (2025-06-27) and showed them this story's wireframes.\n\n![Image](https://github.com/user-attachments/assets/6ca4ef45-09f2-4ac3-afee-bd5c995e151a)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts I realize this is offloading work to you that should've been done earlier by someone else, but can you work through a test plan here based on what's in Figma?\n\nIf it's more helpful to delegate the test plan for this to #27983, since these changes touch largely the same UI (though this hits both self-service and host software), that works too, and I can do a first pass there.\n\nWent ahead and updated the story template to remove non-test-plan TODOs to help a little."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx I've added the first pass test plan, just a couple questions left here:\n\n\u003cimg width=\"135\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1a202f1e-a311-4ccd-9aff-76ec85ef8dac\" /\u003e\n\n~~This is kind of vague, what is the criteria for this \"Update Available\" status?~~\n~~- Software is installed on host~~\n~~- Software installer is available~~\n~~- Software is a different version?~~\n~~- Software installer is a higher version than the version that's installed?~~\n\nNevermind, found that criteria in the [#27983](https://github.com/fleetdm/fleet/issues/27983) ticket. Only question left is:\n\nWhat are the available statuses for tar.gz items? \n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts No update available status for tarballs as they don't have an associated version."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to estimated with an 8 based on prior discussions"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica \n\nIn the test plans it says:\n\n\u003e  If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n\nIs there a different tooltip? I currently have it with no tooltip if it was installed by the user not using Fleet. Can you add the tooltip to the Figma spec or remove this from the QA plan?"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "[Doc to track questions around the various modals](https://docs.google.com/document/d/1sAh752RZCCquWhI25emzNtnBVV3wA-GAhjbdlaB2Pls/edit?tab=t.0)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Heads up that we're marking this one for expedited drafting"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "@mostlikelee thanks. To over communicate, most of the remaining questions are regarding [the modals subtask](https://github.com/fleetdm/fleet/issues/30860)"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Throwing this over the fence to you @jmwatts ! I QAed as much as I could--happy Friday\n\nMy blind spots:\n- The intel computer race condition with host refetch/osquery\n- I don't have a macOS that is enrolled into MDM, only a iPad, so self-service VPP was not really QAed on my end, though I know Jacob did while he was deving"
          }
        ],
        "issueNumber": 30240,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX12Q",
        "status": "‚úîÔ∏èAwaiting QA",
        "issueNumber": 27983,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "status": "‚úîÔ∏èAwaiting QA",
        "issueNumber": 29944,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgck8sI",
        "status": "‚úîÔ∏èAwaiting QA",
        "issueNumber": 30861,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdLKz4",
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "status": "‚úÖ Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Trigger a vpp app to be installed by fleet\n2. Wait for the successful install\n3. Refetch host vitals\n4. Open up the library page, show Dev tools and inspect the API response, click \"Installed\" link\n- [x] last_install field should not be null\n- [x] Install details modal should have dropdown with install details\n\nNoticed edge case for when app was previously installed with no install information (installed outside of fleet) and a VPP app exists for the same application - last_install will be null (expected) but the \"installed\" status will be clickable, and the modal will show \"Fleet is installing or will install...\" even though the software is not being installed. Will file separately. "
          }
        ],
        "issueNumber": 31459,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCntE",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "This was surfaced with BYOD Apple devices. I tagged it with g-software but it could be `#g-mdm`\n@georgekarrv @mostlikelee preference on who tackles this one?\n\nWhen a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps). \nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\n\u003cimg width=\"1186\" height=\"374\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8c7dc1a7-ac0e-497a-91df-08dc8fb31702\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@georgekarrv we're going to take this.  removing it off your board"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "\u003e When a BYOD (personal) iPhone is enrolled, we only collect inventory for apps that Fleet installs (Managed apps).\nWe are currently showing \"Vulnerabilities are not supported for this type of host\" as the empty state for Inventory, but we should be showing a message telling the user that there are no apps displayed and that only managed apps are reported in inventory, unless they have added the vulnerabilities filter (then it makes sense to show the no vulnerabilities empty state).\n\nAbout to put in a PR to show the generic No software detected empty state (plus tests). @marko-lisica if @jmwatts is correct for a different empty state, can you update this ticket if it's imperative for 4.72, or open a new ticket for 4.73 to track the new empty state?\n\nThank you!"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@RachelElysia I just realized this is already on g-software board. I added a few more copy changes that depend on the platform and enrollment type (MDM status). Not sure if you want to estimate this? I can add to planning poker.\n\nFigma link is in issue description."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "In between in progress \u003c\u003e in review \u003c\u003e in design. PR open, just need some confirmation on specs "
          }
        ],
        "issueNumber": 31329,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcX9VU",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Weird behavior for sure -- I thought it was put in boxes only if there were multiple versions installed but I guess not!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "If we want to just add a grey box around this, it's a EST: 1 FE only and should take 10 minutes.\n\nFrom #20638:\n```\n  // special case when we dont have installed versions. We can only show the\n  // software type atm.\n  if (!installed_versions || installed_versions.length === 0) {\n    return (\n      \u003cdiv className={`${baseClass}__software-details`}\u003e\n        \u003cDataSet\n          title=\"Type\"\n          value={formatSoftwareType({ source: software.source })}\n        /\u003e\n      \u003c/div\u003e\n    );\n  }\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given the above movement, looks like this has been estimated, so moving forward."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@RachelElysia I'm confused. I don't get these modals when I go to Host details \u003e Software\n\nI only a modal if I look in Fleet desktop at the Software tab. I don't see anywhere in Self-service that I would get this modal, and \"Available for install\" isn't a thing anymore in Host details \u003e Software. Is that the only place this is applied? Or am I missing something?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia TODO confirm that we can no longer access this UI. If that's confirmed, close this."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Still a TODO on my list, no time today, will do second thing on Monday."
          }
        ],
        "issueNumber": 30232,
        "changeType": "modified"
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 31533,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.71.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31533"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdOJOc",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "4.71.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: 4.71.1",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.71.0 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (65.24s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t65.258s\n```\n\n```\nFLEET_VERSION_A=v4.70.1 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (54.12s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t54.132s\n```\n\n```\nFLEET_VERSION_A=v4.70.0 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (52.26s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t52.281s\n```\n\n```\nFLEET_VERSION_A=v4.69.0 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (63.97s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t63.988s\n```"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "All software smoke tests pass, Software gives üëç \n\nüî¥ NOTE: In 4.70.0 I was able to have a trailing `/` in my Fleet url (`/settings/organization/webaddress`) but in 4.71.0 and 4.71.1 it will not let me log in with SSO if that trailing slash is in the url. I had to remove it to be able to sign in with SSO.\n\ncc @georgekarrv  @getvictor "
          }
        ],
        "issueNumber": 31533,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-08-02T19:04:32.107883478Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdMZs8",
        "status": "‚úîÔ∏èAwaiting QA",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\n\u003cimg width=\"697\" height=\"262\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/66df103f-b840-4d35-ac61-62b442934c0f\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\nCorrect, i'm DRI for anything Ready for Spec onward.   In many cases I'll delegate in those cases i'll re-assign the story."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta This is now spec'd; estimate is capacity allocation for my review. Feel free to self-assign (for some reason GitHub is fighting my ability to assign this to you), move from Waiting to In progress, and assign me for PR review when it's up. Thanks again!"
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "I'm not a collaborator on the repository or part of the organization/team with write access, so GitHub isn‚Äôt letting me self-assign this issue"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Got it, that makes sense that I wasn't able to either. Either way, this is yours to move forward with as/when you see fit."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Apparently there's a weird GitHub idiosyncrasy (bug? anti-abuse measure?) where external folks have to comment on the issue before they show up as a potential assignee, so your comment actually allowed me to assign you, which I've done. Thanks @lukeheath for assisting with troubleshooting that one :)\n\nMoving this to Ready now, and you can move to In progress when you're actively working on it."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Hey! I‚Äôve started work on this ‚Äî PR here: [#31370](https://github.com/fleetdm/fleet/pull/31370).  \nI've updated the PR description to reference this issue instead, as it‚Äôs the more accurate one.  \nAlso, I don‚Äôt have permission to move the issue to ‚ÄúIn progress,‚Äù just FYI. Let me know if anything else is needed. Thanks!\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Thanks! Didn't know that had already been approved. I've gone ahead and merged it and am moving this to Awaiting QA."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Thanksüôèü§ó"
          }
        ],
        "issueNumber": 31377,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdOJOc",
        "labels": [
          ":release",
          "#g-mdm",
          ":demo",
          "#g-orchestration",
          "#g-software"
        ],
        "issueNumber": 31533,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Fleet v4.70.0\n**Orbit version**: Orbit v1.45.1\n**Osquery version**: Osquery v5.18.1\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nCustomer is experiencing issues when attempting to download a tarball to the variable install path on the fleet instance. Attempted several ways using scripts inside of the tarball, but the script is never accessed.\n\nError Messsage: \n`Fleet failed to install Code42_12.6.0_15252000061260_33_Linux.tgz (Code42_12.6.0_15252000061260_33_Linux.tgz) on ceppenge-l-pf4bx6pl (less than 10 seconds ago).`\n\nTODO\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload Code42 tar archive file to Fleet library\n2. Attempt to install on Linux host\n\n### üïØÔ∏è More info _(optional)_\nCustomer provided package and install script used during testing, and can provide outside of issue\n\nNOTE: This is not happening for all tar archive files, but is happening for this specific one.",
          "number": 31338,
          "repository": "fleetdm/fleet",
          "title": "Errors downloading tarball to $INSTALLER_PATH",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31338"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdO8_M",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          ":help-customers",
          ":incoming",
          "customer-cisneros",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "üê£ In progress",
        "title": "Errors downloading tarball to $INSTALLER_PATH",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Request to update documentation for $INSTALLER_PATH variable #7439](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/cf4ea9d0-d53c-4f25-9456-98ff1c558795)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@reeblybeebly can you please enter reproduce steps?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@reeblybeebly can you also provide the install details for the failed install activity feed item? In the host record there should be an informational icon that can be clicked to show details. \n\n\u003cimg width=\"866\" height=\"427\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bdfecad5-fd79-467b-bb0a-28d203972532\" /\u003e\n\nPlease also provide the orbit log from the time of the failed install for the host the software was to be installed on. On Linux systems this is usually in:\nDebian systems: `/var/log/syslog`\nCentOS: `/var/log/messages`\nFedora: `journalctl -u orbit`\n\nThank you!\n"
          },
          {
            "author": {
              "login": "reeblybeebly"
            },
            "body": "Providing [google drive link to customer provided package and install script](https://drive.google.com/drive/folders/1craEM0TSeTrcqntvqOdIQvdgTxDWCUWk?usp=drive_link) for further testing."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I am able to reproduce this on the latest Fleet and Orbit versions. Will need to test back to see if this is due to a recent change. \n\nError from orbit logs (with private info redacted)\n\n```\nINF about to download software installer from URL installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nINF done downloading installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nINF detected tar.gz archive, extracting to subdirectory installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nERR failed extract .tar.gz archive error=\"failed to create \\\"code42-install/install.sh\\\": open /tmp/535331487/extracted/code42-install/install.sh: no such file or directory\" installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nERR failures found when processing installers errs=[\"failed to create \\\"code42-install/install.sh\\\": open /tmp/535331487/extracted/code42-install/install.sh: no such file or directory\"] runner=installer\nERR running config receivers error=\"failed to create \\\"code42-install/install.sh\\\": open /tmp/535331487/extracted/code42-install/install.sh: no such file or directory\"\n```\n\nThis is the same issue I am seeing. The installer downloads, we attempt to extract, but fails to locate expected files."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I was able to get the file to install by first extracting the tar file to `/` and then re-archiving it:\n\n```\ncd /\ncp -R /Users/janis/Downloads/code42-install .\ntar -czvf code42.tar.gz code42-install\n```\n\nThen uploaded the resulting package to Fleet, and installed. \n\nSounds like we have an idea of how to fix this so a manual work around won't be necessary. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Was able to repro the error by adding a file in a subdir directly to a brand new tarball without specifying the top level directory:\n\n[test.tar.gz](https://github.com/user-attachments/files/21559956/test.tar.gz)\n\nSo this is much easier to repro than I initially thought."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The fix I have implemented ensures each dir exists before extracting files into it. That means we have at minimum an extra `stat` per file extracted but in exchange it'll work with all tarballs and it's a low-impact fix. If we need to optimize later to keep track of dirs we know exist, this fix doesn't prevent us from doing that."
          }
        ],
        "issueNumber": 31338,
        "changeType": "added"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nInstall fails. UI says package failed to download. Orbit logs show:\n```\n2025-08-01T12:55:07.448501-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:07-05:00 INF about to download software installer from Fleet installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.067596-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 INF done downloading installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.067821-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 INF software installer downloaded installerID=2a8f778e-8cb4-4e14-95de-63382710af86 installerPath=/tmp/1721719821/timeshift-22.06.6.tar.gz runner=installer\n2025-08-01T12:55:08.067910-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 INF detected tar.gz archive, extracting to subdirectory installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.069230-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 ERR failed extract .tar.gz archive error=\"unknown flag type \\\"pax_global_header\\\": 103\" installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.181754-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 ERR failures found when processing installers errs=[\"unknown flag type \\\"pax_global_header\\\": 103\"] runner=installer\n2025-08-01T12:55:08.182137-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 ERR running config receivers error=\"unknown flag type \\\"pax_global_header\\\": 103\"\n```\n\n### üõ†Ô∏è To fix\n\nSkip unknown header types rather than failing on them.\n\nProduct designer: @iansltx \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload timeshift tarball (can be found here: https://drive.google.com/file/d/1nKWzZBi65P1AUouvvvEYkbZ_EljXilI6/view?usp=drive_link ), install script is simply `mv $INSTALLER_PATH/* /usr/local`, just add gibberish in the uninstall script since we'll not be testing that part\n2. Attempt to install on Linux host\n3. Review UI Failure and orbit logs\n\n### üïØÔ∏è More info _(optional)_\nExtracting the file manually to `/tmp` and then re-archiving the file, then uploading to Fleet allows the package to be installed. \n```\ncd /tmp\nsudo cp -R /Users/janis/Downloads/timeshift-22.06.6 .\ntar -czvf timeshift-22.06.6.tar.gz timeshift-22.06.6\n```\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31525,
          "repository": "fleetdm/fleet",
          "title": "pax_global_header error when attempting to install tar.gz",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31525"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdO96U",
        "labels": [
          "bug",
          "~agent",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "üê£ In progress",
        "title": "pax_global_header error when attempting to install tar.gz",
        "issueNumber": 31525,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-08-03T07:05:39.358878086Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdO8_M",
        "milestone": {
          "title": "Fleetd-1.46.0"
        },
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 31338,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdO96U",
        "milestone": {
          "title": "Fleetd-1.46.0"
        },
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "issueNumber": 31525,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdOJOc",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.71.0 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (65.24s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t65.258s\n```\n\n```\nFLEET_VERSION_A=v4.70.1 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (54.12s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t54.132s\n```\n\n```\nFLEET_VERSION_A=v4.70.0 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (52.26s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t52.281s\n```\n\n```\nFLEET_VERSION_A=v4.69.0 FLEET_VERSION_B=rc-patch-fleet-v4.71.1 go test -v\n--- PASS: TestUpgradeAToB (63.97s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t63.988s\n```"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "All software smoke tests pass, Software gives üëç \n\nüî¥ NOTE: In 4.70.0 I was able to have a trailing `/` in my Fleet url (`/settings/organization/webaddress`) but in 4.71.0 and 4.71.1 it will not let me log in with SSO if that trailing slash is in the url. I had to remove it to be able to sign in with SSO.\n\ncc @georgekarrv  @getvictor "
          },
          {
            "author": {
              "login": "getvictor"
            },
            "body": "\u003e All software smoke tests pass, Software gives üëç\n\u003e \n\u003e üî¥ NOTE: In 4.70.0 I was able to have a trailing `/` in my Fleet url (`/settings/organization/webaddress`) but in 4.71.0 and 4.71.1 it will not let me log in with SSO if that trailing slash is in the url. I had to remove it to be able to sign in with SSO.\n\u003e \n\u003e cc [@georgekarrv](https://github.com/georgekarrv) [@getvictor](https://github.com/getvictor)\n\nI filed #31545 for this issue. \n\nI recommend we fix it in 4.71.1 since customers may hit it with regular SSO and MDM SSO.\ncc: @ksatter "
          }
        ],
        "issueNumber": 31533,
        "changeType": "modified"
      }
    ]
  }
]