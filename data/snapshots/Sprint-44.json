[
  {
    "timestamp": "2025-07-27T23:23:56.869278Z",
    "items": [
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nRun point on design, involving others as needed\n\n## Condition of satisfaction\n\nStory and all subtasks are ready for estimate",
          "number": 30979,
          "repository": "fleetdm/fleet",
          "title": "Linux OS Vulns: Design/Spec",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30979"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcq9R8",
        "labels": [
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Linux OS Vulns: Design/Spec",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Vulns in Linux OS,\nDesign spec, we compose,\nSecure paths, users chose."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68 (unconfirmed)\n\n**Web browser and operating system**: Google Chrome (version unknown)\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nMismatch in vulnerability counts for macOS 15.4.1 between dogfood (fleet premium) and fleet free\n\n![Image](https://github.com/user-attachments/assets/00cd6c84-1a6b-41e5-9938-c21992954b07)\n\n### üßë‚Äçüíª ¬†Steps to reproduce\nTODO\n\nreference here: https://fleetdm.slack.com/archives/C019WG4GH0A/p1748009270163509\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nInvestigate the issue to determine whether it's a timing issue or a bug.",
          "number": 29988,
          "repository": "fleetdm/fleet",
          "title": "Vulnerabilities count mismatch for various macOS versions",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29988"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcbSkI",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Vulnerabilities count mismatch for various macOS versions",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "This doesn't appear specific to 15.4.1\nI have seen similar things across fleet instances. For example:\n\n\u003cimg width=\"1510\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4426f46f-0359-4214-98a8-0d5068237534\" /\u003e\n\nComparing the 15.3 hosts the main differences I see are virtual machines vs physical hardware, but if the vulnerabilities have to do with the OS then I'm not sure why hardware would matter. These are all ARM machines so it's not a case of it being counted twice for Intel + ARM.\n\n\u003cimg width=\"1510\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e5bf2644-5520-4b96-97b8-d4c3aac57512\" /\u003e"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee based on the conversation in slack, I've put the 'to fix' as an investigation as to what might be going on. I'll send this to estimation."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1750682841206779"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "timebox 2"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Adding the repro label back onto this as it's been long enough that the mentioned Render instance is no longer online, and that version of macOS is no longer listed in Dogfood.\n\nCan't use QAWolf envs to repro this as vuln processing is all over the map on those. Enrolling a host on Fleet Free's Dogfood would work here; right now that env only has Linux hosts attached. Just need a macOS host on a vulnerable version that exists on both Dogfood and Dogfood-Free, where vuln counts mismatch between them."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Never mind, got enough info to repro. Moving this back."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, we have #27061 making this bug a bit harder to troubleshoot, but it seems like there's a reliability issue somewhere for associating OS vulnerabilities to OS versions. https://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-31241 for example should apply to macOS 15.2 and 15.1, and that link was made in @jmwatts's local environment, but not in Dogfood. There are a handful of other vulnerabilities where we're missing a link, and it feels like the quantity of vulns missed isn't necessarily consistent between vulns runs.\n\nConfirmed that this _is not_ a Free vs. Premium issue."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Issue here was that my fix for #28368 triggered a regression here. In order to avoid test flakiness I avoided bumping `updated_at` in the database when pieces of the vulnerability hadn't changed, but doing so meant that the stale cleanup step of vulnerability processing would delete an arbitrary number of OS vulnerabilities that had existed in the previous run. Then the next vulns run would insert them again...and rinse and repeat. This phenomenon is more obvious in environments that are running the vulns cron every hour, and for which the vulns cron takes a non-negligible amount of time.\n\nThis would've broken more obviously had #26404 been in place, as we would've seen dramatic flapping on OS vulns on consecurive runs, without those runs needing to be two hours apart.\n\nThe fix is to revert to the previous `updated_at` behavior (bumping updated_at to the current time on each OS vuln insert/on duplicate key update), then revise the return value of the containing function (which only gets used in tests) to correctly indicate when a row was inserted vs. updated (whether or not values changed on that row), and improve tests, including ensuring that updated_at actually gets bumped when necessary.\n\nTo QA:\n\n1. Run vulns from a clean DB with a host or two enrolled with OSes with vulns\n2. Check OS vulnerabilities\n3. Simulate time passing by running `UPDATE operating_system_vulnerabilities SET updated_at = NOW() - INTERVAL 3 HOUR`\n4. Run vulns again\n5. Check OS vulnerabilities\n\nPrior to the fix you'd see ~no vulns in the DB at all at step 5. With the fix you'd see the same number of vulns in steps 2 and 5."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Run vulns from a clean DB with a host or two enrolled with OSes with vulns\n2. Check OS vulnerabilities\n3. Simulate time passing by running UPDATE operating_system_vulnerabilities SET updated_at = NOW() - INTERVAL 3 HOUR\n4. Run vulns again\n5. Check OS vulnerabilities\n- [x] Confirm the same number of vulns are shown in steps 2 and 5\n\n```\nselect * from operating_system_vulnerabilities;\n2302 rows in set (0.03 sec)\n```\n\n```\nselect * from operating_system_vulnerabilities;\n2302 rows in set (0.02 sec)\n```\n\nAlso confirmed that host counts match between different fleet servers for identical macOS versions."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Mac's flaws, once hidden,\nIn glass city, now counted.\nFleet brings light to truth."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "It was modified upstream from `microsoft:powershell:7.5.0` to `microsoft:powershell:7.5`. Our current CPE to CVE does not handle this case properly.\r\n\r\n- [x] Manual QA for all new/changed functionality\r\n\r\nQA instructions.\r\nGenerate new `nvdcve-1.1-*.json` files.\r\n```\r\n$ git checkout -b powershell-feed-fix --track origin/powershell-feed-fix\r\n$ make build\r\n$ go run cmd/cve/generate.go\r\n# or optionally\r\n$ VULNCHECK_API_KEY=\u003c...\u003e go run cmd/cve/generate.go\r\n```\r\n\r\n~How do we verify the CVE actually matches? Install powershell? Run the test file pointing to the newly generated json files?~\r\nDownload powershell rc1 https://github.com/PowerShell/PowerShell/releases/tag/v7.5.0-rc.1\r\nInstall powershell rc1\r\n\r\nRun vuln processing with custom path\r\n```\r\ngo run ./cmd/fleet vuln-process --vulnerabilities_databases_path=/tmp/vulndbs\r\n```\r\n\r\nWhat you should see is that `CVE-2025-21171` applies to powershell 7.5.0-rc.1",
          "number": 30767,
          "repository": "fleetdm/fleet",
          "title": "Modifying cve feed for powershell version change",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30767"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcf5_w",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Modifying cve feed for powershell version change"
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30600,
          "repository": "fleetdm/fleet",
          "title": "Release QA: Fleet 4.71.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30600"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVLvY",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release QA: Fleet 4.71.0",
        "comments": [
          {
            "author": {
              "login": "xpkoala"
            },
            "body": "Orchestration gives a üëç for release."
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "MDM gives a üëç for release"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.70.1 FLEET_VERSION_B=rc-minor-fleet-v4.71.0 go test -v\n--- PASS: TestUpgradeAToB (62.26s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t62.280s\n```\n\n```\nFLEET_VERSION_A=v4.70.0 FLEET_VERSION_B=rc-minor-fleet-v4.71.0 go test -v\n--- PASS: TestUpgradeAToB (84.37s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t84.387s\n```\n\n```\nFLEET_VERSION_A=v4.69.0 FLEET_VERSION_B=rc-minor-fleet-v4.71.0 go test -v\n--- PASS: TestUpgradeAToB (53.74s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t53.754s\n```"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Software gives üëç for release. "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Fleet upgrade flow,\nSecurity we bestow,\nChecks like nature's ebb and flow. \n\nTest steps clear as glass,\nIn a cloud city, they pass,\nContributors amass.\n\nSmoke tests in the air,\nErrors have no lair,\nPeace of mind, no scare. \n\nQueries run like streams,\nReality, not dreams,\nIn a system that gleams. \n\nWith hosts added, viewed,\nTheir absence, not misconstrued,\nFleet's promise, renewed."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nWinGet based Chrome FMAs refer to a non-versioned download URL, so the latest version of Chrome gets downloaded rather than the version specified in the manifest we pulled. This means that the hash of the installer won't match if we don't immediately detect and merge an update to the installer in our own manifests, if we specify a hash. #27755 avoids this by dropping hash checking there as well, but this means that we don't verify that the installer downloaded matches the one we expected.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Point to a non-current Chrome Windows FMA manifest with a hash specified (anything at or earlier than April 1 ~3pm CDT).\n2. Attempt to add the Chrome Windows FMA.\n\n### üõ†Ô∏è To fix\n\nEXE versions of Chrome are available that include version in the URL. Tradeoff is those EXEs will need a custom install script, and may not include an UpgradeCode for building a version-agnostic uninstall script.",
          "number": 27756,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Windows Chrome FMAs don't have hashes specified in manifests",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27756"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6m4",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤Windows Chrome FMAs don't have hashes specified in manifests",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Need to decide on a desired fix here. Only thing I'm sure about on my estimate is doing this for Windows, and I'm adding padding for macOS."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27756?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per discussion yesterday, split off the macOS work; this is now a Windows-only ticket, and was already estimated as such."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Latest on dogfood\n\n**Web browser and operating system**: Any\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe default uninstall script that Fleet provides for msi custom packages, executes correctly (uninstalls the software) but outputs the following error:\n`script execution error: exec: WaitDelay expired before I/O complete`\n\nThis is because the command to execute the uninstall is not finishing before the script attempts to post the exit code and exit the script. \n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload an msi custom package\n2. Install the software\n3. Run the uninstall script and observe the error\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\n\n\u003cimg width=\"759\" height=\"405\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/98b5e423-6729-44fb-bf9b-447e5d94865d\" /\u003e\n\n ### üõ†Ô∏è To fix ",
          "number": 31077,
          "repository": "fleetdm/fleet",
          "title": "Fleet provided uninstall script for msi custom packages works but outputs errors",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31077"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcz8Es",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Fleet provided uninstall script for msi custom packages works but outputs errors",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Self-assigning this and pulling it onto the software release board as this interacts with #27758. Will set up a separate PR for FLeet-maintained apps, which will need this same fix, so there's less that needs to be QA'd on-branch."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Moving to In review because there are two PRs and one hasn't yet been approved, even though the whole thing has been QA'd."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Both PRs are merged. FMA updates (for Box/WARP) are now live. Custom package updates will be live in 4.72.0 alongside the other uninstall improvements."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSoftware shows in Inventory tab even though it has not been installed \n\n\u003cimg width=\"1482\" height=\"581\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bc8ccb34-503b-4421-b145-e34db2e9541d\" /\u003e\n\u003cimg width=\"1485\" height=\"623\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0c4c5159-d175-434b-83e1-f01c464f2391\" /\u003e\n\nThe software also shows in My device \u003e\u003e Software tab\n\n\u003cimg width=\"1143\" height=\"675\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3769f882-99f2-46c1-84b6-5c316cbdf730\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add software to the team's library\n2. From the Host record \u003e\u003e Software \u003e\u003e Library tab, click Install\n3. Before the software has been installed (or after a failed install) go to the Host record \u003e\u003e Software \u003e\u003e Inventory tab\n\n\n### üïØÔ∏è Expected behavior\nSoftware should not show on the Inventory tab unless it is installed on the host. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30747,
          "repository": "fleetdm/fleet",
          "title": "Pending and failed software installs show in Host \u003e\u003e Software \u003e\u003e Inventory tab",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30747"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdwYg",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "Pending and failed software installs show in Host \u003e\u003e Software \u003e\u003e Inventory tab",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "changing the status to a released bug as we can duplicate this behavior in the API on an earlier version.  because this bug is now a lot more prominent after UI changes, we are prioritizing this for 4.72.0"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocked until we discuss API changes on Friday"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed software is no longer showing when:\n- It is not currently installed on the host\n- It is pending install or it has failed the install\n\nChecked both in the Self service software tab and on the Host \u003e\u003e Software \u003e\u003e Inventory tab"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n\u003cimg width=\"1265\" height=\"820\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e12aa8fe-1ce5-4e53-add1-2efc9600ad40\" /\u003e\n\n\u003cimg width=\"1907\" height=\"851\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8d49bd71-5c07-42f3-897b-6be97395c9df\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n\n1. Add a VPP software item to the team's Library, make it available in Self Service\n2. For an MDM enabled host, initiate the install, then once the app is installed, immediately delete it\n3. Wait 10 min. This will result in a \"Failed\" status for the VPP app, because it will fail to verify that the app was installed\n4. Click on the \"Failed\" status in the Host \u003e\u003e Software \u003e\u003e Library tab, and also in Self Service, compare\n\n\n### üïØÔ∏è More info _(optional)_\nThe copy in the modals should both indicate that the install failed, but in Self Service it's showing the \"is installing or will install\" copy instead\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 31003,
          "repository": "fleetdm/fleet",
          "title": "Self service modal displays incorrect message for VPP install status",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31003"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcs0UM",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Self service modal displays incorrect message for VPP install status",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Pulled this bug off the drafting board because it's in progress on the release board.\n\nThanks @jmwatts and @jahzielv!"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I click on \"Installed\" in Self service for VPP apps I'm getting the same \"Fleet is installing or will install\" message..."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Add a VPP software item to the team's Library, make it available in Self Service\n2. For an MDM enabled host, initiate the install, then once the app is installed, immediately delete it\n3. Wait 10 min. This will result in a \"Failed\" status for the VPP app, because it will fail to verify that the app was installed\n4. Click on the \"Failed\" status in the Host \u003e\u003e Software \u003e\u003e Library tab, and also in Self Service\n\n- [x] The copy in the modals should both indicate that the install failed"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "VPP status wrong,\nFleet in clouds adjusts course,\nClarity reborn."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nApp does not install, InstalledApplicationList does not return the app, App install fails\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Start on a previous Fleet version, I used 4.70.0\n2. Install a VPP app on a host via Fleet\n3. Migrate to v4.71.0\n4. Attempt to reinstall the VPP app via Fleet\n\n### üïØÔ∏è More info _(optional)_\nWe need to send the extra flag to make installed apps Managed\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 31060,
          "repository": "fleetdm/fleet",
          "title": "Reinstalling VPP Apps that were installed previously to 4.71.0 is not making them managed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31060"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcvhSQ",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Reinstalling VPP Apps that were installed previously to 4.71.0 is not making them managed",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "1. Start on a previous Fleet version, I used 4.70.0\n2. Install a VPP app on a host via Fleet\n3. Migrate to v4.71.0\n4. Attempt to reinstall the VPP app via Fleet\n- [x] Confirm app is installed and returned in an InstalledApplicationList command for macOS\n- [x] Confirm app is installed and returned in an InstalledApplicationList command for iOS/iPadOS"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jahzielv can you throw an estimate on here?"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "@mostlikelee done! "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "VPP apps in flight,\nManaged, they shine so bright,\nFleet's update ignites."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: NVD feed 2025-05-29\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n```\n=== RUN   TestCPEFromSoftwareIntegration\n    cpe_test.go:1816: Using /Users/ian/Downloads/cpe-5806690027c4868a4abef49f92654589907904436b2633e81b1b78ab118627d7.sqlite as database file\n    cpe_test.go:1832: \n        \tError Trace:\t/Volumes/Code/CH/fleet/server/vulnerabilities/nvd/cpe_test.go:1832\n        \tError:      \tNot equal: \n        \t            \texpected: \"cpe:2.3:a:adobe:acrobat_reader_dc:22.002.20191:*:*:*:*:macos:*:*\"\n        \t            \tactual  : \"cpe:2.3:a:adobe:acrobat_reader:22.002.20191:*:*:*:*:macos:*:*\"\n        \t            \t\n        \t            \tDiff:\n        \t            \t--- Expected\n        \t            \t+++ Actual\n        \t            \t@@ -1 +1 @@\n        \t            \t-cpe:2.3:a:adobe:acrobat_reader_dc:22.002.20191:*:*:*:*:macos:*:*\n        \t            \t+cpe:2.3:a:adobe:acrobat_reader:22.002.20191:*:*:*:*:macos:*:*\n        \tTest:       \tTestCPEFromSoftwareIntegration\n        \tMessages:   \tAdobe Acrobat Reader DC.app\n    cpe_test.go:1832: \n        \tError Trace:\t/Volumes/Code/CH/fleet/server/vulnerabilities/nvd/cpe_test.go:1832\n        \tError:      \tNot equal: \n        \t            \texpected: \"cpe:2.3:a:adobe:acrobat_dc:22.002.20212:*:*:*:*:windows:*:*\"\n        \t            \tactual  : \"\"\n        \t            \t\n        \t            \tDiff:\n        \t            \t--- Expected\n        \t            \t+++ Actual\n        \t            \t@@ -1 +1 @@\n        \t            \t-cpe:2.3:a:adobe:acrobat_dc:22.002.20212:*:*:*:*:windows:*:*\n        \t            \t+\n        \tTest:       \tTestCPEFromSoftwareIntegration\n        \tMessages:   \tAdobe Acrobat DC (64-bit)\n--- FAIL: TestCPEFromSoftwareIntegration (3.16s)\n```\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nRun `TestCPEFromSoftwareIntegration` with Adobe Acrobat DC entries uncommented.\n\n### üïØÔ∏è More info\n\nSomething changed in the May 29 build of the CPE database to break these CPEs. May 28 CPE DB behaves as expected.\n\n### üõ†Ô∏è To fix\nResearch needs to be done to determine the fix.\n",
          "number": 29570,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Acrobat Reader CPEs don't match expectations",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29570"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5uA",
        "labels": [
          "bug",
          ":release",
          "~vulnerability-management",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤Acrobat Reader CPEs don't match expectations",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One thing I noticed between the two DB snapshots is the newer one doesn't have valid deprecation references for the top two matches on Adobe Reader DC, when the previous revision did; the rows were marked as deprecated but nothing was listed in the `deprecated_by` table."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx @mostlikelee I took a stab at the to fix based on Ian's comment but I'm not sure it's exactly accurate. I'm also not sure if this extends beyond Acrobat Reader.\n\nMoving this to Ready to estimate per current process pending future changes."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo That's not quite it. I intentionally left the fix commented because we need to do some digging here to figure out what expected behavior would be on that software, given that NVD made feed changes on their end that should be semantically significant (because those Adobe CPEs have been that way for 2+ years). Maybe the new CPE resolution is correct (though losing the CPE entirely for the Windows version of Adobe Reader is concerning). Estimation here should be more of a timebox to confirm what a proper fix is here, since from a half-hour or so of investigation last night I wasn't able to fill in \"To fix\" myself."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "assigning a 2pt timebox here"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This one also seems to have reverted back to the expected CPE. The test passes when re-enabled. PR is up."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Reader in the cloud,\nSynced CPEs, clear and loud,\nErrors are not allowed."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.66.0\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nSee failed runs of TestCPEFromSoftwareIntegration here: https://github.com/fleetdm/fleet/actions/runs/14609667847\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Uncomment test case in TestCPEFromSoftwareIntegration \n2. Run the test and note the failure\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nWe need to analyze the NVD data more closely to see why this CPE isn't being found.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nPer @iansltx 's comment below: timebox \"figure out what the problem is and if it's simple solve it and if not soon out another ticket or spend more time on it based on how broken things are\"",
          "number": 28490,
          "repository": "fleetdm/fleet",
          "title": "ü™≤CPE for python urllib is not generated",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28490"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5pQ",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤CPE for python urllib is not generated",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Something changed in [the latest rev of the CPE DB](https://github.com/fleetdm/nvd/releases/tag/202504230037) to cause this. It looks like the urllib entry is still there though. Assigning this as a released bug because we haven't touched the code path for CPE generation in a bit. Depending on what this is, this may be a feed fix."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Generally I put something in the 'to fix' area before moving this to ready to estimate. It sounds, however, like it's not clear what the fix is without someone having to do some work to figure this out? "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo We can estimate this one as a time boxed \"figure out what the problem is and if it's simple solve it and if not soon out another ticket or spend more time on it based on how broken things are\" so this can move across."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx thanks! I'll make a comment to that effect at the top"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/28490?planning-poker) with Zenhub @iansltx @ksykulev @jahzielv"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Python's urllib lacked,\nFleet's improved insight tracks,\nCloud city intact."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nApp is stuck in pending, forever. \n\nYou can see that the previous verification is still in the `host_mdm_commands` table, preventing any further VPP Verifications from being sent out\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a VPP App to the team's library\n2. On an MDM enrolled host, attempt to install the app\n3. Once the app installs, but before the install is verified, turn off MDM \n4. Notice that in the `host_vpp_software_installs` table that the command for installing the app now has a `verification_failed_at` timestamp, and the app install has failed. You should also see an entry in `host_mdm_commands` indicating a pending VPP verification.\n5. Turn on MDM \n6. Queue up another app install\n7. Wait\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nWhen MDM is turned off, and marking the InstallApplication command with verification failed, also clear out the `host_mdm_commands` table for the host.",
          "number": 31020,
          "repository": "fleetdm/fleet",
          "title": "Previously failed VPP Verifications due to turning MDM off prevent further verifications from being sent",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31020"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgctKwA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Previously failed VPP Verifications due to turning MDM off prevent further verifications from being sent",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Add a VPP App to the team's library\n2. On an MDM enrolled host, attempt to install the app\n3. Once the app installs, but before the install is verified, turn off MDM\n4. Notice that in the host_vpp_software_installs table that the command for installing the app now has a verification_failed_at timestamp, and the app install has failed. You should also see an entry in host_mdm_commands indicating a pending VPP verification.\n5. Turn on MDM\n6. Queue up another app install\n7. Wait\n- [x] Verified that VPP apps successfully install after the above workflow"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Failed checks no more,\nClears path for new installs,\nLike sky after storm."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.65.0\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nAPI call:\n`\n/api/latest/fleet/vulnerabilities?team_id=8\u0026order_key=hosts_count\u0026order_direction=desc\u0026page=0\u0026per_page=20\u0026exploit=true\u0026query=202`\n(Yes, 202 is the query, I was going for a year and just typed 202)\n\nAPI returning:\n```\n{\n  \"vulnerabilities\": [\n    {\n      \"cve\": \"CVE-2024-44308\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-44308\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.0549,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-11-20T00:15:00Z\",\n      \"cve_description\": \"The issue was addressed with improved checks. This issue is fixed in Safari 18.1.1, iOS 17.7.2 and iPadOS 17.7.2, macOS Sequoia 15.1.1, iOS 18.1.1 and iPadOS 18.1.1, visionOS 2.1.1. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited on Intel-based Mac systems.\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-24201\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-24201\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.00206,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-03-11T18:15:00Z\",\n      \"cve_description\": \"An out-of-bounds write issue was addressed with improved checks to prevent unauthorized actions. This issue is fixed in visionOS 2.3.2, iOS 18.3.2 and iPadOS 18.3.2, macOS Sequoia 15.3.2, Safari 18.3.1. Maliciously crafted web content may be able to break out of Web Content sandbox. This is a supplementary fix for an attack that was blocked in iOS 17.2. (Apple is aware of a report that this issue may have been exploited in an extremely sophisticated attack against specific targeted individuals on versions of iOS before iOS 17.2.).\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-03-12T14:06:31Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-24085\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-24085\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.07839,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-01-27T22:15:00Z\",\n      \"cve_description\": \"A use after free issue was addressed with improved memory management. This issue is fixed in visionOS 2.3, iOS 18.3 and iPadOS 18.3, macOS Sequoia 15.3, watchOS 11.3, tvOS 18.3. A malicious application may be able to elevate privileges. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 17.2.\",\n      \"hosts_count\": 50,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-01-28T15:26:19Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23222\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23222\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.00132,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-01-23T01:15:00Z\",\n      \"cve_description\": \"A type confusion issue was addressed with improved checks. This issue is fixed in iOS 17.3 and iPadOS 17.3, macOS Sonoma 14.3, tvOS 17.3. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23296\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23296\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.05242,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-03-05T20:16:00Z\",\n      \"cve_description\": \"A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-23225\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-23225\",\n      \"cvss_score\": 7.8,\n      \"epss_probability\": 0.05242,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-03-05T20:16:00Z\",\n      \"cve_description\": \"A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 16.7.6 and iPadOS 16.7.6, iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited.\",\n      \"hosts_count\": 49,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:25:00Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-23397\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-23397\",\n      \"cvss_score\": 9.8,\n      \"epss_probability\": 0.93567,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-03-14T17:15:00Z\",\n      \"cve_description\": \"Microsoft Outlook Elevation of Privilege Vulnerability\",\n      \"hosts_count\": 8,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:53Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-35311\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-35311\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.24384,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-07-11T18:15:00Z\",\n      \"cve_description\": \"Microsoft Outlook Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 8,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:56Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-38226\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-38226\",\n      \"cvss_score\": 7.3,\n      \"epss_probability\": 0.70819,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-09-10T17:15:00Z\",\n      \"cve_description\": \"Microsoft Publisher Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 7,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:57Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-36761\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-36761\",\n      \"cvss_score\": 6.5,\n      \"epss_probability\": 0.79089,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-09-12T17:15:00Z\",\n      \"cve_description\": \"Microsoft Word Information Disclosure Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:53Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-38189\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-38189\",\n      \"cvss_score\": 8.8,\n      \"epss_probability\": 0.87181,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-08-13T18:15:00Z\",\n      \"cve_description\": \"Microsoft Project Remote Code Execution Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:54Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-21413\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-21413\",\n      \"cvss_score\": 9.8,\n      \"epss_probability\": 0.92563,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-02-13T18:16:00Z\",\n      \"cve_description\": \"Microsoft Outlook Remote Code Execution Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:55Z\"\n    },\n    {\n      \"cve\": \"CVE-2021-42292\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2021-42292\",\n      \"epss_probability\": 0.55708,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2021-11-10T01:19:00Z\",\n      \"cve_description\": \"Microsoft Excel Security Feature Bypass Vulnerability\",\n      \"hosts_count\": 4,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-30T16:24:55Z\"\n    },\n    {\n      \"cve\": \"CVE-2023-44487\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\",\n      \"cvss_score\": 7.5,\n      \"epss_probability\": 0.91023,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2023-10-10T14:15:00Z\",\n      \"cve_description\": \"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2024-44309\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2024-44309\",\n      \"cvss_score\": 6.1,\n      \"epss_probability\": 0.00954,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2024-11-20T00:15:00Z\",\n      \"cve_description\": \"A cookie management issue was addressed with improved state management. This issue is fixed in Safari 18.1.1, iOS 17.7.2 and iPadOS 17.7.2, macOS Sequoia 15.1.1, iOS 18.1.1 and iPadOS 18.1.1, visionOS 2.1.1. Processing maliciously crafted web content may lead to a cross site scripting attack. Apple is aware of a report that this issue may have been actively exploited on Intel-based Mac systems.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2024-12-17T18:25:02Z\"\n    },\n    {\n      \"cve\": \"CVE-2025-22226\",\n      \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-22226\",\n      \"cvss_score\": 6,\n      \"epss_probability\": 0.08037,\n      \"cisa_known_exploit\": true,\n      \"cve_published\": \"2025-03-04T12:15:00Z\",\n      \"cve_description\": \"VMware ESXi, Workstation, and Fusion contain¬†an information disclosure vulnerability due to an out-of-bounds read in HGFS.¬†A malicious actor with administrative privileges to a virtual machine may be able to exploit this issue to leak memory from the vmx process.\",\n      \"hosts_count\": 1,\n      \"hosts_count_updated_at\": \"2025-03-27T17:06:29Z\",\n      \"created_at\": \"2025-03-05T15:25:02Z\"\n    }\n  ],\n  \"count\": 22,\n  \"counts_updated_at\": \"2025-03-27T17:06:29Z\",\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}\n```\nNote the count says 22, but there's only 16 CVEs\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to Software \u003e Vulnerabilities tab \u003e Add those same filters above, look at count mismatching the vulns\n2. Here's an example: it's showing a count of 100 but there's only 14. https://dogfood.fleetdm.com/software/vulnerabilities?exploit=true\u0026query=2025\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nShow correct vulnerability count.",
          "number": 27580,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Software vuln count off",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27580"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7do",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Software vuln count off",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27580?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced in 4.65.0, updated Fleet version"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Note: QA Wolf reported this as well with #28459\n\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee @eugkuo @RachelElysia is this one relatively easy to fix? This is blocking a QA Wolf test and would be great to have it fixed if we can fit it in. Thanks!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts This is is backend FWIW, and probably not something super obvious on the backend. I _might_ be able to take this later in the sprint (can put it at the top of the Estimated column) but I figure the solution for this won't be trivial."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thanks @iansltx "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Confirmed the fix by grabbing a copy of the Dogfood DB and running the vulns list endpoint call against it. Pre-fix I was getting an artificially high count. After the fix I got a count that matched the number of rows (one per CVE) returned.\n\nIssue was one of deduplicating rows. Specifically, if a CVE got reported at different times or from different sources we'd get multiple entries. For example, a cross-platform CVE that was reported via OVAL for Linux and NVD for macOS, or a CVE that affected multiple pieces of software, where a host installed a new piece of affected software after the CVE was first found."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nTested a number of different combinations of filters and search terms and confirmed that all counts are now correct."
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "\n### Requestor\n\n- Application name: Yubikey Manager\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30739,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Yubikey manager",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30739"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdkTI",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: Yubikey manager",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"362\" height=\"126\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1daf41fb-0ab0-4db6-b383-297e4afdf4c2\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: iTerm2\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30724,
          "repository": "fleetdm/fleet",
          "title": "New FMA:  iTerm2",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30724"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdAFs",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA:  iTerm2",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"355\" height=\"131\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/29f22707-2e02-46c6-981f-fb23ccf38d2b\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "\n### Requestor\n\n- Application name: Beyond Compare\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30727,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Beyond Compare",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30727"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcdLoc",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: Beyond Compare",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @mostlikelee is this targeted for 4.72? Just noticed we're missing a milestone so I added 4.72. Please feel free to update it."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"366\" height=\"123\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1551207a-82f3-4eb6-88b2-7183429cfed3\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: VNC Viewer\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [X] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [X] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [X] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [X] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [X] App adds successfully to team's library\n- [X] App installs successfully on host\n- [X] App opens successfully on host\n- [X] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 30802,
          "repository": "fleetdm/fleet",
          "title": "New FMA: VNC Viewer (macOS)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30802"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcgftg",
        "labels": [
          "story",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "New FMA: VNC Viewer (macOS)",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "\u003cimg width=\"353\" height=\"121\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9ed7b411-c2af-4496-aa18-ce1b974a5de8\" /\u003e"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nGenerated MSI uninstall scripts use ProductCode rather than UpgradeCode, so attempts to uninstall an app with a different version than the one contained in the installer won't find the app. Even if an app hasn't changed in Fleet, auto-update (e.g. for Chrome or Box) will likely break this uninstall script as the product code will change.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add an older version of Cloudflare Warp (e.g. the one mentioned in the old version of [this diff](https://github.com/fleetdm/fleet/commit/b0d0b2217f08ca195e2f9603096435eaf17d4c19)) as a custom package, and install it on a Windows host.\n2. Switch the package to the current version of Cloudflare Warp.\n3. Attempt to uninstall Warp on the host that has it.\n\n### üïØÔ∏è More info\n\nThis ticket is separate from the identical problem for FMAs as this fix needs to be rolled out in the context of a Fleet release, and touches more things (and has impacts on the ability to build automatic install policies).\n\n### Chosen Fix\n\nSee https://github.com/fleetdm/fleet/issues/27758#issuecomment-3079478169\n\n### To QA\n\n1. :white_check_mark: Start on v4.71.0. Add the Chrome enterprise MSI as a custom package. \n2. :white_check_mark: Upgrade to the fixed version. Check `software_installers` in the database. A job should run within a minute or so that populates the Chrome enterprise MSI's `upgrade_code`. The uninstall script won't change as part of this (it'll still have the product code based uninstall script).\n3. :white_check_mark: Delete the Chrome MSI and re-add via the UI with no overrides on the script. The uninstall script should now be the same as the Windows FMA uninstall script as of 2025-07-15, and this script (with an $UPGRADE_CODE placeholder) should be shown as the placeholder uninstall script when adding an MSI.\n4. :white_check_mark: Delete the Chrome MSI and re-add via GitOps. The uninstall script should be the same as when added via the UI.\n5. :white_check_mark:  Delete and re-add via the UI, but make slight edits to the script before saving, while keeping the $UPGRADE_CODE placeholder there. The placeholder should still be substituted for the upgrade code.\n6. :white_check_mark:  Edit the app, replacing the uninstall script with one using both package ID and upgrade code placeholders. Both should populate on the saved script.\n7. :white_check_mark: Add an MSI that doesn't have an upgrade code, without modifying the uninstall script. Confirm that the uninstall script is the one-liner using ProductCode.\n8. :white_check_mark: Attempt to include $UPGRADE_CODE in the uninstall script via a package edit. You should get an error message.\n9. :white_check_mark: Attempt to edit the uninstall script in a way that does _not_ include $UPGRADE_CODE. The operation should succeed.\n10. :white_check_mark: Confirm that MSIs no longer show an extra uninstall warning in self-service.\n11. :white_check_mark:  Confirm that uninstall script help text mentions $UPGRADE_CODE for (and only for) MSIs.\n\n### Potential Fixes\n\nExtract UpgradeCode from MSI packages instead of ProductCode, and use [finding related installers by upgrade code](https://stackoverflow.com/a/49077469/2476827) to generate the uninstall script, uninstalling all software with the associated UpgradeCode rather than just the exact version with the ProductCode.\n\nWe'll need to decide what to do with existing uninstall scripts. We can detect when an uninstall script is the default, ProductCode based one, but in order to upgrade the script we'll need to download and re-parse the MSI (similar to what we did when initially adding uninstall scripts). Otherwise we'll be generating a script that won't work, as currently MSI `package_ids` are the ProductCode, and the new uninstall script would assume UpgradeCode.\n\nAlternative would be to leave scripts as-is and document that admins should delete and re-add MSIs to get the better script (\"editing\" the MSI package with the same installer will be a no-op, and emptying the uninstall script and saving will populate the wrong script).\n\nAdditionally, without additional changes this will break automatic install policies (moreso than they're already broken), as we're currently using assuming that package IDs will contain product code. We can work around this right now by passing product code separately when creating the auto-install policy on app upload, but that breaks as soon as we switch auto-install policies to be add-able after a package has been uploaded (#25499), so we have three choices from what I can see:\n\n1. Drop automatic policy creation for MSIs until UpgradeCode is visible via osquery (or wait to fix this issue until UpgradeCode is visible via osquery and switch automatic policy creation to use UpgradeCode in the same release that we switch uninstalls to use UpgradeCode)\n2. Add a way to store ProductCode on the installer package so we can allow generating the current (overly precise) policy queries for MSIs\n3. Add a way to store package vendor on the installer package so we can temporarily switch the policy query to a more generic name + vendor check that we currently use for Windows FMAs.\n\n",
          "number": 27758,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Custom package MSI uninstall scripts don't uninstall other versions of the software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27758"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6Nk",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "~windows",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Custom package MSI uninstall scripts don't uninstall other versions of the software",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27758?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "My estimate is based on the ability to either implement this simultaneously with UpgradeCode changes on the automatic install query, or being able to drop that query until UpgradeCode starts coming in in inventory. Estimated scope also _does not_ include migrating existing uninstall scripts."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "For context, osquery upgrade code PR https://github.com/osquery/osquery/pull/8587"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reassigning since this got pulled back during sprint kickoff today."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "IIRC this got estimated as a 5 previously, so moving this back to estimated. There's a little more scope in here for a fallback, but given that we need the fallback anyway that means we don't need to retroactively fix package IDs/uninstall scripts on existing installers so this should wash out back to a 5."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving due to scope increases"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Plan here is to\n\n- [x] Add a ~nullable~ (changing to not null default blank because zero values) `upgrade_code` field to `software_installers`\n- [x] Refer to it via a new `$UPGRADE_CODE` var\n- [x] Retroactively populate UpgradeCode for existing MSIs (similar to uninstall population cron), but _don't_ retroactively change the uninstall script.\n- [x] Continue to map `$PACKAGE_ID` to ProductCode\n- [x] Update the UI to mention the new variable and show the upgrade code based script as a default, even though if we can't extract an UpgradeCode from an MSI we'll fall back to the product code based script if the uninstall script is either blank or the same as the golden script\n- [x] Have the same behavior for GitOps\n\nFYI @mostlikelee @marko-lisica "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Bonus points: we can get rid of the MSI uninstall disclaimer on self-service now that this is in place, so I'm including that cleanup in the PR."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "QA Notes: \n\nWas able to reproduce the initial issue on 4.71, but after moving to main, any custom software can be uninstalled with any new script, even if there's a version mismatch. \nWent through the test plan and checked off all the items. Additionally, nothing has stood out during additional exploratory testing. "
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.62.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAutomatic install policies for MSIs use a query based on ProductCode, a GUID that changes when newer versions of the software are released. This means that the policy query will not only fail if no version of the software is installed, but also if any _other_ version of the software is installed.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install an older version of an app (preferably as an MSI) on a host\n2. Upload a newer-version MSI of the same app, with automatic install turned on\n3. See the policy generated in step 2 fail, queueing up an install even though the app already exists\n\n### üïØÔ∏è More info\n\nNoticed this in manifest updates for #27443, which is a valid check in this case as at the time we were using the same method for building queries as we do for custom package MSIs.\n\n### üõ†Ô∏è To fix\n\nTwo options (in the case osquery work is required that work is tracked in its own ticket):\n\n#### Use program name and vendor (available now, less reliable, not recommended)\n\nWe could extract vendor and program name from the MSI and use that for existence queries, similar to what we do now for FMA. Catch is this is imprecise and may actually create more reliability issues than it solves (AKA the reason we don't create automatic policies for EXE installers). We probably _shouldn't_ bother doing this.\n\n#### Use UpgradeCode (requires osquery changes, more reliable)\n\nWe could extract UpgradeCode from MSIs and then, when osquery adds UpgradeCode support for `programs`, build our queries based on that. MSIs are highly recommended to have UpgradeCode, such that most if not all have them (and we can bail on automatic policy creation if an MSI doesn't). If we fix this concurrently with #27758 we can switch the `package_ids` DB column in `software_installers` to mean UpgradeCode for MSIs.",
          "number": 27447,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Auto-install queries for custom MSI packages fail when a different version of the same software is installed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27447"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX6VI",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "~windows",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤Auto-install queries for custom MSI packages fail when a different version of the same software is installed",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee So if I am to understand this, in step 2 it's the same _version_ of the same app? The issue is that the MSI version is newer which is reinstalling the same _version_ of the same app?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Same app, different version.\n\nThe auto-install policy query should pass (no install queued) for any version of the same app (once installed the app isn't updated when checking that box). Instead, for MSIs, if you install a different version of the app than the custom package you uploaded, the policy will fail and the install will be triggered."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh! so this isn't a patching thing. The way things currently work we shouldn't update things b/c patching isn't a thing yet. Let me update the 'to fix' section. Thanks!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee Sounds like you're still doing research on this. Moving back to Ready to spec since if we're already using UpgradeCode and if that's the identifier being passed back by osquery this is a false alarm."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Moving this to Ready to Estimate now that we have a clearer idea of what we'd need to do here. osquery changes block this ticket, but aren't in scope for the ticket itself (going to add another ticket for the required osquery support so we can track that independently)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/27447?planning-poker) with Zenhub @jahzielv @ksykulev"
          }
        ]
      },
      {
        "assignees": [
          "jacobshandling",
          "RachelElysia"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an end user of Fleet desktop,\n| I want to be able to see when updates are available for apps I have installed\n| so that I can keep my computer's software up to date.\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #25784\n\n## Context\n- Design: @eugkuo \n- Dev: @mostlikelee, @iansltx \n- Original request: #25784\n- Broken out of https://github.com/fleetdm/fleet/issues/27245\n \n \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma link](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=2-130\u0026p=f\u0026t=4BUeL3i6REY46HIb-11)\n- [ ] CLI (fleetctl) usage changes: _No changes_\n- [ ] YAML changes: _No changes_\n- [ ] REST API changes: _No changes_ (all frontend for this iteration)\n- [ ] Fleet's agent (fleetd) changes: _No changes_\n- [ ] GitOps mode changes: _No changes_\n- [ ] Activity changes: _No changes_\n- [ ] Permissions changes: _No changes_\n- [ ] Changes to paid features or tiers: _No changes_\n- [ ] My device and fleetdm.com/better changes: _No changes_\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: _No changes_\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n  - @noahtalerman: Dogfood this story at the same time: https://github.com/fleetdm/fleet/issues/30035 \n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: See #29914\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: High\n- Risk description: Primary risk here is suggesting incompatible updates for software such that updates either fail or \"are successful\" but break the end user's install. This is partly because we're going to be assuming that all self-service software is opted into update notifications, including custom packages. Based on scope reductions, we're proceeding knowing that we'll post software for update that won't successfully update, so we're accepting this risk and seeing where it takes us.\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\nTest with Windows, macOS, Linux hosts\nTest with Chrome, Safari, Edge, Firefox\n\n#### UI\n\n1. Ensure that there there are more than 8 updates available for a host by installing older versions of the software (e.g. downloading old FMA copies based on previous manifest versions), then adding current versions as available in self-service on the same team.\n2. Navigate to Fleet Desktop.\n3. Verify that there the \"Updates\" section shows at the top of the page.\n4. Verify that the number next to the Self-service tab matches the number of available updates.\n5. Verify that selecting 'Next' swipes over to the next 4 update cards in the Updates section.\n6. Verify that the same software titles have 'Update' actions next to them in Self-service table.\n7. Select \"Update\" on a software title\n8. Verify that the status changes to 'Updating' with an animated circle progress spinner on both the app card and in the Self-service table..\n9. Navigate away from the page and navigate back and verify that the status remains.\n10. When the update is complete verify that the software is updated locally, the card shows \"Updated\", and a refetch has been queued.\n11. Once the refetch completes, verify that the card is removed from the top section and that the action in the Self-service table changes to \"Reinstall\" (when the one card is removed, the remaining 3 cards still show but the one that was removed is replaced with the next item in the list, so that it still shows 4 cards)\n12. Verify that the pagination always shows 4 items, so it goes from showing 1 2 3 4 to 5 6 7 8.\n13. Update four more apps.\n14. Verify that the Update section shows 3 cards and that the width of each card is the same as when there are 4 items in the Update section at widths above 1280\n15. Verify layout at 480, 768, and 1024 breakpoints. Note that 2 cards show at 768 and that 3 cards show at 1024.\n16. Verify that self-service is paginated and displays 20 items per page.\n\n- [x] Double check for the additional change in host details for the Self service hover text to add a learn more link\n\n- [ ] If there was only one update card and I update the app and it refetches, the Updates section disappears\n\n- [ ] Clicking the Update all option, refetches will occur until all updates are completed. The count will continue decreasing until no further updates are available and then the section will disappear \n\n- [x] Failed modal should show details when clicked\n\n#### Update eligibility criteria\n\n- [x] Software not available for self-service should not show in the available updates list\n- [x] Software not in inventory should not show in the available updates list\n- [x] VPP apps should not show in the available updates list if MDM is turned off\n- [x] Software in inventory that is \u003e= the version for the installer doesn't show\n- [ ] Software in inventory whose version can't be compared to the installer's version shouldn't show\n- [x] Software in inventory, installed multiple times, where one install is an older version and one install is a same-or-newer version, should show in the available updates list\n- [x] Software in inventory, installed once, that is older than the installer's version, should show in the available updates list\n- [ ] Software in the list that was previously successfully installed by Fleet should NOT show install status if a refetch has happened since the install\n- [x] Software in the list with a pending install SHOULD show install status, even if a refetch has happened since the install started\n- [x] Software in the list that has been successfully installed by Fleet since the last refetch SHOULD show install status\n- [x] Software that shows up in the list that has had an install failure by Fleet since the last refetch SHOULD show install status\n\nEdge cases:\nüî¥  Software installed in multiple locations - what happens when I update? Does it only update one of the applications? Does that mean the card remains after the update if the other locations weren't updated?\n\"It depends on the install script and the package\"\nShort answer: Yes, the card can still remain if an outdate version exists anywhere on the host\nüî¥ Will it install a new firefox in the expected location, and you may end up with more than one version?\nA: Yes\nüî¥ What do we show in the carousel for the version -\u003e version subtext?\nA: Design removed version -\u003e version and it's now just version\n\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 27983,
          "repository": "fleetdm/fleet",
          "title": "üñ•Ô∏è Fleet Desktop \u003e Self-service: Add \"Update\" actions when updates are detected for installed software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27983"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX12Q",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-cisneros",
          "customer-numa",
          "#g-orchestration",
          "#g-software",
          "prospect-waterman",
          "prospect-antonella",
          "~assisting g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "üñ•Ô∏è Fleet Desktop \u003e Self-service: Add \"Update\" actions when updates are detected for installed software",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman @mostlikelee Removed 'uninstall' from this ticket as the order of operations has determined that this ticket will go ahead of the uninstall ticket (#28038)"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I took a first pass at the test plan.\n\nQuestions for @mostlikelee:\n\n1. What YAML/API things might need done?\n\nQuestions for @RachelElysia \n\n1. On the carousel, if there are 6 items in the carousel are we thinking it would show 4 and 2 when paginating? Or would we always show four and selecting \"Next\" would go from showing 1 2 3 4 to showing 3 4 5 6?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Notes from 14 April 2025:\n\n1. @noahtalerman : Can we scope this down to Mac only and FMA? \n    1. There are extra complications around Windows due to known issues that we've been discussing. There are also current research tickets on upgrade codes for Windows that are outstanding (#27776) which would be a pre-req for Windows.\n2. Do we want to add activity changes at this time? @mostlikelee and I think no for simplicty's sake.\n"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @noahtalerman : Can we scope this down to Mac only and FMA?\n\n@eugkuo @mostlikelee I think let's draft for all support we support on macOS, Windows, and Linux (custom packages, App Store apps, and Fleet-maintained apps).\n\nAfter we have designs, I think let's discuss and decide how to cut the story up.\n\nWhy? So we know where we're heading and we tease out more complications/unknowns. Then we can come up with a plan for how to address Windows and Linux even if the first iteration we build is just macOS Fleet-maintained apps. Which is a valid first iteration.\n\n\u003e Do we want to add activity changes at this time?\n\n@eugkuo same for activities. I think let's draft activities and then cut."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo @mostlikelee I think let's draft for all support we support on macOS, Windows, and Linux (custom packages, App Store apps, and Fleet-maintained apps).\n\n@noahtalerman Coolio. I don't think the design changes. The UI will be the same regardless of platform. (@mostlikelee correct me if I'm wrong).\n\nWRT activities, I added [an example](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5318-3291\u0026t=LPfejWpLp8jclkAm-11) to the ticket above."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman @jmwatts @mostlikelee \n I've updated the selected state in the category filters to match work done on [#27245](https://github.com/fleetdm/fleet/issues/27245)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Question 1: what is expected behavior when multiple versions of a software are installed on a host:\n- On macOS, if an application is renamed (`Firefox.app` + `Firefox2.app`), Fleet will show both applications as pending updates in the carousel, but only 1 will patch successfully (Firefox.app because it matches the app name in the dmg)\n- This will also be the case on macOS with `/Applications/Firefox.app` + `~/Downloads/Firefox.app` (only the first will patch)\n- machine vs user installs will also see this symptom on Windows\n\nQuestion 2: Does the update disappear from the carousel if the software install executed successfully, but the app did not actually update?\nexamples:\n- macOS: Firefox.app is renamed to Firefox2.app, install completes successfully and the host now has Firefox.app + Firefox2.app\n- Windows: machine scope is installed, and installer is user scoped (or vice-versa)"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee @noahtalerman Updates from 7 May 2025 DR:\n\n1. Added [tooltip](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5366-4609\u0026t=3kh7v4Aj5lLSDppW-11) on `installed` status\n\n"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman @mostlikelee \n\nUpdated the designs with the following:\n\n1. Removed \"Installed\" status from the update cards at the top of the page.\n2. Upgraded the 'update' action to a button.\n3. For installed apps, updated the action to 'reinstall'"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@eugkuo @noahtalerman we realized that we need design when multiple versions of an updatable app is installed"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I'm not exactly sure what you mean by this. Wouldn't we still have a single update button for the app? I mean we'd want to update it all to the most recent. I think I might be missing some nuance here.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Chatted with @mostlikelee and here are the use cases:\n\n1. N different versions in the Applications folder\n2. N copies of the same version in the Applications folder\n    1. Currently can only update the one with the name we expect.\n4. N copies of various versions in different locations.\n\nWe can only update if have following criteria:\n1. Existing path needs to be what's expected (name, location, etc.)\n    1. Works for FMAs\n    2. Does not work as well for custom packages.\n    4. Big question mark around VPP.\n\nLet's discuss in USR.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like there's an off-by-one in step 11 in the test plan.\n\nAlso, for \"Updating\", can we show that status string always when inventory says a piece of software is installed but there's also a pending install? That would allow us to use the existing API there rather than having to build a new one.\n\nI have an idea on making this frontend-only to expedite: use the existing self-service filter, no pagination, and client-side filter to results that have only installed versions where version differs from the installer package. This gets this work out from behind further ListHostSoftware tweaks/derisks it a bit, at the cost of additional frontend munging."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \n\u003e Looks like there's an off-by-one in step 11 in the test plan.\nThanks! Fixed.\n\n\u003eAlso, for \"Updating\", can we show that status string always when inventory says a piece of software is installed but there's also a pending install? That would allow us to use the existing API there rather than having to build a new one.\n\nSo there could be a pending install and we and updating over that? At any rate, if we're updating that software it seems reasonable to show the 'updating' status.\n\n@noahtalerman thoughts?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo To clarify, I'm saying that if we have a piece of software already in inventory and there's a pending install (from whatever Fleet-initiated source...Install button, update button, policy execution, whatever), we use the word \"Updating...\" rather than \"Installing...\" in the self-service UI. Then reserve \"Installing...\" for cases where a host _doesn't_ have the same software in inventory already.\n\nSo the pending statuses would be:\n\n* Installing - wasn't in inventory, install is pending\n* Updating - was in inventory, install is pending\n* Uninstalling - uninstall is pending\n\nIf the above are the rules, the frontend already has all of the information it needs (with existing API endpoints) to show the correct status (so, no backend/DB changes to differentiate between \"installing\" and \"updating\")."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Ohhhh! This works for me. Also,  in future we shouldn't have 'Install' as an action on installed software. It'll say 'uninstall' or 'update' so this would mesh nicely.\n\ncc @noahtalerman @mostlikelee "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman Reverted to secondary update buttons in the update cards."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Bumping this as an unresolved question as we expedite this story: https://github.com/fleetdm/fleet/issues/27983#issuecomment-2877468972"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "During a call on \"Updates in self-service\" call on 2025-05-26, here's what @mostlikelee and I decided for the first iteration: \n\n![Image](https://github.com/user-attachments/assets/1b98c30b-6dc8-444e-826b-a6fc81e8d715)\n\nFleet will document this behavior is the self-service software guide. The UI will link IT admins to this guide (redirect PR is [here](https://github.com/fleetdm/fleet/pull/29445)):\n\n![Image](https://github.com/user-attachments/assets/f6ca58b1-8ce0-473b-a9f3-a9e574e7aaa0)\n\n![Image](https://github.com/user-attachments/assets/30d73148-cd03-4ad8-9b84-5ee89467e68a)\n\nEventually, Fleet will iterate on this behavior. Plan is to ship iterative improvements such that more apps show up in ‚ÄúUpdates.‚Äù\n\ncc @eugkuo "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @eugkuo I moved this 480px width screen into scratchpad [here](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5408-9141\u0026t=2qzAG36eyoKjsBAb-1). Looking the discussion in [this closed PR](https://github.com/fleetdm/fleet/pull/28465), it sounds like we haven't added support for screen widths down to 480px yet.\n\n![Image](https://github.com/user-attachments/assets/d3909d83-841e-41be-a74c-319dffe80946)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Thinking through workflow for a moment, if an app shows up in the updates carousel, it's because we've seen it in inventory, and the version in inventory is less than the version of the corresponding installable software (FMA, custom package, or VPP) for that team (and we don't show a card if criteria around installed paths aren't met, see dev note mentioned above). Good so far? This has a side effect of VPP apps being most likely to be in that carousel, as we'll display a new version there within an hour of the version being published via Apple, with no ability for an admin to override this, but...that's probably okay?\n\nNext, an end user clicks \"Update\", at which point we either send the MDM command to install or queue up a package-based install. In both cases, currently there will be a point where the software is reported as installed but software invenotry has not yet been refreshed, even with #28738 implemented. This means that we can show the \"updating\" spinner right up until the install completes, at which point a purely inventory-based system would flip back to having the \"Update\" action displayed until inventory gets run again, which isn't what we want.\n\n## Update status alternative: install status\n\nOne alternative would be to take installation status into account in some form when installs are successful/failed, rather than just when they're pending. Catch here is that we're replicating issues around freshness that affect our existing host software inventory, where an out-of-band update (e.g. Chrome auto-updating) would cause the update card to show when it isn't necessary. This issue is relevant when the update installation fails but the software eventually gets updated out-of-band.\n\n### Install status freshness: version comparison\n\nOne mitigation for the freshness comparison issue would be to compare versions between inventory and the install receipts, and have the higher version win, but VPP installs currently break this as `host_vpp_software_installs` doesn't include the version that was installed, so we'd wind up in a case where VPP apps would never show up in the updates list once installed the first time because installed version would just reference back to the latest available version.\n\n### Install status freshness: refetch wins when more recent than install\n\nAnother mitigation would be to only take install statuses into account when they're more recent than the most recent host vitals refetch. We have install timestamp info and last refetch timestamp info, so this should be reliable, and we can use this nuance to show available updates with e.g. \"Update successful\" or \"Update failed\" if we wanted between getting an install result back and the next refetch.\n\nWe could actually extend this logic to host software listing in general, explicitly ignoring install receipts (success or failure) unless they've happened since the most recent vitals refetch as the vitals refetch should at that point be the source of truth.\n\n## Update status alternative: refetch on install success\n\nAnother alternative would be to retech host vitals (or at least rerun software inventory) after each successful install. Doing this right needs #28738 as a prerequisite so we don't refetch too early. If we did this, the window where software inventory alone was too stale for correctly showing the update carousel would be minimized.\n\n---\n\nWe could combine \"refetch wins when more recent than install\" and \"refetch on install success\", plus maybe polling of host details on the **My device** page while refetching, to get a nearly realtime view of what's actually installed. Clicking Update on a piece of software would pop up a spinner in place of the Update button, then the status would flip to Update Successful for \u003c 1 minute while a vitals refresh was triggered, then the update card would disappear entirely once the vitals refresh triggered by that install was completed. For failed updates, we'd show the \"Update failed\" status until the next vitals refetch, with a retry button, and that failure would go away (replaced with an \"Update\" action with no status) after the next refetch.\n\nThis combined approach will require API changes (but no fleetd changes) to work, but in return we get a clear path to cleaning up inventory-vs-install idiosyncrasies, and we avoid end-user frustration stemming from varying degrees of staleness on the updates list compared to what they have installed."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Unrelated to the above: hopefully installers get targeted properly with labels for e.g. Intel Macs in this customer's deployment, since otherwise we'll be presenting end users with prompts to update apps to versions that won't work on their architecture."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looking over the wireframes, looks like we have a different activity description than the standard \"installed X app.\" Given the complexity of this ticket as it stands, can we remove the activity from scope, reverting to the standard \"an end user installed X\" activity that we have right now? Otherwise we need to decide how we'll differentiate an update from an install (new param on the install reqeuest? Automatically server-side based on what's in inventory on the machine?) and define a structure for the revised activity record (I assume a new field on `installed_software`), neither of which we've spec'd. Feels like those changes can be added in a follow-up ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One interesting side effect of \"refetch vitals after every install\" is it could resolve the software install \"half\" of #25969/#28523, albeit in a heavier-weight fashion since IIRC a vitals refetch runs policy queries as well as software inventory queries. If we just run software inventory (so, not a full refetch) those issues are unaffected. TBD whether we'd want to start with a full vitals refetch hre since that's more computationally expensive both client- and server-side and once we implement it it's more likely that admins would rely on the full-refetch behavior so it'd be hard to back out.\n\nBut if we _didn't_ collect the entire set of host vitals, we'd need another timestamp on hosts to indicate how fresh software inventory was relative to the rest of host vitals, so just doing a full refetch is a lot less risky from a development perspective. So \"do a full refetch after an install completes\" still makes sense here I think.\n\nNote that this is _in addition to_, and _after_, the MDM polling covered in #28738, as that polling would only affect software install status and not inventory (even on iOS/iPadOS the polling would be checking for managed apps, while software inventory grabs the entire installed app list)."
          },
          {
            "author": {
              "login": "gillespi314"
            },
            "body": "FYI, we have some existing framework for refetching [critical queries](https://github.com/fleetdm/fleet/blob/f018066beef248bdb67700a3f458809f9bad410a/server/fleet/hosts.go#L361-L362) that might be useful here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@gillespi314 Thanks for pointing that out! I think that in this case once we implement #28738 we'll only need to refetch once, after the install is confirmed succeeded (on script exit 0 + post-install for package-based, on MDM managed apps success for VPP) so we won't need to take the perf hit of a full refetch on every host check-in (we're making the assumption that the MDM managed app inventory command is less expensive to poll than our standard vitals suite)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx @mostlikelee Removed the updated activity feed and wrote a [FR](https://github.com/fleetdm/fleet/issues/29492) to update this in the future.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee @eugkuo, just checking, is this story ready to move to \"Estimated\"? Looks like it has an estimate on it."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "The estimate is from our expedited estimation session.  I'll remove the estimate as we're going to want to estimate this again after Spec.  This story is in the correct spot.  We'll move it over when https://github.com/fleetdm/fleet/issues/29494 is complete."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @iansltx just a reminder that this story is ready for spec? Can you please work with the team to get it estimated ahead of next sprint?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman on my list after my responsibilities for 4.69 are concluded."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts This test plan is ready for a last look. Make any edits that you need to make, and once it looks good pull this to Ready to Estimate. I've already pulled subtasks to Ready to Estimate as I'm sufficiently confident that I have them spec'd correctly and wanted to give folks a little more runway to put down their own estimates."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Workflow diagrams:\n\n![Image](https://github.com/user-attachments/assets/c265a375-fc3e-437e-8350-b685c605d56d)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan looks good. \n\n\u003e Windows apps don't show in the available updates list if they don't have an associated install path \n\nDo we know if we plan to address https://github.com/fleetdm/fleet/issues/29449 before this ticket?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts That would get addressed in the same sprint at the earliest, given that this will be going into the next sprint. There isn't a direct dependency here, and these shouldn't touch the same code, so if/once that bug is fixed this implementation will \"just work.\""
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman adding this back into your queue based on our design review discussion re: copy/UI changes for unpatchable software"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee can you please update the test plan? We made a change to not worry about where the software is installed (paths). Tip: CMD+F for \"path\" in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Revised the spec here (didn't touch Figmas), including test plan, to drop host paths interactions, and drop this down to FE-only. We'll likely need to reimplement with server-side changes in the next iteration, but workload-wise if we tried to implement this plus #30240 in a single sprint with backend changes we'd miss the release cut due to waiting for dependencies.\n\nThis story now consists of frontend changes plus docs changes, so tee shirt sizing is just above an XS. Likely scenario here is that dev gets done in the 4.72 sprint, and docs get updated during the 4.73 dev sprint but prior to 4.72 going GA.\n\nAPI change/path-related subtasks have been dissociated from this story and moved back to the \"New requests\" column; they'll need to be either associated with a new follow-up story or converted to stories themselves to be actionable.\n\nPulled the story back to USR to revalidate the test plan, while keeping subtasks in Estimated based on previous discussions."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "after some discussion, keeping the original estimates and moving to Estimated."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica thanks for jumping right into our team and the mountain of dev/design sync needed. Here's some recap of stuff I need/needed clarified.\n\nPrevious conversations:\n\n000. This isn't in the spec to be able to sort status from host details \u003e software \u003e library. But if we did it would be consistent with self-service status sort. I tried to implement but it proved difficult because of the server side pagination/query/sort happening and sorting on a column that is built in the FE doesn't play nice with server side sort. (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175433082329?thread_ts=1752168568.807959\u0026cid=C086V2QK76X) Confirm we are intentionally scratching sorting on host details \u003e software \u003e library \u003e status column or I need to jump through a lot of hoops to make everything client side sort an then implement\n\n00. I dev-ed in clientside paginating self-service page to 20. When there's updates to specs like this, are you DRI for updating the Figma and QA plan? (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175280199089)\n\n0. We either needed to make 2 API calls, one for update software and the other for filtered software in the self-service section OR move the self-service software search query to be client side. We chose to make everything client side so we don't have to make so many API calls and deal with making 2x the API calls every time an install/uninstall/update action is clicked. It's sticky, partially because this is all frontend hoops jumped through because the API doesn't paginate, doesn't filter categories, and doesn't have a 1:1 map of status's in the API with status shown in the UI.  (https://fleetdm.slack.com/archives/C086V2QK76X/p1752180334175959)\n\nQuestions from [Self-service/Library updates thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1752184798822479):\n\n1. I asked the channel, If there's more than one version installed on a host, what should go on the software updates card for the \"125.0.1 -\u003e 126.0.1\". If recalled correctly, we think the Figma is not correct, and should just show the library version.\n\n2. Do we show the update available modal if you click update in the carousel or does it just automatically make the API call to update\n\n3. When you click the Update all button, do we disable the \"update all\" button?\n\nMore questions not on the thread:\n\n5. Similarly, when you are updating all and there's no other software to update since they're all pending \"Updating...\", do we disable the \"update all\" button?\n\n6. This pagination but changing the number of update software tiles per page on page size might be a little too tricky. For example, you have 20 software that need updates, you're looking at the third page which shows software 9,10,11,12. You shrink your browser horizontally to only see 3 software, which 3 should be shown?? What page are you on now?\n\n7. Do we forsee an update section in host details \u003e software \u003e library? Is it in the works, any heads up might be good in making sure the code is reusable across fleet desktop \u003e self-service and host details \u003e software \u003e library\n\nI'm OOO tomorrow but I'll be back Monday and Thursday next week. If you can address any of these, that would be amazing, ty!\n "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @RachelElysia, thanks for collecting all the questions in one place, it's really helpful.\n\n\u003e This isn't in the spec to be able to sort status from host details \u003e software \u003e library. But if we did it would be consistent with self-service status sort. I tried to implement but it proved difficult because of the server side pagination/query/sort happening and sorting on a column that is built in the FE doesn't play nice with server side sort. (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175433082329?thread_ts=1752168568.807959\u0026cid=C086V2QK76X) Confirm we are intentionally scratching sorting on host details \u003e software \u003e library \u003e status column or I need to jump through a lot of hoops to make everything client side sort an then implement\n\nLet‚Äôs skip this. I‚Äôll add follow up story to do some additional UI improvements (details modals without 2 tabs on library page, sorting by status on library page and pagination for self-service in API).\n\n\u003e I dev-ed in clientside paginating self-service page to 20. When there's updates to specs like this, are you DRI for updating the Figma and QA plan? (https://fleetdm.slack.com/archives/C086V2QK76X/p1752175280199089)\n\nClient-side pagination sounds good to me. I added spec to Figma and test case.\n\n\u003e We either needed to make 2 API calls, one for update software and the other for filtered software in the self-service section OR move the self-service software search query to be client side. We chose to make everything client side so we don't have to make so many API calls and deal with making 2x the API calls every time an install/uninstall/update action is clicked. It's sticky, partially because this is all frontend hoops jumped through because the API doesn't paginate, doesn't filter categories, and doesn't have a 1:1 map of status's in the API with status shown in the UI. (https://fleetdm.slack.com/archives/C086V2QK76X/p1752180334175959)\n\nI'm not sure I understand this. Are we going to request all self-service software, and then the frontend will find and display those with available updates in the \"Updates\" section? If that's correct, then I think that's fine.\n\n\u003e I asked the channel, If there's more than one version installed on a host, what should go on the software updates card for the \"125.0.1 -\u003e 126.0.1\". If recalled correctly, we think the Figma is not correct, and should just show the library version.\n\nWe decided to don‚Äôt show current version, to simplify in this iteration. We can add that later. It makes things complicated when user has multiple versions of the same app installed in different paths.\n\n\u003e Do we show the update available modal if you click update in the carousel or does it just automatically make the API call to update\n\nWe show update available modal only when user clicks on ‚Äúupdate available‚Äù in status column. If user click ‚ÄúUpdate‚Äù in self-service table or in the carousel we just directly start update (user sees ‚ÄúUpdating‚Äù status.\n\n\u003e When you click the Update all button, do we disable the \"update all\" button?\n\nI think we should disable ‚ÄúUpdate all‚Äú button and show ‚ÄúUpdating‚Äù status on each item in carousel and self-service table.\n\n\u003e Similarly, when you are updating all and there's no other software to update since they're all pending \"Updating...\", do we disable the \"update all\" button?\n\nI think so. Let‚Äôs disable the button if an update is started for all apps that have an update available.\n\n\u003e This pagination but changing the number of update software tiles per page on page size might be a little too tricky. For example, you have 20 software that need updates, you're looking at the third page which shows software 9,10,11,12. You shrink your browser horizontally to only see 3 software, which 3 should be shown?? What page are you on now?\n\nSorry, I don‚Äôt understand this. Let‚Äôs chat during the design review on Monday. If it‚Äôs too early for you, please add something to my calendar.\n\n\u003e Do we forsee an update section in host details \u003e software \u003e library? Is it in the works, any heads up might be good in making sure the code is reusable across fleet desktop \u003e self-service and host details \u003e software \u003e library\n\nI don‚Äôt think so. I don‚Äôt thin IT admin want‚Äôs to see that. They will probably make updates automatic based on some criteria. We might want an additional filter in the existing dropdown for apps that have updates available, but not planned AFAIK."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica thanks for all the clarification!\n\n\u003e I'm not sure I understand this. Are we going to request all self-service software, and then the frontend will find and display those with available updates in the \"Updates\" section? If that's correct, then I think that's fine.\n\nExactly\n\n\u003e Sorry, I don‚Äôt understand this. Let‚Äôs chat during the design review on Monday. If it‚Äôs too early for you, please add something to my calendar.\n\nWill add to your calendar\n\nI think everything else is addressed and unblocked so I can dev -- hvala!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica Another question re: https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=5302-9691\u0026t=xsGXc1YLuwgfuqy1-0\n\nWhen the update fails, it shows \"Update\" button and a \"Failed\" button in the update card, but in the Self-service table view in the card below, should that installer show \"Failed\" or \"Update available\" in the status?\n\nNuances needing clarification from @marko-lisica :\n\n\u003cimg width=\"671\" height=\"187\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d94eb0bb-adeb-488e-a955-c7a2d365a791\" /\u003e\n\nScenario 1: Docker Desktop has an update available but it failed to update, what should be shown as the status in the table view?\n\nScenario 2: Docker Desktop has an update available but it failed to uninstall, what should be shown as the status in the table view?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @RachelElysia, I think that we should show \"Failed\" in self service table as well.\n\n\u003e Scenario 1: Docker Desktop has an update available but it failed to update, what should be shown as the status in the table view?\nWe should alwaythe s show latest status in the status column. If it's failed let's show it. Action should be update if update is available.\n\n\u003e Scenario 2: Docker Desktop has an update available but it failed to uninstall, what should be shown as the status in the table view?\n\nWhat do we display today if the uninstallation fails? Do we have a specific status like \"Failed (uninstall),\" or do we show \"Failed\" and then inform the user in the details modal that the uninstallation was unsuccessful?\n\n"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica \n\n\u003e What do we display today if the uninstallation fails? Do we have a specific status like \"Failed (uninstall),\" or do we show \"Failed\" and then inform the user in the details modal that the uninstallation was unsuccessful?\n\nWe show \"Failed (uninstall)\" which leads to the uninstall modal.\n\nI'll be sure to update these copies to not show update available and show \"Failed\" or \"Failed (uninstall)\" if it meets both criteria, I'll update the QA plan too since I'm in there RN, thank you!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica Update available has a tooltip and Failed/Failed (uninstall) has a separate tooltip. Because these options listed above fall into both, I made it so the tooltips show both the Update Available tooltip copy and Failed/Failed (uninstall) copy. WDYT?\n\n```\n  failed_install_update_available: {\n    iconName: \"error-outline\",\n    iconColor: \"ui-fleet-black-50\",\n    displayText: \"Failed\",\n    tooltip: ({ isSelfService, isHostOnline, lastInstalledAt }) =\u003e\n      isSelfService || isHostOnline ? (\n        \u003c\u003e\n          Fleet can update software.{\" \"}\n          \u003c\u003e\n            Software failed to install\n            {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}.{\" \"}\n            {isSelfService ? (\n              \u003c\u003e\n                Select \u003cb\u003eRetry\u003c/b\u003e to install again, or contact your IT\n                department.\n              \u003c/\u003e\n            ) : (\n              \u003c\u003e\n                Select \u003cb\u003eDetails \u0026gt; Activity\u003c/b\u003e to view errors.\n              \u003c/\u003e\n            )}\n          \u003c/\u003e\n        \u003c/\u003e\n      ) : (\n        \u003c\u003e\n          Fleet can update software\n          \u003cbr /\u003e when the host comes online.\n          \u003cbr /\u003e\n          Software failed to install\n          {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}.{\" \"}\n          {isSelfService ? (\n            \u003c\u003e\n              Select \u003cb\u003eRetry\u003c/b\u003e to install again, or contact your IT\n              department.\n            \u003c/\u003e\n          ) : (\n            \u003c\u003e\n              Select \u003cb\u003eDetails \u0026gt; Activity\u003c/b\u003e to view errors.\n            \u003c/\u003e\n          )}\n        \u003c/\u003e\n      ),\n  },\n  failed_uninstall_update_available: {\n    iconName: \"error-outline\",\n    iconColor: \"ui-fleet-black-50\",\n    displayText: \"Failed (uninstall)\",\n    tooltip: ({ isSelfService, isHostOnline, lastInstalledAt }) =\u003e\n      isSelfService || isHostOnline ? (\n        \u003c\u003e\n          Fleet can update software.\n          \u003cbr /\u003e\n          Software failed to uninstall\n          {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}. Select{\" \"}\n          \u003cb\u003eRetry\u003c/b\u003e to uninstall again\n          {isSelfService \u0026\u0026 \", or contact your IT department\"}.\n        \u003c/\u003e\n      ) : (\n        \u003c\u003e\n          Fleet can update software\n          \u003cbr /\u003e when the host comes online.\n          \u003cbr /\u003e Software failed to uninstall\n          {lastInstalledAt ? ` (${dateAgo(lastInstalledAt)})` : \"\"}. Select{\" \"}\n          \u003cb\u003eRetry\u003c/b\u003e to uninstall again\n          {isSelfService \u0026\u0026 \", or contact your IT department\"}.\n        \u003c/\u003e\n      ),\n  },\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@RachelElysia I think we discussed this during standup. We decided not to don't show the update tooltip in the table if it fails. We'll show the update button in the \"Updates\" section + failed status."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: main\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSoftware installs are queued but are never processed by osquery-perf hosts, they remain pending forever.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Set up a Fleet instance with several software items in the Library, all set to automatically install on policy failure\n2. Enroll some osquery-perf hosts (I used `go run ./cmd/osquery-perf/agent.go --enroll_secret \u003csecret_here\u003e --host_count 10 --os_templates macos_14.1.2 --start_period 5m --query_interval 60s --config_interval 5m -mdm_prob=0 -policy_pass_prob=\"0.5\"`\n3. See the policies fail and the software installs get queued up. Wait a while.\n\n### üïØÔ∏è More info _(optional)_\nThis is currently blocking load testing efforts for [#30035](https://github.com/fleetdm/fleet/issues/30035)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30913,
          "repository": "fleetdm/fleet",
          "title": "osquery-perf refuses to process software install requests for macOS",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30913"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcp4X0",
        "labels": [
          "bug",
          "~released bug",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "osquery-perf refuses to process software install requests for macOS",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nTested in load test environment, software is now installing for all types of packages. "
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nFailed verification:\n\n\u003cimg width=\"2374\" height=\"474\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/96d06bdc-ad86-4afd-b7bd-7f169c5af158\" /\u003e\n\nModal shows:\n\n\u003cimg width=\"1072\" height=\"1048\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6d1c81dd-d902-433c-9114-4fafbdea4aee\" /\u003e\n\nShould be:\n\n\u003cimg width=\"519\" height=\"499\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dc619549-f2e6-4984-9dc2-6bbec5fa4290\" /\u003e\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Queue up a VPP install\n2. Immediately once the app installs, delete the app so that the InstalledApplicationList command will never return it as an installed app\n3. Wait 10 min for the verification to fail\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30938,
          "repository": "fleetdm/fleet",
          "title": "Incorrect copy in modal shown when VPP app install is not verified",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30938"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcp5UA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Incorrect copy in modal shown when VPP app install is not verified",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nVerified that the correct modal now appears when VPP app install is not verified:\n\n\u003cimg width=\"1510\" height=\"712\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/48b68c47-6359-4dd8-9194-08471c4a7796\" /\u003e\n\u003cimg width=\"1510\" height=\"714\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f0297374-aaf3-4f02-8fdc-2d2d242eb0c0\" /\u003e\n\u003cimg width=\"1510\" height=\"714\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0e797df3-3b8f-4c14-8162-38c5e6403e47\" /\u003e\n\n"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Copy in modal, wrong,\nFleet's truth clearer than dawn,\nErrors, now they're gone."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: fleetctl - version rc-fleetctl-test-v4.63.0-1433-g2029cc98d9\n  branch: \tmain\n  revision: \t2029cc98d9e2f1f548d5567deafcea7485bc12f4\n  build date: \t2025-05-20\n  build user: \tjordan\n  go version: \tgo1.24.2\n\n**Web browser and operating system**: Chrome 136.0.7103.114 on macOS\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nI have created a fairly simple Gitops setup with a single team and 7 different common .pkg software installers, Chrome, Edge, Firefox, Box, Slack, Zoom, Cloudflare WARP\n\nEvery time I run gitops the software_installers entry for Box gets updated including all the usual update side effects that are applied such as deleting currently pending installations. This seems like a bug, confirmed with SW team here: https://fleetdm.slack.com/archives/C086V2QK76X/p1747675290738609\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Setup gitops\n2. Create a gitops team with some software\n3. Include the Box app. My latest-box-macos-pkg.yml is below. I've removed my ngrok URL from it but I've uploaded the exact package I am using [here](https://drive.google.com/file/d/1n3H1N3WuWgIHv2Qm5ghfP6bOkVF-g1qN/view?usp=sharing) on Google drive\n```\nurl: [url removed]/BoxDrive-2.43.205.pkg\nself_service: true\n```\n4. Run gitops, wait for it to complete\n5. Login to your mysql database and run `SELECT * FROM software_installers;` - note the updated_at time for the Box app\n6. Run gitops again, and rerun the query from 5 after it's done. Note the new updated_at time, and also that other apps didn't change\n\n \n### üïØÔ∏è More info _(optional)_\nI discovered this while debugging this ticket: https://github.com/fleetdm/fleet/issues/28664\n\nI am working to make the setup experience more resilient here in general as part of the ticket above however it does seem like this behavior of the software getting updated and side effects applied is unintended and suboptimal here and could lead to other unexpected behavior if not fixed.\n\n### üõ†Ô∏è To fix\nWhen gitops is run with the same box installer pkg included multiple times it should not result in that installer being \"updated\"",
          "number": 29286,
          "repository": "fleetdm/fleet",
          "title": "ü™≤One particular software installer gets updated every time gitops run is conducted",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29286"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8R4",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤One particular software installer gets updated every time gitops run is conducted",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1747760158772119"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "more context: https://fleetdm.slack.com/archives/C086V2QK76X/p1747675290738609"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "This is seemingly pretty easily reproducible by adding a new team yml with box drive in gitops.\n```\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:51:27.200080 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 21:49:11.554490 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n5 rows in set (0.00 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| Slack-4.44.59-macOS.pkg | 28 |      10 | 2025-07-15 22:44:36.454515 |\n| BoxDrive-2.43.205.pkg   | 29 |      10 | 2025-07-15 22:44:36.460138 |\n| googlechrome.dmg        | 30 |      10 | 2025-07-15 22:44:36.464730 |\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 22:45:00.940530 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 22:44:45.480426 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n8 rows in set (0.00 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers order by team_id desc;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| Slack-4.44.59-macOS.pkg | 28 |      10 | 2025-07-15 22:44:36.454515 |\n| BoxDrive-2.43.205.pkg   | 29 |      10 | 2025-07-15 22:46:52.967720 |\n| googlechrome.dmg        | 30 |      10 | 2025-07-15 22:44:36.464730 |\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 22:47:20.744843 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n| BoxDrive-2.43.205.pkg   | 13 |       8 | 2025-07-15 22:47:03.419169 |\n| Slack-4.44.59-macOS.pkg | 14 |       8 | 2025-07-15 21:49:11.560796 |\n+-------------------------+----+---------+----------------------------+\n8 rows in set (0.00 sec)\n```\n\nIt returns different updated_at results after apply, and then after a while it seems to stop changing. Will investigate further."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Running it over and over again with a single team seems to keep the value consistent:\n```\n\u003e select filename, id, team_id, updated_at from software_installers;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:29:44.399978 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n+-------------------------+----+---------+----------------------------+\n3 rows in set (0.01 sec)\n\n(fleet@[localhost]:3306) [fleet]\n\u003e select filename, id, team_id, updated_at from software_installers;\n+-------------------------+----+---------+----------------------------+\n| filename                | id | team_id | updated_at                 |\n+-------------------------+----+---------+----------------------------+\n| BoxDrive-2.43.205.pkg   |  1 |       9 | 2025-07-15 21:29:44.399978 |\n| Slack-4.44.59-macOS.pkg |  2 |       9 | 2025-07-15 21:29:44.406000 |\n| googlechrome.dmg        |  3 |       9 | 2025-07-15 21:29:44.417411 |\n+-------------------------+----+---------+----------------------------+\n3 rows in set (0.00 sec)\n```"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "So it looks like the uninstall script for box is changing. In specific:\n```\n  pkg_ids=(\n    \"com.box.desktop.installer.local.appsupport\"\n    \"com.box.desktop.installer.autoupdater\"\n    \"com.box.desktop.installer.desktop\"\n  )\n\n  pkg_ids=(\n    \"com.box.desktop.installer.desktop\"\n    \"com.box.desktop.installer.local.appsupport\"\n    \"com.box.desktop.installer.autoupdater\"\n  )\n```\n\nThen we have this fancy query to tell us if anything has changed:\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software_installers.go#L2094-L2122\n```\nSELECT id,\nstorage_id != ? is_package_modified,\ninstall_script_content_id != ? OR uninstall_script_content_id != ? OR pre_install_query != ? OR\nCOALESCE(post_install_script_content_id != ? OR\n\t(post_install_script_content_id IS NULL AND ? IS NOT NULL) OR\n\t(? IS NULL AND post_install_script_content_id IS NOT NULL)\n, FALSE) is_metadata_modified FROM software_installers\nWHERE global_or_team_id = ?\tAND title_id IN (\n\tSELECT id FROM software_titles WHERE unique_identifier = ? AND source = ? AND browser = ''\n)\n```\nSo `is_metadata_modified` is returning true, because the `uninstall_script_content_id` is changing."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n\u003cimg width=\"1506\" height=\"404\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dd287323-f23c-44dc-9473-d27d19550e7b\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to an Android host and click the software tab\n\n\n### üïØÔ∏è Expected behavior\nShould just show empty state without message \"Software installed on this host\"\n\nNOTE: #30318 separated Software into \"Inventory\" and \"Library\" neither of which are available for Android. There should be no copy about \"Software installed on this host\" since it is not supported at all for Android devices.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30905,
          "repository": "fleetdm/fleet",
          "title": "Android copy for Software tab should be removed",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30905"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcna-8",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Android copy for Software tab should be removed",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed copy is no longer present for Android devices. \nAlso confirmed it is still present for other host types."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Android tab now clear,\nNo more software confusion,\nFleet's path is sincere."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "### üí• ¬†Actual behavior\n\nThe Homebrew based Chrome FMA refers to a non-versioned download URL, so the latest version of Chrome gets downloaded rather than the version specified in the manifest. Homebrew explicitly skips a hash check on Chrome, ensuring downloads are successful when new versions are released at the expense of download verification.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee the FMA manifest for `chrome/darwin`.\n\n### More info\n\nWe've had this issue with macOS Chrome since FMAv1 rolled out, and FMAv2 inherits the issue as we're pulling from the same source.\n\n### üõ†Ô∏è To fix\n\nSee https://github.com/fleetdm/fleet/issues/27919#issuecomment-2791036030.\n\nAlso add a FMA docs update to indicate we're using Chrome Enterprise.\n\n[Figma design](https://www.figma.com/design/rSYo3wpfkJo0EklCbF7MFp/-27919-macOS-Chrome-FMA-doesn-t-have-hash-specified-in-manifest?node-id=2-130\u0026p=f\u0026t=NObiCXiVgHjCPeb3-11)\n\n### To QA\n\nWhile pointing at the associated branch for FMA manifests, confirm that adding Chrome shows the \"Latest\" copy on the FMA add page and details modal, and when added shows the current version of Chrome. Confirm install/uninstall work as expected. Delete the app from Fleet and re-add via GitOps to confirm the version number and scripts are the same as when you added via the UI. Confirm that a normal DMG or ZIP FMA is unaffected by these changes (still shows/adds version number from the manifest).",
          "number": 27919,
          "repository": "fleetdm/fleet",
          "title": "ü™≤macOS Chrome FMA downloads latest version instead of specified version in UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27919"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7Ag",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤macOS Chrome FMA downloads latest version instead of specified version in UI",
        "comments": [
          {
            "author": {
              "login": "atharva-navani16"
            },
            "body": "Hi @iansltx  , @mostlikelee you are right Google doesn‚Äôt expose a versioned URL for Chrome downloads (unlike tools like Winget on Windows).\n\nAs you mentioned finding another source can be an option but reliable alternative source is challenging. They might not offer long-term stability or guaranteed authenticity, which raises concerns for maintaining and future support.\n\nA few possible solutions could be:\n**1.Self-Host Chrome Binaries**\nHost .dmg files on FleetDM-controlled storage (e.g., S3) and reference them in manifests.\nPros: Full control, stable URLs/hashes.\nCons: Manual uploads, storage/maintenance overhead.\n\n**2.Chrome for Testing** \nUse Google‚Äôs testing URLs and fetch versions/hashes via metadata feeds.\nPros: Automatable, no hosting required.\nCons: Not intended for production, arch-specific URLs.\n\n**3.Enterprise Bundle**\nDownload official .pkg installers from Google‚Äôs enterprise portal and rehost them.\nPros: Supported and stable.\nCons: Manual effort, may require licensing.\n\nFeel free to review these options and see which one aligns best with your product requirements and workflows. If any of these approaches seem like a good fit, I‚Äôd be happy to help implement or contribute further.\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@atharva-navani16 Thanks for the research here; I wasn't aware of Chrome for Testing as an option.\n\nFor Chrome for Testing, you're talking about [this feed](https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json), right? Either way, arch-specific, and a quite different install format vs. the PKGs, is probably a dealbreaker there.\n\nOf self-host and enterprise bundle, seems like the latter winds up with more steps/more issues for the same result, since the self-hosting could be automated (when a new version is detected, grab the downloader and upload it via object storage to object storage)."
          },
          {
            "author": {
              "login": "atharva-navani16"
            },
            "body": "@iansltx  Makes sense! self-hosting with automation sounds like the way to go! \n\nGrab the latest .dmg from Google‚Äôs URL,\nAuto-upload it to S3 with versioned paths + SHA256,\nUpdate Fleet‚Äôs manifest.\n\nHappy to share reference scripts if useful"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Dropping this back to Ready since, while this is filed as a bug, it'll be useful to figure out prioritization here given that this will require a decent lift for a secondary feature of a single app that'll generally auto-update anyway. Which sounds like riding the line between a bug and a story but basically all of the story template is irrelevant because this work will be entirely done in either infrastructure or FMA ingestion."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Coolio. How does prioritization happen in cases like this?\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Async else design review, I think?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review today, we'll show the Chrome version as \"latest\" in the UI with a tooltip when adding the FMA, and extract version information from the package once we download it. We _will not_ do anything to actually version-pin the package at this time (/cc @mostlikelee).\n\nTo avoid breaking existing FMA processing, we can key this behavior off of the `no_check` hash; if we see that in a manifest, we:\n\n1. Show `latest` on the version field on `GET /fleet_maintained_apps/:id`\n2. Extract the version from the package when adding the FMA rather than using what's in the API\n3. Show \"latest\" with a tooltip in the UI\n\nThis means that we'll have changes to the experimental [Get FMA API endpoint](https://fleetdm.com/docs/rest-api/rest-api#get-fleet-maintained-app) as a result of this bugfix (documenting \"latest\" as a version number), but no changes to FMA ingestion.\n\nWhile QA'ing this, we need to test against both Windows and macOS Chrome FMAs, as both don't check hashes right now. If the current version shows as \"latest\" on the FMA add screen for both, and the correct version is extracted on app add (even on a manifest that's out of date), we're good to go here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo once you have the UI ready for this, ping me. Assuming the UI makes sense (it probably will) I'll move this back to Ready to Estimate and ping folks for Planning Poker on the backend side (and will ping Rachel to estimate the FE bit separately)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I added a [Figma design](https://www.figma.com/design/rSYo3wpfkJo0EklCbF7MFp/-27919-macOS-Chrome-FMA-doesn-t-have-hash-specified-in-manifest?node-id=2-130\u0026p=f\u0026t=NObiCXiVgHjCPeb3-11) to the **To Fix** section.\n\ncc @noahtalerman "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Works for me. Revised \"To fix\" to link to my comment above since 95% of the work will be the backend tweaks."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo small UI nit. It looks like we're using a mix of the underline and tooltip styles in your Figma [here](https://github.com/user-attachments/assets/f3097eed-f5ef-46fe-a0bf-fbf4cd6cb2c5).\n\nTooltips in Fleet either have an underline (tooltip shows up under the line with no arrow) or an arrow (no underline). I think we want to pick either one here. Up to you on which.\n\nHere's some examples live in dogfood:\n![Image](https://github.com/user-attachments/assets/539c00aa-1351-482e-a856-6b7ea4c6a8a3)\n\n![Image](https://github.com/user-attachments/assets/2a955b10-6718-4231-89c8-cfa4c8e0b76a)\n"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman Oh interesting. Perkins and I were trying to figure out what the convention was for where tooltips show. \n\nIs there an idea that the arrow one gives more information about the thing being rolled over and the one below provides more context about what the thing is?\n\nI updated this to show below using the above logic."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo I think it's mostly a stylistic choice. Thought process: for a specific scenario, which makes the most sense?\n\ncc @marko-lisica @rachaelshaw "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@noahtalerman I'm going to try using the framework I outlined above and see how it goes for the next few tooltip scenarios in order to try and formalize something.\n\ncc @marko-lisica @rachaelshaw "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "updated the bug title based on the solution discussed in the comments"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev @jahzielv @iansltx please add estimates to https://docs.google.com/forms/d/e/1FAIpQLSeGjTUV2G2NHQEAtLFodMgUSwpzGjdF-2SzUIa52J_j71hQbQ/viewform"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, we have a hangup here.\n\nThe version of Chrome that Homebrew links is a DMG. We don't parse those. Which means we can't extract the version on the Fleet server side as discussed in the recommended fix without making other changes.\n\nOne option would be to switch Chrome to use the PKG installer (https://dl.google.com/dl/chrome/mac/universal/stable/gcem/GoogleChrome.pkg), but question is whether we want to switch explicitly to Google CHrome Enterprise here (probably?) from the version Homebrew points to. There's also a PKG installer that @allenhouchins has listed https://github.com/fleetdm/fleet/blob/main/it-and-security/lib/macos/software/google-chrome.yml#L1.\n\nAt that point we _could_ extract version data on a \"latest\" tag (I already have that code written, though I think I still need to add support for FMA-via-GitOps), and our FMA manifest could be built without Homebrew entirely as everything in the manifest (version, URL, install/uninstall script) would be static (would just be a Chrome-specific version of our generic pkg install/uninstall scripts, which we know work because we're using them for dogfood).\n\nThe main alternative here would be to have an accelerated CI workflow _just for Mac Chrome_, where we run a copy of our FMA ingest pipeline dedicated to Chrome and immediately approve/merge changes there that only involve manifest version bumps. This is no worse from a QA perspective than our existing setup, since Fleet server admins are getting the new version anyway, and the level of effort required for this is quite low (and this would work with zero changes to Fleet server, and would let us keep the DMG package format).\n\nA final alternative would be to build at least version parsing from DMGs, but that would be a significantly larger undertaking, while the alternatives above could be completed within this ticket's estimate.\n\n@marko-lisica @mostlikelee which way do we want to go here?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "From Google:\n\n\"Google Chrome Enterprise is essentially the same Chrome browser used by consumers, but with additional features and management tools tailored for businesses and organizations\"\n\nI think having Google Chrome Enterprise is good solution. It's same browser for end-user, except it allows admins to specify org settings.\n\n@iansltx When you say static manifest, does that mean we'll need to add additional input method [here](https://github.com/fleetdm/fleet/tree/main/ee/maintained-apps/inputs)?\n\nHow does that change the contribution process?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Just as a small aside, google chrome enterprise on windows is one of the applications that was missing the install path in osquery because it didn't set the registry correctly.\nhttps://github.com/fleetdm/fleet/issues/29449#issuecomment-2989108748\n\nI know we are talking about mac here, but just wanted to drop that in here, in case there are some differences on the mac version as well."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "+1 on google chrome enterprise.  It's already what is used for [Windows FMA](https://github.com/microsoft/winget-pkgs/blob/master/manifests/g/Google/Chrome/138.0.7204.101/Google.Chrome.installer.yaml) so we could possibly rename the FMA across platforms to something like `Chrome Enterprise` if we wish."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica I'm planning on nuking the input file for macOS Chrome entirely. Our FMA ingestion tool won't modify JSON files that aren't in-scope so it's safe to take this approach (which also means no code changes required to ingestion).\n\n@mostlikelee Given inventory constraints, I don't think we can change the name...it's still going to show up as Google Chrome IIRC. But given our audience I agree that Chrome Enterprise makes sense to serve by default; if someone is using Fleet Premium there's a decent chance they want Chroem Enterprise anyway.\n\n@ksykulev I think I've grabbed the Chrome Enterprise pkg before and haven't noticed anything amiss there, so we _should_ be good.\n\nI'll proceed with \"option 1\" above, so this is now unblocked."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Given inventory constraints, I don't think we can change the name.\n\ntrue, if anything maybe we can update docs"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, I thought we'd be good to go with a static output file, but our generated PKG uninstall script doesn't clean up Chrome properly from what I can see, but the Homebrew version dos (gonna test with Chrome Enterprise momentarily; it successfully uninstalled the Chrome I had on this machine prior).\n\nSo we'll want Homebrew  + overrides rather than a static file.\n\nI'll want to build overrides off of @ksykulev's MSRC feed work _and_ @jahzielv's FMA Homebrew custom install script work, so first order of business is catching Konstantin's PR up to `main`. Then layer in updates on top of that.\n\nShould be able to get this turned tonight still, though it'll be in line behind the MS Office PR for merge."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Making one minor tweak to Figma: showing \"Google Chrome\" rather than \"Chrome\" so we can just use the FMA name there rather than a bespoke value."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Also, Figma doesn't show what to do in the \"Show details\" modal so I added a tooltip there (screenshots incoming on PR)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee Added Chrome Enterprise to the description in apps.json. Probably makes more sense to mention there than in the docs."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e @marko-lisica Making one minor tweak to Figma: showing \"Google Chrome\" rather than \"Chrome\" so we can just use the FMA name there rather than a bespoke value.\n\n\u003e Also, Figma doesn't show what to do in the \"Show details\" modal so I added a tooltip there (screenshots incoming on PR).\n\nLooks good to me! Thanks!"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Do we plan on using \"latest\" for the windows FMA as well? I know it's not part of this issue, but looking at the download URL in `ee/maintained-apps/outputs/google-chrome/windows.json`, it is also not versioned `https://dl.google.com/dl/chrome/install/googlechromestandaloneenterprise64.msi`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev No; @jahzielv is swapping Windows to a version-pinned installer in #27756."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.68.1\n\n**Web browser and operating system**: Firefox 139 on Fedora 42\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nWhen uploading a .deb and a .rpm package to Fleet for self-service, on a host that is only compatible with one of the formats, both packages will be available in the self-service UI. When you attempt to install the mismatched package, the installation will fail.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a .deb and .rpm, enabling self-service for both, to a team with a Linux host.\n2. Navigate to self-service on the host and observe that both packages are available for installation.\n3. Attempt to install the mismatched package for your host.\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nShow only the package that's compatible with the host.\n",
          "number": 29849,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Self-service serves incompatible packages to Linux hosts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29849"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX2sI",
        "labels": [
          "bug",
          ":release",
          "customer-numa",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤ Self-service serves incompatible packages to Linux hosts",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet self-service handling of custom packages for Linux distros #6554](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/f586902d-3b77-46a4-8c6a-8f9f231cbb1f)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "@mason-buettner, was this reproduced by you or reported by customer (and need reproduction)?\nAnyway, assigning Orchestration team."
          },
          {
            "author": {
              "login": "mason-buettner"
            },
            "body": "@sharon-fdm I've reproduced this. Attaching screenshots of the application details in self-service, and the view from the host that's still allowing me to retry the failed install.\n\n![Image](https://github.com/user-attachments/assets/acbc3f81-122f-4d2a-a64d-fd55ebdf004c)\n\n![Image](https://github.com/user-attachments/assets/e3c31560-93a8-4f93-a885-3b9a688a0339)\n\n![Image](https://github.com/user-attachments/assets/f5a9b126-cb74-4b85-8d52-656e4f46f6a9)"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I took a stab at the to fix. It seems like it'd be the reasonable expectation but I don't know what would really have to go into that."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nTested on Ubuntu and Fedora.\n\nUploaded .deb, .rpm, and .tar.gz files\nConfirmed only .deb and .tar.gz files were available in self service for Ubuntu hosts.\nConfirmed only .rpm and .tar.gz files were available in self service for Fedora hosts. "
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.65RC and older\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nCVE-2025-43200 is shown twice for macOS 15.1.1 in Dogfood.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Enroll a Mac with a vulnerable OS version and run vulnerabilities\n2. Enroll a Mac with a different architecture but the same (vulnerable) OS version and run vulnerabilities again\n3. Check the detail page for the shared OS version; you'll see duplicate CVEs\n\nThis is also visible in the OS list view when hovering the vulnerabilities column for an affected version (or, more easily, in the OS versions collection endpoint) that powers the list.\n\nSee [Dogfood](https://dogfood.fleetdm.com/software/os/144). The duplicate is from the API, so this is a backend issue.\n\n### üõ†Ô∏è To fix\nSince we don't split out different architectures in the UI for OS version, seems like we need to merge rows for the OS vulnerabilities query so there is one result row per CVE per name/version combo, even if there are multiple architectures and thus multiple rows.\n\nIf we want to split out OS versions by architecture later we can revise the query logic to look at vulns by OS version ID rather than by name/version, which will give us one row per vuln.",
          "number": 27061,
          "repository": "fleetdm/fleet",
          "title": "ü™≤OS list/detail shows the same CVE twice when an OS version has multiple architectures",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27061"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX420",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤OS list/detail shows the same CVE twice when an OS version has multiple architectures",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Marking this as a released bug as this is almost certainly an issue with the `ListVulnsByOsNameAndVersion` data store function query, probably for both Fleet Free and Fleet Premium versions of the query, due to multiple rows in the OS versions table for the same OS name and version due to differing architectures.\n\n@rfairburn can you pull the results of the following query from Dogfood?\n\n```sql\nSELECT id FROM operating_systems WHERE name = \"macOS\" AND version = \"15.3.1\"\n```\n\nPretty sure there will be two rows there, one per arch, in which case that'll confirm my suspicion of where the problem is.\n\nIf that's the issue, fix would probably be to add a group-by on CVE number, at which point we'll need to pick a reasonable value for `created_at` (probably `MIN()`) for cases where multiple rows are returned."
          },
          {
            "author": {
              "login": "rfairburn"
            },
            "body": "@iansltx \n\n```\n+-----+\n| id  |\n+-----+\n| 487 |\n| 504 |\n+-----+\n2 rows in set (4.12 sec)\n```\n\nFurther inspection confirms that they are differentiated by `arch` but the same name and version."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1750360526707539"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Updated repro steps based on further analysis (enrolling two different-arch same-version hosts at the same time won't trigger this), and swapped repro to reference OS versions/vulns where this is still an issue in Dogfood."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a contributor to Fleet-maintained apps,\n| I want to be able to specify hand-build (un)install scripts for Homebrew-based packages\n| so that I can unblock adding FMAs that have install requirements that Fleet's existing formula ingestion process doesn't (yet) support.\n\n## Key result\n\n100 FMAs\n\n## Original requests\n\n#30518\n\n## Context\n- Product Designer: @jahzielv \n- Engineering DRI: @jahzielv \n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] FMA Homebrew input files can reference manual install/uninstall script paths just like WinGet ones\n- [ ] FMA README is updated with the new functionality\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\nFollowing updated steps in https://github.com/fleetdm/fleet/blob/main/ee/maintained-apps/README.md\n\n1. Create manual scripts for install and uninstall, and reference them in the input file for an existing Fleet-maintained app\n2. Run the app ingest script\n3. Add the modified app via Fleet\n4. Confirm that the specified install and uninstall scripts were imported alongside the package\n5. Confirm that the new uninstall script field is mutually exclusive with the existing pre and post uninstall script fields (ingestion should fail if all of them are set, because the uninstall script should include whatever may be put in those fields. Those fields are basically tacked on to the generated script, but the provided script should override the generated one entirely)\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30780,
          "repository": "fleetdm/fleet",
          "title": "Allow specifying (un)install scripts manually for Homebrew-based Fleet-maintained apps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30780"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgckQ9g",
        "labels": [
          "story",
          "~backend",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Allow specifying (un)install scripts manually for Homebrew-based Fleet-maintained apps",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this is urgent enough I'm moving directly to the product board"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "@jmwatts I think this test plan is gtg. We already have this behavior for winget-based FMAs, so it's just mirroring that. Wdyt?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @mostlikelee just noticed this story is missing a milestone. I added 4.72 to it. Please feel free to update that!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Of note, this will close out/go live once merged. I think there were questions about how to milestone items like that."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "correct, we typically don't milestone these if it's not tied directly to a release as it can confuse the release ceremony when items that have a milestone are already closed."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nIssue created as part of test #30884\nPR created as part of test #30875\n\n1. Create manual scripts for install and uninstall, and reference them in the input file for an existing Fleet-maintained app\n2. Run the app ingest script\n3. Add the modified app via Fleet\n\n- [x] Confirm that the specified install and uninstall scripts were imported alongside the package\n- [x] Confirm that the new uninstall script field is mutually exclusive with the existing pre and post uninstall script fields (ingestion should fail if all of them are set, because the uninstall script should include whatever may be put in those fields. Those fields are basically tacked on to the generated script, but the provided script should override the generated one entirely)\n\nBoth provided:\n```\njanis@Janiss-MacBook-Pro-2 fleet % go run cmd/maintained-apps/main.go --slug=\"beekeeper-studio/darwin\" --debug\n{\"level\":\"info\",\"msg\":\"starting maintained app ingestion\",\"ts\":\"2025-07-15T14:28:54.318331Z\"}\n{\"level\":\"info\",\"msg\":\"starting homebrew app data ingestion\",\"ts\":\"2025-07-15T14:28:54.31888Z\"}\n{\"level\":\"info\",\"msg\":\"ingesting homebrew app\",\"name\":\"Beekeeper Studio\",\"ts\":\"2025-07-15T14:28:54.319578Z\"}\npanic: ingesting homebrew app: cannot provide pre-uninstall scripts if uninstall script is provided\n\ngoroutine 1 [running]:\nmain.main()\n\t/Users/janis/Documents/GitHub/fleet/cmd/maintained-apps/main.go:45 +0x72c\nexit status 2\n```\nPost-uninstall provided:\n```\njanis@Janiss-MacBook-Pro-2 fleet % go run cmd/maintained-apps/main.go --slug=\"beekeeper-studio/darwin\" --debug\n{\"level\":\"info\",\"msg\":\"starting maintained app ingestion\",\"ts\":\"2025-07-15T14:29:49.906059Z\"}\n{\"level\":\"info\",\"msg\":\"starting homebrew app data ingestion\",\"ts\":\"2025-07-15T14:29:49.90639Z\"}\n{\"level\":\"info\",\"msg\":\"ingesting homebrew app\",\"name\":\"Beekeeper Studio\",\"ts\":\"2025-07-15T14:29:49.906859Z\"}\npanic: ingesting homebrew app: cannot provide post-uninstall scripts if uninstall script is provided\n\ngoroutine 1 [running]:\nmain.main()\n\t/Users/janis/Documents/GitHub/fleet/cmd/maintained-apps/main.go:45 +0x72c\nexit status 2\n```\nPre-uninstall provided:\n```\njanis@Janiss-MacBook-Pro-2 fleet % go run cmd/maintained-apps/main.go --slug=\"beekeeper-studio/darwin\" --debug\n{\"level\":\"info\",\"msg\":\"starting maintained app ingestion\",\"ts\":\"2025-07-15T14:30:14.601546Z\"}\n{\"level\":\"info\",\"msg\":\"starting winget app data ingestion\",\"ts\":\"2025-07-15T14:30:14.601606Z\"}\n{\"level\":\"info\",\"msg\":\"starting homebrew app data ingestion\",\"ts\":\"2025-07-15T14:30:14.602438Z\"}\n{\"level\":\"info\",\"msg\":\"ingesting homebrew app\",\"name\":\"Beekeeper Studio\",\"ts\":\"2025-07-15T14:30:14.60261Z\"}\npanic: ingesting homebrew app: cannot provide pre-uninstall scripts if uninstall script is provided\n\ngoroutine 1 [running]:\nmain.main()\n\t/Users/janis/Documents/GitHub/fleet/cmd/maintained-apps/main.go:45 +0x72c\nexit status 2\n```"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Brewed scripts now in hand,\nUnblock new apps to land,\nFleet soars, cloud city grand."
          }
        ]
      },
      {
        "assignees": [
          "ilpianista"
        ],
        "content": {
          "body": "**Fleet version**: 4.67.3\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\n[Vulnerability automations](https://fleetdm.com/guides/automations#vulnerability-automations) aren't firing webhooks when using Fleet Free\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Enable vulnerability automations in Fleet Free\n2. Wait for a new vuln to trigger a webhook\n3. Observe that the webhook doesn't fire\n\n### üïØÔ∏è More info _(optional)_\n\nI've setup Fleet server on my instance, enabled the `vulnerability_webhook` and got nothing.\n\nThis happens because the vulnerability webhook is looking for recent CVEs by querying the `cve_meta` table: https://github.com/fleetdm/fleet/blob/main/cmd/fleet/cron.go#L201C39-L201C64. However, while using the Free license, that table isn't populated at all.\n\nI understand that you don't want provide CVE metadata in the Free plan, but please consider to skip the `RecentVulnerabilityMaxAge` filter while using the Free plan.\n\n\n### üõ†Ô∏è To fix\n\n- @noahtalerman: I think let‚Äôs accept this as a bug.\n  - The fact that @ilpianista can turn it (screenshot below) on makes me still believe we built this to be available in Fleet. And, we‚Äôve been quite good at add validation for Premium only features.\n  - Also, Fleet has promised the community to never make free features paid. So, if @ilpianista had this working originally, I think that‚Äôd be a bad look for Fleet.",
          "number": 29076,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Vulnerability webhook doesn't work in Fleet Free",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29076"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcmo58",
        "labels": [
          "bug",
          "~released bug",
          ":product",
          "P2",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "Waiting",
        "title": "ü™≤Vulnerability webhook doesn't work in Fleet Free",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I've setup Fleet server on my instance, enabled the vulnerability_webhook and got nothing.\n\n\u003e I've setup Fleet server on my instance, enabled the vulnerability_webhook and got nothing.\n\n@ilpianista hmm, this sounds like a bug. Sorry you're running into this. What version of Fleet are you running?\n\nI updated this issue to use the bug report format.\n\nFYI @jmwatts @mostlikelee added `:reproduce` to put this bug in the \"Inbox\" state.\n\n"
          },
          {
            "author": {
              "login": "ilpianista"
            },
            "body": "@noahtalerman I was on 4.67.3. Didn't test 4.68.0 yet, but I haven't read anything relevant in the changelog."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I am not able to turn on automations when in Fleet Free.\n\n![Image](https://github.com/user-attachments/assets/3f35574a-ad94-40f3-91de-c51d8e7323b4)\n\nIt seems the only way to reproduce this is to first use fleet premium to enable the webook and then switch to fleet free. \n\nPer product decision in this [internal slack thread](https://fleetdm.slack.com/archives/C02A8BRABB5/p1748450168794829), removed :reproduce and adding :product"
          },
          {
            "author": {
              "login": "ilpianista"
            },
            "body": "Ah, I didn't look at the UI. I've enabled it via [GitOps](https://fleetdm.com/docs/configuration/yaml-files#vulnerabilities-webhook)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee Given the way the title is written it sounds like the webhook shouldn't be firing in Fleet Free, but then the steps to reproduce indicate that the webhook doesn't fire in Fleet free.\n\nSince I can't figure out what the fix is, I believe we agreed I'd move this to 'in progress' and assign to you? LMK if I have that mixed up."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e ### üõ†Ô∏è To fix\n\n\u003e - @noahtalerman: I think let‚Äôs accept this as a bug.\n\u003e   - The fact that @ilpianista can turn it (screenshot below) on makes me still believe we built this to be available in Fleet. And, we‚Äôve been quite good at add validation for Premium only features.\n\u003e   - Also, Fleet has promised the community to never make free features paid. So, if @ilpianista had this working originally, I think that‚Äôd be a bad look for Fleet.\n\nFYI @eugkuo @mostlikelee updated title and the \"To fix\" based on [conversation in Slack](https://fleetdm.slack.com/archives/C02A8BRABB5/p1748536682747559?thread_ts=1748450168.794829\u0026cid=C02A8BRABB5) and moved this bug to ready to estimate."
          },
          {
            "author": {
              "login": "ilpianista"
            },
            "body": "Hi @noahtalerman any news here? I would like to know if I can expect this soon or not.\n\nIf you agree, I can provide a fix for my proposal:\n\n\u003e please consider to skip the RecentVulnerabilityMaxAge filter while using the Free plan."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @ilpianista sorry for the delay. Please feel free to open a PR with the fix! We haven't had room to prioritize this one in the last couple engineering sprints.\n\n@lukeheath I just tagged this bug as `P2`. I think we want to prioritize this one next sprint (4.73).\n\n\u003cimg width=\"849\" height=\"282\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a40936e3-c46c-4f99-8832-9e9512218590\" /\u003e\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@noahtalerman Agreed, thanks. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ilpianista Checking in here as you had submitted a PR and I had some feedback there. Any questions regarding that feedback? Thanks!"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: v4.69.0\n\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nAfter uploading a custom package to Fleet and using the returned hash_sha256 to create a software yaml in my GitOps repo, I am unable to create a policy automation.  \n\nExample:\n\n#### /lib/software/1password.yml\n\n```\nhash_sha256: 8e6a49d6d26d01586dfbbb89b2c2b48d51ef535a9dccea573945bb776b3901ab\n```\n\n#### /teams/my-team.yml\n\n```\nsoftware:\n  packages:\n    - path: ../lib/software/1password.yml\npolicies:\n  - name: macOS - 1Password installed\n    query: SELECT 1 FROM apps WHERE bundle_identifier = 'com.1password.1password';\n    install_software:\n      package_path: ../lib/software/1password.yml\n    critical: false\n    description: Our SOC 2 policies require a password manager to be installed on all workstations.\n    resolution: 1Password should be automatically installed. If it is missing, install it from self-service. \n    platform: darwin\n```\n\nThe policy and software are successfully applied to the team, but the 'install software' automation is not created.\n\nFrom customer:\n\n\"The policy and the software are in Fleet. However, the Policy does not seem to have the software item associated with it, to be executed when the policy fails. I can add it manually in the UI.\"\n\n\u003e We did not explicitly test this using a policy yaml rather than an inline definition while reproducing.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Upload a custom package to the Fleet UI with GitOps mode enabled.\n2. Utilize the `hash_sha256` of the software to create a software yaml in GitOps repo.\n3. Add software YAML to a policy to install that software package\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\n\nProduct designer: @marko-lisica\n\nMake sure that user can add policy automation to install software when using GitOps mode and software `hash_sha256`.\n",
          "number": 30435,
          "repository": "fleetdm/fleet",
          "title": "[ GitOps ] Cannot create automation for software uploaded as a custom package in Fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30435"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX2Wc",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "customer-numa",
          "customer-mozartia",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "[ GitOps ] Cannot create automation for software uploaded as a custom package in Fleet",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Swapping this over to the product board for triage, as this hasn't been assigned a P1 so it can't hop onto the release board unestiamted."
          },
          {
            "author": {
              "login": "ksatter"
            },
            "body": "Thanks @iansltx "
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Help with potential Fleet bug in custom packages #7000](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/d55bc828-21c7-45e3-8626-613e52ada076)"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @mostlikelee, this issue appears to be preventing GitOps users from automatically installing software. We should prioritize this and assign it a `P2`. What do you think?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Hey [@mostlikelee](https://github.com/mostlikelee), this issue appears to be preventing GitOps users from automatically installing software. We should prioritize this and assign it a `P2`. What do you think?\n\nAgree, adding the P2 label\n\ncc: @lukeheath \n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I get a more explicit error rather than a silent failure:\n\n```\nError: 2 errors occurred:\n\t* software URL is required\n\t* failed to parse policy install_software \"macOS - Firefox installed\": install_software.package_path URL  not found on team: ../lib/software/firefox.yml\n```\n\nEDIT: Never mind. Old fleetctl version locally. Was able to repro what I believe to be the same issue."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe refetch fails.\n\u003cimg width=\"2924\" height=\"1470\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/10c4088e-c6e6-4b54-98c3-bbc60d3b06f0\" /\u003e\n\nAfter this happens, clicking \"Refetch\" will succeed within seconds. \n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a VPP app for iOS to the team's library\n2. On an enrolled iPhone, from Host \u003e\u003e Software \u003e\u003e Library click \"Install\"\n3. When the VPP app comes back as \"Installed\", refresh the browser to see that a refetch has been initiated automatically\n4. Wait 60 seconds\n\n### üïØÔ∏è More info _(optional)_\nMay be partially a released bug, but with the automatic refresh that was implemented in 4.71.0, filing this as an unreleased bug. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30754,
          "repository": "fleetdm/fleet",
          "title": "Automatic refetch fails on iOS host, clicking refetch succeeds",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30754"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcd1GA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Automatic refetch fails on iOS host, clicking refetch succeeds",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Add a VPP app for iOS to the team's library\n2. On an enrolled iPhone, from Host \u003e\u003e Software \u003e\u003e Library click \"Install\"\n3. When the VPP app comes back as \"Installed\", refresh the browser to see that a refetch has been initiated automatically\n- [x] Inventory is refetched and the installed software is updated in the host's record"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Refetch glitch in iOS,\nClick to mend, data flows,\nFleet's path smoother grows."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nSetup experience hangs, shows 6 apps as installed, but in Host Details, only 2 apps are showing as installed in Activity feed\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\n1. Add several VPP apps to setup experience configuration (I used ~16)\n2. Wipe an ADE mac and go through setup experience\n\n\n### üïØÔ∏è More info _(optional)_\n\n\u003cimg width=\"720\" height=\"494\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a7ada72f-cabd-44e7-b7bb-4d8e9d70817f\" /\u003e\n\nLogs:\n```\nlevel=info ts=2025-07-08T19:12:11.784035Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:11.796392Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\nlevel=info ts=2025-07-08T19:12:14.055474Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:14.060028Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\nlevel=info ts=2025-07-08T19:12:14.301417Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:14.306267Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\nlevel=info ts=2025-07-08T19:12:14.550349Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device status=Idle\nlevel=debug ts=2025-07-08T19:12:14.555421Z component=http-mdm-apple-mdm id=8FA05CF3-20AA-5541-BA9F-81B84B4523CC type=Device msg=\"no command retrieved\"\n```\nThis is the app it got stuck on:\n```\nmysql\u003e SELECT * FROM nano_command_results WHERE command_uuid='cb0b2f96-1737-4df7-9d69-b7c49d7e0a79'\\G\n*************************** 1. row ***************************\n           id: 8FA05CF3-20AA-5541-BA9F-81B84B4523CC\n command_uuid: cb0b2f96-1737-4df7-9d69-b7c49d7e0a79\n       status: Acknowledged\n       result: \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n\u003cdict\u003e\n        \u003ckey\u003eCommandUUID\u003c/key\u003e\n        \u003cstring\u003ecb0b2f96-1737-4df7-9d69-b7c49d7e0a79\u003c/string\u003e\n        \u003ckey\u003eIdentifier\u003c/key\u003e\n        \u003cstring\u003ecom.doodlejoy.dh\u003c/string\u003e\n        \u003ckey\u003eState\u003c/key\u003e\n        \u003cstring\u003eInstalling\u003c/string\u003e\n        \u003ckey\u003eStatus\u003c/key\u003e\n        \u003cstring\u003eAcknowledged\u003c/string\u003e\n        \u003ckey\u003eUDID\u003c/key\u003e\n        \u003cstring\u003e8FA05CF3-20AA-5541-BA9F-81B84B4523CC\u003c/string\u003e\n\u003c/dict\u003e\n\u003c/plist\u003e\n\n   not_now_at: NULL\nnot_now_tally: 0\n   created_at: 2025-07-08 17:55:37\n   updated_at: 2025-07-08 17:55:37\n1 row in set (0.00 sec)\n```\n```\n*************************** 8. row ***************************\n                       id: 10\n                  host_id: 2\n                  adam_id: 6448680146\n             command_uuid: cb0b2f96-1737-4df7-9d69-b7c49d7e0a79\n                  user_id: NULL\n             self_service: 0\n      associated_event_id: \n               created_at: 2025-07-08 17:55:14\n               updated_at: 2025-07-08 17:55:14\n                 platform: darwin\n                  removed: 0\n             vpp_token_id: NULL\n                policy_id: NULL\n                 canceled: 0\nverification_command_uuid: NULL\n          verification_at: NULL\n   verification_failed_at: NULL\n```\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30678,
          "repository": "fleetdm/fleet",
          "title": "Setup Experience gets stuck when more than a few VPP app installs are included",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30678"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcagK8",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Setup Experience gets stuck when more than a few VPP app installs are included",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Add several VPP apps to setup experience configuration (I used ~20)\n2. Wipe an ADE mac and go through setup experience\n- [x] Setup experience succeeds, apps install"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Apps install with grace,\nIn the cloud's bright embrace,\nFleet's pace leaves no trace."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.0\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nhttps://github.com/user-attachments/assets/caf5f833-cc19-4621-9182-45fa36eeb8bb\n\nDatabase for repro can be found here:\nhttps://drive.google.com/file/d/1DJDOk0Dr5d1UdP12AbxxgnwBBUsLAADF/view?usp=drive_link\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a label to fleet, make sure the label isn't applied to any hosts\n2. Add an FMA or custom package to a team, use \"Custom\" target, exclude any, for the label that no hosts have. Make it available in Self service.\n3. For an enrolled host on that team, check the software that is \"Available for install\"\n4. Open Self service for the host\n\n### üïØÔ∏è Expected Behavior\n\"Software will only be available for install on hosts that don't have any of these labels\"\nOur host does not have the label, so the software should be available for install for this host. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nManual labels should not consider timestamps for membership.\n",
          "number": 29315,
          "repository": "fleetdm/fleet",
          "title": "ü™≤FMA/Custom packages not respecting custom scoping \"exclude any\" for label that doesn't exist on host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29315"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX8dE",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤FMA/Custom packages not respecting custom scoping \"exclude any\" for label that doesn't exist on host",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "I noticed in the database dump the label \"Nobody has this label\" was created at `2025-05-20 22:14:03`, however, the host's `label_updated_at` time was `2025-05-20 21:53:39`. In our previous available software query we are doing this check `:host_label_updated_at \u003e= lbl.created_at` with a comment above it stating\n```\nignore software that depends on labels created\n _after_ the label_updated_at timestamp of the host (because\nwe don't have results for that label yet, the host may or may\nnot be a member\n```\n\nWhich is why in this particular case firefox is getting excluded. When I run the following query `update hosts set label_updated_at = '2025-05-20 23:00:00' where id = 2;` and reload the page I get firefox in the result set.\n\n\u003cimg width=\"1639\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f99f21a8-171e-475e-abc5-d7c4e3999657\" /\u003e\n\nIt looks like that `label_updated_at` gets updated when we refetch the host vitals?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thanks @ksykulev I went back to 4.66.0 and confirm this works the same way. "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I'm leaving this as a bug because it's not intuitive for the end user to understand why it works the way it does. "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee @ksykulev I proposed a solution in the `to fix` area and am moving this to **Ready to estimate**.\n\n@mostlikelee do you want to keep this as a bug or convert it to a feature request?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "In the above case:\n1. A dynamic label was created (@jmwatts  can you confirm this is only for dynamic?)\n2. The host hasn't refreshed, so we don't know yet if it's a member of the label.  Fleet assumes the host does not have this label.\n3. This software has a target that excludes that label.\n\nSo the current state is that the host is not in the label, so it _should_ show in the list.\n\nCould use a sanity check from @lucasmrod here as this is the same behavior for policy targets."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee I was not using dynamic labels so it does apply to manual labels. "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e [@mostlikelee](https://github.com/mostlikelee) I was not using dynamic labels so it does apply to manual labels.\n\nok, let's scope this to remove timestamp consideration from manual labels.  updating the \"to Fix\" section."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1748525930809559"
          },
          {
            "author": {
              "login": "ksatter"
            },
            "body": "@ksykulev I'm seeing an issue where Manual labels are also not being respected for 'labels include any'. Do you think this is likely the same root problem, or should we break that out into a separate issue?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "@ksatter ~~Right now the logic stands that if a label (manual or dynamic) is created and we don't fetch host vitals, whatever the label is doing will not apply to the host. So in your case, `labels include any` also falls under this case.~~\n~~After this issue is fixed, any type of manual label will apply despite the `created_at` time or host `label_updated_at` time~~\n\nI was incorrect, looking at the query it doesn't look like it's checking timestamp for `include_any`.\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L2645-L2662\n\n@jmwatts In the case of `exclude_any`, manual labels will apply \"immediately\" and dynamic labels will require a host refetch. How do we want `include_any` to work? Same logic? Or does timestamp not matter in their case?"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nhttps://github.com/user-attachments/assets/2927ea40-4477-4a09-a393-e1583a85cb75\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to dogfood CVE details page https://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-24162 and note the detected date\n2. Go to dogfood vulnerabilities table page  https://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-24162\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0 and note the detected date\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\nDetected date on software vuln table should match detected date in details ",
          "number": 26618,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Software vuln detected dates do not match between screens",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26618"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX7LA",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "ü™≤Software vuln detected dates do not match between screens",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/26618?planning-poker) with Zenhub @iansltx @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm not able to repro this (wanted to check what was going on prior to throwing an estimate on). Both places have the same timestamp returned from the API (Jan 28 ~6:40a UTC), and both show the expected \"one month ago\" in the UI.\n\nMaybe we close this and if anyone sees this again we reopen?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e Maybe we close this and if anyone sees this again we reopen?\n\ni'm onboard with this, unless @RachelElysia has any other info that may get us into this state\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per [Slack](https://fleetdm.slack.com/archives/C086V2QK76X/p1741109822016689?thread_ts=1741109272.543039\u0026cid=C086V2QK76X), @jmwatts has a repro."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Can you grab your vulnerabilities table and confirm which `created_at` timestamp is the correct one? This feels like a join is propagating things across a bunch of columns where it shouldn't be, so I'm assuming that the individual CVE page is correct and the list is wrong, but want to make sure."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "There's a lot in that table :D so here's one example but let me know if you need more than this\n\n![Image](https://github.com/user-attachments/assets/e2a4def4-7ace-4802-b833-55bb6ec2aa09)\n\n![Image](https://github.com/user-attachments/assets/b4b6c662-824b-4a93-a727-a19a0060d60a)\n\n![Image](https://github.com/user-attachments/assets/54b65a28-9216-4cdd-af88-7e3a7a24013a)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This is useful; thanks!\n\nLooks like we may have at least two bugs here. In the case you showed, the list view is correct but the individual vuln view shows detected as the current timestamp (though this seems to vary from vuln to vuln). In Rachel's example though both places have different values, both of which aren't the current timestamp. So we might need to scope this as \"fix the bugs that we can repro\", which won't necessarily be the original bug."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Here's one example that is showing detected as a minute ago, but the table view of vulns shows another time:\n\ndetails view\nhttps://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-0938\ntable view of vulns\nhttps://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-0938\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0"
          },
          {
            "author": {
              "login": "rachaelshaw"
            },
            "body": "I haven't seen this issue exactly, but was about to report a similar issue: currently, every CVE detail page is saying detected \"less than a minute ago\"; In the API response, `created_at` always seems to be set to the current time. (List view is fine, only seeing this w/ `GET /vulnerabilities/:cve`). \n\n@RachelElysia do you think this is related, or should I report that bug seperately?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@rachaelshaw The one you're seeing is the one I mentioned. Thinking we'll resolve that one with this ticket and see if we can repro the other one afterward."
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "Issue to track the release of fleetd 1.45.0 to `edge` and `stable`.",
          "number": 30602,
          "repository": "fleetdm/fleet",
          "title": "Release fleetd 1.45.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30602"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVNHM",
        "labels": [
          "story",
          ":release"
        ],
        "milestone": {
          "title": "Fleetd-1.45.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release fleetd 1.45.1",
        "comments": [
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "fleetd [v1.45.0](https://github.com/fleetdm/fleet/pull/30672) has been released to `edge`."
          },
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "We've decided to release fleetd `1.45.1` to `edge` today with the fix added for the offline indicator [here](https://github.com/fleetdm/fleet/pull/30703) and then do some minor smoke testing and release to `stable` also today (given the change is minimal/low-risk).\n\nMore context here:\n\u003cimg width=\"811\" height=\"499\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8f02250c-5836-4c7a-b9bc-bf45e300d213\" /\u003e"
          },
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "@juan-fdz-hawa Could we get screenshots of how the menu will look like in 1.45.1?\n\n/cc @rachaelshaw "
          },
          {
            "author": {
              "login": "juan-fdz-hawa"
            },
            "body": "\u003e [@juan-fdz-hawa](https://github.com/juan-fdz-hawa) Could we get screenshots of how the menu will look like in 1.45.1?\n\u003e \n\u003e /cc [@rachaelshaw](https://github.com/rachaelshaw)\n\n\u003cimg width=\"480\" height=\"270\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3d74e57f-1bd8-4c29-91dc-dc37e2ed8f91\" /\u003e\n\u003cimg width=\"825\" height=\"271\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bb37adba-1f20-4670-8503-c972fbf38ab7\" /\u003e\n\u003cimg width=\"480\" height=\"270\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/131eece0-942d-453e-91d3-06f71786f7cc\" /\u003e"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "New release takes flight,\nIn cloud cities, code finds home.\nStable, edge unite."
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True\n- Desktop: True\n- Chrome extension: False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.44.0` \u003e `v1.45.0`\n- Desktop `v1.44.0` \u003e `v1.45.0`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e4.70.1:pass\n4.71.0:pass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 30601,
          "repository": "fleetdm/fleet",
          "title": "Release QA: Fleetd 1.45.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30601"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcVMug",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.45.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release QA: Fleetd 1.45.0",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Performed fleetd 1.45.0 smoke tests against 4.70.1 (current released version) and 4.71.0 (upcoming release version).\nFrom that perspective: üëç for release to stable\n\n(MDM is still working on Windows Autopilot and macOS ADE enrollment tests)"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "windows autopilot and macOS ADE are gtg üëç "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "\"Fleetd release, bright,\nOrbit and Desktop take flight,\nIn the cloud's pure light.\n\nTesting gates unfold,\nEnsuring new features bold,\nAs the version's told.\n\nFrom local to edge,\nThrough each step we pledge,\nStability's hedge.\n\nQueries flow with grace,\nIn the cloud's vast space,\nSecured is our base.\n\nHosts report and glow,\nAs their vitals show,\nIn this constant flow.\n\nScripts execute right,\nIn the day or night,\nA reassuring sight.\n\nSoftware installs swift,\nGiving hosts a lift,\nIn the cloud's soft drift.\n\nOS settings, keen,\nDisk encryption seen,\nIn the cloud's serene.\n\nPacks flow, work is done,\nUnder the cloud city's sun,\nFleetd 1.45.0, won.\""
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.63.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nPackage shows as `MacFULL`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nUpload [SubEthaEdit](https://subethaedit.net/) as a custom package.\n\n### üïØÔ∏è More info\n\nSplit from #24873, as the package structure for this installer is different from SentinelOne and Cold Turkey, so the fix for those packages doesn't work here.\n",
          "number": 25587,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Incorrect software title name (MacFULL) when uploading SubEthaEdit",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25587"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5dM",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "~sw-upload"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤Incorrect software title name (MacFULL) when uploading SubEthaEdit",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/g-software-current-sprint-67685f6ff1830a000f347a73/issues/fleetdm/fleet/25587?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "timebox - we may not have data to use"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Another unexpected naming scenario: this package uploads as \"trial\" https://drive.google.com/file/d/16UdYLIENNcFNBstrtBTl4ZHiLFe9-qDB/view?usp=drive_link\n\n\u003cimg width=\"1505\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/54fff766-d7bb-4010-9b63-aab84ead0400\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like there's a quick fix for this, as the app has an install path: if the install path ends with .app, grab that install path and use it as the name:\n\n```\n~/code/fleet main $ go run tools/custom-package-parser/main.go -path /Users/ian/Downloads/SubEthaEdit-5.2.4.pkg \n- Name: 'SubEthaEdit'\n- Bundle Identifier: 'de.codingmonkeys.SubEthaEdit.MacFULL'\n- Package IDs: 'SEEMode.ActionScript,SEEMode.Base,SEEMode.C,SEEMode.CPP,SEEMode.CSS,SEEMode.Conference,SEEMode.Diff,SEEMode.EEx,SEEMode.ERB,SEEMode.Elixir,SEEMode.Erlang,SEEMode.HTML,SEEMode.JSON,SEEMode.Java,SEEMode.Javascript,SEEMode.LaTeX,SEEMode.Lua,SEEMode.Markdown,SEEMode.Objective-C,SEEMode.PHP-HTML,SEEMode.Perl,SEEMode.Python,SEEMode.Ruby,SEEMode.Swift,SEEMode.TOML,SEEMode.XML,SEEMode.bash,SEEMode.go,SEEMode.wren,de.codingmonkeys.SubEthaEdit.SeeTextImporterFULL,de.monkeydom.TCMPortMapper,isao.sonobe.OgreKit,org.mozilla.universalchardet,org.sparkle-project.InstallerConnection,org.sparkle-project.InstallerLauncher,org.sparkle-project.InstallerStatus,org.sparkle-project.Sparkle,org.sparkle-project.Sparkle.Updater'\n- Version: 5.2.4\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The fix included here also handles the Pixelmator Pro Trial nicely:\n\n```\n~/code/fleet 25587-pkg-name-extraction $ go run tools/custom-package-parser/main.go -path /Users/ian/Downloads/PixelmatorProTrial_3.6.14.pkg \n- Name: 'Pixelmator Pro Trial'\n- Bundle Identifier: 'com.pixelmatorteam.pixelmator.x.trial'\n- Package IDs: 'com.pixelmator.PXMEngine,com.pixelmator.pixelmatorteam.LibRaw,com.pixelmator.pixelmatorteam.PDFEngine,com.pixelmator.pixelmatorteam.PSDEngine,com.pixelmator.pixelmatorteam.SVGEngine,com.pixelmatorteam.PTFoundation,com.pixelmatorteam.PTImageIO,com.pixelmatorteam.PTPaintTools,com.pixelmatorteam.PTPhotoKit,com.pixelmatorteam.extended-raw-support,com.pixelmatorteam.pixelmator.PXMKit,com.pixelmatorteam.pixelmator.object-removal,com.pixelmatorteam.pixelmator.paint-selection,com.pixelmatorteam.pixelmator.x.PXMPhotoKitUI,com.pixelmatorteam.pixelmator.x.PXMUIKit,com.pixelmatorteam.pixelmator.x.automator.apply-color-adjustments-to-images,com.pixelmatorteam.pixelmator.x.automator.apply-effects-to-images,com.pixelmatorteam.pixelmator.x.automator.auto-enhance-images,com.pixelmatorteam.pixelmator.x.automator.auto-white-balance-images,com.pixelmatorteam.pixelmator.x.automator.change-type-of-images,com.pixelmatorteam.pixelmator.x.automator.denoise-images,com.pixelmatorteam.pixelmator.x.automator.increase-resolution-of-images,com.pixelmatorteam.pixelmator.x.automator.scale-images,com.pixelmatorteam.pixelmator.x.automator.trim-images,com.pixelmatorteam.pixelmator.x.pxmspotlight,com.pixelmatorteam.pixelmator.x.trial.PXMPro,com.pixelmatorteam.pixelmator.x.trial.photos-extension,com.pixelmatorteam.pixelmator.x.trial.quicklookpreviewextension,com.pixelmatorteam.pixelmator.x.trial.remove-background,com.pixelmatorteam.pixelmator.x.trial.thumbnailextension,com.revenuecat.Purchases'\n- Version: 3.6.14\n```"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nUploaded SubEthaEdit and Pixelmator ProTrial. Names are much more reflective of the software that was uploaded. \n\n\u003cimg width=\"1506\" height=\"589\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8e72b528-b074-46c7-a28f-72acbe3abd29\" /\u003e\n\n\u003cimg width=\"1411\" height=\"537\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/db3728de-f429-49cf-bc88-4a979ae1166a\" /\u003e\n\nNOTE: If the software has been previously uploaded, the name will still be wrong until the installer has been deleted from all teams and the corresponding row in `software_titles` has been removed from the database. Once that's done and the package is re-uploaded, the name will be the corrected one. "
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Latest\n\n**Web browser and operating system**: Any\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nA prospect pointed this out and I've confirmed the same in dogfood. We are observing a lot of CVE data associated with Safari 18.5 that has been specifically addressed and resolved in this version. Some of these CVEs should only be associated with Safari 18.4 and below.\n\nSee here: https://dogfood.fleetdm.com/software/versions/557682\nAnd here: https://support.apple.com/en-us/122719\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Observe vulnerability data in dogfood\n\n\n### üïØÔ∏è More info _(optional)_\nIssues are resolved here: https://support.apple.com/en-us/122719\n\n\n### üõ†Ô∏è To fix \nRemove false positives for Safari 18.5\n\n",
          "number": 29476,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Vulnerability detection false-positive for Safari 18.5",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29476"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX51M",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "prospect-lastrucci"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤Vulnerability detection false-positive for Safari 18.5",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Just checked and this doesn't appear to be a vuln feed issue at this point; the feed correctly shows Safari as excluding 18.5 for one vuln and doesn't show Safari at all for the other. My theory is that there were false positives in the feed previously (haven't looked into it further yet) and we didn't catch the feed update that dropped the false positives, so I would expect a brand new install not to repro this."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1748439832679799"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Just checked this and it looks like the vuln feed has been fixed since this issue was last repro'd. Checked the first 5 or so CVEs from the linked Apple advisory and they show the correct fix versions (\u003c= 18.5), and Safari 18.5 itself on Dogfood shows no applicable vulnerabilities. Going ahead and closing this one as these feed updates have hit other Fleet instances as well."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "False alerts now gone,\nSafari now stands secure.\nPeaceful as dawn's glow."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.63.0\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nPackage shows as `SU_TITLE`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nUpload [Avid Codecs](https://avidtech.my.salesforce-sites.com/pkb/articles/en_US/download/Avid-QuickTime-Codecs-LE) as a custom package.\n\n### üïØÔ∏è More info\n\nSplit from #24873, as the package structure for this installer is different from SentinelOne and Cold Turkey, as well as from SubEthaEdit, so the fix for #24873 doesn't work here, and the fix for SubEthaEdit probably won't.\n",
          "number": 25588,
          "repository": "fleetdm/fleet",
          "title": "ü™≤Incorrect software title name (SU_TITLE) when uploading Avid Codecs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25588"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX5XY",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "#g-software",
          "~sw-upload"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "ü™≤Incorrect software title name (SU_TITLE) when uploading Avid Codecs",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/g-software-current-sprint-67685f6ff1830a000f347a73/issues/fleetdm/fleet/25588?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "timebox - we may not have enough data"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @mostlikelee So, currently we handle this a bit better than before:\n\n```\n~/code/fleet main $ go run tools/custom-package-parser/main.go -path /Users/ian/Downloads/AvidCodecsLE.pkg \n- Name: 'com.avid.codecsle.pkg'\n- Bundle Identifier: 'com.avid.codecsle.pkg'\n- Package IDs: 'com.avid.avidcodecsle.pkg,com.avid.codecsle.pkg'\n- Version: 2.7.6\n```\n\nGiven that this returns the bundle ID as the name, and does so on a package whose signing cert expired over a year and a half ago (so it's quite unlikely to be added under normal operation), does our current behavior feel sufficient to y'all?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this LGTM, i'll close this"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Avid Codecs fixed,\nFleet now reads the true title,\nClarity in cloud."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a IT admin,\n| I want to show my end users only relevant actions\n| so that I provide my end users a clear self-service software experience.\n\n## Key result\n\nNone. Prioritized this because it's mission critical for `numa` to use Fleet as their software self-service tool.\n\n## Original requests\n\n- #30214\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @mostlikelee, @RachelElysia, @iansltx , @jacobshandling \n\n## Changes\n\n### Product\n- [ ] UI changes: Figma [here](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/Template--Copy-?node-id=0-1\u0026t=BVXxwI7m9syoqGiA-1)\n- [ ] CLI (fleetctl) usage changes: No changes\n- [ ] YAML changes: No changes\n- [ ] REST API changes: No changes\n- [ ] Fleet's agent (fleetd) changes: No changes\n- [ ] GitOps changes: No changes\n- [ ] Activity changes: No changes\n- [ ] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [ ] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Ensure guides referencing software (self-service, software packages) correctly reference the UI as it currently stands, including caveats around software updates\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n- [ ] [UI Status and UI actions spreadsheet ](https://docs.google.com/spreadsheets/d/1GKYTQ80RP_Zec32heeniav2rUS9Snegy4S3ob0lgXYc/edit?usp=sharing)\nTest on macOS, Windows, Linux hosts for Self-service\nTest with Chrome, Safari, Edge and Firefox\nTest with FMA, Custom packages, and VPP software\n\nOn host details page or Self service with several installers available:\n\n- [x] Default sorting order is by Name ascending\n- [x] Name sort order can be reversed\n- [x] Sorting by status sorts software by status in the order mentioned in Figma (and can be reversed)\n- [x] Font weight should be \"regular\"\n- [x] If software is not in software inventory, status is \"---\"\n- [x] If status is \"---\", available action is \"Install\" (Uninstall should not be available)\n- [x] When a user clicks \"Install\", status changes to \"Installing\"\n- [ ] If software installs successfully, status changes to \"Installed\"\n- [x] If software fails to install, status changes to \"Failed\"\n- [x] If software is in software inventory, Status is \"Installed\"\n- [x] If software status is \"Installed\", available actions are \"Reinstall\" and \"Uninstall\"\n- [x] When a user clicks \"Reinstall\", status changes to \"Installing\", and when the action completes, the status changes to \"Installed\"\n- [ ] When a user clicks \"Uninstall\", status changes to \"Uninstalling\" and when the action completes, the status changes to \"---\"\n- [x] If software fails to uninstall, status changes to \"Failed (uninstall)\"\n- [x] If software is in software inventory, and other criteria are met (see [#27983](https://github.com/fleetdm/fleet/issues/27983) ) status is \"Update available\"\n- [x] If status is \"Update available\", available actions are \"Update\" and \"Uninstall\"\n- [ ] If Update available is clicked, details modal is shown with detail of installed software and possible actions to take\n- [ ] When a user clicks \"Update\", modal closes and status changes to \"Updating\", and when the action completes, the status changes to \"Installed\"\n- [x] If software fails to update, status changes to \"Failed\"\n- [ ] If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n- [x] If software is a tarball (`tgz_packages`), Fleet won't do inventory, and status in Library tab will only reflect if install is triggered from Fleet.\n- [x] Make sure that when the tarball is installed by Fleet, show `Installed` status + `Reinstall` and `Uninstall` actions.\n- [x] Make sure that when tarball install failed, to show `Failed` status and `Install` action only.\n- [x] Make sure that when tarball is available in library that no status is displayed and only `Install` action is available.\n- [ ] Make sure that the new copy as specified in Figma is added to \"Install details\" modal for each package that is missing version information (no inventory). \n\n\nNOTE: Host details modal and Self service modal have different copy, see Figma\n- [ ] Clicking on any status for any operating system should open a details modal\n- [ ] Details modal title should match the status and should conform to Figma\n- [ ] Install and Uninstall details dropdown should be collapsed by default and only show for installs or uninstalls completed by fleet (If the software was installed by the user, the modal will still show but will not contain a details dropdown, see Figma)\n- [ ] Clicking on an available action button within the modal closes the modal and updates the status in the list, according to the action that was taken, the action completes, and the status is updated again.\n- [ ] Confirm multiple versions installed \n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30240,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service actions based on whether software is on the host",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30240"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX1-s",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-numa",
          "#g-software",
          "~context"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Show appropriate self-service actions based on whether software is on the host",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@noahtalerman: Decided to cut this \"smarter\" logic to solve these problems:\n- Multiple instances of the software installed\n- User v. machine scope on Windows\n\nCurrently, for macOS, only software that's installed in Applications/ shows the \"Update required\" status. If the software isn't in Applications/ but it's in inventory, Fleet shows \"Installed\" regardless of version. Fleet will use the install_path to know if the software is in Applications/\n\nCode wise: if (macOS and install_path is applications/), check only that path if it‚Äôs outdated and then show ‚Äúupdate available‚Äù else show ‚ÄúInstalled‚Äù\n\nFor Windows Fleet-maintained apps, software only shows \"Update available\" if the installed software is the same scope (user or machine) as the Fleet-maintained app. Based on install_path. Otherwise, if the software is in inventory, Fleet shows \"Installed\".\n\nFor Windows custom packages, software only shows \"Update available\" if the software title has an install_path. Otherwise, if the software is in inventory, Fleet shows \"Installed\"."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @RachelElysia, I added copy and a link to the contact URL based on `numa` feedback. We met with them today (2025-06-27) and showed them this story's wireframes.\n\n![Image](https://github.com/user-attachments/assets/6ca4ef45-09f2-4ac3-afee-bd5c995e151a)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts I realize this is offloading work to you that should've been done earlier by someone else, but can you work through a test plan here based on what's in Figma?\n\nIf it's more helpful to delegate the test plan for this to #27983, since these changes touch largely the same UI (though this hits both self-service and host software), that works too, and I can do a first pass there.\n\nWent ahead and updated the story template to remove non-test-plan TODOs to help a little."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx I've added the first pass test plan, just a couple questions left here:\n\n\u003cimg width=\"135\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1a202f1e-a311-4ccd-9aff-76ec85ef8dac\" /\u003e\n\n~~This is kind of vague, what is the criteria for this \"Update Available\" status?~~\n~~- Software is installed on host~~\n~~- Software installer is available~~\n~~- Software is a different version?~~\n~~- Software installer is a higher version than the version that's installed?~~\n\nNevermind, found that criteria in the [#27983](https://github.com/fleetdm/fleet/issues/27983) ticket. Only question left is:\n\nWhat are the available statuses for tar.gz items? \n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts No update available status for tarballs as they don't have an associated version."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to estimated with an 8 based on prior discussions"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@marko-lisica \n\nIn the test plans it says:\n\n\u003e  If software is installed by end user make sure that tooltip over \"Installed\" status is different from one when Fleet installs. See Figma specs.\n\nIs there a different tooltip? I currently have it with no tooltip if it was installed by the user not using Fleet. Can you add the tooltip to the Figma spec or remove this from the QA plan?"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "[Doc to track questions around the various modals](https://docs.google.com/document/d/1sAh752RZCCquWhI25emzNtnBVV3wA-GAhjbdlaB2Pls/edit?tab=t.0)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Heads up that we're marking this one for expedited drafting"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "@mostlikelee thanks. To over communicate, most of the remaining questions are regarding [the modals subtask](https://github.com/fleetdm/fleet/issues/30860)"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: main (4.71.0)\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nDropdown is reset to \"All available\"\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to Host details \u003e\u003e Software \u003e\u003e Library tab\n2. In the dropdown, select \"Self-service\"\n3. Either change the Name sort order or type something in the search bar\n\n### üïØÔ∏è Expected results\nDropdown value should remain unchanged, sort order or search value should apply and show results accordingly\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30514,
          "repository": "fleetdm/fleet",
          "title": "Dropdown reset to \"All available\" when sort order or search is applied on Host \u003e\u003e Software \u003e\u003e Library tab",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30514"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcLd1w",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Dropdown reset to \"All available\" when sort order or search is applied on Host \u003e\u003e Software \u003e\u003e Library tab",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** \n \n1. Navigate to Host details \u003e\u003e Software \u003e\u003e Library tab\n2. In the dropdown, select \"Self-service\"\n3. Either change the Name sort order or type something in the search bar\n- [x] dropdown is not reset"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Dropdown's memory honed,\nSorting, searching undisturbed,\nClarity bestowed."
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30136,
          "repository": "fleetdm/fleet",
          "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30136"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "labels": [
          ":release",
          "#g-mdm",
          "~csa",
          "~mdm-maturity",
          "#g-orchestration",
          "#g-software",
          "macos26"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "The version reported in osquery is 16.0 but when I look in \"About this Mac\" and System Settings \u003e\u003e General it's 26.0\nIt does get the build right though... 25A5279m"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I try to enforce encryption I'm not seeing the banner instructing me to restart or log out, until I've restarted or logged out. Then it stays there no matter how many times I restart. I'm not seeing the banner clear and even after running the `cleanups_then_aggregation` cron the encryption status isn't updated and it says `unrecognized`:\n\n![Image](https://github.com/user-attachments/assets/f3c0b064-8aae-4c39-9993-bd01af2fbd84)\n\nOn the host, I can see the disk encryption profile in System Settings and Filevault is turned on and a recovery key has been set:\n\n\u003cimg width=\"741\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/013cc568-6b97-4bbb-be68-a458bbbdf56b\" /\u003e\n\n\u003cimg width=\"730\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/986b4c3e-42f2-4b9c-9756-f1acc8e1f302\" /\u003e"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Apple introduced a new Device Migration feature (that only works with the latest OSes) which will move your host from a 3rd party MDM server over to Fleet,  all via ABM. It works! however during the enrollment to Fleet the Setup Experience SwiftDialogue window did not display the software Fleet was installing in the background"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-numa\nmacOS 26 - MDM migration invokes Setup Experience (silently) - awaitconfigured\n\n- Upgraded endpoint to macOS 26 \n- ABM recognizes that\n- Able to set a deadline\n- Device starts to migrate\n- Unenrolled from previous MDM (didn‚Äôt have to initiate anything)\n- Recognizes that it needs to enroll into Fleet\n- Waiting for ‚Äòdevice configured‚Äô command\n- Starts going through setup experience again (calling through all apps, VPP apps, setup script)\n\nExpected behavior: Assume host has all apps already installed. It‚Äôs been previously managed. It‚Äôs not a net new device so it shouldn‚Äôt run setup experience. VPP apps would get removed from previous MDM so those would be the one thing that should run again\n\nNote from @mostlikelee : Technically, as soon as the device gets the Fleet MDM profile, the apps should come along with it. We should test"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-eponym\nFleet menu bar item doesn't show up after enrollment in beta 2"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet menu not showing after enrollment in macOS 26 beta 2 #6834](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3ec39176-1e2a-49ec-aea4-3c44108d90d0)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Changing MDMs without a deadline doesn't not show a notification on the host. Maybe it takes a lot more time (writing this after waiting for 2-3 hours)"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Hi all üëã , any issues directly related to the new MDM migration feature Apple introduced in ABM should be tracked separately here https://github.com/orgs/fleetdm/projects/58/views/9?pane=issue\u0026itemId=119675644\u0026issue=fleetdm%7Cfleet%7C30695\n"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `af417c1`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\nOn the Host details \u003e Software tab, when I select Show details for software that's installed on the host I see the new grey box styles:\n\n\u003cimg width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3aa14955-e790-4e7f-b26f-b911e94f12fb\" /\u003e\n\nWhen I select software that's available for install but not yet installed on the host I don't see the new grey box:\n\n\u003cimg width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a146d1b5-f3b6-4638-aa26-7666cae07792\" /\u003e\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\nSee actual behavior above.\n\n### üõ†Ô∏è To fix \n\n- @noahtalerman: We want to show to the new grey box in the details modal for all software.\n",
          "number": 30232,
          "repository": "fleetdm/fleet",
          "title": "Inconsistent style: Host details \u003e Software \u003e Show details",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30232"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX9VU",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Inconsistent style: Host details \u003e Software \u003e Show details",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Weird behavior for sure -- I thought it was put in boxes only if there were multiple versions installed but I guess not!"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "If we want to just add a grey box around this, it's a EST: 1 FE only and should take 10 minutes.\n\nFrom #20638:\n```\n  // special case when we dont have installed versions. We can only show the\n  // software type atm.\n  if (!installed_versions || installed_versions.length === 0) {\n    return (\n      \u003cdiv className={`${baseClass}__software-details`}\u003e\n        \u003cDataSet\n          title=\"Type\"\n          value={formatSoftwareType({ source: software.source })}\n        /\u003e\n      \u003c/div\u003e\n    );\n  }\n```"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given the above movement, looks like this has been estimated, so moving forward."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n- Inventory versions use the short format (ie.  16.98 or 16.97.2)\n- Vulnerability scanning [uses](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac) the short format (same as above)\n- FMA/homebrew uses the build number format (ie. 16.98.25060824)\n\nThe mismatch between inventory and package versions will cause issues when attempting to update the version with a policy because 16.98.25060824 \u003e 16.98 (they are the same version)\n\nFMAs affected:\n- Microsoft Excel\n- Microsoft Word\n\nGoal: use the same version throughout fleet for version compare and vuln scanning\n\nOption 1:  Change the FMA version number\nHomebrew does not contain the short format.  The short format could be gathered via:\n- extracting short bundle version from the package\n- referencing an external source such as the [office release notes](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac) used in vulnerability scanning\n- Not considered due to software ingestion load risk and version parity with the VPP app which uses the short format\n\n\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Install Microsoft Excel on host, refetch host vitals\n2. Note version number in inventory\n3. add Microsoft Excel FMA, note version number on package\n\n### üïØÔ∏è More info _(optional)_\nalso considered:\nOption 2: Change the inventory version number / update vulnerability logic\n- add bundle_version to detail queries, which contains the build number format\n- update vuln scan logic to utilize the build number format.  Fleet uses the mac office release notes for this which contains the build number.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix\nOption 1:  Change the FMA version number\nHomebrew does not contain the short format.  The short format could be gathered via:\n- extracting short bundle version from the package\n- referencing an external source such as the [office release notes](https://learn.microsoft.com/en-us/officeupdates/release-notes-office-for-mac)\n",
          "number": 30082,
          "repository": "fleetdm/fleet",
          "title": "ü™≤ Microsoft Office for Mac Fleet-maintained apps version mismatches",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30082"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4XA",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úÖ Ready for release",
        "title": "ü™≤ Microsoft Office for Mac Fleet-maintained apps version mismatches",
        "comments": [
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Testing notes left on the PR: #30686"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#27983\n\n## Task\n\nWrite a feature guide for self-service updates, linked from [the existing self-service guide](https://fleetdm.com/guides/software-self-service). We'll want the extra space of a full guide to walk through how we determine what shows up for updates I think, versus adding update references as a subheading for the existing article.\n\nCriteria are in Figma dev notes + [the self-service update flowchart](https://drive.google.com/file/d/1dtCo-CzVIcJkk1GIDHMKflqu6mSNyzfw/view?usp=sharing)\n\n## Condition of satisfaction\n\nGuide is written and merged into the appropriate release docs branch.",
          "number": 29914,
          "repository": "fleetdm/fleet",
          "title": "Self-Service Updates: Guide/Docs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29914"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX120",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Self-Service Updates: Guide/Docs"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer on the Software page,\n| I want to filter by a custom severity (CVSS score) range\n| so that I can filter software by a vulnerability threshold my security team uses (ex. CVSS ‚â• 7.5).\n\n## Key result\n\nNone. Prioritized because the current behavior makes it look like Fleet does not understand how people actually use CVSS. But now we do.\n\n## Original requests\n\n- #30237\n\n## Context\n- Product Designer: @RachelElysia + @iansltx \n- Engineer: @RachelElysia \n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma](https://www.figma.com/design/J2mqgWcS9RG3jaQc43V67m/-30248--Software-page--filter-by-custom-severity--CVSS-score--ranges?node-id=0-1\u0026p=f\u0026t=YQB8wo6YOLyUzyFu-0)\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes (API endpoint already supports min/max)\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Follows existing CVSS score filtering, so Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [x] Contributor API changes: No changes\n- [ ] Feature guide changes: Make sure the [vulns filtering article](https://fleetdm.com/guides/filtering-software-by-vulnerability) is current with the UI\n\n\u003e ‚ÑπÔ∏è ¬†Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n\u003e Note: See Figma for single source of truth for exact text copies \n\nTest modals on Host \u003e Software \u003e Inventory page and Software page\n\n1. Min max is present and new help text is present\n2. Min max is enabled only if vuln software toggle is enabled\n3. Defaults to \"Any severity\"\n4. If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n5. If a user clicks on \"Any severity\", the min and max are cleared\n6. If a user clicks on \"Custom severity\", the min and max do not change\n7. If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n8. If a user clears a custom min/max, the dropdown will not change to \"Any severity\" as they still might be typing\n9. If the user hits apply with no severity entered, it will apply any severity\n10. If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n11. If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n12. If the user types in an invalid string into either min/max (e.g. 4.11 or abc), the Apply button is disabled with a tooltip stating it must be a number between 0-10 with an increment of 0.1\n13. If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n14. By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n15. Clearing the filter should show all software \n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30248,
          "repository": "fleetdm/fleet",
          "title": "Software page: filter by custom severity (CVSS score) ranges",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30248"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "labels": [
          "story",
          ":release",
          "~pushed",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ü•ö Ready",
        "title": "Software page: filter by custom severity (CVSS score) ranges",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @lukeheath marking this story as `P2`. The current behavior makes it look like Fleet does not understand how people actually use CVSS.  But now we do."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "TODO RAchel: first draft of test plan"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Just filled in this story checklist so it's ready for User Story Review (credit to @RachelElysia for the test plan)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "assigning to @RachelElysia to estimate"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath needs your estimate here and we can move it to the software board"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "For everyone's info, I was asked to estimate this this morning and estimated it at a 4. Looks like changing the project removed the estimate. @sharon-fdm @mostlikelee "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh no that's my bad.  we discussed in sprint kickoff review that Luke is going to take this one @jacobshandling "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I'll assign a 4 here and move it to the software board for Luke"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Might be minimal extra work to solve #30524 alongside this since filter + sort seems like it would be sufficient there. Maybe dev this with that request in mind and check with the customer to see whether that solves their issue?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "removing milestone.  will not get to this story this sprint"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Can you create Sprint 45 and move this into it?"
          }
        ]
      },
      {
        "assignees": [
          "fuhry"
        ],
        "content": {
          "body": "github.com/urfave/cli/v2 doesn't parse flags after it encounters the first argument. This left me very confused when trying to call `fleetctl api some/route -F arg=value` and the query string wasn't being updated.\r\n\r\nMake this an error case to prevent future confusion.\r\n\r\nNote that v3 of `urfave/cli` [supports arguments](https://pkg.go.dev/github.com/urfave/cli/v3#Argument), so the right thing to do in the long term is upgrade this library to v3.\r\n\r\n# Checklist for submitter\r\n\r\nIf some of the following don't apply, delete the relevant line.\r\n\r\n\u003c!-- Note that API documentation changes are now addressed by the product design team. --\u003e\r\n\r\n- [x] Input data is properly validated, `SELECT *` is avoided, SQL injection is prevented (using placeholders for values in statements)\r\n- [x] Added/updated automated tests\r\n- [x] Manual QA for all new/changed functionality\r\n",
          "number": 30797,
          "repository": "fleetdm/fleet",
          "title": "[fleetctl] fail api command when args present after uri",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/30797"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcgXr8",
        "labels": [
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "[fleetctl] fail api command when args present after uri"
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent: 1.45.1\n\nIncludes updates to: \n- Fleet Desktop tray icon application\n- No changes to Orbit functionality.\n\n- Desktop `v1.44.0` \u003e `v1.45.1`\n\nFleet 1.45.1 has been released to the `edge` channel.\nCompared to 1.45.0 it only contains changes to the \"Fleet Desktop\" tray application (in particular updates to the offline indicator).\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.68.0: pass\n4.69.0: pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.70.0:\n4.71.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 30846,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 1.45.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30846"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgckdFo",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.45.1"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Release QA: 1.45.1",
        "comments": [
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Tested on `4.70.1` and `4.71.0` and all tests have passed ‚úÖ "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Fleet's new update shines,\nTray icon basks in glow, edge,\nTests ensure safe climb."
          }
        ]
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: Beekeeper Studio\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name` (macOS) \n- [x] Manifest version scheme matches osquery `app.short_bundle_version` (macOS)\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [x] App adds successfully to team's library\n- [x] App installs successfully on host\n- [x] App opens successfully on host\n- [x] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog",
          "number": 30884,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Beekeeper Studio",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30884"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcmzng",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "New FMA: Beekeeper Studio",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "This was created while testing #30780 and does not necessarily need to be merged. I will run through the whole process to see how it goes, can decide whether or not to merge it at that time."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Tested:\n- Beekeeper Studio is added to FMA Catalog\n- Scripts and category are populated\n- Installs\n- Uninstalls\n\nClosing this ticket as we will not be merging this app in. "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Beekeeper Studio,\nIn the cloud city it thrives,\nEffortless and smooth."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\nPart of #30240 \n\n\u003c!-- A sub-task always belongs to exactly one story.  The parent user story for this technical sub-task is linked here.  Comment on the parent story, not on this sub-task. --\u003e\n\n## Task\n\n- [ ] Create version comparison function and appropriate test to compare various types of versions\n\nStatus column\n- [ ] Update the status column to not reflect the API `status` but whether a software is actually installed on a host\n- [ ] Update the status column to have an update available for software installers that have a newer version available to install\n- [ ] Add \"Updating...\", \"Update (pending)\", and \"Update available\" to the status column\n- [ ] Add polling to \"Updating...\" status but specifically not to \"Update (pending)\" status\n- [ ] Ensure there is no regression in statuses\n- [ ] Allow for client-side sort by status for Self-service page\n- [ ] Add client-side pagination to Self-service page\n\nAction column\n- [ ] Update the actions to appropriately reflect action verbs for software that is currently installed/uninstalled\n- [ ] Update the actions to hide uninstall on software that is detected as not installed\n- [ ] Update the actions to say \"Update\" instead of install if an older version of the software is currently installed in relation to the installer version\n- [ ] Ensure disabled state when updating/ update pending and action text does not change\n\n- [ ] Update all this on both the h**ost details \u003e software \u003e inventory page ** and **self-service page**\n\n\n## Condition of satisfaction\n\nSee story's [Figma](https://www.figma.com/design/LaPOy2xbXSNIYtFenO7FTt/-30240-Show-appropriate-self-service-actions-based-on-whether-software-is-on-the-host?node-id=5301-1746\u0026t=wQkHuan83PAwlqaW-0) ",
          "number": 30861,
          "repository": "fleetdm/fleet",
          "title": "Show appropriate self-service status and actions in the self-service table at all times",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30861"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgck8sI",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Show appropriate self-service status and actions in the self-service table at all times",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@RachelElysia can you add an estimate on this subtask?"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#27983\n\n## Task\n\nImplement the frontend as shown in the [Figma for the parent story](https://www.figma.com/design/K9BTJ3aZAvwWBXU9N8aqGa/-27983-Fleet-Desktop-%3E-Self-service--Add-%22Update%22-actions-when-updates-are-detected-for-installed-so?node-id=2-130\u0026p=f\u0026t=4BUeL3i6REY46HIb-11), with behavior corresponding to the [associated flowcharts](https://fleetdm.slack.com/files/U07GHNRUK17/F093LL7E30A/self-service_update_filtering___workflow_-_simplified.drawio). Note that all functionality is expected to happen client-side; if API bugs/misses prevent this, raise these issues as unreleased bugs during development.\n\n## Condition of satisfaction\n\nFrontend is implemented according to the above specs. Note that \"update all\" should be performed by a bunch of install calls rather than an action at a bulk endpoint.",
          "number": 29944,
          "repository": "fleetdm/fleet",
          "title": "Self-Service Update: Frontend",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29944"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX124",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "üê£ In progress",
        "title": "Self-Service Update: Frontend"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "Tracking carry over work ",
          "number": 31309,
          "repository": "fleetdm/fleet",
          "title": "Self-service actions carryover",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31309"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdAjcc",
        "labels": [
          "~frontend",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "üê£ In progress",
        "title": "Self-service actions carryover"
      },
      {
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nThe host will switch to MDM off, and pending activity items will be cancelled, but the pending install just spins. Verification isn't sent, and there's no way to \"cancel\" the install. \nThere are other situations that have resulted in a vpp app install command being sent, and a VPP verify command being sent, but then verification never completes for some reason.\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\nTo get a forever \"installing\" scenario, and you can't cancel the activity item:\n1. Add a VPP software item to the team's Library\n2. For an MDM enabled host, initiate the install, then turn off Wifi on the host\n3. Remove the MDM profile on the host \n4. Turn WiFi back on, refetch host vitals\n\nYou'll also get funny states if the app installs and you shut off WiFi before the verification is sent.\nI've also seen a state where a verification was sent but never verified... I don't recall exactly how I got in that state.\n\n### üïØÔ∏è More info _(optional)_\nIn the described scenario, if you turn MDM off again while connected to WiFi, the install will be marked as failed. But this requires manual user intervention and it would be nice if we had an automatic way to clean up lingering unverified VPP installs\n\nIn other scenarios, if you can delete the upcoming activity, it will cancel the pending install, but having to manually cancel these installs could be time consuming, especially if there was an event that caused a large number of the VPP install verifications to fail (perhaps an APNS outage or something)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e",
          "number": 30902,
          "repository": "fleetdm/fleet",
          "title": "App Store (VPP) apps are stuck in pending",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30902"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgcs61c",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-07-18T00:00:00Z",
          "title": "4.71.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "App Store (VPP) apps are stuck in pending",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e we can get into a state where a VPP app is stuck in pending indefinitely\n\n\u003e Add a cron job to clean up VPP install verifications that are stuck\n\n@jmwatts hmm, this sounds like a bug to me. Can you please update this issue to the bug format?\n\nNice catch!\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Previously written up as a suggestion for a cron to clean up VPP verify items:\n\n## Problem\n\nIf VPP install verification information isn't updated for some reason, we can get into a state where a VPP app is stuck in pending indefinitely. \n\nExample: I want to order a pair of shoes from my food delivery app, which does not show options for stores that don't carry food. --\u003e\n\n## What have you tried?\n\nDeleting the upcoming activity will cancel the pending install, but having to manually cancel these installs could be time consuming, especially if there was an event that caused a large number of the VPP install verifications to fail (perhaps an APNS outage or something)\n\n## Potential solutions\n\nAdd a cron job to clean up VPP install verifications that are stuck\n\n## What is the expected workflow as a result of your proposal?\n\nEach time the cron runs, it will look for VPP Verifications that were sent out but never verified.\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Closing this ticket because there were two known things contributing to getting into this state:\n\n#31028 - This will result in pending installs that will never get cleared out and will have to be resolved by manually editing the database\n#31020 - This is being resolved for 4.71.0\n\nI do think we should discuss how to clean up lingering issues if there are other scenarios that get us into this state but for now, this issue will be resolved once the above two issues are addressed."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "App installations paused,\nFleet now speaks to the cloud,\nEase for teams, applause."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "Fleet version: 4.67.0\n\nWeb browser and operating system: n/a\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nWhatsApp version is different when adding the Fleet-maintained app (screenshot 1), after adding (2), and after installing (3):\n\n![Image](https://github.com/user-attachments/assets/21e5d017-3589-47ba-aa1c-0874740c2a5f)\n\n![Image](https://github.com/user-attachments/assets/965ca8ff-07a9-42d8-a05b-27d51161c66e)\n\n![Image](https://github.com/user-attachments/assets/ad5fd5ce-e462-493e-a839-3c1c6a5f0853)\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n1. Add whatsapp FMA app to a team\n2. Install the whatsapp on a host, then refetch host vitals\n3. Run the vulnerabilities cron\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\n- When adding the Fleet-maintained app and on the software title page, show the version that gets installed (in this case: `25.11.76`)\n",
          "number": 31185,
          "repository": "fleetdm/fleet",
          "title": "ü™≤WhatsApp version different in software inventory",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31185"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc5Hl8",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~released bug",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "ü™≤WhatsApp version different in software inventory",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev can you pop an estimate on this one?"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nBrave is not showing as updatable because the versions do not match\n\nVersion reported by homebrew: `1.79.123.0`\nVersion reported by osquery: `137.1.79.123`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add macOS FMA\n2. Install FMA\n\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nFix this in the FMA manifest:\n- drop the last part (0)\n- ~~add 58 to the 2nd part (79) to create a new first part (137)~~ needs research\n",
          "number": 31122,
          "repository": "fleetdm/fleet",
          "title": "macOS Brave Browser FMA version mismatch",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31122"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc5rCE",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "macOS Brave Browser FMA version mismatch",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Here is a bit of a mapping between legacy versions\nhttps://github.com/brave/brave-browser/wiki/Brave-Release-Schedule-Archive\nHere is the upcoming release schedule\nhttps://github.com/brave/brave-browser/wiki/Brave-Release-Schedule\n\nAnd we do have a mapping on github\nhttps://github.com/brave/brave-browser/releases/tag/v1.80.122\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per further discussion, we'll do the simplest possible fix, with test automation as a prerequisite, hence the 1 estimate here."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in ‚â§1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT Admin\n| I want FMA updates to be available quickly\n| so that I can patch host software with the latest version\n\n## Key result\n\n100 FMAs\n\n## Original requests\n\nFMA updates are currently tested manually, delaying customer value by holding back the ability for them to download the latest version of a software.\n\nCurrent [update frequency](https://docs.google.com/spreadsheets/d/1Z0I9y1cx_L_HJ57oWdyl23Ek0OpXbERRnXZ-kFulG6M/edit?usp=sharing) : 3 / day\nCurrent unique FMA apps updated: 19\n\nWith the conservative goal of testing apps within 1 day of release, our current manual testing strategy will not scale as we add FMAs:\nGoal: 100 FMAs\nEstimated updates per day to test: 15\n\nTest automation here is not meant to replace all manual testing, but it will greatly reduce the scope of regression testing.  Testing 100 FMAs per release will have a large impact on QA and likely result in further release delays.\n\nWe are starting with the macosx platform first. We have a total of 21 apps for the mac platform and 6 windows applications. While this code should be written generically enough to support mac, windows, and eventually linux. Primarily focus on macosx support. \n\n## Context\n- Product Designer: @mostlikelee  \n- Engineer: @ksykulev \n\nSome things discovered during the POC.\n1. Unfortunately `act` the local github actions testing tool https://github.com/nektos/act, does not support mac osx machines. Only linux. So developing/testing on github is required.\n2. osquery is used as a primary means of checking if an application was installed and uninstalled. However, because the `apps` table primarily uses `LaunchServices`. You must be careful to deal with caching. https://github.com/osquery/osquery/blob/master/osquery/tables/system/darwin/apps.mm#L259. Check the `forceLaunchServicesRefresh` function in the POC code for more details on how to reset.\n3. Macosx also has a piece of software called gatekeeper. Most applications installed from the internet require user authorization to run for the first time. Although I do not think this impacts osquery's ability to find the application. View the `removeAppQuarentine` function for details on how to potentially deal with that. \n4. There are a number of version mis-matches that occurred between the manifest file and what osquery returns.\n```\nApps with errors: [Brave Amazon DCV Google Chrome WhatsApp]\n\nFound app: 'Brave Browser.app' at /Applications/Brave Browser.app, Version: 137.1.79.123, Bundled Version: 179.123\nApp version '1.79.123.0' was not found by osquery\n\nFound app: 'DCV Viewer.app' at /Applications/DCV Viewer.app, Version: 2024.0 (r8004), Bundled Version: 2024.0 (r8004)\nApp version '2024.0.8004' was not found by osquery\n\nFound app: 'Google Chrome for Testing.app' at /Applications/Google Chrome for Testing.app, Version: 137.0.7151.119, Bundled Version: 7151.119\nFound app: 'Google Chrome.app' at /Applications/Google Chrome.app, Version: 138.0.7204.50, Bundled Version: 7204.50\nApp version '137.0.7151.104' was not found by osquery\n\nFound app: 'WhatsApp.app' at /Applications/WhatsApp.app, Version: 25.16.81, Bundled Version: 738641321\nApp version '2.25.16.81' was not found by osquery\n```\n5. Chrome is especially tricky. \n  - It appears that it comes pre-installed on the macosx images on github. \n  - We cannot check for a specific version when verifying. The chrome installer uses a generic url that does not include the version, so the versions may change at any time. It might be best to use a `\u003e` operator for this app. \n\n## Changes\nPhase 1: Improve tooling for manual testing\nPhase 2: Port existing tooling into CI\n\n### Engineering\n- [ ] Test plan is finalized\n- [X] Contributor API changes: No changes\n- [X] Feature guide changes: No changes\n- [X] Database schema migrations: No changes\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: oN\n- Risk level: Low\n\n### Test plan\n\n1.   Open FMA Updates PR\n2.  Confirm only FMA CI tests are performed\n3.  Confirm CI tests report results and gate the merge \n\n### Confirmation\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.",
          "number": 29183,
          "repository": "fleetdm/fleet",
          "title": "Create Fleet Maintained Apps test automation",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29183"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgcX4P8",
        "labels": [
          "story",
          ":release",
          "~engineering-initiated",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "ü¶§ ‚ÄéIn review",
        "title": "Create Fleet Maintained Apps test automation",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@mostlikelee Thanks for filing! This is a good investment and definitely something we need to do. Before I prioritize to drafting, would you please review the [create an engineering-initiated story](https://fleetdm.com/handbook/engineering#create-an-engineering-initiated-story) process? This should only have one user story, and the only section that should be removed is the \"Product\" section. \n\nOne user story allows us to focus on a single user and use case, and implement a simpler iteration. We can do a separate iteration if we want to focus on admin experience. "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath thanks, updated!"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@mostlikelee Thanks, I've prioritized to the drafting board and assigned to you as the product designer. You'll be responsible for moving this through the drafting board per the drafting engineering-initiated stories process (or assign to someone else to take it over.)"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee are we aiming to ship this in 4.72?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I think we need to rewrite the name and story here to better reflect the scope (i think we're starting with macos), but yes we want to make some progress on this front in the next sprint to get in front of FMA issues.\n\n@ksykulev can you take a pass at updating this so we can estimate any further work needed outside the POC?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Applied estimate arrived at on Friday in chat."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "- add ability to skip slugs for version mismatches\n- add ability to skip version check"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\nAmazon DCV Viewer not showing correct update status because of version mismatch\n\nHomebrew: `2024.0.8004`\nInventory: `2024.0 (r8004)`\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add FMA to Fleet\n2. Install FMA\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### üõ†Ô∏è To fix --\u003e\nThis should be fixed ingestion side.  While we need to bring back software ingestion modification patterns we also need to account for FMA test automation.  \n",
          "number": 31123,
          "repository": "fleetdm/fleet",
          "title": "Amazon DCV Viewer FMA version mismatch",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31123"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc8aTI",
        "labels": [
          "bug",
          ":release",
          "#g-software",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-08-08T00:00:00Z",
          "title": "4.72.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Amazon DCV Viewer FMA version mismatch",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to ready for spec to discuss the best path forward here"
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "# Checklist for submitter\r\n\r\nVulnerability incremental jobs are broken.  NVD introduced a breaking change in their feed to use inconsistent time formats.\r\n\r\n## Testing\r\n\r\n- [ ] Added/updated automated tests\r\n- [X] QA'd all new/changed functionality manually:\r\nhttps://github.com/mostlikelee/vulnerabilities/actions/workflows/nvd.yml\r\n",
          "number": 31258,
          "repository": "fleetdm/fleet",
          "title": "Fix NVD feed generation",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/31258"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc98wI",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "Done",
        "title": "Fix NVD feed generation"
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and logging¬†of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 31274,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.72.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31274"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgc-TB0",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Release QA: 4.72.0"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.70.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### üí• ¬†Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nType column sort is actually sorting by name even though the UI buttons light up correctly and the URL sort column is correct\n\nhttps://github.com/user-attachments/assets/3cbe7c75-2cee-412d-b109-299f006f1716\n\n\n### üßë‚Äçüíª ¬†Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to Fleet Desktop\n2. Go to software tab\n3. Try to sort software by type\n\n### üïØÔ∏è More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nEnsure the backend supports sorting by type column\nIf so, it's a FE fix, if not, need to confirm design if it should or not (maybe it was unintentional to have sort on type and we accidentally added it to the UI?)\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### üõ†Ô∏è To fix \nProduct designer: @marko-lisica \n\nAs backend doesn't support this I believe we didn't design it. Remove sort indicator from Type column on the frontend and if needed we can always add later.",
          "number": 30746,
          "repository": "fleetdm/fleet",
          "title": "Fleet UI: Fleet Desktop \u003e Software \u003e Type sort broken",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30746"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgc-Xts",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "80d566cb",
          "startDate": "2025-07-07",
          "title": "Sprint 44"
        },
        "status": "‚úîÔ∏èAwaiting QA",
        "title": "Fleet UI: Fleet Desktop \u003e Software \u003e Type sort broken",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced on 4.70.1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Done and merged this morning to not drag to next sprint"
          }
        ]
      }
    ]
  }
]