[
  {
    "timestamp": "2025-08-18T21:31:18.480108481Z",
    "items": [
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 31999,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.73.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31999"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdsS6Q",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Release QA: 4.73.0"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "## Related user story\n\n#30095\n\n## Task\n\nUpdate `fleetctl generate-gitops` to reflect the inline format documented in #30837, including the new `setup_experience` flag on VPP apps and custom packages.\n\nSwitching `fleetctl generate-gitops` to export Fleet-maintained apps with slugs is out of scope.\n\n## Condition of satisfaction\n\n`fleetctl generate-gitops` includes the setup experience flag on software for which it is set.",
          "number": 31164,
          "repository": "fleetdm/fleet",
          "title": "GitOps software/setup experience restructure: `fleetctl generate-gitops` changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31164"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk80",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps software/setup experience restructure: `fleetctl generate-gitops` changes",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243569811379)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reassigned as I'm behind on sprint work, pending on-call capacity (this might fall back to me if stuff gets busy, TBD)."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nChange copy for empty state (if no vulnerabilities detected) on software version details.\n\nWhat Fleet covers link: https://fleetdm.com/guides/vulnerability-processing#coverage\n\n\u003cimg width=\"1148\" height=\"601\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fb4c4055-fb02-4a86-b53d-aa74b4532e85\" /\u003e\n\n## Condition of satisfaction\n\nThe UI is updated per the req above.\n",
          "number": 32027,
          "repository": "fleetdm/fleet",
          "title": "Update UI to show \"Not supported\" for kernel vulns on OS's we don't support",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32027"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv040",
        "labels": [
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Update UI to show \"Not supported\" for kernel vulns on OS's we don't support"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "number": 32019,
          "repository": "fleetdm/fleet",
          "title": "Onboarding buddy Jonathan Katz",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32019"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdvlEE",
        "labels": [
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Onboarding buddy Jonathan Katz"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nUpdate the [vulnerability processing feature guide](https://fleetdm.com/guides/vulnerability-processing) with details on how Linux OS level vulnerabilities are inventoried.\n\n## Condition of satisfaction\n\nGuide is updated.\n",
          "number": 31215,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: Guide Updates",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31215"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpos",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Linux Vulns: Guide Updates"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "This removes one invocation of the Cloudflare WARP uninstall script, but we manually add the script run via post-uninstall script, so we can continue using the upstream script.",
          "number": 31549,
          "repository": "fleetdm/fleet",
          "title": "Unfreeze Cloudflare Warp macOS FMA",
          "type": "PullRequest",
          "url": "https://github.com/fleetdm/fleet/pull/31549"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdUpoM",
        "labels": [
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "Unfreeze Cloudflare Warp macOS FMA"
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "**Fleet version**: v4.71.0\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nBoth of these CVEs Show up when searching in [Software \u003e Vulnerabilities](https://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-363\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0):\n\n\u003cimg width=\"939\" height=\"573\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7222d7eb-cd3d-486e-93cb-fc78e484b4f1\" /\u003e\n\nClicking on \"view hosts\" shows a list of hosts affected by each vulnerability, and the host counts match:\n\n[CVE-2025-36350\n](https://dogfood.fleetdm.com/hosts/manage?page=0\u0026order_key=display_name\u0026order_direction=asc\u0026vulnerability=CVE-2025-36350)\u003cimg width=\"925\" height=\"614\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fe0edf90-9f14-49f6-a19a-94d0efc01d8c\" /\u003e\n\n\n[CVE-2025-36357\n](https://dogfood.fleetdm.com/software/vulnerabilities?exploit=false\u0026query=CVE-2025-363\u0026order_direction=desc\u0026order_key=hosts_count\u0026page=0)\n\n\u003cimg width=\"924\" height=\"567\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e5183f58-f6ca-47b4-b347-ee59a6b19141\" /\u003e\n\nBut when viewing the [vulnerability details](https://dogfood.fleetdm.com/software/vulnerabilities/CVE-2025-36350), no hosts are detected:\n\n\u003cimg width=\"938\" height=\"253\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ecc5c5f9-6ade-4d35-ac08-cba0799cab91\" /\u003e\n\n\nThe API request to load vulnerability data returns the following error:\n\n```\n{\n  \"message\": \"Resource Not Found\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"This is not a known CVE. None of Fleetâs vulnerability sources are aware of this CVE.\"\n    }\n  ]\n}\n\n```\n\n\n### ð§âð» Â Steps to reproduce\n\n1. Run vulnerabilities on a host running Windows 11 Pro 24H2 10.0.26100.4061, e.g. [this one in Dogfood](https://dogfood.fleetdm.com/hosts/1317/details).\n2. Check the vulns list\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nObserved in dogfood, presumably an issue occurred within the past month that either:\n1. Corrected a previously misidentified CVE\n2. Made a CVE magically disappear from NIST databases. \n3. Correctly identified a new CVE that doesn't have the information we need to display it as a valid CVE in the UI\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\n\nExclude the above 2025 vulns on the advisory currently containing them via revised MSRC feed parsing. The exclusion should affect the advisory where they're currently found; if the numbers get used later for actual vulns that will be a future advisory and shouldn't be affected.\n",
          "number": 31474,
          "repository": "fleetdm/fleet",
          "title": "Error when viewing details for CVE-2025-36350 and CVE-2025-36357",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31474"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdg7ps",
        "labels": [
          "bug",
          "~vulnerability-management",
          ":product",
          "customer-stazzema",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "Error when viewing details for CVE-2025-36350 and CVE-2025-36357",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Looks like MSRC typo'd (and still has typo'd) CVE-2024-36357 and CVE-2024-36350 to CVE-2025-[nnnnn] (verified against the original AMD advisory). This results in broken links on their side in a few places, and we're consuming that broken feed in MSRC parsing.\n\nWe should be able to fix this with updates to our MSRC feed generation, at which point an `nvd` feed run (the daily one, not the every-half-hour `vulnerabilities` feed run) will publish a new feed and Fleet servers will consume it later and remove the affected hosts (the source for these OS-level vulns is the MSRC feed)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jkatz01 Let's work on this one first. Will throw you more tickets as needed.\n\nMoving this to the release board."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jkatz01 You'll need to comment here to ack so I can actually assign you in GitHub, at least for now."
          },
          {
            "author": {
              "login": "jkatz01"
            },
            "body": "@iansltx Commenting so you can assign me. "
          },
          {
            "author": {
              "login": "jkatz01"
            },
            "body": "@mostlikelee @iansltx I wrote a [draft](https://github.com/fleetdm/fleet/pull/31812) for skipping (hardcoded) CVEs in the MSRC feed parsing. I wrote and ran a unit test for it.\n\nHowever, I have not been able to reproduce the bug and get these CVEs on my local environment, so I have not been able to manually make sure it works and the CVEs don't show up from the MSRC feed.\n\nCould I get some advice on what to do next? Is it possible to maybe connect one of the computers that have this issue to my fleet instance or test my code in dogfood?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jkatz01 I believe you could revise data in the DB (`operating_systems` table) to match the OS name and version shown [in Dogfood](https://dogfood.fleetdm.com/hosts/manage?page=0\u0026order_key=display_name\u0026order_direction=asc\u0026vulnerability=CVE-2025-36350). All of the affected hosts have been offline for awhile so not sure whether they're even in the state that would repro at this point."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "Tracking carry over work \n\n\n- Refactor work [request](https://github.com/fleetdm/fleet/pull/31018#discussion_r2225913183): Pull out Update card and Self Service card into components  on their own files \n- Unreleased bug: Multiple requests now timing out because 60 second FE timeout is not being reset",
          "number": 31309,
          "repository": "fleetdm/fleet",
          "title": "Self-service actions carryover",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31309"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdAjcc",
        "labels": [
          "~frontend",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ð£ In progress",
        "title": "Self-service actions carryover",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Confirmed during 8/4 standup:: This was previously approved in #31384, but since much of the code has been in flux, I am holding off until 4.72 is completely QAed and this PR will solely be a code organization PR and no changes to ensure another deep dive QA will be unnecessary"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Upped this from a 3 to a 5 because I realized that there are 0 tests on the VPP install modal, software package install modal, and software uninstall modal. \n\nNeeded tests on each of those modals: \n- various status message based on what page they're on and whether it's successfulxpendingxfailed\n- whether they show versions or not\n- whether they show more details\n- what the action button is (since it's different for self-service vs admin)"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.72\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\n\u003cimg width=\"720\" height=\"592\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3fb10186-89d6-4b2f-9d51-de7941e432a2\" /\u003e\n\n### ð ï¸ To fix\n\nProduct designer @marko-lisica \n\nFor tarballs, we'll go straight to the \"Installed\" status (won't wait for refetch, as it's not in the inventory). Click on \"Installed\" will show the details modal with install script output.\n\nNo tooltips over \"Installed.\" See this separate issue here: https://github.com/fleetdm/fleet/issues/31297\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a tar.gz file to a team's library, made available for Self Service. Include install and uninstall scripts.\nFor a physical linux box you can use the go tar.gz file here: https://drive.google.com/file/d/15uKzk2J7IYH7MNYhBHdPAKP_uvVXSx1Z/view?usp=sharing\nFor a linux VM on Apple Silicon you can use the go tar.gz file here: https://drive.google.com/file/d/1ktV0lZH88Q7lqdFUIo3YCt_mgcql1NUN/view?usp=sharing\nInstall script is: `mv $INSTALLER_PATH/* /usr/local`\nUninstall script is: `rm -rf /usr/local/go`\n2. On enrolled linux host, open Self service and click \"Install\"\n3. Wait for install to complete, refetch to complete, then hover over \"Installed\" status\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nI used a different tar.gz when reproducing to gather additional info, seems this is only happening for the first install.\nAPI Response:\n```\n    {\n      \"id\": 3875,\n      \"name\": \"gimp-3.0.0.tar.gz\",\n      \"source\": \"tgz_packages\",\n      \"status\": \"installed\",\n      \"installed_versions\": null,\n      \"software_package\": {\n        \"name\": \"gimp-3.0.0.tar.gz\",\n        \"automatic_install_policies\": null,\n        \"version\": \"\",\n        \"platform\": \"linux\",\n        \"self_service\": true,\n        \"icon_url\": null,\n        \"last_install\": {\n          \"install_uuid\": \"e48dbdaf-dde1-44cb-b8c2-6f29839eeaec\",\n          \"installed_at\": \"2025-08-11T14:28:44.201641Z\"\n        },\n        \"last_uninstall\": null,\n        \"package_url\": null\n      },\n      \"app_store_app\": null\n    },\n```",
          "number": 31721,
          "repository": "fleetdm/fleet",
          "title": "tar.gz installs show in Self service as fetching inventory after install and refetch has already happened",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31721"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdbCMM",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ð¥ Ready",
        "title": "tar.gz installs show in Self service as fetching inventory after install and refetch has already happened",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reassigning because I'm right in the middle of the interrupt work swimlane :("
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia thanks for noticing that _uninstall_ is the tooltip being shown, so we're going to want an API response for this one to troubleshoot further. Given that @jmwatts is out and to avoid a repro rabbit trail, going to make the call of not blocking the release for this; we'll troubleshoot and resolve in 4.73."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "More info:\nrecently_uninstalled UI status would only show if `newerDate === lastUninstallDate` which is super bizarre in this case and would require repro with API responses"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Updated ticket to show install UI status\n"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts / @iansltx I might need more help reproducing this, maybe in a call?\n\nBasically, something in `getUiStatus` helper function is pointing this installer to the wrong ui_status\n\nHere's the code:\n```\nexport const getUiStatus = (\n  software: IHostSoftware,\n  isHostOnline: boolean,\n  hostSoftwareUpdatedAt?: string | null\n): IHostSoftwareUiStatus =\u003e {\n  const { status, installed_versions } = software;\n\n  const lastInstallDate = getLastInstall(software)?.installed_at;\n  const lastUninstallDate = getLastUninstall(software)?.uninstalled_at;\n  const installerVersion = getInstallerVersion(software);\n\n  // 1. Failed install states\n  if (status === \"failed_install\") {\n    if (\n      installerVersion \u0026\u0026\n      installed_versions \u0026\u0026\n      installed_versions.some(\n        (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n      )\n    ) {\n      return \"failed_install_update_available\";\n    }\n    return \"failed_install\";\n  }\n\n  // 2. Failed uninstall states\n  if (status === \"failed_uninstall\") {\n    if (\n      installerVersion \u0026\u0026\n      installed_versions \u0026\u0026\n      installed_versions.some(\n        (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n      )\n    ) {\n      return \"failed_uninstall_update_available\";\n    }\n    return \"failed_uninstall\";\n  }\n\n  // 3. Pending install/update\n  if (status === \"pending_install\") {\n    if (\n      installed_versions \u0026\u0026\n      installed_versions.length \u003e 0 \u0026\u0026\n      installerVersion\n    ) {\n      const isUpdate = installed_versions.some(\n        (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n      );\n      if (isUpdate) {\n        return isHostOnline ? \"updating\" : \"pending_update\";\n      }\n    }\n    return isHostOnline ? \"installing\" : \"pending_install\";\n  }\n\n  // 4. Pending uninstall\n  if (status === \"pending_uninstall\") {\n    return isHostOnline ? \"uninstalling\" : \"pending_uninstall\";\n  }\n\n  // **Recently_uninstalled check comes BEFORE update_available**\n  if (software.status === null \u0026\u0026 lastUninstallDate \u0026\u0026 hostSoftwareUpdatedAt) {\n    const newerDate = getNewerDate(hostSoftwareUpdatedAt, lastUninstallDate);\n    if (newerDate === lastUninstallDate) {\n      return \"recently_uninstalled\";\n    }\n  }\n\n  // 5. Update available and recently updated\n  if (\n    installerVersion \u0026\u0026\n    installed_versions \u0026\u0026\n    installed_versions.some(\n      (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n    )\n  ) {\n    if (!lastInstallDate) {\n      return \"update_available\";\n    }\n    const newerDate = hostSoftwareUpdatedAt\n      ? getNewerDate(hostSoftwareUpdatedAt, lastInstallDate)\n      : lastInstallDate;\n    return newerDate === lastInstallDate\n      ? \"recently_updated\"\n      : \"update_available\";\n  }\n\n  // 6. Recently installed (not an update)\n  if (\n    software.status === \"installed\" \u0026\u0026\n    lastInstallDate \u0026\u0026\n    hostSoftwareUpdatedAt\n  ) {\n    const newerDate = getNewerDate(hostSoftwareUpdatedAt, lastInstallDate);\n    if (newerDate === lastInstallDate) {\n      return \"recently_installed\";\n    }\n  }\n\n  // 7. Tarballs edge case\n  if (software.source === \"tgz_packages\" \u0026\u0026 software.status === \"installed\") {\n    return \"installed\";\n  }\n\n  // 8. Default to installed or uninstalled based on installed_versions\n  if (installed_versions \u0026\u0026 installed_versions.length \u003e 0) return \"installed\";\n\n  return \"uninstalled\";\n};\n```\n\nSomehow it's passing both if statements in line 6 where it should be failing at least one of them:\nEither should fail:\n```\n    software.status === \"installed\" \u0026\u0026\n    lastInstallDate \u0026\u0026\n    hostSoftwareUpdatedAt\n```\n\nor should fail \n```\n    const newerDate = getNewerDate(hostSoftwareUpdatedAt, lastInstallDate);\n    if (newerDate === lastInstallDate) {\n```\n\nbut I can't tell which or why without help repro in real time.\n\nHere's a diagram of what we want fixed (crossed out is current behavior, circled is wanted behavior):\n\n\u003cimg width=\"396\" height=\"703\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/de100dc2-cee1-4260-bd33-9ff8ffc5cc61\" /\u003e\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "2nd to last API response:\n```\n{\n  \"host\": {\n    \"created_at\": \"2025-08-14T15:02:47Z\",\n    \"updated_at\": \"2025-08-14T20:55:26Z\",\n    \"software_updated_at\": \"2025-08-14T20:49:24Z\",\n    \"id\": 46,\n    \"detail_updated_at\": \"2025-08-14T20:49:25Z\",\n    \"label_updated_at\": \"2025-08-14T20:49:25Z\",\n    \"policy_updated_at\": \"2025-08-14T20:49:25Z\",\n    \"last_enrolled_at\": \"2025-08-14T15:02:47Z\",\n    \"seen_time\": \"2025-08-14T20:55:31Z\",\n    \"refetch_requested\": true,\n    \"hostname\": \"nimda-Vivobook\",\n    \"uuid\": \"18005795-ed98-4640-89fe-f123c7dc0919\",\n    \"platform\": \"ubuntu\",\n    \"osquery_version\": \"5.19.0\",\n    \"orbit_version\": \"25.8.8984\",\n    \"fleet_desktop_version\": \"1.45.1\",\n    \"scripts_enabled\": true,\n    \"os_version\": \"Ubuntu 24.04.2 LTS\",\n    \"build\": \"\",\n    \"platform_like\": \"debian\",\n    \"code_name\": \"noble\",\n    \"uptime\": 283194000000000,\n    \"memory\": 16378298368,\n    \"cpu_type\": \"x86_64\",\n    \"cpu_subtype\": \"186\",\n    \"cpu_brand\": \"13th Gen Intel(R) Core(TM) i3-1315U\",\n    \"cpu_physical_cores\": 6,\n    \"cpu_logical_cores\": 8,\n    \"hardware_vendor\": \"ASUSTeK COMPUTER INC.\",\n    \"hardware_model\": \"Vivobook_ASUSLaptop X1404VA_X1404VA\",\n    \"hardware_version\": \"1.0\",\n    \"hardware_serial\": \"T2N0CX02929507A\",\n    \"computer_name\": \"nimda-Vivobook\",\n    \"primary_mac\": \"ec:8e:77:85:3b:c6\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 60,\n    \"logger_tls_period\": 4,\n    \"team_id\": null,\n    \"pack_stats\": null,\n    \"team_name\": null,\n    \"users\": [\n      {\n        \"uid\": 0,\n        \"username\": \"root\",\n        \"type\": \"\",\n        \"groupname\": \"root\",\n        \"shell\": \"/bin/bash\"\n      },\n      {\n        \"uid\": 1000,\n        \"username\": \"nimda\",\n        \"type\": \"\",\n        \"groupname\": \"nimda\",\n        \"shell\": \"/bin/bash\"\n      }\n    ],\n    \"gigs_disk_space_available\": 938.2,\n    \"percent_disk_space_available\": 93,\n    \"gigs_total_disk_space\": 1006.45,\n    \"issues\": {\n      \"failing_policies_count\": 0,\n      \"critical_vulnerabilities_count\": 0,\n      \"total_issues_count\": 0\n    },\n    \"mdm\": {\n      \"enrollment_status\": null,\n      \"dep_profile_error\": false,\n      \"server_url\": null,\n      \"name\": \"\",\n      \"encryption_key_available\": false,\n      \"encryption_key_archived\": false,\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": null,\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": null,\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"\",\n        \"detail\": \"\",\n        \"bootstrap_package_name\": \"\"\n      },\n      \"device_status\": \"unlocked\",\n      \"pending_action\": \"\",\n      \"connected_to_fleet\": false\n    },\n    \"refetch_critical_queries_until\": null,\n    \"dep_assigned_to_fleet\": false,\n    \"last_restarted_at\": \"2025-08-11T14:09:31Z\",\n    \"policies\": [],\n    \"labels\": [\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 9,\n        \"author_id\": null,\n        \"name\": \"All Hosts\",\n        \"description\": \"All hosts which have enrolled in Fleet\",\n        \"query\": \"select 1;\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 11,\n        \"author_id\": null,\n        \"name\": \"Ubuntu Linux\",\n        \"description\": \"All Ubuntu hosts\",\n        \"query\": \"select 1 from os_version where platform = 'ubuntu';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 15,\n        \"author_id\": null,\n        \"name\": \"All Linux\",\n        \"description\": \"All Linux distributions\",\n        \"query\": \"SELECT 1 FROM osquery_info WHERE build_platform LIKE '%ubuntu%' OR build_distro LIKE '%centos%';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"packs\": [\n      {\n        \"created_at\": \"2025-03-06T19:03:44Z\",\n        \"updated_at\": \"2025-03-06T19:03:44Z\",\n        \"id\": 1,\n        \"name\": \"something\",\n        \"disabled\": false,\n        \"type\": null,\n        \"labels\": null,\n        \"label_ids\": null,\n        \"hosts\": null,\n        \"host_ids\": null,\n        \"teams\": null,\n        \"team_ids\": null\n      }\n    ],\n    \"batteries\": null,\n    \"last_mdm_enrolled_at\": null,\n    \"last_mdm_checked_in_at\": null,\n    \"status\": \"online\",\n    \"display_text\": \"nimda-Vivobook\",\n    \"display_name\": \"nimda-Vivobook\"\n  },\n  \"self_service\": true,\n  \"org_logo_url\": \"\",\n  \"org_logo_url_light_background\": \"\",\n  \"org_contact_url\": \"https://fleetdm.com/company/contact\",\n  \"license\": {\n    \"tier\": \"premium\",\n    \"organization\": \"Fleet Device Management Inc.\",\n    \"device_count\": 100,\n    \"expiration\": \"2025-12-30T18:00:00-06:00\",\n    \"note\": \"Created with Fleet License key dispenser\",\n    \"managed_cloud\": false\n  },\n  \"global_config\": {\n    \"mdm\": {\n      \"enabled_and_configured\": true\n    },\n    \"features\": {\n      \"enable_software_inventory\": true\n    }\n  }\n}\n\n```\nResponse after refetch completed:\n```\n{\n  \"host\": {\n    \"created_at\": \"2025-08-14T15:02:47Z\",\n    \"updated_at\": \"2025-08-14T20:56:05Z\",\n    \"software_updated_at\": \"2025-08-14T20:49:24Z\",\n    \"id\": 46,\n    \"detail_updated_at\": \"2025-08-14T20:56:06Z\",\n    \"label_updated_at\": \"2025-08-14T20:56:06Z\",\n    \"policy_updated_at\": \"2025-08-14T20:56:06Z\",\n    \"last_enrolled_at\": \"2025-08-14T15:02:47Z\",\n    \"seen_time\": \"2025-08-14T20:55:31Z\",\n    \"refetch_requested\": false,\n    \"hostname\": \"nimda-Vivobook\",\n    \"uuid\": \"18005795-ed98-4640-89fe-f123c7dc0919\",\n    \"platform\": \"ubuntu\",\n    \"osquery_version\": \"5.19.0\",\n    \"orbit_version\": \"25.8.8984\",\n    \"fleet_desktop_version\": \"1.45.1\",\n    \"scripts_enabled\": true,\n    \"os_version\": \"Ubuntu 24.04.2 LTS\",\n    \"build\": \"\",\n    \"platform_like\": \"debian\",\n    \"code_name\": \"noble\",\n    \"uptime\": 283595000000000,\n    \"memory\": 16378298368,\n    \"cpu_type\": \"x86_64\",\n    \"cpu_subtype\": \"186\",\n    \"cpu_brand\": \"13th Gen Intel(R) Core(TM) i3-1315U\",\n    \"cpu_physical_cores\": 6,\n    \"cpu_logical_cores\": 8,\n    \"hardware_vendor\": \"ASUSTeK COMPUTER INC.\",\n    \"hardware_model\": \"Vivobook_ASUSLaptop X1404VA_X1404VA\",\n    \"hardware_version\": \"1.0\",\n    \"hardware_serial\": \"T2N0CX02929507A\",\n    \"computer_name\": \"nimda-Vivobook\",\n    \"primary_mac\": \"ec:8e:77:85:3b:c6\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 60,\n    \"logger_tls_period\": 4,\n    \"team_id\": null,\n    \"pack_stats\": null,\n    \"team_name\": null,\n    \"users\": [\n      {\n        \"uid\": 0,\n        \"username\": \"root\",\n        \"type\": \"\",\n        \"groupname\": \"root\",\n        \"shell\": \"/bin/bash\"\n      },\n      {\n        \"uid\": 1000,\n        \"username\": \"nimda\",\n        \"type\": \"\",\n        \"groupname\": \"nimda\",\n        \"shell\": \"/bin/bash\"\n      }\n    ],\n    \"gigs_disk_space_available\": 937.9,\n    \"percent_disk_space_available\": 93,\n    \"gigs_total_disk_space\": 1006.45,\n    \"issues\": {\n      \"failing_policies_count\": 0,\n      \"critical_vulnerabilities_count\": 0,\n      \"total_issues_count\": 0\n    },\n    \"mdm\": {\n      \"enrollment_status\": null,\n      \"dep_profile_error\": false,\n      \"server_url\": null,\n      \"name\": \"\",\n      \"encryption_key_available\": false,\n      \"encryption_key_archived\": false,\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": null,\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": null,\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"\",\n        \"detail\": \"\",\n        \"bootstrap_package_name\": \"\"\n      },\n      \"device_status\": \"unlocked\",\n      \"pending_action\": \"\",\n      \"connected_to_fleet\": false\n    },\n    \"refetch_critical_queries_until\": null,\n    \"dep_assigned_to_fleet\": false,\n    \"last_restarted_at\": \"2025-08-11T14:09:31Z\",\n    \"policies\": [],\n    \"labels\": [\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 9,\n        \"author_id\": null,\n        \"name\": \"All Hosts\",\n        \"description\": \"All hosts which have enrolled in Fleet\",\n        \"query\": \"select 1;\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 11,\n        \"author_id\": null,\n        \"name\": \"Ubuntu Linux\",\n        \"description\": \"All Ubuntu hosts\",\n        \"query\": \"select 1 from os_version where platform = 'ubuntu';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 15,\n        \"author_id\": null,\n        \"name\": \"All Linux\",\n        \"description\": \"All Linux distributions\",\n        \"query\": \"SELECT 1 FROM osquery_info WHERE build_platform LIKE '%ubuntu%' OR build_distro LIKE '%centos%';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"packs\": [\n      {\n        \"created_at\": \"2025-03-06T19:03:44Z\",\n        \"updated_at\": \"2025-03-06T19:03:44Z\",\n        \"id\": 1,\n        \"name\": \"something\",\n        \"disabled\": false,\n        \"type\": null,\n        \"labels\": null,\n        \"label_ids\": null,\n        \"hosts\": null,\n        \"host_ids\": null,\n        \"teams\": null,\n        \"team_ids\": null\n      }\n    ],\n    \"batteries\": null,\n    \"last_mdm_enrolled_at\": null,\n    \"last_mdm_checked_in_at\": null,\n    \"status\": \"online\",\n    \"display_text\": \"nimda-Vivobook\",\n    \"display_name\": \"nimda-Vivobook\"\n  },\n  \"self_service\": true,\n  \"org_logo_url\": \"\",\n  \"org_logo_url_light_background\": \"\",\n  \"org_contact_url\": \"https://fleetdm.com/company/contact\",\n  \"license\": {\n    \"tier\": \"premium\",\n    \"organization\": \"Fleet Device Management Inc.\",\n    \"device_count\": 100,\n    \"expiration\": \"2025-12-30T18:00:00-06:00\",\n    \"note\": \"Created with Fleet License key dispenser\",\n    \"managed_cloud\": false\n  },\n  \"global_config\": {\n    \"mdm\": {\n      \"enabled_and_configured\": true\n    },\n    \"features\": {\n      \"enable_software_inventory\": true\n    }\n  }\n}\n\n```\n\nSoftware response after refetch:\n```\n {\n      \"id\": 3526,\n      \"name\": \"go1.24.3.linux-amd64.tar.gz\",\n      \"source\": \"tgz_packages\",\n      \"status\": \"installed\",\n      \"installed_versions\": null,\n      \"software_package\": {\n        \"name\": \"go1.24.3.linux-amd64.tar.gz\",\n        \"automatic_install_policies\": null,\n        \"version\": \"\",\n        \"platform\": \"linux\",\n        \"self_service\": true,\n        \"icon_url\": null,\n        \"last_install\": {\n          \"install_uuid\": \"fdf7eeae-2df2-4694-95a1-e3665bfc0f6a\",\n          \"installed_at\": \"2025-08-14T20:55:26.882191Z\"\n        },\n        \"last_uninstall\": null,\n        \"package_url\": null\n      },\n      \"app_store_app\": null\n    },\n```"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Looks like this is a backend bug, specifically, `software_updated_at` on the host isn't getting updated after refetch:\n\n`\"software_updated_at\": \"2025-08-14T20:49:24Z\",`\nSo the frontend thinks the refetch hasn't happened because the API isn't returning an updated `software_updated_at` timestamp that's newer than the `last_install.installed_at`, which it has, but BE some reason didn't update `software_updated_at`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica So, this appears to currently be expected behavior, but we need to figure out how to handle this. Bringing this to design review. Context:\n\n1. Currently, FE ârecently installedâ UX relies on software last updated\n2. This persists for tar.gz installers when theyâre the only thing that changed on a host because tarballs donât get inventoried even after the auto-refetch post-install\n3. Because there are no changes in inventory resulting from a tarball install, we hit the no-op branch when running software inventory even though we refetched successfully, which means that the software updated timestamp isn't touched\n4. If inventory doesn't change, we explicitly shouldnât update software last updated timestamp per [this test](https://github.com/fleetdm/fleet/blob/250d26f53a0592f2748329f32c7df5e110ddc919/server/datastore/mysql/hosts_test.go#L3149-L3160)\n5. We _also_ no-op when last opened time on all inventoried software differs by less than a configured delta; the default is currently one hour despite changes in 4.71 for refetching vitals more often; if we touch the software last updated time on no-ops while retaining this delta we'll be shwoing software as recently updated when last opened times are stale\n6. Potential option: have FE look at details-updated timestamp rather than software-updated timestamp and keep existing behavior (donât touch updated timestamp on no-op)\n\n[More context in Slack](https://fleetdm.slack.com/archives/C086V2QK76X/p1755195429676139)"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: v4.68.1\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nWhen setting up a policy automation, the background page scrolls unexpectedly. \n\nThis only occurs when the browser window is not full height, and the selection dropdown overflows the bottom of the page. \n\nLoom recording:\n\nhttps://www.loom.com/share/c796032677724e649c6af960ed3b0fc2?sid=216d9868-60eb-4d4e-b347-393800f46e2f\n\n\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Create a team \n2. Add policies (creating a large number of policies makes this easier to reproduce without making the screen 100px tall)\n3. Add scripts (see above)\n4. Navigate to the team's Policy view\n5. Adjust height of the browser window until the policy table overflows the bottom of the page. \n6. Make sure you are scrolled up to the top of the page. \n7. Click on **Manage automations**\n8. Select the last listed policy\n9. Open the dropdown menu \n10. Observe scrolling\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica\n\nSet dropdown menu `max-height` to 200px, so that the dropdown menu fits the modal. This should be changed for Scripts and Software automations modal. \n\n### est.\n\n\u003cimg width=\"467\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80331afe-b6e9-41ca-a219-9e4c52336bcd\" /\u003e",
          "number": 30004,
          "repository": "fleetdm/fleet",
          "title": "UI - Background page scrolls while editing Policy automations.",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30004"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdL8SA",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "~assisting g-orchestration",
          "customer-cisneros",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "UI - Background page scrolls while editing Policy automations.",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet UI scrolling issue on policy automations page #6515](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/e0769c7b-805a-4272-897a-de7c5f7af36b)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Timebox to 1 point."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @marko-lisica ! What a great, simple solution \u003c3\n\nEst: 1"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Was going to evict this bit the fix looks trivial so going to keep in for now."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \n\n```\n{\n  \"version\": \"0.0.0-SNAPSHOT-9e5a9a0\",\n  \"branch\": \"rc-minor-fleet-v4.71.0\",\n  \"revision\": \"9e5a9a045e9ba739985175fb85aeb07abde96ed3\",\n  \"go_version\": \"go1.24.4\",\n  \"build_date\": \"2025-07-10\",\n  \"build_user\": \"runner\"\n}\n```\n\n**Web browser and operating system**: latest Chrome\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\n\u003cimg width=\"308\" height=\"78\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a30c63e4-fd27-4712-b5fc-4aecd8415dcf\" /\u003e\n\nArchive Utility.app has been natively installed on macOS for years. In the Fleet software inventory it's showing a Linux icon.\n\n### ð§âð» Â Steps to reproduce\n\n1. Look at Software inventory on any Mac enrolled in Fleet.\n\n### ð¯ï¸ More info _(optional)_\n\nThe app is not shipped in /Applications - It is located in `/System/Library/CoreServices/Applications/Archive Utility.app` so perhaps there is some sort of hard coded assumptions about native macOS apps based on filepath.\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\nApple icon should be displayed instead of Linux.\n\nOS icons (penguin, Windows, Apple, etc.) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software titles/versions. See issue comments for more context\n",
          "number": 30803,
          "repository": "fleetdm/fleet",
          "title": "Linux icon showing in software inventory for macOS native app",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30803"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxFk",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Linux icon showing in software inventory for macOS native app",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The reason for this is we starts-with match on Linux platform names for app icons, and `arch` is a Linux platform name.\n\nWe wind up using the same code paths for software icons as for OS icons, so this code winds up being rather brittle; just dropping \"Arch\" out of the list would mean we'd get a generic package icon for Arch Linux hosts rather than the penguin. So getting this right without breaking something else is going to require a bit of a refactor as the current algorithm is too naive.\n\n@marko-lisica do we even want to show the penguin for software packages? Our default for Linux packages of various types is a generic package icon, so right now we have a mix of penguins (for items that have a linux platform inside the name) and generic package icons (for everything else), for no reason that's obvious to an admin. Maybe OS icons (penguin, Windows, Apple OSes, Android, ChromeOS) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software?\n\nPushing this back to In Progress to get an answer on the above."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Maybe OS icons (penguin, Windows, Apple OSes, Android, ChromeOS) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software?\n\n@iansltx I think this is a good solution. We have a default icon for Linux packages, so we won't need the \"penguin\" icon for that purpose. Also, other platforms have a default icon for packages."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752671903129569"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks for filing @nonpunctual and looking into the root cause @iansltx and product designing/updating the to-fix @marko-lisica .\n\nBold Est: 1 rounding up to 2 to add tests and internal documentation\n\n"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nOptimize data storage retrieval for Linux vulnerabilities such that at large host counts retrieval is quick and doesn't create undue database load.\n\nThis likely requires creating another indexed database table or two and populating host counts when other vulnerability counts are populated, e.g. host_kernel_software_counts containing both OS ID and kernel software ID.\n\n- [ ] Load a bunch (~50k, don't care about MDM) of Linux hosts with kernel software and confirm performance impact of calculating kernel software stats. If osquery-perf needs modifications as part of this work to show a distribution of realistic kernel versions, that work is in-scope. Local testing can be used to measure read performance. This probably requires a loadtest instance, but may be doable locally.\n- [ ] Document how to configure osquery-perf to simulate the set of hosts mentioned above.\n\n## Condition of satisfaction\n\nLoading the operating systems list on 50k Linux hosts with a large number of kernels/kernel vulns is performant, as is loading each individual operating system version, and any write optimizations to make reads performant are confirmed to incur an acceptable amount of database load.",
          "number": 31214,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: Optimization",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31214"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpok",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Linux Vulns: Optimization",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962273099)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jakestenger this is a subtask.  you'll want to add customer labels to the parent story"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.67.3\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nSee #28626. We've avoided the nil pointer panic (via #28674) but there's still probably an underlying issue for getting us to the warning point in the first place.\n\n### ð§âð» Â Steps to reproduce\n\nTODO; primary effort for this ticket will be finding a valid repro scenario, and confirmaing expected behavior on software ingest for that repro behavior.\n\nTo see \n```\nlevel=warn msg=\"updateModifiedHostSoftwareDB: last opened at is nil for new software, but not for current software\" \n```\nSteps to reproduce are:\n\n1. Install software via fleet that does not automatically open after install (do not use CloudFlare Warp or TeamViewer), and open the software after install, then close it.\n2. Refetch host vitals\n3. Confirm \"Last used\" time is shown on Host \u003e Software \u003e Inventory tab\n4. Reinstall or Update the software via Fleet and make sure it doesn't open on its own. Do not open it. \n5. Refetch completes automatically after installation (or refetch manually)\n6. \"Last used\" time is cleared out on Host \u003e Software \u003eInventory tab\n7. Warning is shown in the log\n\n\n### ð¯ï¸ More info\n\nThusfar we have only been able to reproduce this issue in customer environments, so what we probably need is enough logging to determine which host(s) have this issue, and then both snapshots of current host software and incoming detail queries to reproduce the broad issue.\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\nUI changes [in Figma](https://www.figma.com/design/zST6dTwgH0B58BvtWEIzcQ/-29061%F0%9F%AA%B2Warning-state-on-last-opened-time-calculation-when-changing-the-name-of-an-existing-software?node-id=0-1\u0026t=0OUFyz3ugeIP80eA-1) plus changes below:\n\n- Drop the level of the last opened time exists -\u003e null swap warning (either remove entirely, keep as debug, or only log for when the source is something other than apps?)\n- API docs changes: #31958",
          "number": 29061,
          "repository": "fleetdm/fleet",
          "title": "(Timebox) ðª²Warning state on last-opened time calculation when changing the name of an existing software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29061"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxBg",
        "labels": [
          "bug",
          ":release",
          "~timebox",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "ð£ In progress",
        "title": "ðª²Warning state on last-opened time calculation when changing the name of an existing software",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I see that the steps to reproduce is still a **to do**.\n\nHowever, the way you've written it sounds like part of the ticket will be to find a way to reproduce this. I'm a little uncertain how to proceed. Should I move this forward and indicate that todo as part of the fix area?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Whoops, my bad on removing `:reproduce`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Yeah, this will need to be moved through to engineering with the reproduce tag intact as we'll likely need to coordinate with customers to get a repro."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "let's timebox this, whether it is reproduction, or adding logging"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulling the :reproduce label off of this since that makes it less clear whose work queue this is in. Timebox is for investigation/repro by an engineer."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev heads up that this is a related ticket: https://github.com/fleetdm/fleet/issues/29050"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman @marko-lisica See [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1754591131297309) for context on why this is Waiting. We have some product questions on whether/when we should clear \"last opened\", and the behavior may not be consistent right now cross-os (e.g. @zwass mentioned that we don't take version into account when checking package last-opened times in Linux)."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Was able to reproduce the warning in the log:\n\n```\nlevel=warn ts=2025-08-07T19:08:27.209411Z msg=\"updateModifiedHostSoftwareDB: last opened at is nil for new software, but not for current software\" new_software=\"Microsoft Word\" current_software=\"Microsoft Word\" bundle_identifier=com.microsoft.Word\n```\nBy doing the following:\n\n1. Install Microsoft Word, and open\n2. Refetch host vitals\n3. Confirm \"Last used\" time is shown on Host \u003e Software \u003eInventory tab\n4. Reinstall or Update Microsoft Word via Fleet, do not open\n5. Refetch completes after installation automatically\n6. \"Last used\" time is cleared out on Host \u003e Software \u003eInventory tab\n\nAdded steps to repro in description."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Not sure we need more confirmation, but..\nI downloaded firefox 139.0.4, installed it\n\n\u003cimg width=\"1206\" height=\"105\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9c714aa4-6e4b-4e9a-9741-8f5bdddcd980\" /\u003e\n\nOpened firefox\n\n\u003cimg width=\"1219\" height=\"126\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a07f13ee-cacb-4f58-bbde-092b31846c7b\" /\u003e\n\nDownloaded firefox 141.0.3, installed it\n\n\u003cimg width=\"1203\" height=\"126\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9f4138ea-edd9-4bf8-9c00-e1c274526c2f\" /\u003e"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @noahtalerman @marko-lisica See [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1754591131297309) for context on why this is Waiting. We have some product questions on whether/when we should clear \"last opened\", and the behavior may not be consistent right now cross-os (e.g. @zwass mentioned that we don't take version into account when checking package last-opened times in Linux).\n\nUp to @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "waiting on copy change, documenting the oddity"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "- A tooltip will be added on macOS hosts to indicate that updating the application in place will resets last opened time\n- A tooltip will be added on Windows/Linux hosts to indicate that last open time is tied to an install path/package name verse a version. So updating an application in place will not clear the last open time.\n- Add documentation in the API endpoint describing the nuance.\n- Change the log level when it is detected that a last open time will be changed to null and the source is not apps (aka windows/linux)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "bringing this to design review"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin managing software via GitOps,\n| I want to override FMA install/uninstall scripts\n| so that I can customize the install/uninstall behavior.\n\n## Key result\n\n- Auto-update (patch) any software without writing custom policies\n- Customer request\n\n## Original requests\n\n- #21825\n\n## Context\n- Product designer: @iansltx  \n- Engineering: @iansltx  \n\n## Changes\n\n### Product\n- [x] UI changes: No changes\n- [x] CLI (fleetctl) usage changes: No changes (we'll make changes in GitOps code that lives in fleetctl, but nothing in the CLI interface changes not covered by YAML)\n- [ ] YAML changes: #30826\n- [x] GitOps generation changes: No changes; FMAs are currently generated as custom packages with URLs, with install/uninstall/pre-install/post-install specified, and switching generated YAML to use FMA slugs is out of scope of this story.\n- [x] REST API changes: No changes to public API endpoints\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] Changes to paid features or tiers: Software is Fleet Premium\n- [x] Transparency changes: No changes\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor endpoint for uploading custom packages + FMAs no longer overrides install/uninstall scripts when a slug is supplied and install/uninstall scripts are supplied\n- [ ] Add pre-install query, install/uninstall/post-install scripts to fields recognized when deserializing FMA YAML, pass to batch software endpoint\n\nNOTE: There are no contributor API docs changes for this story because the requisite fields already exist on the batch payload.\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n1. Create a YAML file with all four new fields added. Apply the YAML. Confirm that the FMA in the UI reflects all fields.\n2. Remove all but the install script, revise the install script, and re-apply. Confirm that the FMA in the UI blanks out pre-install query/post-install script, revises the install script, and reverts to the manifest version of the uninstall script.\n3. Remove the install script field in YAML and re-apply. Confirm that the FMA in the UI reverts to the manifest version of the install script.\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 25636,
          "repository": "fleetdm/fleet",
          "title": "GitOps: Override Fleet-maintained app install/uninstall scripts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/25636"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoeo",
        "labels": [
          "story",
          ":release",
          "customer-schur",
          "customer-eponym",
          "customer-easterwood",
          "customer-numa",
          "customer-mozartia",
          "customer-gispen",
          "customer-fourier",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "GitOps: Override Fleet-maintained app install/uninstall scripts",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reviewing the #25499 recording from yesterday, the topic came up of what is/isn't editable for FMAs in the Edit UI.\n\nThinking that now that we have install scripts for FMAs on GitHub, and those scripts can be pushed as part of an FMA update as of this ticket, we remove editability for install and uninstall scripts in particular. If we got something wrong, we can link users to the FMA slug to suggest a change. This has the side effect of notifying us when we have something wrong, versus an IT admin performing a one-off fix that we don't know anything about.\n\nPost-install script and pre-install query would stay editable since we don't have defaults for either.\n\nIf we need an escape hatch, we can offer admins the ability to unlink the package from being Fleet-maintained, at which point it behaves as a custom package (and we'd switch any Fleet-maintained policies to \"you're on your own for this\" mode at the same time). If an admin wants to opt back into us maintaining the package, they can delete/re-add, which is relatively low-effort since we're handling the heavy parts of config."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review today, we'll keep all scripts editable, and overwrite them when we import a new FMA version."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Self-assigning this to give @jahzielv more room this sprint."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman @eugkuo this was requested by `customer-numa` yesterday.  I think we should prioritize this in the next design sprint.\n\nCC: @zayhanlon @ddribeiro "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo during feature fest, we decided to come back to this in a future design sprint. Prioritizing other work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One tricky bit on FMA updates is for (un)install scripts where the script needs to be modified by the IT admin to e.g. add a license key as an argument to a vendor-supplied install script. Idea is that these actions can't be performed in a post-install script (which we don't manage with FMAs), so an IT admin would need to munge the install script, and on an update of the app we'd need to either give them a heads-up or incorporate their changes.\n\n@mostlikelee you mentioned that this is already an issue with Cloudflare WARP for a license key or similar. Do you have docs on that? I saw #24216 and [Cloudflare's manual deployment docs](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/manual-deployment/), but the former doesn't appear to be configurable via the CLI, and the latter references a CLI that could be included in a post-install script (similar to what we see with SentinelOne configuration).\n\nSo either I'm missing something or there's probably a better example out there of install/uninstall (not post-install) scripts that would need to be tweaked by an IT admin after an FMA is imported, and we can use that example to determine how we can reasonably persist config across FMA updates (e.g. via extra env vars)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman the customer ask here is to manage this via gitops to support the following workflow:\n1. customer updates app to latest version on canary team\n2. customer deploys app to hosts on canary team\n3. customer tests app on canary team\n4. customer deploys app to production team\n\nMy proposal:\n\n1. Add a `version` field to FMAs:\n```\nfleet_maintained_apps:\n    - slug: zoom/darwin\n      self_service: true\n      version: 1.0.1\n      categories:\n        - Productivity\n```\n\n2.  Add an option to bump versions in gitops config:\n\nbump all apps in file:\n```\nfleetctl gitops --bump-fma -f canary.yml\n```\nbump one app in file:\n```\nfleetctl gitops --bump-fma --app zoom/darwin -f canary.yaml\n```"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@allenhouchins what do you think ^"
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "@noahtalerman I added a note for us to start with this at tomorrow's unpacking meeting. "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee just chatted with @allenhouchins and we think the IT admin expectation is that Fleet, on each GitOps run, will just update any out-of-date Fleet-maintained apps.\n\nMeaning, we think we don't want to add any new keys as part of this story. When we ship this improvement, Fleet's Fleet-maintained apps should update without updating the [`it-and-security/` YAML](https://github.com/fleetdm/fleet/blob/main/it-and-security/teams/workstations.yml).\n\nThe best practice for the staged rollout will be to update the canary team's automatic install policy first and then the production team's policy after things look good.\n\nCheck out the \"Unpacking the why\" recording from 2025-06-24 for more context."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Flagging the suggested behavior as a BC break from the previously decided implementation. Existing impl doesn't change FMAs once they've been uploaded, and we intentionally opted into that when we spec'd FMAs-in-GitOps the first time.\n\nAdding `version: latest` as an opt-in for the logic you're describing resolves the BC break."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e the suggested behavior as a BC break from the previously decided implementation\n\n@iansltx that's ok. I think we want to be brave here and update the default behavior now that we understand what the IT admin expects.\n\nThat's why we marked these features as experimental!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Given this change in expected development for this story, does it still make sense to lump script edits in here? At this point those changes are orthogonal to what we'd need to do to switch from \"never update if the FMA is already in the library\" to \"always update.\"\n\nIf script override ability was discussed and determined to be required as part of this behavior change in Unpacking the why, fair enough, though without that scope this story is nearly spec-complete."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e The best practice for the staged rollout will be to update the canary team's automatic install policy first and then the production team's policy after things look good.\n\nHere is a scenario that may occur if we don't support version pinning:\n1. Prod team is currently getting patched to MyApp v1.0 via policy (rule: install if version less than 1.0)  \n2. MyApp v2.0 is added to canary team\n3. MyApp 2.0 is deployed to canary team via policy (rule: install if version less than 2.0) and tests successfully\n4. MyApp updated to 3.0 in FMA catalog\n5. Cannot add 2.0 to prod because it's no longer available in FMA catalog.  MyApp 3.0 cannot be deployed to prod because it's not tested.\n6. Gitops updates MyApp to 3.0 in canary\n7.  Wait for 3.0 to finish deploying again to canary team\n8.  GitOps run updates app to 4.0\n9.  etc... customer can never deploy to prod because canary is updating too frequently\n\nOne workaround here is to not run GitOps unless you plan on bumping FMA versions, but this will block other GitOps runs that have other intentions.\n\nAnother option could be to support a flag that does not bump FMAs (ie.  `fleetctl gitops --no-fma-updates`)\n\n@noahtalerman @allenhouchins \n "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e does it still make sense to lump script edits in here? At this point those changes are orthogonal to what we'd need to do to switch from \"never update if the FMA is already in the library\" to \"always update.\"\n\n@iansltx I think we want to keep the script edits as part of this story for now. At least during drafting. Why? To think a bit broader. I don't think we've fully thought through the world in which Fleet-maintained apps are updated but some apps have scripts that are overridden. \n\nDoes Fleet update the package for those apps but leave the scripts alone? I'm thinking probably but worth discussing and putting ourselves in `numa`'s shoes before deciding.\n\nThen, once the designs are settled then we can decide to split it up.\n"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Here is a scenario that may occur if we don't support version pinning\n\nI understand what you're saying @mostlikelee. \n\nI still think we want to update the default behavior to match IT admin expectations: that Fleet, on each GitOps run, will update any out-of-date Fleet-maintained apps.\n\nYou're thinking about the version pinning (version ceiling) problem. I think we want to solve that too."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Re: updating packages but leaving scripts alone, unless scripts are being explicitly provided we _wouldn't_ want to take that route, because:\n\n1. If we find a bug in our (un)install scripts, we want to be able to broadcast the fix to that bug aloneside other maintained app updates, vs. requiring admins to take manual action. The ability to push bugfixes on scripts was a big reason for the rearchitecture of Fleet-maintained apps that landed in v4.66.\n2. As versions of software get bumped, sometimes what counts as the correct (un)install script changes, so if we bump the software package but not the associated scripts we'll wind up delivering a broken (un)install. Currently, \"sometimes\" is \"all the time\" for MSI uninstall scripts, since we use ProductCode for uninstalls there; without bumping scripts alongside installer packages, as soon as a maintained app's version is bumped the associated uninstall script will silently stop working.\n\nOf the above, reason 2 will come up more often."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Re: updating packages but leaving scripts alone, unless scripts are being explicitly provided we wouldn't want to take that route\n\n@iansltx I think we're saying the same thing!\n\nTo rephrase [my comment above](https://github.com/fleetdm/fleet/issues/25636#issuecomment-3002016399), I think Fleet always updates/fixes scripts if they're not explicitly provided.\n\nFleet only leaves scripts along, but updates packages, if scripts are explicitly provided."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@iansltx given the change in scope above, do you think the tshirt size is still an `M`?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee With revised scope, inclusive of adding script overrides (plus post-install script and pre-install query) this feels like at/just above XS. Hard to call this an S tee-shirt size because S is ~3x the size of XS and swapping default plus adding the requisite gitops params isn't going to take a whole dev-sprint."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we don't think we'll have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Customer feedback:\n\nCan the update mechanism run server side instead? Updating FMAs only during gitops runs will impact processes and how we think about gitops.  ie.  if you want to ensure FMAs update 1x/hr you have to schedule gitops runs (with no yaml changes) at that frequency.\n\ncc: @kennyb-222 "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "updated the title as this ability already exists for custom packages"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on https://github.com/fleetdm/fleet/issues/27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time (and, with the reduction in scope of this story due to FMAs already being bumped on each GitOps run, T-shirt size is more like an XS, so it's rather easy to fit in). Happy to help get this ready, as the correct scope of work here (we're also missing post-install script and pre-install query) is covered in #30250."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica I believe the above may be ready for User Story Review, depending on your thoughts on the product part of the story description, plus answers to the below questions:\n\n1. Do we want to allow specifying FMA details in a separate file, similar to software packages? I'm assuming not in the YAML PR. If we _do_ want that option, do we want to deprecate the current inline option like we did for software packages, or do we want to keep it since the common case would involve specifying slug, self-service, and nothing else?\n2. Do we want to include pre-install query/post-install script as part of this work? I assumed that we do.\n\nOne caveat: 4.71 docs are out of date with `main` and have conflicts, and my bet is that 4.73 docs are even further behind. Let me know when the 4.73 docs branch is caught up with main/4.71/4.72 and I'll re-roll the YAML PR as needed. It's ready for review as-is (/cc @rachaelshaw) but I expect I'll need to re-roll it, as if I recall correctly the software YAML docs have changed a fair amount recently. The anticipated re-roll won't change the semantics of specified behavior though, so the embedded product decisions can be reviewed now, and exact verbiage can be dialed in post-reroll."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx This looks good to me! Let's review it once more with Noah today during design review, and I think we can move it to the user story review after that."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Async User Story Review signoffs:\n\n- [x] @mostlikelee \n- [x] @jmwatts "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Just one thing from the test plan:\n\u003e Create a YAML file with all four new fields added\n\nthere are only 3 based on the yaml PR, which is correct?\n\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee\n\n1. install script\n2. Uninstall script\n3. Pre-install query\n4. Post-install script"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The YAML PR mentions pre-install query in the description but not the example, matching what we're doing elsewhere."
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\n#30738.\n\n## Task\n\nImplement the specified API so that vulnerabilities show up in the OS list endpoint for Linux hosts, and kernels show up on the OS entity endpoint, with host counts reflecting only hosts with that combination of OS and kernel software (filtering out hosts with the same kernel software but a different OS version).\n\nThis includes validating which software packages correspond to kernels on all supported Linux distributions, adding an is-kernel flag on software titles, populating the flag on software ingestion, and setting up the flag when running the database migration.\n\nPotentially helpful query:\n\n```\nSELECT DISTINCT software_cve.cve\nFROM software_cve\nJOIN software ON software.id = software_cve.software_id\nJOIN software_titles ON software_titles.id = software.title_id AND software.is_kernel = TRUE\nJOIN host_software ON host_software.software_id = software.id\nJOIN host_operating_system ON host_operating_system.host_id = host_software.host_id\nJOIN operating_systems ON operating_systems.id = host_operating_system\nWHERE [operating system query]\n```\n\n## Condition of satisfaction\n\nAPI responses are available, in unoptimized form; data should be pulled in realtime via a bunch of joins; optimization is its own subtask.\n\nInventorying kernels that we don't already see in software inventory via revised detail queries is out of scope, though if we can't get kernel information for an OS, document it on the parent issue.\n\n- [ ] Database schema migrations: Add an is_kernel column to software_titles and populate as appropriate for all supported Linux distributions (test with a VM for each; kernels won't show up in containers). Going forward, is_kernel should be set when a software title is created.",
          "number": 31213,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: API changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31213"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoc",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Linux Vulns: API changes",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962030809)"
          }
        ]
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer,\n| I want to see vulnerabilities of Linux operating systems\n| so that I can prioritize remediation effectively.\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n#26804\n\n## Context\n- Product Designer: @marko-lisica  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @iansltx \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/857ERt8x6l5fnLC1Yuy0bA/-30738-Surface-Linux-OS-vulnerabilities?node-id=0-1\u0026t=WEmHWkALSDBpIMwE-1)\n- [x] REST API changes: #31130\n- [x] Changes to paid features or tiers: Fleet Free\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n#### Product no-ops\n\n- CLI (fleetctl) usage\n- YAML\n- Fleet's agent (fleetd)\n- GitOps Mode UI\n- GitOps generation\n- Activities\n- Permissionss\n- My device and fleetdm.com/better\n- Other reference documentation\n\n**NOTE: ** Since Linux vulnerabilities are with the kernel package rather than at the OS level, any vulnerability web hooks will correspond to the affected software item, _not_ at the OS level. This maintains existing behavior for Linux kernel vulnerabilities.\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Populate vulnerabilities lists (on OS list/version endpoints, _not_ in the OS CVEs list in the database, _not_ in the operating systems section of the vulnerabilities endpoints) for Linux OS versions with a deduplicated list of CVEs affecting kernels installed on all hosts with that OS specified\n- [ ] For the kernels list, host counts should navigate to a host set filtered by both OS ID and software ID\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Mention OS vulnerabilities in the [vulnerability processing feature guide](https://fleetdm.com/guides/vulnerability-processing)\n- [ ] Database schema migrations: Add an `is_kernel` column to `software_titles` and populate as appropriate for all supported Linux distributions (test with a VM for each). Going forward, `is_kernel` should be set when a software title is created. May also need one or more tables to ensure vulnerability counts are retrieved quickly (e.g. `host_kernel_software_counts` containing both OS ID and kernel software ID).\n\n#### Database joins\n\n```\nSELECT DISTINCT software_cve.cve\nFROM software_cve\nJOIN software ON software.id = software_cve.software_id\nJOIN software_titles ON software_titles.id = software.title_id AND software.is_kernel = TRUE\nJOIN host_software ON host_software.software_id = software.id\nJOIN host_operating_system ON host_operating_system.host_id = host_software.host_id\nJOIN operating_systems ON operating_systems.id = host_operating_system\nWHERE [operating system query]\n```\n\nThe above is heavy enough that we likely need a table for `host_kernel_software_counts`, calculated at the same time as `host_software_counts`, that flattens the above, at which point we're trading freshness for ability to quickly pull information.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n- Requires load test: Probably; need to load a bunch (~50k, don't care about MDM) of Linux hosts with kernel software (need to ensure osquery-perf will return these items) and confirm performance impact of calculating kernel software stats. This may be doable locally.\n\n### Test plan\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch. Also enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. Also enroll a Linux host in a container with a different OS version unique to that container.\n2. Run vulnerabilities + cleanups/aggregations jobs.\n3. Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n4. On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show `---`. \n5. Confirm that the API response populates the `vulnerabilities` key for Linux OS versions.\n6. Navigate to an OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version, and clicking a host count in this card should navigate to a host list filtered by both software ID and OS version ID. Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n7. Confirm that the API response for the individual OS version includes `vulnerabilities` and `kernels` entries, with `kernels` format matching what you'd see in `software_title.versions[]` when viewing an individual software title.\n8. Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nAdditionally, verify that the above works in Free and Premium, with extra vulnerability details (scores etc.) omitted in Fleet Free.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30738,
          "repository": "fleetdm/fleet",
          "title": "Software \u003e OS: Surface Linux kernel vulnerabilities",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30738"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "labels": [
          "story",
          ":release",
          "~vulnerability-management",
          "customer-rialto",
          "#g-software",
          "~qa-on-branch"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Software \u003e OS: Surface Linux kernel vulnerabilities",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica (/cc @mostlikelee) We have three issues that'll need product direction here.\\, based on some initial research.\n\nIn descending order of magnitude:\n\n## Multiple kernels\n\nLinux hosts generally have multiple kernels installed, though only one is active at a time. How do we want to handle this, given that a host can be actively using an older/vulnerable kernel, or that kernel may be available but not loaded, and we won't be able to tell one way or the other based on software inventory (we _can_ based on the `kernel_info` table but we don't currently inventory that)?\n\nFor example, I cross-referenced `kernel_info` version with inventoried packages on Dogfood to see how Linux hosts there lined up:\n\n* [fedora 41](https://dogfood.fleetdm.com/hosts/1348) - `kernel-core` RPM package (`kernel` would work too but doesn't on the other host; was running the later of multiple versions)\n* [ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1319) - `linux-image-*-generic` (`linux-image-generic-hwe-*` returned one of the two kernels, and not the one the host was actually running)\n* [another fedora 41](https://dogfood.fleetdm.com/hosts/1318) - `kernel-core` RPM package (was running the older kernel)\n* [another ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1267) - `linux-image-*-genreric` (was running the older kernel IIRC)\n\nAll of the above hosts have more than one kernel version installed, and it's a toss-up on whether a given host is using the latest installed kernel or some other one (using `kernel_info` as the source of truth). The two Ubuntu hosts have quite different kernel versions installed as well between each other.\n\n## No kernel\n\nHow do we want to handle Linuxes that don't have a kernel? Linux running in a container shares the host kernel, so won't have kernel vulnerabilities of its own. I'm assuming we need to show these hosts in the OS list UI, but we'll need to communicate that no, those hosts didn't have a kernel of their own, so there won't be kernel-level vulns inside the container, though the host might have some. For example, `SELECT * FROM kernel_info` on an Ubuntu container running in Docker for Mac gets me a kernel version of `6.10.14-linuxkit`, which won't match anything in OVALs for the OS inside the container.\n\n## Where to display kernel version\n\nThinking we want to just show the kernel version, and only the version number part of it (so, software `version` field), as part of the Version column in the OS list, leaving the OS name as-is. This will mean that there will be multiple rows for the same OS name, but that's probably still cleaner than having two versions in the name line."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Temporarily assigning this to @marko-lisica we I'm blocked on decisions about no-kernel/multi-kernel. I'll self-assign to continue spec'ing once unblocked."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "FYI @marko-lisica I'm baking in the assumption that individual CVE UIs do _not_ change as part of this story, so we won't be showing Linux OSes in the Operating Systems section of individual vulns. The vulnerability affected hosts will be fully covered in the software section anyway (for each kernel) so we aren't hiding information here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "For reference: per discussions yesterday, we're keeping the OS list to one item per OS version, rolling up all kernel vulns into that single entry, and splitting out kernels when viewing a single OS version's details. This ensures that hosts aren't double-counted in list views when they have multiple kernels installed, and aren't skipped when they have no kernel of their own."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Two pieces of feedback from @jmwatts as we were walking through UI/test plans today (corresponding to Figma comments):\n\n1. Add a dev note or example UI row indicating \"view all hosts\" when kernel rows are rolled over\n2. Add help text above the kernels list (inside the kernels card) explaining why host counts are expected to not sum up from kernels to the overall number. Something like:\n\n\u003e Each Linux host may have multiple kernels instealled. Containerized and paravirtualized hosts do not have a kernel of their own.\n\n@jmwatts Let me know if we need to explicitly say \"host counts won't sum up\" or whether the above is enough."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @iansltx @jmwatts, thanks for the feedback.\n\nI added few more dev notes in Figma:\n\u003cimg width=\"921\" height=\"887\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/524bb7a9-33fc-47f3-88be-8e41ad922db6\" /\u003e\n\n "
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to know when Mac or Windows app has never been used by a user\n| so that I can understand if I can decrease number of licenses for that app.\n\n## Roadmap item\n\nNone\n\n## Original requests\n\n- #27087 \n\n## Context\n- Product Designer: @marko-lisica  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @iansltx    \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [ ] UI changes:\n  - Show \"Never\" rather than omitting header entirely when a `apps` / `programs` / `deb_packages` / `rpm_packages` software item was never opened within modals that show last opened time, and rename headers from \"Last used\" to \"Last opened\" in multi-version host software details and in self-service software details modals\n  - Rename coulmn name form \"Last used\" to \"Last opened\" (on host \u003e software \u003e inventory page)\n  - If software `last_opened_at` is empty then show \"Never\" in \"Last opened\" column if we support last opened time for that source (`apps` or `programs`), `Not Supported` in grey otherwise\n\n\u003cimg width=\"811\" height=\"343\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c6b8dc7d-74ba-4772-88a2-38645f256a8c\" /\u003e\n\n- [ ] CLI (fleetctl) usage changes: No changes\n- [ ] YAML changes: No changes\n- [ ] REST API changes: No changes\n- [ ] Fleet's agent (fleetd) changes: No changes\n- [ ] GitOps Mode UI changes: No changes\n- [ ] GitOps generation changes: No changes\n- [ ] Activity changes: No changes\n- [ ] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Fleet Free\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] Other reference documentation changes: No changes\n- [ ] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n- [ ] On the software inventory view in host details, confirm the \"Last opened\" column name with no tooltip\n- [ ] Install two versions of an app or Windows program on the same host, but don't open either, and refetch. Confirm that the software inventory shows \"Never\" in black in the \"Last opened\" column. Confirm that the modal for installed paths shows \"Never\" in both entries.\n- [ ] Install (or have in inventory) multiple versions of a software item for which we don't support last opened time. Confirm that the \"Last opened\" column shows \"Not supported\" in grey and the versions modal doesn't show the last opened time header.\n- [ ] Confirm that \"Never\" / \"Not supported\" are handled similar to the above with a single installed version on a host\n- [ ] Confirm behavior changes in the modal accessed by clicking a software item's name in My device \u003e Software.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 31268,
          "repository": "fleetdm/fleet",
          "title": "Host software: display info that Windows and Mac app never been opened",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31268"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdUaqU",
        "labels": [
          "story",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Host software: display info that Windows and Mac app never been opened",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica FYI we already have `\"last_opened_at\": null` on the API for installed app versions that haven't been opened, so no API changes required here. Revised the ticket template to reflect this.\n\nGoing to include a separate comment with more specific instructions on all I'm pretty sure we need to do, to see if I can feed this into Zed + Sonnet 4 and have it one-shot this :)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "All we need to do for this is\n\n1. Show `Never` rather than `---` on the column when the API field is null and `source` is `programs` or `apps` (those are the two sources where we have last opened time info), in `HostSoftwareTableConfig.tsx`\n2. Show `Never` rather than skipping the \"Last used\" field in `SoftwareDetailsModal.tsx` and `InventoryVersion.tsx` when the API field is null and `source` is programs or `apps`\n3. Rename \"Last used\" to \"Last opened\" in all three places, and remove the tooltip wrapper in `HostSoftwareTableConfig.tsx`\n4. Update tests in `SoftwareDetailsModal.tests.tsx` to reflect the above changes"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Mind pulling down the `ð¤-31268` branch and seeing if that gets us what we want here?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tweaks needed:\n\n* When showing multiple versions, show \"Never\" if all versions don't have an opened time and each individual version would've shown \"Never\"\n* Don't use the grey color for \"Never\" (but keep it for `---`)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica \n\n\u003cimg width=\"808\" height=\"342\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20422141-d1eb-445e-9c12-92edd366c242\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review, we're showing \"Not supported\" rather than \"---\" for sources where we don't support last opened time. Updated the screenshot in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia Where do these map to in the UI?\n\nfrontend/pages/hosts/details/cards/Software/SoftwareDetailsModal/SoftwareDetailsModal.tsx\nfrontend/pages/hosts/details/components/InventoryVersions/InventoryVersions.tsx\n\nI think I'm missing a case in the test plan to cover both of these."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Fixed the screenshot to show both cases."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Found the other place where last opened time is: My device \u003e Software. Test plan is updated. Ping when the test plan is good to go; code's already written (by me) so this will land directly on the release board once the test plan is good to go."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan is good to go, tried to move it to the release board, wouldn't budge. GitHub is defiant today. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given #31638 is landing soon, updated the spec here (and code in the PR) to include `deb_packages` and `rpm_packages` in supported software types. Support for the additional package types will land in osquery before 4.73 is out, and 4.73 will include detail query updates for support here, so RPM/DEB last-opened-at can be tested as part of QA for #27902."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nInstall fails. UI says package failed to download. Orbit logs show:\n```\n2025-08-01T12:55:07.448501-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:07-05:00 INF about to download software installer from Fleet installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.067596-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 INF done downloading installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.067821-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 INF software installer downloaded installerID=2a8f778e-8cb4-4e14-95de-63382710af86 installerPath=/tmp/1721719821/timeshift-22.06.6.tar.gz runner=installer\n2025-08-01T12:55:08.067910-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 INF detected tar.gz archive, extracting to subdirectory installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.069230-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 ERR failed extract .tar.gz archive error=\"unknown flag type \\\"pax_global_header\\\": 103\" installerID=2a8f778e-8cb4-4e14-95de-63382710af86 runner=installer\n2025-08-01T12:55:08.181754-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 ERR failures found when processing installers errs=[\"unknown flag type \\\"pax_global_header\\\": 103\"] runner=installer\n2025-08-01T12:55:08.182137-05:00 nimda-Vivobook-ASUSLaptop-X1404VA-X1404VA orbit[4552]: 2025-08-01T12:55:08-05:00 ERR running config receivers error=\"unknown flag type \\\"pax_global_header\\\": 103\"\n```\n\n### ð ï¸ To fix\n\nSkip unknown header types rather than failing on them.\n\nProduct designer: @iansltx \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload timeshift tarball (can be found here: https://drive.google.com/file/d/1nKWzZBi65P1AUouvvvEYkbZ_EljXilI6/view?usp=drive_link )\n2. Include an install script ( can just use `mv $INSTALLER_PATH/* /usr/local`)\n3. Include an uninstall script (can just use `rm -rf /usr/local/timeshift-22.06.6`)\n4. Attempt to install on Linux host\n5. Review UI Failure and orbit logs\n\n### ð¯ï¸ More info _(optional)_\nExtracting the file manually to `/tmp` and then re-archiving the file, then uploading to Fleet allows the package to be installed. \n```\ncd /tmp\nsudo cp -R /Users/janis/Downloads/timeshift-22.06.6 .\ntar -czvf timeshift-22.06.6.tar.gz timeshift-22.06.6\n```\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31525,
          "repository": "fleetdm/fleet",
          "title": "pax_global_header error when attempting to install tar.gz",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31525"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdO96U",
        "labels": [
          "bug",
          "~agent",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.46.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "pax_global_header error when attempting to install tar.gz",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": " **QA Notes**\n1. Upload timeshift tarball (can be found here: https://drive.google.com/file/d/1nKWzZBi65P1AUouvvvEYkbZ_EljXilI6/view?usp=drive_link )\n2. Include an install script ( can just use `mv $INSTALLER_PATH/* /usr/local`)\n3. Include an uninstall script (can just use `rm -rf /usr/local/timeshift-22.06.6`)\n4. Attempt to install on Linux host\n- [x] Confirm tar archive is extracted and installed to /usr/local/timeshift-22.06.6"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: Fleet v4.70.0\n**Orbit version**: Orbit v1.45.1\n**Osquery version**: Osquery v5.18.1\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nCustomer is experiencing issues when attempting to download a tarball to the variable install path on the fleet instance. Attempted several ways using scripts inside of the tarball, but the script is never accessed.\n\nError Messsage: \n`Fleet failed to install Code42_12.6.0_15252000061260_33_Linux.tgz (Code42_12.6.0_15252000061260_33_Linux.tgz) on ceppenge-l-pf4bx6pl (less than 10 seconds ago).`\n\nTODO\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload Code42 tar archive file to Fleet library\n2. Include an install script ( can just use `mv $INSTALLER_PATH/* /usr/local`)\n3. Include an uninstall script (can just use `rm -rf /usr/local/code42-install`)\n4. Attempt to install on Linux host\n \n \n### ð¯ï¸ More info _(optional)_\nCustomer provided package and install script used during testing, and can provide outside of issue\n\nNOTE: This is not happening for all tar archive files, but is happening for this specific one.",
          "number": 31338,
          "repository": "fleetdm/fleet",
          "title": "Errors downloading tarball to $INSTALLER_PATH",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31338"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdO8_M",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          ":help-customers",
          ":incoming",
          "customer-cisneros",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.46.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Errors downloading tarball to $INSTALLER_PATH",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Request to update documentation for $INSTALLER_PATH variable #7439](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/cf4ea9d0-d53c-4f25-9456-98ff1c558795)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@reeblybeebly can you please enter reproduce steps?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@reeblybeebly can you also provide the install details for the failed install activity feed item? In the host record there should be an informational icon that can be clicked to show details. \n\n\u003cimg width=\"866\" height=\"427\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bdfecad5-fd79-467b-bb0a-28d203972532\" /\u003e\n\nPlease also provide the orbit log from the time of the failed install for the host the software was to be installed on. On Linux systems this is usually in:\nDebian systems: `/var/log/syslog`\nCentOS: `/var/log/messages`\nFedora: `journalctl -u orbit`\n\nThank you!\n"
          },
          {
            "author": {
              "login": "reeblybeebly"
            },
            "body": "Providing [google drive link to customer provided package and install script](https://drive.google.com/drive/folders/1craEM0TSeTrcqntvqOdIQvdgTxDWCUWk?usp=drive_link) for further testing."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I am able to reproduce this on the latest Fleet and Orbit versions. Will need to test back to see if this is due to a recent change. \n\nError from orbit logs (with private info redacted)\n\n```\nINF about to download software installer from URL installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nINF done downloading installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nINF detected tar.gz archive, extracting to subdirectory installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nERR failed extract .tar.gz archive error=\"failed to create \\\"code42-install/install.sh\\\": open /tmp/535331487/extracted/code42-install/install.sh: no such file or directory\" installerID=10940530-121d-4308-9be8-90468be4aedc runner=installer\nERR failures found when processing installers errs=[\"failed to create \\\"code42-install/install.sh\\\": open /tmp/535331487/extracted/code42-install/install.sh: no such file or directory\"] runner=installer\nERR running config receivers error=\"failed to create \\\"code42-install/install.sh\\\": open /tmp/535331487/extracted/code42-install/install.sh: no such file or directory\"\n```\n\nThis is the same issue I am seeing. The installer downloads, we attempt to extract, but fails to locate expected files."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I was able to get the file to install by first extracting the tar file to `/` and then re-archiving it:\n\n```\ncd /\ncp -R /Users/janis/Downloads/code42-install .\ntar -czvf code42.tar.gz code42-install\n```\n\nThen uploaded the resulting package to Fleet, and installed. \n\nSounds like we have an idea of how to fix this so a manual work around won't be necessary. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Was able to repro the error by adding a file in a subdir directly to a brand new tarball without specifying the top level directory:\n\n[test.tar.gz](https://github.com/user-attachments/files/21559956/test.tar.gz)\n\nSo this is much easier to repro than I initially thought."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The fix I have implemented ensures each dir exists before extracting files into it. That means we have at minimum an extra `stat` per file extracted but in exchange it'll work with all tarballs and it's a low-impact fix. If we need to optimize later to keep track of dirs we know exist, this fix doesn't prevent us from doing that."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Upload Code42 tar archive file to Fleet library\n2. Include an install script ( can just use `mv $INSTALLER_PATH/* /usr/local`)\n3. Include an uninstall script (can just use `rm -rf /usr/local/code42-install`)\n4. Attempt to install on Linux host\n- [x] Confirm tar.gz archive is extracted and installed on host"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.69 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nIf you had a VPP token tied to a specific team you won't see \"All teams\" option in the dropdown until you save it empty and reopen\n![Image](https://github.com/user-attachments/assets/781018b8-8275-42c8-9ac6-e619e2204a9c)\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Obtain a VPP token\n2. Go to: https://andrey.ngrok.app/settings/integrations/mdm/vpp\n3. Add the token\n4. Select Actions \u003e Edit teams \u003e Select any team \u003e Save5. \n6. Reopen \n7. Remove the previously selected individual team\n8. Try to select All Teams\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nTo reproduce this, you first need to save the token with any other team and then reopen. \n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\nOn `/settings/integrations/mdm/vpp` page in \"Edit teams\" modal:\n- When the user selects \"All teams\" in the dropdown and afterward selected team or \"No team\", \"All team\" should disappear from the dropdown\n- When the user selects team or \"No team\" in the dropdown and opens the dropdown, \"All teams\" should be available (if no team (or \"No team\") is selected for another VPP token).\n  - When \"All teams\" is selected it will remove all selected teams from dropdown and those will be available in dropdown list.",
          "number": 30357,
          "repository": "fleetdm/fleet",
          "title": "\"All Teams\" option is missing on the VPP token actions dropdown if another team was selected prior to it",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30357"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOeo",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "~assisting g-mdm",
          "customer-nortia",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "\"All Teams\" option is missing on the VPP token actions dropdown if another team was selected prior to it",
        "comments": [
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @AndreyKizimenko, this works as intended. Please look at [this dev note](https://www.figma.com/design/j2M1heOh8eZD6LcUJks6HE/-9956-Add-multiple-Apple-Business-Manager-and-Volume-Purchasing-Program-connections?node-id=5530-8689\u0026t=D4pAdmkTE5HFzdo8-11) and the others related to team selection.\n\nI'm closing this one. Let me know if that makes sense to you."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "\"All Teams\" lost sight,\nIn dropdown's clouded height,\nRestored, it takes flight."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Hi @marko-lisica, this is on me, could've definitely described it better. I understand the reason why we want to hide All Teams, the issue that I'm seeing is that it isn't brought back when the user removes individual teams. You can see on the screenshot bellow that no team is selected by All Teams is still missing. \n\n\u003cimg width=\"823\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7a59eda1-8bab-4e63-b5ad-4448bdd8bb8b\" /\u003e"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "I'm also re-reading through the dev notes and I'm not sure whether we are referring about removing an option from the dropdown or just clearing it out from the selection. Selecting All Teams clears out individual teams from the selection and the other way around, selecting any team while you have All Teams clears out All Teams, which I think matches what design is describing. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@AndreyKizimenko Do you have one or more VPP tokens? Not sure, but the reason why you don't see \"All teams\" might be that you already selected some team for another VPP token.It would be easier for me to understand if you could record the behavior you observe and believe is a bug."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "@marko-lisica No, another VPP token doesn't have any teams assigned. Attaching a video with the whole flow \n\nhttps://github.com/user-attachments/assets/b453a5f2-38dd-4473-bb16-d89981748ae5"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Thanks @AndreyKizimenko! I just specified a fix in the `ð ï¸ To fix` section in the issue description. Let me know if that solves the problem. "
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Yeah, I think this will solve it. Thank you, Marko! "
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer on the Software page,\n| I want to filter by a custom severity (CVSS score) range\n| so that I can filter software by a vulnerability threshold my security team uses (ex. CVSS â¥ 7.5).\n\n## Key result\n\nNone. Prioritized because the current behavior makes it look like Fleet does not understand how people actually use CVSS. But now we do.\n\n## Original requests\n\n- #30237\n\n## Context\n- Product Designer: @RachelElysia + @iansltx \n- Engineer: @RachelElysia \n\n## Changes\n\n### Product\n- [ ] UI changes: [Figma](https://www.figma.com/design/J2mqgWcS9RG3jaQc43V67m/-30248--Software-page--filter-by-custom-severity--CVSS-score--ranges?node-id=0-1\u0026p=f\u0026t=YQB8wo6YOLyUzyFu-0)\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes (API endpoint already supports min/max)\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Follows existing CVSS score filtering, so Fleet Premium\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [x] Contributor API changes: No changes\n- [ ] Feature guide changes: Make sure the [vulns filtering article](https://fleetdm.com/guides/filtering-software-by-vulnerability) is current with the UI\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n\u003e Note: See Figma for single source of truth for exact text copies \n\nTest modals on Host \u003e Software \u003e Inventory page and Software page\n\n1. Min max is present and new help text is present\n2. Min max is enabled only if vuln software toggle is enabled\n3. Defaults to \"Any severity\"\n4. If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n5. If a user clicks on \"Any severity\", the min and max are cleared\n6. If a user clicks on \"Custom severity\", the min and max do not change\n7. If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n8. If a user clears both custom min/max, the dropdown will change to \"Any severity\" but returns to \"Custom severity\" if they start typing\n9. If the user hits apply with no severity entered, it will apply any severity\n10. If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n11. If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n12. If the user types in an invalid number into either min/max (e.g. 4.11 or -3), the in label error states it must be a number between 0-10 with an increment of 0.1\n12b. The user cannot type in string as the input is limited to type number\n14. If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n15. By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n16. Clearing the filter should show all software \n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30248,
          "repository": "fleetdm/fleet",
          "title": "Software page: filter by custom severity (CVSS score) ranges",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30248"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "labels": [
          "story",
          ":release",
          "~pushed",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Software page: filter by custom severity (CVSS score) ranges",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @lukeheath marking this story as `P2`. The current behavior makes it look like Fleet does not understand how people actually use CVSS.  But now we do."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "TODO RAchel: first draft of test plan"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Just filled in this story checklist so it's ready for User Story Review (credit to @RachelElysia for the test plan)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "assigning to @RachelElysia to estimate"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath needs your estimate here and we can move it to the software board"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "For everyone's info, I was asked to estimate this this morning and estimated it at a 4. Looks like changing the project removed the estimate. @sharon-fdm @mostlikelee "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh no that's my bad.  we discussed in sprint kickoff review that Luke is going to take this one @jacobshandling "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I'll assign a 4 here and move it to the software board for Luke"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Might be minimal extra work to solve #30524 alongside this since filter + sort seems like it would be sufficient there. Maybe dev this with that request in mind and check with the customer to see whether that solves their issue?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "removing milestone.  will not get to this story this sprint"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Can you create Sprint 45 and move this into it?"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@RachelElysia Thanks for taking this. I thought I'd be able to squeeze it in, but wasn't able to."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n- [x] Min max is present and new help text is present\n- [x] Min max is enabled only if vuln software toggle is enabled\n- [x] Defaults to \"Any severity\"\n- [x] If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n- [x] If a user clicks on \"Any severity\", the min and max are cleared\n- [x] If a user clicks on \"Custom severity\", the min and max do not change\n- [x] If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n- [x] If a user clears both custom min/max, the dropdown will change to \"Any severity\" but returns to \"Custom severity\" if they start typing\n- [x] If the user hits apply with no severity entered, it will apply any severity\n- [x] If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n- [x] If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n- [x] If the user types in an invalid number into either min/max (e.g. 4.11 or -3), the in label error states it must be a number between 0-10 with an increment of 0.1\n- [x] 12b. The user cannot type in string as the input is limited to type number\n- [x] If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n- [x] By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n- [x] Clearing the filter should show all software\n\n@RachelElysia Questions:\nâ The Figma appears to show placeholder text but I don't see any in the UI - should that be there?\nâ The modal accepts 010 as a number - should it?\nâ If I enter 10 in the max, it clears it out on save - should it?\nâ If I set the filter to \"Critical Severity\" it changes it to \"Custom Severity\" on save and clears out the max value - should it?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @jmwatts for your thoroughness!\n\nâ The Figma appears to show placeholder text but I don't see any in the UI - should that be there?\nIt should, putting in a followup PR for this\n\nâ The modal accepts 010 as a number - should it?\nLooking at this, I would have to add a check to `InputField` `type number`'s `onInputChange` function, but I'd be worried it might be too restrictive if someone needs to use input field with leading zeros? It feels hacky, so I think we should only add this into  `InputField` `type number`'s `onInputChange` function if it prevents a bug, but the UI/API kindly handles 0003 so I think it's okay to leave it in. Thoughts @marko-lisica \n\nâ If I enter 10 in the max, it clears it out on save - should it?\nI did this to minimize the number of unnecessary parameters passed, like if they input 0 and 10, it really means no cvss custom range... but if it's causing Critical Severity to change to custom, it's buggy. so I'll add it back in and only clear both min and max if both values are set (\"0\" and \"10\")\n\nâ If I set the filter to \"Critical Severity\" it changes it to \"Custom Severity\" on save and clears out the max value - should it?\nIt should stay Critical Severity, putting in a followup PR for this"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Looking at this, I would have to add a check to InputField type number's onInputChange function, but I'd be worried it might be too restrictive if someone needs to use input field with leading zeros? It feels hacky, so I think we should only add this into InputField type number's onInputChange function if it prevents a bug, but the UI/API kindly handles 0003 so I think it's okay to leave it in. Thoughts @marko-lisica\n\n@RachelElysia Sounds good to me.\n\n"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nUpdate OS list and entity pages to conform to the parent ticket's wireframes. No API changes should be required on the OS list page. The OS entity details page will need to use the new `kernel` array, and should toggle the vulnerabilities/kernels cards based on platform matching.\n\n## Condition of satisfaction\n\nFrontend changes match Figma wireframes, and pull data from the new API response field.\n\n- [ ] For the kernels list, host counts should navigate to a host set filtered by both OS ID and software ID",
          "number": 31212,
          "repository": "fleetdm/fleet",
          "title": "Linux Vulns: Frontend",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31212"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdB-kE",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Linux Vulns: Frontend",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "**Final est: 5**\n1 update OS page, 3 add new table, 1 ensure software details page works\n\n**Bold estimate: 3** since those two 1s are tiny and the table is basic so might not be quite a 3"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "Chrome on windows stalled trying to uninstall for FMA test automation:\nhttps://github.com/fleetdm/fleet/pull/31210\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nhttps://github.com/fleetdm/fleet/actions/runs/16580117238/job/46894005707?pr=31210\n```\nlevel=info ts=2025-07-28T21:00:13.5176998Z caller=app_commander.go:95 app=\"Google Chrome\" msg=\"Executing uninstall script for app...\"\nlevel=error ts=2025-07-28T21:05:13.5339387Z caller=app_commander.go:98 app=\"Google Chrome\" msg=\"Error uninstalling app: exit status 1\"\nlevel=error ts=2025-07-28T21:05:13.5339387Z caller=app_commander.go:99 app=\"Google Chrome\" msg=\"Output: \\n--------------------\\nUninstall command: C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\138.0.7204.158\\\\Installer\\\\setup.exe\\nUninstall args: --uninstall --system-level --uninstall\\n\\n--------------------\"\n```\n\n\n### ð§âð» Â Steps to reproduce\nUninstall chrome FMA on github runner\n\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\nhttps://github.com/fleetdm/fleet/pull/31367",
          "number": 31455,
          "repository": "fleetdm/fleet",
          "title": "Chrome FMA not uninstalling on CI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31455"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdLIg0",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Chrome FMA not uninstalling on CI"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify setup experience, custom targets (labels), self-service, \u0026 categories for all my software in the team YAML\n| so that I can define scoping at the team level and not at the software level.\n\n## Key result\n\nNone. Prioritized because it's mission critical for `customer-numa` to replace their current self-service software solution.\n\n## Original requests\n\n- #30067\n- #29567\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @iansltx  \n\n## Changes\n\n### Product\n- [x] UI changes: No changes.\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: #30837 (includes VPP/FMA)\n- [x] REST API changes: No changes\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: `fleetctl generate-gitops` includes the `setup_experience` flag in the inline software package/VPP app YAML when a software package or VPP app is included in Setup Experience, omits it otherwise (same as how self-service behaves).\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Script or command to migrate removed keys from package YAML files to the team level\n- [x] Contributor API changes: No changes; use the existing `install_during_setup` parameter in software batch endpoints (already wired up in `fleetctl`)\n- [ ] Feature guide changes: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\n### Test plan\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### Setup experience w/GitOps\n\nFor the purposes of this test plan, this format is what is meant by in-line on the team YAML:\n\n\u003cimg width=\"532\" height=\"167\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/859273cd-a1bf-4eb4-a3af-5d170772ec9f\" /\u003e\n\nAnd this is what is meant by referenced by path:\n\n\u003cimg width=\"238\" height=\"58\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/476be359-104f-431a-9e97-43b887ed754f\" /\u003e\n\nWhere the referenced file is of this format:\n\n\u003cimg width=\"478\" height=\"108\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4b7c570e-0eef-401b-8acb-22cc3ac5ee95\" /\u003e\n\n- [ ] Add App Store app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add Fleet-maintained app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add a custom package in-line, on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Don't specify the new `setup_experience` key.  Verify that the software isn't added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `true`.  Verify that the software is added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `false`.  Verify that the software is not added to macOS Setup Experience when GitOps is run. \n- [ ] ERROR PATH: Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key within the package YAML, setting the value to `true`. Run GitOps and confirm there is an easy to understand error message.\n\n#### Custom target (labels)\n\n- [ ] In the team YAML, set `labels_include_any` for a custom package that is defined in-line. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_include_any` for a custom package that is referenced by path. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is defined in-line. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is referenced by path. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the package YAML, set `labels_include_any` to include a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n- [ ] In the package YAML, set `labels_exclude_any` to exclude a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### Categories\n\n- [ ] In the team YAML, set `categories` to include one or more categories that exist in Fleet for a custom package that is defined in-line. Verify that the categories are applied when GitOps is run.\n- [ ] In the package YAML, set `categories` to include one or more categories that exist in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### No team\n\n- [ ] Verify that setup experience, custom targets (labels), and categories work as defined above for \"No team\" (`no-team.yml`)\n\n\n#### Backwards compatibility\n\n- [ ] In the team YAML, specify the old `macos_setup.software` key, add software in-line, and do not specify the new `setup_experience` for any software. Confirm the software is added to setup experience. \n- [ ] ~~In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).~~\n  - [ ] UPDATE: @noahtalerman: [Tricky to build](https://github.com/fleetdm/fleet/issues/30095#issuecomment-3218706681). Here's what we decided instead: setting `setup_experience` on individual packages with an empty `macos_setup.software` software key will result in a successful GitOps run with `setup_experience` flags applied to the relevant software.\n- [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see [this error message](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\n#### GitOps speed\n\n- [ ] Run GitOps with 99 packages and 500 teams before and after this change. Verify that the speed of GitOps isn't negatively impacted.\n\n#### Migration script\n\n- [ ] Run the script to migrate the the old package YAML format to the new format and verify that the script works. [#31165](https://github.com/fleetdm/fleet/issues/31165)\n\n#### Generate-GitOps\n- [ ] fleetctl generate-gitops includes the setup experience flag on software for which it is set.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30095,
          "repository": "fleetdm/fleet",
          "title": "GitOps: Setup experience, custom targets (labels), self-service, \u0026 categories for all software in team YAML",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30095"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "labels": [
          "story",
          ":release",
          "customer-faltona",
          "~pushed",
          "customer-numa",
          "#g-software",
          "~context"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps: Setup experience, custom targets (labels), self-service, \u0026 categories for all software in team YAML",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev Per comments on the original request from @noahtalerman and @mostlikelee, we want to:\n\n1. Add a `setup_experience` bool on the same level as `self_service` on custom packages, VPP apps, and FMAs, default `false`. Use that to determine whether software is included in setup experience.\n2. Stub the `macos_setup.software` key in GitOps; if it exists in a config, hard-fail with a link to docs for the new way of specifying setup experience.\n\nPlan will be that we _don't_ have a deprecation period on this to keep the code clean and avoid drawing out instances where we have to support both cases. Throwing a prompt at an LLM or two to see if we can make a bot do the work of moving YAML around (we might want a step 3 above of providing a tool to move YAML around)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually, scratch the LLM option for now, as the migration path is more nuanced. One nuance here is that if Team A and Team B both import a set of software, but Team A has a piece of software marked for setup experience and Team B does not, we now need two software files (one with the setup experience flag set, one without) where we previously had one.\n\n@allenhouchins Does this tweak (and its downstream requirements) make sense? In our case the Workstations team has setup experience software defined, but the corresponding canary team doesn't, so for our own setup we'd need to split package YAMLs.\n\nFor reference, here's the prompt I threw into JetBrains Junie, as well as Zed + Claude Sonnet 4:\n\n```\nIn `it-and-security`, for each app store app under `macos_setup.software`, remove it from there and add `setup_experience: true` under the corresponding entry in `app_store_apps` in the same team file. For each software package under `macos_setup.software`, remove it from there and add `setup_experience: true` inside the corresponding YAML file. Finally, remove the `macos_setup.software` key in the YAML file.\n```\n\nNote that the above does _not_ cover the package YAML splitting nuance, and my attempts at making this work with an open-weights model small enough to run in 64GB unified memory failed."
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "I much prefer the current set up of adding it to the `software` block to basically say \"make this software available to this team\" then creating a secondary reference in `macos_setup.software` to say \"make this software available through this method\". For any software we expect all employees to use (\"critical\"), I want it to be installed via `macos_setup`, `auto-install` if its removed, and available in `self-service` for patching and easy re-installation/troubleshooting. I don't want to have to create multiple `software_title.yml` to achieve this. \n\nI'm already running into challenges with some of the recent changes we've made to software where I will have to [create multiple software entries if I want software scoped differently in teams](https://github.com/fleetdm/fleet/issues/29567) so anything we can do to handle additional logic behind the scenes and avoid having to create multiple software entries of the same software just to use it differently, will always get my vote.\n\n\u003e run in 64GB unified memory failed.\n\n64GB?! Yikes! "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I much prefer the current set up of adding it to the software block to basically say \"make this software available to this team\" then creating a secondary reference in macos_setup.software to say \"make this software available through this method\".\n\n@allenhouchins interesting! I added you to Tuesday's #g-software design review to take a look at the current designs and discuss."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on #27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time, though based on the source of this original request the software GitOps update activity should be split into its own story, as the customer isn't asking for that, \"core to Fleet\" notwithstanding, as the activity work is likely the majority of the effort on this ticket if it's brought in. Splitting stories allows for easier parallelization, and allows for derisking both stories."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Based on linked issues, looks like we missed calling out some scope here. I'm assuming that allowing specifying macOS setup experience in `fleet_maintained_apps`, as well as in `app_store_apps`, is in scope here. Revising YAML docs so that's clearer now (as well as contributor API docs).\n\nEDIT: Never mind. YAML docs don't include this explicitly, but it's dev note'd in a comment on the PR. And it's in the test plan."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Turns out, the contributor API for this already has the correct (per-package) format, so these changes won't have a server-side component (all `fleetctl`)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman I thought we had missed frontend scope here because there might have been changes to the modals/exports we added in #28110. But it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?\n\n@iansltx that's right!"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] REST API changes: No changes\n\n@iansltx also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\nThis helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\nWe've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\""
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e \u003e * [x]  REST API changes: No changes\n\u003e \n\u003e [@iansltx](https://github.com/iansltx) also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\u003e \n\u003e This helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\u003e \n\u003e We've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\"\n\n@noahtalerman All of the \"no changes\" items are still in the issue description, under the \"No-ops\" heading (\"Product no-ops\" probably makes more sense here, and I've used that heading title on other tickets where I've done this). Sounds like you missed them because they were \"below the fold\" but they're there, and splitting them out should actually make the \"we intentionally didn't do these things\" rundown easier. Thoughts on maintaining that \"split out into a subheading\" pattern, but moving that subheading up above the Engineering section?\n\nMy reason for doing this tweak (was going to mention this in chat channels but ran out of time, but discussed this with @mostlikelee ahead of time) is that stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development has more serious consequences than having to scroll down in the Confirm and celebrate ritual.\n\nAdditionally, the act of explicitly moving items to a \"these are the things that won't change\" heading during spec provides another \"are we _sure_ this isn't changing\" checkpoint prior to estimation. That actually wound up helpful on #30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes. Moving the Figma link to the more appropriate checkbox decreased likelihood of confusion during both development (imminently) and Confirm and celebrate (later), while maintaining an explicit list of parts of the product that are out of scope for the story.\n\nI hadn't PR'd a handbook/story template change for this because I wanted to dial in how it looked with real-world examples first, hence why you're seeing this for the first time here."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development\n\n@iansltx ah, I hear you but the current way has been working for the other product groups. We just have to look at all the checkboxes to see which have \"No changes\".\n\nTo keep things consistent across product groups and reduce change for now let's please keep the story issue template the same. I removed \n\nThanks for testing it out!\n\n\u003eThat actually wound up helpful on https://github.com/fleetdm/fleet/issues/30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes.\n\nIt sounds like we (it was me) messed up in this case. That's a whoops from me. I forgot about the new GitOps mode checkbox."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulled this back to Ready for spec as there are outstanding test plan questions that we're working through."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30095\n\n## Task\n\nUpdate `fleetctl gitops` to accept YAML in the format specified in #30837 for software packages, Fleet-maintained apps, and VPP apps. This includes adding support to GitOps for the first time for Fleet-maintained apps in macOS setup experience.\n\nThese changes are fleetctl-only as sufficient APIs are already in place.\n\n## Condition of satisfaction\n\nSoftware YAML conforms to #30837, including backward compatibility maintenance or breaks as documented.",
          "number": 31163,
          "repository": "fleetdm/fleet",
          "title": "GitOps software/setup experience restructure: `fleetctl gitops` changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31163"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8s",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps software/setup experience restructure: `fleetctl gitops` changes",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243530523269)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a user of vulnerability management,\n| I want to see fixed false-positive vulnerabilities cleared as soon as I finish a vulnerabilities cron run\n| so that I can quickly see the results of fixed false-positives.\n\n## Key result\n\nPreventing erroneous customer bug report noise where the solution is \"wait for vulnerabilities to run a few more times\" and speeding up dev/QA of functionality touching vulnerabilities.\n\n## Context\n- Product designer: @iansltx  \u003c!-- Who is the product designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n\nOriginally filed as bug #25898, to both mitigate QA overhead for vulnerability fixes and avoid customer back-and-forth e.g. #25571.\n\n## Changes\n\n### Product\n- [x] First draft of test plan added\n- [ ] Other reference documentation changes: Last paragraph of [this section of the vulnerabilities article](https://fleetdm.com/guides/vulnerability-processing#coverage)\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Revise `DeleteOutOfDateVulnerabilities` and `DeleteOutOfDateOSVulnerabilities` in the datastore to clear vulnerabilities updated before a set timestamp, rather than by a lookback period\n- [ ] Get the current time right before `checkNVDVulnerabilities` is called in `scanVulnerabilities` in `cron.go` (probably directly from the database to avoid clock skew issues between app servers and the database) and pass that to the modified `DeleteOutOfDate*Vulnerabilities` calls\n- [x] Test plan is finalized\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\n### Test plan\n\n1. Introduce a false positive vulnerability (e.g. by reverting a previous false positive fix in the CPE matching rules JSON file).\n2. Run vulnerability scanning.\n3. Confirm that the false positive shows up.\n4. Fix the false positive.\n5. Run vulnerability scanning again.\n6. Confirm that the false positive no longer shows up.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 26404,
          "repository": "fleetdm/fleet",
          "title": "Clean up timing for clearing stale false-positive vulnerabilities",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/26404"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCo1s",
        "labels": [
          "story",
          ":release",
          "~engineering-initiated",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Clean up timing for clearing stale false-positive vulnerabilities",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Thanks for following the new [engineering-initiated process](https://fleetdm.com/handbook/engineering#create-an-engineering-initiated-story). This sounds like a good value add effort, so I'm prioritizing for drafting and assigning you as the product designer to complete the [draft an engineering-initiated story](https://fleetdm.com/handbook/engineering#draft-an-engineering-initiated-story) process."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This actually looks product-complete, so pulling into User Story Review."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Note that per the eng-init section of the handbook, irrelevant product checkboxes were deleted from the issue description."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx One thing I'm not clear on from this ticket is what is the current state? How long does it currently take for the false positive to clear?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Current state is two hours. See\n\nhttps://github.com/fleetdm/fleet/blob/33a703920378a7084319da99a5af5c52a1cff6a2/articles/vulnerability-processing.md?plain=1#L28\n\n(I have a PR to fix the typo there)\n\nwhich maps to this code:\n\nhttps://github.com/fleetdm/fleet/blob/33a703920378a7084319da99a5af5c52a1cff6a2/server/vulnerabilities/nvd/cve.go#L326-L336"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Got it. And currently the Fleet cron runs hourly, so this change will take it from up to two hour to up to one hour? "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath (sorry, misunderstood your comment, one moment)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath With this revision, the vulns run after a false positive is fixed would correct the issue. Via cron, that would happen every hour, but you could make it happen more quickly by triggering the job manually."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/26404?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@lukeheath chatted with @mostlikelee and decided to deprioritize this one. We want to get to customer requests first and we need to make some room."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "```go\nnumberOfTimesExistingStaleVulnHandlingIncreasedFrictionOnVulnManagementWork++\n```\n\nFor #28983.\n"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "yeah I forgot about that this morning: https://fleetdm.slack.com/archives/C086V2QK76X/p1747311488652479"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Ready for async User story review. Whoever signs off on this last, please move this directly to \"Ready for estimate\" and start Planning Poker, as this one's already spec-complete.\n\n- [x] @mostlikelee \n- [x] @jmwatts (you checked the \"test plan finalized\" box back on April 8, and the test plan hasn't been modified since, so...should be good here?)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx yes this one should be good"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753214019845799)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tested this by inserting an extra `software_cve` entry pointed at a combination of existing CVE and existing software (but a CVE that didn't actually apply to that software), with NVD as the source ID, then ran the cron. Existing vulns stuck around, but my manually inserted false positive didn't. Still traverses the relevant code paths, but took less time to verify."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.70 RC\n\nSpotted in dogfood logs from June 27 2025, so probably not running the final released build\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nSaw the following message while reviewing dogfood logs with @MagnusHJensen . Also saw similar errors for installers 6189 and 6190.\n{\"component\":\"uninstall_software_migration\",\"cron\":\"uninstall_software_migration\",\"err\":\"unsupported file type\",\"level\":\"warn\",\"msg\":\"extracting metadata from installer\",\"software_installer_id\":6187,\"storage_id\":\"72b23a02f937043caa03ebf88b83a2651249b68c00590d13dd835bcd73d46dd7\",\"ts\":\"2025-06-27T21:34:33.733540456Z\"}\n\nThese installers represent the following apps:\n6187 Brave-Browser-arm64.dmg 1.79.126.0 \n6189 Docker.dmg 4.42.1\n6190 MicrosoftEdge-137.0.3296.93.dmg\n\n### ð§âð» Â Steps to reproduce\n1. Upload a variety of package types\n2. Run `fleetctl trigger --name uninstall_software_migration` and watch the logs for warnings\n\n### ð¯ï¸ More info _(optional)_\nLink to relevant slack thread: https://fleetdm.slack.com/archives/C071NNMSP2R/p1751552544401869\nThe following log insights query will find them:\n```\nfields @timestamp, @message, @logStream, @log\n| filter ispresent(error) or ispresent(err) or level = 'error'\n| filter @message like /uninstall_software_migration/\n| filter level != 'debug'\n| filter level != 'info'\n| sort @timestamp desc\n| limit 10000\n```\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### ð ï¸ To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30565,
          "repository": "fleetdm/fleet",
          "title": "Warning from uninstall_software_migration cron: unsupported file type",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30565"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCos4",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Warning from uninstall_software_migration cron: unsupported file type",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced. Had many installers uploaded to my fleet instance. Ran `fleetctl trigger --name uninstall_software_migration` and observed the following output:\n\n\n```\nlevel=debug ts=2025-07-07T15:20:22.899346Z component=http user=admin@fake.com method=POST uri=\"/api/latest/fleet/trigger?name=uninstall_software_migration\" took=8.484917ms\nlevel=debug ts=2025-07-07T15:20:22.90024Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=\"done, trigger received\"\nlevel=info ts=2025-07-07T15:20:22.915365Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" status=pending\nlevel=debug ts=2025-07-07T15:20:22.915439Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=starting jobID=uninstall_software_migration\nSDK 2025/07/07 10:20:22 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nlevel=warn ts=2025-07-07T15:20:24.777168Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=543 storage_id=no_check err=\"unsupported file type\"\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nlevel=warn ts=2025-07-07T15:20:25.682907Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=544 storage_id=no_check err=\"unsupported file type\"\nlevel=warn ts=2025-07-07T15:20:28.107299Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=545 storage_id=3ccb062c081bd7ac5b8a9183ebb6a52cfd6046411e6d51a89f12e132b6672f63 err=\"unsupported file type\"\nlevel=warn ts=2025-07-07T15:20:28.308374Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=547 storage_id=67dfa6f184794373a490d5d7ae1ae00b5db80d710c946f8be1ee210d12e54a05 err=\"unsupported file type\"\nlevel=info ts=2025-07-07T15:20:28.314756Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" status=completed\nlevel=debug ts=2025-07-07T15:20:28.317486Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=\"23h55m27.682518s remaining until next tick\"\n```\n\n\nThose ids correspond to:\n```\nmysql\u003e select id, filename, extension from software_installers where id in (543, 544, 545, 547);\n+-----+----------------------------------------+-----------+\n| id  | filename                               | extension |\n+-----+----------------------------------------+-----------+\n| 543 | googlechrome.dmg                       | dmg       |\n| 544 | googlechromestandaloneenterprise64.msi | msi       |\n| 545 | AcroRdrDC_2500120529_MUI.dmg           | dmg       |\n| 547 | nice-dcv-viewer-2024.0.8004.arm64.dmg  | dmg       |\n+-----+----------------------------------------+-----------+\n4 rows in set (0.01 sec)\n```\n\nI noticed earlier occurrences of this in my logs as well, those packages corresponded to:\n```\n+-----+--------------------------------+-----------+\n| id  | filename                       | extension |\n+-----+--------------------------------+-----------+\n| 341 | A+ Suite for Mac_sign.pkg      | pkg       |\n| 342 | AcrobatUpd10116.pkg            | pkg       |\n| 343 | AddWindowsExplorerShortcut.exe | exe       |\n| 345 | Airtame.pkg                    | pkg       |\n| 346 | AutodeskFusion-005.pkg         | pkg       |\n| 347 | AutoPkg-2.7.3.pkg              | pkg       |\n| 348 | AWS VPN Client.pkg             | pkg       |\n| 349 | AWS_VPN_Client.msi             | msi       |\n| 351 | BoxDrive.pkg                   | pkg       |\n| 353 | cli-arm64.exe                  | exe       |\n| 354 | cli.exe                        | exe       |\n| 355 | CloudflareWARP.pkg             | pkg       |\n| 358 | Egnyte Connect-3.14.18.pkg     | pkg       |\n| 360 | Elmedia Player-8.22.pkg        | pkg       |\n+-----+--------------------------------+-----------+\n```\n\nSo, not certain this is related to a specific package type. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts FWIW `no_check` in the DB was a different issue (fixed in 4.71 or 4.72; we shouldn't have anything with a storage ID of `no_check`). Other errors were likely because the DB had software in it that wasn't in object storage. Fix I just PR'd fixed the original issue; the other ones look to be environmental to your local and/or resolved elsewhere already."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "merged before kickoff, so i'm assigning this to sprint 44.  will do the same next sprint so it's consistent."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "changing my mind here. this wont actually affect the burndown chart.  moving back to 45"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n4.70.1\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nThe customer added a software installer with install/uninstall scripts that used Fleet secrets. The secrets were present as gitops env variables, but dry run failed.\n\n\u003cimg width=\"2350\" height=\"1254\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a4aaca6e-277b-4152-9e97-516ea347fbce\" /\u003e\n\nThe workaround is to use contributor API to add dummy secrets: https://github.com/fleetdm/fleet/blob/main/docs/Contributing/reference/api-for-contributors.md#store-secret-variables\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Create software installer with install/uninstall scripts with secrets.\n2. Make sure the secrets are NOT saved in the Fleet DB `secret_variables`\n3. Run gitops dry run.\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### ð ï¸ To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 30853,
          "repository": "fleetdm/fleet",
          "title": "Unable to apply software installers with Fleet secrets via GitOps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30853"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "#g-software",
          "prospect-coppelia"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Unable to apply software installers with Fleet secrets via GitOps",
        "comments": [
          {
            "author": {
              "login": "getvictor"
            },
            "body": "@mostlikelee I believe this is a P1 since this feature is broken right now. However, I've marked it a P2 since customer was OK waiting until 4.73 for the fix.\n\n@harrisonravazzolo Please add the customer label since I couldn't find it."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752521340977199"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "lowered estimate, we already had validation logic"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: All since software titles were added\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nI can see automatic install policies attached to installers from the /software/titles page but not from the /hosts/:id/software page\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Try to look for the automatic_install_policies key while looking at host software (hosts/:id/software API) of a software that has automatic_install_policies set when looking at software (software/ API)\n2. Notice it's always set to null even if it's set on the software title\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nHere's screenrecordings of the mismatch\n\nFirst 30 or so seconds only shows there's automatic policies attached to that software title\nhttps://github.com/user-attachments/assets/ddb5e4b7-1a75-4bdf-8539-2a5a765a7c81\n\nShows there's no automatic policies attached to that software title for the particular host\nhttps://github.com/user-attachments/assets/31fd1395-c440-46f0-b964-fcb4d8b8a1d1\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\n- [Figma design](https://www.figma.com/design/neuhhOaQ0Qvh74xdqwmu6C/-30197-Host-Software-API--Surface-automatic-install-policies?node-id=5301-26\u0026t=RHjnRKdNhkv48TVg-11). When there is no self-service the icon changes to the recycle icon.",
          "number": 30197,
          "repository": "fleetdm/fleet",
          "title": "Host Software API: Surface automatic install policies",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30197"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Host Software API: Surface automatic install policies",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "cc: @iansltx \n\nSecond backend bug that will be highly noticeable with hackathon work\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulling back to drafting as, while this means we can't show the automatic policies icon in software library/inventory in the host details view yet, we're no worse off than we are right now. @RachelElysia it still makes sense for the FE to consume the data when it's available, but unlike #30188 this isn't going to be an immediate source of user confusion, so there are items currently in the sprint we don't want to evict in favor of this, and potentially stuff we want to bring in instead of this."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added the following to this ticket which I think resolves the issue in question?\n\n- [Figma design](https://www.figma.com/design/neuhhOaQ0Qvh74xdqwmu6C/-30197-Host-Software-API--Surface-automatic-install-policies?node-id=5301-26\u0026t=RHjnRKdNhkv48TVg-11). When there is no self-service the icon changes to the recycle icon.\n\nI'll move this to ready to estimate and add planning poker. If there's other things to do please pull it back so that any remaining items can be addressed. Thanks!\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1750684407360969\n\nHoping this is FE only."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Coolio. I added a design to this and moved it to ready to estimate, but it can sit there I guess until such time as we want to pull it forward."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo This is actually _backend_-only. FE work for this is already done. This is another ListHostSoftware related case, and we'll want to take care to _not_ have an N+1 here I think."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "Are there plans to create separate web API endpoints for the library and inventory? That could help simplify `ListHostSoftware`."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jahzielv In this case, that wouldn't help, as current designs call for showing the \"this has auto-install policies\" icon on both library and inventory pages within host software details. If we stopped showing installer-related icons on inventory that would clean things up a bit (though this would still need to implement this for the library side) but that'd require a change to the desired fix here.\n\nRe: splitting endpoints, that would be out of scope for this bug, and would need a new issue filed."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "\u003e Re: splitting endpoints, that would be out of scope for this bug, and would need a new issue filed.\n\nOh yeah for sure! I don't think it should be done here, but seeing this ticket made me think about it :D"
          }
        ]
      },
      {
        "assignees": [
          "Illbjorn"
        ],
        "content": {
          "body": "## Related user story\n\n#30095\n\n## Task\n\nBuild a tool that, given YAML compatible with the previous GitOps format, pulls fields removed from software package YAML up to the corresponding team YAML file(s), resulting in YAML that is semantically identical with as small of a diff as possible but is compatible with the new documentation.\n\nMoving deprecated-but-not-removed fields (`macos_setup.software`) is out of scope.\n\n## Condition of satisfaction\n\nA tool exists, either built into `fleetctl` or otherwise, and is referenced in the \"this field is no longer valid\" error message added in #31163.\n\nThis tool should automatically scan all team files that would normally be picked up by the `gitops.sh` script, find all software paths in those files, and transform all found software package YAML files, without needing to specify each manually. Specifying a single team file should also be allowed.\n\nBonus: adding compatibility checks for software package files directly (just checks if any no-longer-supported fields are included).\n\nNot in scope: doing this for multi-package software YAML files, as those shouldn't exist until this work is released.",
          "number": 31165,
          "repository": "fleetdm/fleet",
          "title": "GitOps software/setup experience restructure: YAML migration tool",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31165"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps software/setup experience restructure: YAML migration tool",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243609663689)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Please include instructions on how to use said tool, esp for environments with many teams and packages please!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev If on-call remains quiet, take this one iydm"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30849\n\n## Task\n\nReview/assistance as needed for #30790.\n\n## Condition of satisfaction\n\n#30790 is merged, along with any other work necessary to implement the YAML changes in #31086, and test plan is verified passing by the assigned engineer.",
          "number": 31206,
          "repository": "fleetdm/fleet",
          "title": "GitOps software multi-package files: Contributor review + tweaks",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31206"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnxU",
        "labels": [
          "~fleetctl",
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps software multi-package files: Contributor review + tweaks",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753680845308789)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#30849\n\n## Task\n\nUpdate sample YAML in the \"Show YAML\" view for software packages.\n\n## Condition of satisfaction\n\n\"Show YAML\" dialog conforms to the attached [Figma designs](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1).",
          "number": 31207,
          "repository": "fleetdm/fleet",
          "title": "GitOps software multi-package files: View YAML changes in software UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31207"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCn44",
        "labels": [
          "~fleetctl",
          "~gitops",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps software multi-package files: View YAML changes in software UI",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753681073584279)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify multiple software (custom) packages in one YAML file\n| so that I can reuse those across teams and edit in one place.\n\n## Key result\n\nNone.\n\n## Original requests\n\nNone. This user story was prioritized after @fuhry (community member) opened this PR with a proposed solution:\n- #30790\n\n## Context\n- Product Designer: @noahtalerman\n- Engineering DRI: @iansltx \n\n## Changes\n\n### Product\n- [x] GitOps Mode UI changes: [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1)\n- [x] YAML changes: [YAML design PR](https://github.com/fleetdm/fleet/pull/31086)\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes (only docs changes required are covered in the YAML design PR)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## Product No-ops\n\n- CLI (fleetctl) usage\n- UI changes (other than in GitOps Mode)\n- REST API\n- Fleet's agent (fleetd)\n- GitOps generation\n- Activities\n- Permissions\n- My device and fleetdm.com/better\n- Other reference documentation\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\nWhile performance regressions etc. aren't at issue, we'll now have three formats for specifying software packages in YAML (inline, list in separate file, individual in separate file) so future development runs the risk of forgetting to implement functionality in all three. So, not a risk for this particular story, but a maintainability risk going forward.\n\n\n### Documentation \nReview [Updated Documentation](https://github.com/fleetdm/fleet/pull/31086/files?short_path=b711042#diff-b71104232d8fbaaf4bd537065533cbf39ec5f9bf028ec1d8083346953ed5178d) \n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\nNOTE: #30095 must be merged prior to this ticket or this test plan is invalid.\n[#31165](https://github.com/fleetdm/fleet/issues/31165) will need to be used to migrate yaml files or some parts of this test plan may fail.\n\n**New functionality**\n- [ ] Create a package YAML file with two custom packages specified by `url`. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet.\n- [ ] Next, In the team YAML, for your two custom packages, specify `self_service`, `categories`, and labels. Run GitOps, and verify that the options are applied to both packages. \n- [ ] Edit your package YAML file to have the two custom packages specified by `hash`. Ensure these packages have already been uploaded to Fleet. Run GitOps and verify that the two packages remain in the correct team in Fleet and that all additional settings in the team YAML are applied (Self service, categories, labels).\n- [ ] Edit your package YAML file to have one custom package specified by `hash` and the other specified by `url`. Ensure the software specified by hash has already been uploaded to Fleet. Run GitOps and verify that the two packages remain in the correct team in Fleet and that all additional settings in the team YAML list are applied (Self service, categories, labels).\n- [ ] Edit your package YAML file by removing one of the packages. Run GitOps and verify that the removed package is removed from Fleet.\n~- [ ] ERROR PATH: Create a package YAML file in the \"list format\" to have two versions of the same software, one custom package specified by `hash` and the other specified by `url`. Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.~\n~- [ ] ERROR PATH: Create a package YAML file in the \"list format\" to have one version of a software, and another package YAML to have a different version of the same software. Try both specified with just hash, both with just url, and one specified by `hash` and the other specified by `url`. Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.~\n- [ ] ERROR PATH: Add multiple FMA and/or VPP apps to a package YAML file in the \"list format\". Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.\n\n**Backwards compatibility**\n- [ ] Backwards compatibility: Add packages in-line to the team YAML file. Run GitOps and verify that the package(s) is added to the correct team in Fleet.\n- [ ] Backwards compatibility: Create a package YAML file with one custom package in the [old package YAML format](https://github.com/fleetdm/fleet/pull/31086/files#r2219494344) (no array). Run GitOps and verify that the package is added to the correct team in Fleet. NOTE: self service, categories, labels will no longer be allowed in the package YAML due to #30095\n\n**Multiple YAML formats**\n- [ ] Without duplicating any packages, specify some packages in-line on the team YAML, specify some packages in a multi-package YAML, specify a single package in an individual YAML in the \"Old format\", and specify a single package in an individual YAML in the new \"List format\". Reference the multipackage, single \"old format\", and single new \"list format\" yaml files in-line on the Team YAML, alongside the in-line specified package. Run GitOps and verify that all packages are added to the correct team in Fleet.\n~- [ ] ERROR PATH: Using the same package info for all methods: Specify some packages in-line on the team YAML, specify some packages in a multi-package YAML, specify a single package in an individual YAML in the \"Old format\", and specify a single package in an individual YAML in the new \"List format\". Reference the multipackage, single \"old format\", and single new \"list format\" yaml files in-line on the Team YAML, alongside the in-line specified package. Run GitOps and make sure there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error. Try specifying the same package with all methods at once, and then de-duplicating them as you go, working through the gitops errors, to ensure you can resolve the issue. ~\n\n**Setup experience**\n- [ ] Create a single package YAML file in the new list format. Reference the package YAML on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the new list format. Reference the file in-line on the team YAML in the macos_setup.software key. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the old format. Reference the file in-line on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the old format. Reference the file in-line on the team YAML in the macos_setup.software key. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a package YAML file in the new list format with multiple software items in it. Reference the package YAML on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure all packages are added to Setup experience. \n\n\n**Policy automations**\n- [ ] Create a package YAML with one package, in the old non-list format using `hash_sha256`. Create a policy YAML and reference the package using `hash_sha256`. Run GitOps and verify that the package is tied to the policy.\n\n\u003cimg width=\"645\" height=\"145\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1e945b7a-a845-4e40-a518-7d6b0d17cb9c\" /\u003e\n\n- [ ] Create a package YAML with one package, in the old non-list format using either `url` or `hash_sha256`. Create a policy YAML and reference the `package_path`. Run GitOps and verify that the package is tied to the policy.\n\n\u003cimg width=\"693\" height=\"143\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b3229af0-1fe5-47eb-940b-5f8f5038dbb6\" /\u003e\n\n- [ ] Create a package YAML with one package, in the new format. Create a policy YAML and reference the `package_path`. Run GitOps and verify that the package is tied to the policy. (Same as above, but the package.yml is in the list format)\n- [ ] Create a package YAML with multiple installers listed in it. Create a policy YAML and reference the `hash_sha256` of ONE of the software installers in the list from the file with multiple packages. Run GitOps and verify that the package is tied to the policy.\n- [ ] Create a package YAML with multiple installers listed in it. Create a policy YAML and reference the `package_path`. Verify that you see an easy to understand error message.\n\n**Large Environments**\n- [ ] A large environment with no changes to YAML that successfully applied in the previous version of Fleet without error should continue to apply without error. (Provided they have gone through the migration from #31165\n\n**UI Changes**\n- [ ] Turn on GitOps mode in Fleet and add a custom package. Verify that the UI changes [specified in Figma](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) show up.\n\n**`fleetctl generate-gitops`**\n- [ ] Add several packages in Fleet, and then run `fleetctl generate-gitops`. Use the YAML output in a GitOps run and verify that all the packages are still present in Fleet.\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n\n\n---\n## Problem\n\nThe list of software configured via GitOps might be dynamic, for example if the GitOps pipeline builds and pushes packages just before fleet gitops is called, or if partial package lists are shared between teams.\n\nIn these cases, it's useful to be able to include one file containing multiple packages. [This PR](https://github.com/fleetdm/fleet/pull/30790) refactors parseSoftware to support that use case.\n",
          "number": 30849,
          "repository": "fleetdm/fleet",
          "title": "GitOps: Support multiple software packages in one YAML file",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30849"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoAQ",
        "labels": [
          "story",
          ":release",
          "~pushed",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "GitOps: Support multiple software packages in one YAML file",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "DONE @noahtalerman: What do we do about policy automations? Right now policies in GitOps assume one package per package YAML file.\n  - @iansltx: Today, `fleetctl generate-gitops` works around this by using a `hash_256` to specify the hash. Maybe we can use the same to solve this.\n \n@noahtalerman: Decided like this: either use hash or path to a file. If the file has more than one package, Fleet will error. Specified in [this dev note](https://github.com/fleetdm/fleet/pull/31086/files#r2222732518)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [ ] In your team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\u003e   - @noahtalerman: I think testing this requires the changes in this separate user story: https://github.com/fleetdm/fleet/issues/30095\n\nDONE: @noahtalerman: Pull this into #30095\n\n- @noahtalerman: Added the below to the test plan for #30095.\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @iansltx @jmwatts ^"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "TODOs (will write these up better later):\n\n* Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n* Documenting \"error if multiple packages in setup experience YAML file\"\n* Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n\nWe decided to deprecate support for the non-list behavior but maintain backwards compatibility. See this dev note: https://github.com/fleetdm/fleet/pull/31086/files#r2219494344\n\n\u003e Documenting \"error if multiple packages in setup experience YAML file\"\n\nIn this [separate GitOps story](https://github.com/fleetdm/fleet/issues/30095), we decided to support applying `setup_experience`. From that separate stories QA plan:\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\n\u003e Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?\n\nI think this is covered by the [YAML reference doc updates](https://github.com/fleetdm/fleet/pull/31086). We're showing that a list length of 1 is the best practice."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman FYI we'll need to make some slight tweaks to the modal implemented in #28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nAlso, thoughts on removing the old functionality and adding a script to fix existing software YAML files (linked from the \"this was removed\" error) instead of moving the schema to undocumented but still incurring the maintenance burden of supporting it? If we think this is the proper way to format software packages, \"indent the existing file by two spaces and prepend a `- ` to the first line might be simple enough to perform with a single sed/awk command."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "- UPDATE: @noahtalerman: Added [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) to the issue description (including test plan).\n\n\u003e FYI we'll need to make some slight tweaks to the modal implemented in https://github.com/fleetdm/fleet/issues/28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nYep! We want to tweak the UI here with an indent and a hyphen.\n\nDONE: @noahtalerman \n\nAlso, update the package name to include `.package`:\n\n\u003cimg width=\"597\" height=\"83\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b09f13a-630f-48bf-81b7-4555fc4c81a5\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Sorry for the delay on this one. Subtasks are created. Ask away with questions you have."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 4.70.0\n**Web browser and operating system**: 138.0.7204.100\n\n\u003chr/\u003e\n\n### ð¥  Actual behavior\nFleet is incorrectly reporting that macOS and Linux hosts running the latest patched versions of Google Chrome are vulnerable to CVE-2025-6554. This appears to be a false positive caused by incomplete CPE data from NVD for this vulnerability.\n\n### ð§âð»  Steps to reproduce\n1. Enroll a macOS host running Google Chrome version `138.0.7204.92` or `138.0.7204.93` (or a Linux host running `138.0.7204.92`) or later into Fleet.\n2. Navigate to the **Vulnerabilities** page in the Fleet UI.\n3. Search for `CVE-2025-6554`.\n4. Observe that the host is listed as vulnerable, despite running a version of Chrome where the vulnerability has been patched.\n\n### ð¯ï¸ More info _(optional)_\nThis issue stems from the vulnerability data for CVE-2025-6554, which was addressed in Google Chrome's stable channel update on June 30, 2025.\n\nAccording to the [[Google Chrome release notes](https://chromereleases.googleblog.com/2025/06/stable-channel-update-for-desktop_30.html)](https://chromereleases.googleblog.com/2025/06/stable-channel-update-for-desktop_30.html), the patched versions are:\n*   **Windows**: `138.0.7204.96` / `.97`\n*   **Mac**: `138.0.7204.92` / `.93`\n*   **Linux**: `138.0.7204.92`\n\nHowever, the CVE data (e.g., on [[VulnCheck](https://vulncheck.com/cve/cve-2025-6554)](https://vulncheck.com/cve/cve-2025-6554)) seems to only list the Windows version (`138.0.7204.96`) as the fix. This causes Fleet to incorrectly flag patched Mac and Linux systems as vulnerable.\n\nThe suggestion from the internal discussion was to implement a data override in the Fleet vulnerability feed to correct this false positive until the CNA/NVD updates the official record.",
          "number": 30682,
          "repository": "fleetdm/fleet",
          "title": "Bug: False-positive for CVE-2025-6554 on Linux/macOS hosts",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30682"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxHA",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~vulnerability-management",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Bug: False-positive for CVE-2025-6554 on Linux/macOS hosts",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Repro'd](https://dogfood.fleetdm.com/software/versions/568346)"
          }
        ]
      },
      {
        "content": {
          "body": "**Fleet version**: \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nSome deb packages ask user questions during installation causing the install script to timeout.\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. TODO\n2. TODO\n3. \n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### ð ï¸ To fix --\u003e\nFrom community contributor:\n\nSetting this variable within orbit itself, instead of in the default installation script template, accomplishes two things:\n\nAccomplishes what is usually considered the desired behavior retroactively, without requiring administrators to go back and update all of their install scripts\nAllows administrators to override the default behavior in their scripts, in case there is a need for package installation to actually prompt the currently logged-in user for information.\nNote that this does NOT prevent dpkg from blocking when a conffile has been changed since the previous installation. In these cases, the administrator should include\n-o Dpkg::Options=\"--force-(confdef|confold|confnew)\" in the dpkg or apt command in the install script.\n",
          "number": 31396,
          "repository": "fleetdm/fleet",
          "title": "deb package hangs during install",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31396"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "labels": [
          "bug",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.47.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "deb package hangs during install",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocking waiting on replication steps for QA steps from contributor"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "contributor is OOO, and fleetd cut happened this morning.  I'll figure out next steps here"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the PR is reverted from the 1.46 release branch so we don't block the fleetd release"
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [x] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [x] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [x] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n\n### Smoke tests\nFor this ticket, we'll only be running smoke tests that apply to macOS/iOS/iPadOS Tahoe. \n[This template contains a detailed breakdown of the tests](https://github.com/fleetdm/fleet/blob/HEAD/.github/ISSUE_TEMPLATE/release-qa.md)\n\n**MDM**\n - [x] MDM enrollment flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] MDM migration flow\n   - MacOS\n - [x] OS settings\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] Setup experience\n   - MacOS\n - [x] iOS/iPadOS\n   - iPadOS\n   - iOS\n - [x] Lock \u0026 Wipe\n   - MacOS\n   - iPadOS - Wipe only\n   - iOS - Wipe only\n\n**Orchestration**\n- [x] Packs flow\n   - MacOS\n- [x] OS settings\n   - MacOS\n- [ ] Log destination flow\n   - MacOS\n   - iPadOS\n   - iOS\n\n**Software**\n- [x] Query flow\n  - MacOS\n- [x] My device page\n  - MacOS\n- [x] Scripts\n  - MacOS\n- [x] Software\n  - MacOS\n  - iPadOS\n  - iOS\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30696,
          "repository": "fleetdm/fleet",
          "title": "Validate macOS Tahoe on Fleet so that we can provide same day support when it goes to general release",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30696"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "labels": [
          "story",
          "#g-mdm",
          "#g-orchestration",
          "#g-software",
          "macos26"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "Validate MacOS Tahoe on Fleet so that we can provide same day support when it goes to general release",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@AndreyKizimenko While you will be leading this effort, it impacts all product groups, so feel free to request support from the rest of the QA team as needed. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @lukeheath @AndreyKizimenko, this got lost in drafting last two weeks. I don't think this needs to go through the drafting process, as it doesn't require product design or estimation. I moved this to \"Testing - QA board\" project."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@xpkoala @PezHub @jmwatts - @AndreyKizimenko will be taking lead on this, but we'll be bringing into each product group's release board on Monday after sprint kickoff. We expect each QA engineer will be involved at some point as we validate MacOS Tahoe. \n\ncc @sharon-fdm @georgekarrv @mostlikelee "
          }
        ]
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: Windows App\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name`\n- [x] Manifest version scheme matches osquery `app.short_bundle_version`\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier`\n\n### QA\n\n- [ ] App adds successfully to team's library\n- [ ] App installs successfully on host\n- [ ] App opens successfully on host\n- [ ] App uninstalls successfully on host\n\n### Icon\n\n- [x] Icon added to Figma. @marko-lisica: macOS icon has a white background, and Windows app icon has blue background. Windows icon seems more recognizable, and I created SVG for it. [Link to Figma](https://www.figma.com/design/8oXlYXpgCV1Sn4ek7OworP/%F0%9F%A7%A9-Design-system?node-id=1365-4002\u0026t=Pqfnute9dj1VINxk-11)\n- [ ] Icon added to Fleet\n- [ ] Correct icon appears in the app catalog",
          "number": 31468,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Windows App",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31468"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdLZck",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð¥ Ready",
        "title": "New FMA: Windows App"
      },
      {
        "assignees": [
          "drvcodenta"
        ],
        "content": {
          "body": "## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to see the CVE number displayed in the empty state on `/software/vulnerabilities/:cve` if no hosts are affected.\n| so that I can take a screenshot of that page and send it to my security team.\n\n## Roadmap item\n\nNone\n\n## Original requests\n\n#24807\n\n## Context\n- Product Designer: @marko-lisica  \n- Engineer: @iansltx \n\nThis story is the result of community PR: #31370\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [x] UI changes:\n  - Include CVE number in empty state on  `/software/vulnerabilities/:cve` page, when no hosts are affected with that CVE:\n  - \u003cimg width=\"1615\" height=\"466\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5a3f2a1d-8142-4860-9ae0-971bc2aed28f\" /\u003e\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: No changes.\n- [x] REST API changes: No changes.\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps mode UI changes: No changes.\n- [x] GitOps generation changes: No changes. \n- [x] Activity changes: No changes.\n- [x] Permissions changes: No changes.\n- [x] Changes to paid features or tiers: Fleet Free and Premium\n- [x] My device and fleetdm.com/better changes: No changes.\n- [x] Other reference documentation changes: No changes.\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### Fleet Premium\n\n1. Navigate to `/software/vulnerabilities/\u003ccve_that_isn't_detected\u003e`\n2. Verify that CVE number is included in the copy in empty state in both Fleet Free and Premium.\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 31377,
          "repository": "fleetdm/fleet",
          "title": "Include CVE number in empty state on vulnerability details",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31377"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdMZs8",
        "labels": [
          "story",
          "~frontend",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Include CVE number in empty state on vulnerability details",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\n\u003cimg width=\"697\" height=\"262\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/66df103f-b840-4d35-ac61-62b442934c0f\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\nCorrect, i'm DRI for anything Ready for Spec onward.   In many cases I'll delegate in those cases i'll re-assign the story."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta This is now spec'd; estimate is capacity allocation for my review. Feel free to self-assign (for some reason GitHub is fighting my ability to assign this to you), move from Waiting to In progress, and assign me for PR review when it's up. Thanks again!"
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "I'm not a collaborator on the repository or part of the organization/team with write access, so GitHub isnât letting me self-assign this issue"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Got it, that makes sense that I wasn't able to either. Either way, this is yours to move forward with as/when you see fit."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Apparently there's a weird GitHub idiosyncrasy (bug? anti-abuse measure?) where external folks have to comment on the issue before they show up as a potential assignee, so your comment actually allowed me to assign you, which I've done. Thanks @lukeheath for assisting with troubleshooting that one :)\n\nMoving this to Ready now, and you can move to In progress when you're actively working on it."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Hey! Iâve started work on this â PR here: [#31370](https://github.com/fleetdm/fleet/pull/31370).  \nI've updated the PR description to reference this issue instead, as itâs the more accurate one.  \nAlso, I donât have permission to move the issue to âIn progress,â just FYI. Let me know if anything else is needed. Thanks!\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Thanks! Didn't know that had already been approved. I've gone ahead and merged it and am moving this to Awaiting QA."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Thanksðð¤"
          }
        ]
      },
      {
        "assignees": [
          "zwass"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer,\n| I want to query the [`vscode_extensions`](https://fleetdm.com/tables/vscode_extensions) table and get Cursor and Windsurf extensions\n| so that I can see all the text-editor/IDE extensions for VS Code forks installed across my fleet.\n\n## Roadmap item\n\nNone.\n\n## Original requests\n\n- #30260\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @zwass \n\n## Changes\n\n### Product\n- [x] UI changes: No changes\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: No changes\n- [x] Fleet's agent (fleetd) changes: Add 3 new values to the existing column `vscode_edition` to the [`vscode_extensions` osquery table](https://osquery.io/schema/5.18.1/#vscode_extensions). New values are one of `cursor`, `windsurf`, or `vscode_oss`.\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] Changes to paid features or tiers: Fleet Free and Fleet Premium\n- [x] My device and fleetdm.com/better changes: No changes\n- [ ] Other reference documentation changes: Verify that the new osquery schema is merged into fleetdm.com/tables\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [x] Contributor API changes: No changes\n- [x] Feature guide changes: No changes\n- [x] Database schema migrations: No changes\n- [x] Load testing: No changes\n- [x] Load testing/osquery-perf improvements: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n1.  On a macOS host install [Windsurf](https://windsurf.com/), [Cursor](https://cursor.com/), and [VSCodium](https://vscodium.com/) and install extensions on each. \n2. Run the following live query in Fleet and verify that the results match the extensions you have installed, with the `vscode_edition` set corresponding to which fork you're using:\n\n```sql\nWITH cached_users AS (WITH cached_groups AS (select * from groups)\n SELECT uid, username, type, groupname, shell\n FROM users LEFT JOIN cached_groups USING (gid)\n WHERE type \u003c\u003e 'special' AND shell NOT LIKE '%/false' AND shell NOT LIKE '%/nologin' AND shell NOT LIKE '%/shutdown' AND shell NOT LIKE '%/halt' AND username NOT LIKE '%$' AND username NOT LIKE '\\_%' ESCAPE '\\' AND NOT (username = 'sync' AND shell ='/bin/sync' AND directory \u003c\u003e ''))\nSELECT\n  name,\n  version,\n  uuid AS extension_id,\n  publisher AS vendor,\n  path AS installed_path,\n  vscode_edition\nFROM cached_users CROSS JOIN vscode_extensions USING (uid)\n```\n\n4. Repeat the above steps for a Windows and Linux host.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 31476,
          "repository": "fleetdm/fleet",
          "title": "Add Windsurf and Cursor extensions to `vscode_extensions` table",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31476"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdVUIs",
        "labels": [
          "story",
          ":release",
          ":help-customers",
          "#g-software"
        ],
        "milestone": {
          "title": "osquery-5.19.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Add Windsurf and Cursor extensions to `vscode_extensions` table",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Seems like the `vscode_edition` column serves the same purpose here?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@iansltx oh interesting! Does `vscode_edition` already tell us VS Code v. Cursor v. Windsurf?\n\nIf yes, then it sounds like no osquery changes are needed.\n\nIf not, then I think we stick with a new `ide_type` column. While we're making osquery changes, we take the opportunity to make `vscode_extensions` consistent with the [`chrome_extensions` table](https://fleetdm.com/tables/chrome_extensions).\n\ncc @zwass "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman It doesn't give us that ability right now (because it doesn't have the mapping added for the user data dirs for windsurf/cursor/vscode-oss), but it uses the exact same method to pull the information that we'd use to get that info, so adding a new column would either wind us up with two columns for the exact same info or one column that we'd have to artificially pin to older behavior, complicating dev/maintenance."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "\nAh, I didn't notice the `vscode_edition` column when we discussed this. I agree with @iansltx this should definitely be used to better match the behavior of the `chrome_extensions` table where `edge` vs. `beta` vs. `brave`, etc. are included in the same column."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] Fleet's agent (fleetd) changes: Add 3 new values to the existing column `vscode_edition` to the [`vscode_extensions` osquery table](https://osquery.io/schema/5.18.1/#vscode_extensions). `cursor` can be one of `windsurf`, or `vscode_oss`.\n\n@zwass just chatted with @iansltx and we decided update the specs to use the `vscode_edition` column.\n\nWe also decided to bring in VSCodium which will return `vscode_oss`.\n\nNot sure if other forks (less used) have the same value. Can you please help us do that research? We want to know if `vscode_oss` is VSCodium specific so we can show \"VSCodium\" in the UI/API. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Made some tweaks to the test plan for more accuracy, given that we need a users cross join to get VSCode extensions. The new query is based on [our existing VSCode extensions detail query](https://fleetdm.com/vitals/v-scode-extensions#apple)."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "\u003e Not sure if other forks (less used) have the same value. Can you please help us do that research? We want to know if vscode_oss is VSCodium specific so we can show \"VSCodium\" in the UI/API.\n\nCan we have it return `vscodium` for maximum clarity?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@zwass The pattern of dotfiles dirs is `.vscode-oss`, hence my thought of maintaining the \"hyphens to underscores\" pattern. I'm also not 100% sure whether VSCodium is the only fork that uses that dir naming scheme; mind doing a quick check? If that really _is_ VSCodium specific, fair enough and we can break the pattern to specifically call out that we know VSCodium is the only fork that uses that dir naming convention."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "https://github.com/osquery/osquery/pull/8664\n\nWent with `vscodium` since the server and insiders variants seem to use that. I'm guessing the `vscode-oss` string is a bit of a historical artifact.\n\nIt was also easy to add Trae so I did that."
          }
        ]
      },
      {
        "assignees": [
          "drvcodenta"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a reviewer for Fleet-maintained apps changes,\n| I want to quickly see a diff of changed (un)install scripts in the PRs where they're changed\n| so that I can confidently review and approve changes with minimal effort.\n\n## Key result\n\nFMA app library Q2 OKR\n\n## Original requests\n\nNone\n\n## Context\n- Product Designer: @iansltx\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] When script refs (for nstall/uninstall) for a version change between `main` and a candidate branch, include the diff between the old install/uninstall scripts and the new ones as a comment on the FMA update PR, similar to [this comment](https://github.com/fleetdm/fleet/pull/28188#issuecomment-2799980715). #31496 should be a good start for this. Can also use #31481 comments as inspiration.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n1. Commit a change that adds an extra newline to macOS scripts (harmless, but will change hashes) _without_ re-ingesting apps on the branch.\n2. Confirm that the auto-generated follow-up PR includes diffs as either a comment or the PR description.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 28189,
          "repository": "fleetdm/fleet",
          "title": "Include easy-to-read automatic script diffs on FMA update PRs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/28189"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdhNKc",
        "labels": [
          "~engineering-initiated",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Include easy-to-read automatic script diffs on FMA update PRs",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "Thanks @iansltx. This will result in faster reviews that are more accurate, supporting stability. Moving to the drafting board to move across per https://fleetdm.com/handbook/engineering#draft-an-engineering-initiated-story. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Let me know what else you need test-plan-wise here. Thinking we can async the USR here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Can you confirm that this is WIP in a comment? Side effect will be that I can assign you to this one."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Yes it's WIP"
          }
        ]
      },
      {
        "assignees": [
          "zwass"
        ],
        "content": {
          "body": "- `customer-numa`: Gong snippet: Customer does not allow call recordings\n- @noahtalerman: _User requested this because_ they want to replace the Flexera agent with the Fleet agent on Linux hosts and need `last_opened_at` data to support software usage tracking in Flexera. This way, they can answer these questions:\n  - DEX: Who's actually using the app? This way, we can decide how to support the app. For example, when a new vulnerability comes out, do we provide documentation/training on how to delete it or update it?\n  - DEX: Maybe we can provide docs to help the few people that are using it?\n  - Do we have too many Parallels licenses? Who's actually using it?\n  - @noahtalerman: _In the interim_ they might be able to run customer PowerShell scripts to get this data. \n    - @allenhouchins: Users could also get this info for third-party apps by looking at login data from the third-party software. \n  - @noahtalerman: _Eventually_ Fleet could collect and return `last_opened_at` timestamps for software on Linux hosts via the `GET /api/v1/fleet/hosts/:id` endpoint.\n\n---\n",
          "number": 27902,
          "repository": "fleetdm/fleet",
          "title": "Software inventory: See last time Linux software was used",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/27902"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdnBvc",
        "labels": [
          ":help-customers",
          "customer-numa",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "Software inventory: See last time Linux software was used",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003c!-- Describe the problem you're trying to solve. What are you trying to accomplish? \n\nExample: I want to order a pair of shoes from my food delivery app, which does not show options for stores that don't carry food. --\u003e\nThe `GET /api/v1/fleet/hosts/:id` API endpoint returns a `last_opened_at` timestamp for macOS hosts. Linux hosts do not have this timestamp.\n\n`customer-numa` uses Flexera for software asset management. Rather than deploy the Flexera agent, they would like to just deploy the Fleet agent and build a connector to get the relevant information into Flexera. `last_opened_at` for Linux hosts is something numa would need from Fleet today in order to accomplish that.\n\nThis is similar to #27087, but for Linux.\n\n## What have you tried?\n\n\u003c!-- Described what actions you have taken in the product today to try and solve this problem. Why didn't that workflow or result work for you? What is missing? \n\nExample: I searched for shoe stores in my food delivery app, but there were no results available. --\u003e\nI made a `GET /api/v1/fleet/hosts/:id` API call to a Linux host to try to get last_opened_at timestamps for installed software. However, none of the objects in the software array in the response contained a `last_opened_at` property.\n\n## Potential solutions\n\n\u003c!-- Propose a solution. What would your ideal workflow look like? You can also attach any screenshots or other visuals that might help convey your meaning. \n\nExample: My food delivery app should have a new search mapping for other categories of goods that can be delivered like 'clothing' or 'home goods' in the suggested searches menu. --\u003e\nFleet would need to identify a way to reliably collect the last opened time for applications on Linux hosts, then return that timestamp on a per-host basis in the API response.\n\n## What is the expected workflow as a result of your proposal?\n\n\u003c!-- Example: I search for the shoe store \u003e I click on the pair of shoes in the size and color I want \u003e I am given an estimated delivery time and price \u003e I pay for my order  \u003e A driver picks up the order and delivers it to me \u003e I am able to track the delivery in the same way I would track a food order. --\u003e \n`customer-numa` would use the Fleet API to build a Flexera connector. They would deploy the Fleet agent to their Linux hosts and _would not_ deploy the Flexera agent. The connector would call the Fleet API to ingest all relevant information into Flexera, including the last time an application was opened on a host."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Heads-up: the only data source where we currently support `last_opened_time`, for any platform, is macOS apps (and only `apps`; other macOS sources like homebrew packages don't include a last opened time). The column is is [implemented here](https://github.com/osquery/osquery/blob/master/osquery/tables/system/darwin/apps.mm#L187-L203), which looks to collect the last opened time for the app directory I believe, which works because that's how macOS apps work.\n\nOur [Linux software detail query](https://fleetdm.com/vitals/software-linux#linux) pulls from DEB packages, RPM packages, Chrome extensions, Firefox addons, Python packages (via an additional query), NPM packages, and Portage packages. Of those, npm/Chrome/Firefox/Python packages include installed paths; the others don't. `rpm_package_files` could likely be joined to `rpm_packages` to get package paths there, but an equivalent table doesn't exist for `deb_packages`.\n\nFor cases where we can access installed paths, we could probably join against `file` to get `atime`, though that would give us one entry per package file rather than a higher-certainty \"this app was opened last at X time,\" and I'm not sure what performance looks like on that since you'd wind up stat'ing a large percentage of a machine's file system to pull the data.\n\nFor _at least_ package types that don't have installed paths (`deb_packages` being the big one), we'd need to do osquery changes of some sort no matter what to get either package files or a more opinionated last-opened time...and we'd need to do this for each table that we want to extract from.\n\nGiven the above, first step seems like it would be to confirm that relevant software is being inventoried (counterexample: snap packages). Next, for a representative double-handful of Linux software, determine what the \"correct\" last opened time is and how to programmatically get that. Then figure out a fast/light/consistent way of pulling that data, determine how that should be exposed in osquery, and add the missing functionality (again, for deb package we'll have to add _something_ no matter what)."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "Ian's analysis seems pretty thorough here. It's a highly nontrivial problem. Another potential roadblock is that apparently Ubuntu systems by default don't update atime for files which makes that approach even less viable."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "@ddribeiro or anyone else, do we know which OS versions they are looking to do this on?\n\nFlexera has tons of different documentation pages mentioning different compatiblity with Linux flavors and versions.\n\nGenerally though, it seems like they use an approach similar to what @iansltx described with listing the package files:\n\n\u003e On Unix-like operating systems, usage can be metered for any process that is running an executable included in the list of files installed by the native packaging technology for the operating system (RPM for Linux, llp for AIX, etc.)\n\n(https://flexerasoftware.my.site.com/revenera/s/article/Application-usage-metering-using-the-FlexNet-inventory-agent)\n\nAt a glance, it seems like it would be possible to list the installed files for a DEB package like osquery does with RPM, which could make Ian's approach theoretically viable. The issue of atime recording being on is perhaps a big one (and that may impact performance even beyond osquery). It's not clear how performant the osquery query would be if quite a few files on the filesystem need to be scanned."
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@zwass Primarily looking to use this on Ubuntu 24.04."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "Once `deb_package_files` is implemented, this query seems to work to get the most recent atime for binaries installed from a given package:\n\n```\nselect package, max(atime), datetime(max(atime), 'unixepoch', 'localtime') from deb_package_files join file using (path) where type = 'regular' and regex_match(file.mode, '[1357]', 0) group by package order by max(atime) desc;\n```\n\nStill not entirely sure how performant it is."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "`deb_package_files` implementation PR: https://github.com/osquery/osquery/pull/8657"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.72\n**Web browser and operating system**: Version 139.0.7258.127\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nTwo versions installed of a software on a host. Both version are associated to the same software_title. The softwares are installed at different paths. One software has a last open time and the other software has a null last open time.\n```\n+--------+---------+------------+----------+---------------------+\n| id     | name    | version    | title_id | last_opened_at      |\n+--------+---------+------------+----------+---------------------+\n| 570198 | Spotify | 1.2.69.449 |     2839 | 2025-08-12 19:09:04 |\n| 573034 | Spotify | 1.2.70.409 |     2839 | NULL                |\n+--------+---------+------------+----------+---------------------+\n```\nAPI returns null last open time for both softwares\n\u003cimg width=\"1215\" height=\"900\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e1934b8a-bc61-44e9-8985-ebb6f1a01985\" /\u003e\n\n### ð ï¸ To fix\nThe `ListHostSoftware` code properly fetches `last_opened_at` time for each software.\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L2424\nIt looks like something is going on here when assigning the `LastOpenTime` to the version\nhttps://github.com/fleetdm/fleet/blob/main/server/datastore/mysql/software.go#L4196\n\n### ð§âð» Â Steps to reproduce\n1. Install a software of version a\n2. Open that software\n3. Install a software of version b on a different path\n4. Run host vitals refresh\n5. open software inventory tab for the host\n\nIt's important to note that this only happens with there is 2+ version of the software title.\nThe other key thing here to note is that one version doesn't have a last_open_time.\n\nDepending on database order you may get no `last_opened_at` timestamp, or you may see them both have the same one. This is the bug.\n\n### ð¯ï¸ More info _(optional)_\n\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31932,
          "repository": "fleetdm/fleet",
          "title": "last_opened_at not properly returned on host software inventory",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31932"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdqQM4",
        "labels": [
          "bug",
          ":incoming",
          "customer-numa",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "last_opened_at not properly returned on host software inventory",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding `customer-numa` as they recently requested last_opened_at on windows"
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n",
          "number": 30136,
          "repository": "fleetdm/fleet",
          "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30136"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "labels": [
          ":release",
          "#g-mdm",
          "~csa",
          "~mdm-maturity",
          "#g-orchestration",
          "#g-software",
          "macos26"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "198a6585",
          "startDate": "2025-06-16",
          "title": "Sprint 43"
        },
        "status": "âï¸Awaiting QA",
        "title": "Release QA: macOS 26 Tahoe, iOS 26, iPadOS 26",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "The version reported in osquery is 16.0 but when I look in \"About this Mac\" and System Settings \u003e\u003e General it's 26.0\nIt does get the build right though... 25A5279m"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I try to enforce encryption I'm not seeing the banner instructing me to restart or log out, until I've restarted or logged out. Then it stays there no matter how many times I restart. I'm not seeing the banner clear and even after running the `cleanups_then_aggregation` cron the encryption status isn't updated and it says `unrecognized`:\n\n![Image](https://github.com/user-attachments/assets/f3c0b064-8aae-4c39-9993-bd01af2fbd84)\n\nOn the host, I can see the disk encryption profile in System Settings and Filevault is turned on and a recovery key has been set:\n\n\u003cimg width=\"741\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/013cc568-6b97-4bbb-be68-a458bbbdf56b\" /\u003e\n\n\u003cimg width=\"730\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/986b4c3e-42f2-4b9c-9756-f1acc8e1f302\" /\u003e"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Apple introduced a new Device Migration feature (that only works with the latest OSes) which will move your host from a 3rd party MDM server over to Fleet,  all via ABM. It works! however during the enrollment to Fleet the Setup Experience SwiftDialogue window did not display the software Fleet was installing in the background"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-numa\nmacOS 26 - MDM migration invokes Setup Experience (silently) - awaitconfigured\n\n- Upgraded endpoint to macOS 26 \n- ABM recognizes that\n- Able to set a deadline\n- Device starts to migrate\n- Unenrolled from previous MDM (didnât have to initiate anything)\n- Recognizes that it needs to enroll into Fleet\n- Waiting for âdevice configuredâ command\n- Starts going through setup experience again (calling through all apps, VPP apps, setup script)\n\nExpected behavior: Assume host has all apps already installed. Itâs been previously managed. Itâs not a net new device so it shouldnât run setup experience. VPP apps would get removed from previous MDM so those would be the one thing that should run again\n\nNote from @mostlikelee : Technically, as soon as the device gets the Fleet MDM profile, the apps should come along with it. We should test"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-eponym\nFleet menu bar item doesn't show up after enrollment in beta 2"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet menu not showing after enrollment in macOS 26 beta 2 #6834](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3ec39176-1e2a-49ec-aea4-3c44108d90d0)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Changing MDMs without a deadline doesn't not show a notification on the host. Maybe it takes a lot more time (writing this after waiting for 2-3 hours)"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Hi all ð , any issues directly related to the new MDM migration feature Apple introduced in ABM should be tracked separately here https://github.com/orgs/fleetdm/projects/58/views/9?pane=issue\u0026itemId=119675644\u0026issue=fleetdm%7Cfleet%7C30695\n"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Noticed that MacOS26 isn't getting orbit updates from a local tuf server. WIll retest it later next week and file an issue "
          },
          {
            "author": {
              "login": "reeblybeebly"
            },
            "body": "`customer-thumper` reported several occurrences of a host enrollment issue on macOS Tahoe 26, where the \"setup is complete\" dialog box is blank, as evident in the provided screenshot.\n\n**Fleet Version:** 4.71.1\n**macOS Version:** 26.0 Beta 25A5316i\n\nPotentially related logging pulled from server\n```{\ncalendarTime:Mon Aug 11 14:15:05 2025 UTC\nhostIdentifier:B397E6E6-7985-56BF-9BAC-B297B186F192\nunixTime:1754921705\nquery_id:373\nname:pack/team-2/\u003ccustomer-thumper\u003e usr directory\nnumerics:false\naction:snapshot\nepoch:0\ndecorations:{\nhost_uuid:B397E6E6-7985-56BF-9BAC-B297B186F192\nhostname:10bd3a85e979-mac\n}\ncounter:0\nsnapshot:[\n{\ndirectory_status:Exists\nprimary_user:\u003cuser\u003e\n}\n]\n}\n```\n**Screenshot**\n\n\u003cimg width=\"3024\" height=\"1964\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/876d80db-d518-49f3-bc05-9bd50edcaa27\" /\u003e"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue during macOS 26 onboarding #7769](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/7384f042-079b-4283-a4e7-5e079beb7fc9)"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue with macOS 26 beta 6 (25A5338b) #7782](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/d2c77f6f-b5f2-42be-8b6c-12ae96bfa4fd)"
          }
        ]
      },
      {
        "assignees": [
          "Illbjorn"
        ],
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [x] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [x] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [x] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [x] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [x] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [x] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [x] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [x] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [x] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [x] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [x] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [x] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [x] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [x] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [x] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [x] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [x] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [x] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [x] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [x] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [x] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [x] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [x] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n- [x] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n\n### Engineering\n\n - [x] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [x] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [x] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [x] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [x] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [x] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [x] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [x] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [x] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [x] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [x] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n",
          "number": 11828,
          "repository": "fleetdm/confidential",
          "title": "ð§âð Welcoming Anthony Maxwell (due 2025-08-27)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/confidential/issues/11828"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "labels": [
          ":help-people",
          ":help-it-and-enablement",
          ":it-and-gtm"
        ],
        "repository": "https://github.com/fleetdm/confidential",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "ð§âð Welcoming Anthony Maxwell (due 2025-08-27)",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "ChromeOS joins Fleet,\nA wider platform unites,\nFilter, ease, delight."
          }
        ]
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "### ð§âð» Â Expected behavior\nWhen a new host first enrolls and has not yet sent software to Fleet (i.e. before the host's first check in with the software inventory), the `GET /host/:id` endpoint should return empty slice for the `software` field.\n\n### ð¥ Â Actual behavior\n`software` field is not present in API response.\n\n### To fix\n- If there's no software, include the `software` field (empty array) in the `GET /host/:id` API endpoint.\n",
          "number": 4498,
          "repository": "fleetdm/fleet",
          "title": "`GET /host/:id` endpoint should return empty array for `software`",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/4498"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdsLBo",
        "labels": [
          "bug",
          "~backend",
          ":product",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "`GET /host/:id` endpoint should return empty array for `software`",
        "comments": [
          {
            "author": {
              "login": "mikermcneil"
            },
            "body": "+ð¯ had to add a bunch of assertions for this in some code that uses the API myself."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@noahtalerman What do you think of triaging this as a bug? Should be a very quick code change so seems like it's not worth going through the full user story process. "
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Assigning to you since you brought it back to life. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Fair point on keeping this as a bug, since that's what it's ticketed as. I've assigned to @marko-lisica for triage as a bug (with the fix scope being just the `software` entry) to run through the bug process."
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.70.0.\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nThe `deb_packages` table detects residual files from `.deb` packages, such as `screen`, even after they are removed using `sudo apt remove \u003cpackage_name\u003e`, leading to incorrect policy results.\n\nFleet's \"automatic install\" policy does not consider the `status`, resulting in Fleet failing to install a package that is actually missing.\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload .deb pakage to Fleet\n2. Enable automatic install \n3. Once the sofware is installed, delete it using `sudo apt remove` command\n4. Verify that the software isn't installed again since the policy won't fail\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- ### ð ï¸ To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\nProduct designer: @marko-lisica \n\nImprove query to take the `status` field (from the `deb_packages` table) into account. ",
          "number": 29894,
          "repository": "fleetdm/fleet",
          "title": "deb_packages auto-install query detects some packages that have been removed by apt remove",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29894"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdtOjc",
        "labels": [
          "bug",
          "~osquery core",
          ":product",
          "customer-cisneros",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "â Ready for release",
        "title": "deb_packages auto-install query detects some packages that have been removed by apt remove",
        "comments": [
          {
            "author": {
              "login": "pintomi1989"
            },
            "body": "Updated to include Gong snippet provided by customer-cisneros @ddribeiro @sharon-fdm "
          },
          {
            "author": {
              "login": "juan-fdz-hawa"
            },
            "body": "I don't think this is a bug. \n\nThe contents of the `deb_packages` table reflects the behavior of the `dpkg` tools. If they want to exclude packages that leave behind config files they can take a look at the status column:\n\n```\nosquery\u003e select name,status FROM deb_packages WHERE name='screen';\n+--------+----------------------+\n| name   | status               |\n+--------+----------------------+\n| screen | install ok installed |\n+--------+----------------------+\nosquery\u003e select name,status FROM deb_packages WHERE name='screen';\n+--------+---------------------------+\n| name   | status                    |\n+--------+---------------------------+\n| screen | deinstall ok config-files |\n+--------+---------------------------+\n\n```"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Was able to reproduce the initially described issue, also confirmed that a proposed policy will properly fail if we are checking for the status column. \n\nPolicy that I used: \n`SELECT 1 WHERE EXISTS (\n  SELECT 1 FROM deb_packages WHERE name = 'screen' AND status = 'install ok installed'\n);`\n\nRemoving the reproduce label and adding the product to decide whether this is an expected behavior or not "
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "@noahtalerman , we think this is not a bug.\nCare to close?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@ddribeiro while it's not ideal, we learned that this is the current, expected behavior of osquery. Today, to detect if a package is installed, we have to write special policies against [`deb_packages`](https://fleetdm.com/tables/deb_packages) using the `status` column. For example:\n\n```sql\nSELECT 1 WHERE EXISTS ( SELECT 1 FROM deb_packages WHERE name = 'screen' AND status = 'install ok installed' );\n```\n\nI flipped this bug to a feature request."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Moved the original bug report here:\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nSome .deb files leave residual files on disk when they are removed using `sudo apt remove \u003cpackage_name\u003e`. In these cases, the `deb_packages` osquery table detects them as still present on the system, even though they have been removed.\n\nSome examples of packages that behave like this are `duo-desktop` and `screen`.\n\nThis is especially problematic for Fleet admins who use the `deb_packages` table to write polices that trigger automations to detect and install specific software on their hosts.\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Install a .deb package that is known to leave residual files after being removed on a Linux host. I used `screen` (`sudo apt install screen`).\n2. Write a policy that uses the deb_packages table to detect if screen is installed. This policy should pass when `screen` is installed and fail when it's not installed. Example:\n```\nSELECT 1 WHERE EXISTS (\n    SELECT 1 WHERE (SELECT COUNT(*) FROM deb_packages) = 0\n) OR EXISTS (\n    SELECT 1 FROM deb_packages WHERE name = 'screen'\n);\n````\n3. Remove the screen package by using `sudo apt remove screen`. Refetch vitals on your test host, **observe that the policy is still passing**, despite `screen` being removed from the system.\n4. Run `sudo purge -y screen` to purge the package from the system. Refetch vitals on your test host, observe that running this command fully removes the package and gets the policy to fail.\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nSlack thread for more context: https://fleetdm.slack.com/archives/C072L58U878/p1748879907377119\n\nIt seems most Linux users would use `sudo apt remove` instead of `sudo apt purge -y`, which is what makes this problematic.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### ð ï¸ To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman FYI this is 100% something on the osquery side, as this affects the built-in osquery `deb_packages` table. Our [software host vital](https://fleetdm.com/vitals/software-linux#linux) already takes `deb_packages` behavior into account.\n\nWith that said, our current default auto-install policies for `deb_packages` _don't_ take this into account, so we're reporting software that was installed and removed as still installed, so the automation won't fire.\n\nThis feels like a bug with automatic install policies, and the fix would be to revise the default automatic install policy to account for this nuance. This is a 1-2pt fix  that I could likely turn around on Monday if you and @mostlikelee are up for it, and I'm betting this would go a long way toward solving the underlying problem without expecting osquery to change."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "To the above point, our [guide with sample policies](https://fleetdm.com/guides/automatic-software-install-in-fleet#debian-based-deb) doesn't account for status in the query, and in this case it should because if you're trying to enforce \"installed and latest\" you don't want \"installed and latest, but was removed\" to pass."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e This feels like a bug with automatic install policies, and the fix would be to revise the default automatic install policy to account for this nuance. \n\n@iansltx aha! Thanks for calling this out. It sounds like `cisneros` reported this because they're using automatic install policies. \n\nI though they wrote a custom policy. I was wrong.\n\nIf our automatic install policies don't take this into account, I agree this is a bug. Can you please help us update this issue into bug format?\n\nAlso, good call on the guide. I think we address the guide change as part of this bug.\n\nAnd, I think if you want to jump on the bug, go for it. cc @mostlikelee "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @iansltx aha! Thanks for calling this out. It sounds like `cisneros` reported this because they're using automatic install policies. \n\u003e \n\u003e I though they wrote a custom policy. I was wrong.\n\u003e \n\u003e If our automatic install policies don't take this into account, I agree this is a bug.\n\nFYI @ddribeiro "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Original issue description:\n\n---\n\n- `customer-cisneros` Gong snippet: https://us-65885.app.gong.io/call?id=4834666570271096977\u0026highlights=%5B%7B%22type%22%3A%22SHARE%22%2C%22from%22%3A4%2C%22to%22%3A223%7D%5D\n* @noahtalerman: *User requested this because* The `deb_packages` table detects residual files from `.deb` packages, such as `screen`, even after they are removed using `sudo apt remove \u003cpackage_name\u003e`, leading to incorrect policy results.\n\n  - @noahtalerman *In the interim* IT admins can detect if a package is installed by writing a special policy against [`deb_packages`](https://fleetdm.com/tables/deb_packages) using the `status` column. For example:\n\n```sql\nSELECT 1 WHERE EXISTS ( SELECT 1 FROM deb_packages WHERE name = 'screen' AND status = 'install ok installed' );\n```\n\n  * @noahtalerman: *Eventually* Fleet could ensure that the `deb_packages` table correctly reflects the absence of packages even after `sudo apt remove` is used, potentially by addressing residual files or providing a more reliable method for package removal detection."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ddribeiro @marko-lisica Updated the issue title because the thing we'll be fixing here is the auto-install query; we _won't_ be making changes to the underlying osquery table as part of this fix. Our understanding is that fixes the customer issue, but would want a different issue if it doesn't."
          }
        ]
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0 \n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nFirst detected on July 10th when a test started failing:\n```\n=== NAME  TestTranslateCPEToCVE/find_vulns_on_cpes\n    cve_test.go:715: \n        \tError Trace:\t/home/runner/work/fleet/fleet/server/vulnerabilities/nvd/cve_test.go:715\n        \tError:      \t[]nvd.cve{nvd.cve{ID:\"CVE-2025-30399\", resolvedInVersion:\"\"}} does not contain nvd.cve{ID:\"CVE-2025-21171\", resolvedInVersion:\"\"}\n        \tTest:       \tTestTranslateCPEToCVE/find_vulns_on_cpes\n        \tMessages:   \tcpe:2.3:a:microsoft:powershell:7.5.0:rc.1:*:*:*:macos:*:* does not contain CVE nvd.cve{ID:\"CVE-2025-21171\", resolvedInVersion:\"\"}\n```\nIt appears that the feed modified the CPE record from `microsoft:powershell:7.5.0` to `microsoft:powershell:7.5`. This was addressed in https://github.com/fleetdm/fleet/pull/30767. However, when testing this `CVE-2025-21171` was still not attributing to powershell 7.5 RCs. It was diagnosed that the `cpe_match` records no longer had a `versionEndExcluding` attribute for `cpe:2.3:a:microsoft:powershell:7.5.0:rc.1:*:*:*:*:*:*`.\n\nFeed at the july 22nd\n\u003cimg width=\"714\" height=\"892\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/beb70e00-6486-441b-90c6-59c8a448cacb\" /\u003e\nFeed with https://github.com/fleetdm/fleet/pull/30767 fix\n\u003cimg width=\"788\" height=\"993\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20feb47b-0f94-4660-a1de-07a4a61f7349\" /\u003e\n\n### ð§âð» Â Steps to reproduce\nInstall powershell 7.5 rc1 https://github.com/PowerShell/PowerShell/releases/tag/v7.5.0-rc.1\nRun vulnerability processing\n`dlv exec ./build/fleet -- vuln_processing --vulnerabilities_databases_path /tmp/vulndbs/ --dev`\nor\n`go run ./cmd/fleet vuln_processing --vulnerabilities_databases_path=/tmp/vulndbs --dev`\n\n### ð¯ï¸ More info _(optional)_\n\n\n\u003c!-- ### ð ï¸ To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n",
          "number": 31283,
          "repository": "fleetdm/fleet",
          "title": "False negative for CVE-2025-21171",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31283"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdvjTs",
        "labels": [
          "bug",
          "~released bug",
          ":product",
          ":incoming",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "False negative for CVE-2025-21171",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@ksykulev is this powershell for macOS, linux, Windows or all three? There are multiple platforms at https://github.com/PowerShell/PowerShell/releases/tag/v7.5.0-rc.1"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "@jmwatts Here is the original ticket https://github.com/fleetdm/fleet/issues/26073, it seems to state macos, so I will lean towards that particular case."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced. \n\nPer https://github.com/PowerShell/Announcements/issues/72 this CVE should show up for PowerShell 7.5 \u003c=7.5.0-rc.1 however it is not showing up for 7.5.0-rc.1\n"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "number": 32018,
          "repository": "fleetdm/fleet",
          "title": "Onboarding buddy Anthony Maxwell",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32018"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdvkm4",
        "labels": [
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Onboarding buddy Anthony Maxwell"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.72.0\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nVulns that should show up for RHEL (CentOS and Fedora) OS' Linux kernels are not shown in Fleet.\n\n### ð ï¸ To fix\n\nImplement support for scanning vulns on kernels from RHEL based OS. \n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Enroll a RHEL (CentOS or Fedora) host in Fleet. \n2. Run vulns processing\n3. Note that the Linux kernel shows up as software for this host, but does not have any vulnerabilities.\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31495,
          "repository": "fleetdm/fleet",
          "title": "RHEL kernels don't have expected vulnerabilities in Fleet",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31495"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdhCgY",
        "labels": [
          "bug",
          "~vulnerability-management",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð£ In progress",
        "title": "RHEL kernels don't have expected vulnerabilities in Fleet",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Here's what we decided during #g-software design review on 2025-08-15:\n\n\u003cimg width=\"964\" height=\"581\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/71e39c76-c548-4038-baa5-183a15935d8a\" /\u003e\n\nIan: Also need \"Not supported\" on the OS details page. In the Kernels list. And the Software version detail page (kernel view):\n\n\u003cimg width=\"1142\" height=\"711\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1e52ee41-54ae-4f3f-a9ca-b875c59bca2d\" /\u003e\n\n\u003cimg width=\"611\" height=\"401\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b296aa88-f525-4666-b1cc-b306212c03fb\" /\u003e"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @jahzielv @mostlikelee ^"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "Opened https://github.com/fleetdm/fleet/issues/32027 to track the above UI changes.\ncc @mostlikelee "
          }
        ]
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "content": {
          "body": "## Related user story\n\nTODO\n\n## Task\n\nTODO\n\u003c!-- What needs to be learned. --\u003e\n\n## Condition of satisfaction\n\nTODO\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work. --\u003e\n",
          "number": 32041,
          "repository": "fleetdm/fleet",
          "title": "Eng DRI - 31719/31354",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32041"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5Cs",
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Eng DRI - 31719/31354"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "## Related user story\n\nTODO\n\n## Task\n\nTODO\n\u003c!-- What needs to be learned. --\u003e\n\n## Condition of satisfaction\n\nTODO\n\u003c!-- Describe the conditions of satisfaction that will resolve this issue.  The \"definition of done\". It is always up to contributors to check their own work. --\u003e\n",
          "number": 32042,
          "repository": "fleetdm/fleet",
          "title": "Eng DRI / custom iOS Apps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32042"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5RY",
        "labels": [
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Eng DRI / custom iOS Apps"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "number": 32043,
          "repository": "fleetdm/fleet",
          "title": "Eng DRI - fleetctl return mdm command result",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32043"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5qg",
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Eng DRI - fleetctl return mdm command result"
      },
      {
        "assignees": [
          "Illbjorn"
        ],
        "content": {
          "number": 32046,
          "repository": "fleetdm/fleet",
          "title": "Research: Windows FMA",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32046"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv6VE",
        "labels": [
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Eng DRI - windows FMA"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003e= 4.69.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nSoftware title header is missing:\n\n\u003cimg width=\"1247\" height=\"285\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a4e72d5f-6f94-4cb8-b3b6-04dabe646bb9\" /\u003e\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\nBring back the card with title, icon, and type.\n\n### ð§âð» Â Steps to reproduce\n\n1. Upload a tarball\n2. View its title page\n\n### ð¯ï¸ More info\n\nHere's how things looked before 4.69.0 (basic header shown):\n\n\u003cimg width=\"1258\" height=\"451\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/462bbf75-4cb6-41af-9669-04f75ff16f77\" /\u003e\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n## QA Plan\n- Card is there\n\u003e Note: versions table and host count is not support for tarballs\n",
          "number": 31546,
          "repository": "fleetdm/fleet",
          "title": "Software title header missing for tarballs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31546"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwOKI",
        "labels": [
          "bug",
          "~frontend",
          ":product",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "â Ready for release",
        "title": "Software title header missing for tarballs",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Bold estimate: 1\n\nHoping it's not too complicated why it's not showing, if not probably no more than 2."
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: \u003c= 4.72.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nIf there are e.g. two versions of Chrome with the same 10 CVEs, they will show up as having 20 vulnerabilities in the software title list view.\n\n### ð ï¸ To fix\n\nDeduplicate vulnerabilities by CVE (client-side for now) and count the deduplicated list.\n\nProduct designer: @iansltx \n\n### ð§âð» Â Steps to reproduce\n\nLook up Chrome in Dogfood as a software title. Check the vulnerability count there. Then look at how many unique CVEs there are across versions.\n\n### ð¯ï¸ More info\n\nThis revises behavior to match how vuln counts are calculated for OSes/Linux kernels.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### QA Plan\n1. Have a device with multiple versions of a vulnerable software\n2. Ensure that each version has different vulnerabilities but some overlapping vulnerabilities\n3. View that software from the following, and ensure that the overlapping vulnerabilities are not counted multiple times\n  a. Host details page \u003e Software \u003e Inventory \u003e software row with multiple versions \u003e Count in Vulnerability column \n  b. My device page (Fleet Desktop) \u003e Software \u003e software row with multiple versions \u003e Count in Vulnerability column \n  c. Software titles page \u003e Software table \u003e software row with multiple versions \u003e Count in Vulnerability column",
          "number": 32025,
          "repository": "fleetdm/fleet",
          "title": "Vulnerabilities are double-counted when rolling up to software titles on the software title list page",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32025"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwOYw",
        "labels": [
          "bug",
          "~frontend",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "Vulnerabilities are double-counted when rolling up to software titles on the software title list page",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1 under 2 hours\n\nScope:\n1. Create a function to extract unique vulnerabilities\n2. Use that for vulnerabilities column\n3. Write test to confirm, including edge cases, if any"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Just nerd sniped while y'all were backend kick-offing"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to show my end users instructions on how to open software from the **My device \u003e Self-service** tab\n| so that my end users can quickly start using the software without having to find the software locally (ex. Finders \u003e Applications on macOS).\n\n## Roadmap item\n\nNone\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n- #30196\n\n## Context\n- Product Designer: @marko-lisica\n- Engineer: @iansltx  \n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [x] UI changes: Figma [here](https://www.figma.com/design/3gllmKmZzQmVGwRsEeLTt5/-30238-My-device-%3E-Self-service--Instructions-for-opening-software-after-install?node-id=2-130\u0026t=lR9emBBbToDS0flT-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: No changes.\n- [x] REST API changes: No changes.\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: No changes.\n- [x] GitOps generation changes: No changes.\n- [x] Activity changes: No changes.\n- [x] Permissions changes: No changes.\n- [x] Changes to paid features or tiers: Available in Fleet Premium.\n- [x] My device and fleetdm.com/better changes: My device changes specified in Figma\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes (not worth mentioning in feature guides)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n- [ ] On the self-service page, verify that the main action (\"Install,\" \"Update,\" or \"Reinstall\") is a button, while \"Uninstall\" and \"How to open\" are moved under the \"More\" dropdown.\n- [ ] Verify that we disable the main action and \"More\" dropdown when install or uninstall is in progress.\n- [ ] Verify that the **How to open** action opens a modal with the description specified for each source type in Figma.\n- [ ] Verify that **How to open** action only shows for software that's installed (by Fleet or by end user) on the host (Windows and macOS apps: `apps` and `programs` sources).\n\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30238,
          "repository": "fleetdm/fleet",
          "title": "My device \u003e Self-service: Instructions for opening software after install",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30238"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP0g",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-numa",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "My device \u003e Self-service: Instructions for opening software after install",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mike-j-thomas can you please help us out with the UI? ([wireframes here](https://www.figma.com/design/3gllmKmZzQmVGwRsEeLTt5/-30238-My-device-%3E-Self-service--Instructions-for-opening-software-after-install?node-id=5301-1913\u0026t=y9CSgSmuMpeu1DnH-1))\n\nThere's lots of eye-catching purple buttons. How can we make this page more clear?\n\n\u003cimg width=\"670\" height=\"314\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/224a3dc8-eae5-4304-bf39-364ef96ac53f\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts When you're okay with the test plan here (net of dev notes about pointing end users to installed paths discussed in USR), please move this to **Ready to estimate** and kick off plannng poker. Thx!"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx the dev note indicates we're going to instruct users to double click on macOS, but the Windows section just shows how to find it. Are we going to instruct users to click the app?\n\n\u003cimg width=\"434\" height=\"245\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ffd337d0-1041-41a4-88fb-574cbd9cc9ca\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "^ Deferring to @marko-lisica here; I get what you're getting at because really we have two things that stop at \"find it\" (Spotlight, Windows) and one that says \"find it and click it\""
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Thanks @jmwatts, I updated the copy to include \"click it\" for Windows as well."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 3, adding tests too"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to add a custom icon for my software\n| so that my end users can easily find the software they need on the **My device \u003e Self-service** page.\n\n## Roadmap item\n\nNone\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #24802 \n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @iansltx \n  \nMake sure to solve this: #29886\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=0-1\u0026t=DrMQziG5Cl0BDJbU-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: #31324\n- [x] REST API changes: #31324\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: Specified in Figma above.\n- [x] GitOps generation changes:\n  - Specified in Figma above.\n  - `gitops-generate` command should download icons.\n- [x] Activity changes: #31382\n- [x] Permissions changes: Global/team admins and maintainers can apply update icon. Covered by \"Add, edit, and delete software\" in permissions guide.\n- [x] Changes to paid features or tiers: Available in Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: The icon added by user will display on self-service and software inventory tabs on My device page.\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: #31324\n- [ ] Feature guide changes: Update [self-service](https://fleetdm.com/guides/software-self-service), [custom package](https://fleetdm.com/guides/deploy-software-packages), [VPP](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) articles to reference icons/how to change them\n- [ ] Database schema migrations: Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID (will dump icons onto the software installers bucket)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### UI\n\n- [x] Make sure that the edit action is available next to the software title name, only if the software title has a package or VPP app added.\n- [x] Verify that the user can upload a PNG icon by clicking on the edit icon next to the software title name in the **Edit software** modal.\n- [x] Verify that the user can only select PNG files.\n- [x] Verify that Fleet returns an error if the icon doesn't fit into specs defined in Figma.\n- [x] Make sure that the user can preview the icon in the **Edit software** modal, once it's selected and before it's uploaded.\n- [x] Verify that the icon in the preview is displayed according to the priority order described in Figma..\n- [x] Make sure that the preview under the **Fleet** tab shows the real software title name, icon, type and versions count. The table underneath the transparent overlay should be static.\n- [x] Make sure that the preview under the **Self-service** tab shows the real software title name and icon. Other data should be static.\n- [ ] Make sure that if the user deletes the selected or uploaded icon, the preview shows the fallback icon.\n- [x] Verify that when the VPP icon is available, the upload form is still available in the **Edit software** modal, so the user can override that icon with a custom PNG.\n- [x] Make sure that the uploaded icon shows on software title details, ~version details,~ titles list, ~versions list,~ on a team where the icon is added.\n- [x] Make sure that we do client-side validation if the icon size doesn't fit specs, before the user hit \"Save\" (upload) icon. Show error flash message specified in Figma. \n- [x] Make sure that the uploaded icon shows on the host's software library and inventory pages, on a host that is a member of the team where the icon is uploaded.\n- [x] Make sure that the uploaded icon shows on the My device software and self-service tabs, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows in /controls/setup-experience/install-software when selecting software to be installed\n- [x] Verify that when GitOps mode is enabled, on the software title details page, the edit button (next to the software title name) is disabled, and that the GitOps tooltip is displayed on hover.\n- [x] Verify that `icon` field is added in GitOps generation modal.\n- [x] Verify that icon download link is added in GitOps generation modal. \n\n#### API\n\n- [ ] Verify that the icon can be updated with the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that an icon can be added to \"no team\" via the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be deleted with the new `DELETE /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be downloaded with the new `GET /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that Fleet errors if icons are not PNG, not square, or not between 120x120px and 1024x1024px, when user tries to upload with PUT endpoint.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles/:id`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/device/{token}/software`.\n- [ ] Verify that if no uploaded icon and no VPP added, `icon_url` is `null` (for every endpoint above).\n- [ ] Create a software package, add icon to software installer, edit the package (change something that is not icon related), delete the software package. This should generate a number of activities. \n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing package (icon url in activity)\n1 for deleting package (icon url in activity)\n```\n- [ ] Create a vpp app, add icon to vpp app, edit the vpp app (change something not icon related), delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing vpp app (icon url in activity)\n1 for deleting vpp app (icon url in activity)\n```\n- [ ] Create a vpp app, edit vpp app, delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for editing vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n1 for deleting vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n```\n\n#### GitOps\n\n- [ ] Verify that the icon can be added to a software package (`software.packages` \u003e `lib/software-name.package.yml` \u003e `icon`).\n- [ ] Verify that the icon can be added to the App Store app (`software.appâ_storeâ_apps.icon`).\n- [ ] Verify that the icon can be removed from the software package or App Store app\n- [ ] Verify that adding the same icon file to software packages across multiple teams adds the icon for each software package on each team and doesn't result in significantly slower gitops runs or adverse file-system effects (excessive files in /tmp directory when running)\n- [ ] Verify that previously uploaded icons are downloaded and referenced when running `fleetctl generate-gitops`\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 29478,
          "repository": "fleetdm/fleet",
          "title": "Edit software icon",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29478"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "labels": [
          "story",
          ":release",
          "customer-preston",
          "customer-cisneros",
          "customer-numa",
          "#g-software",
          "prospect-verstappen",
          "~context"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Edit software icon",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Heads-up: \"name\" editing would change which `software_title` the package is associated with based on how we're linking titles and packages right now, for OSes other than macOS, and that has implications for e.g. software updates where inventoried software need to name-match the corresponding installer. We also have validation that prevents package edits from  changing the associated software title. So we'll need to sort those implications out if we include name in scope here (this issue doesn't apply to icon and version)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \u0026 @noahtalerman  I've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n        1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n4. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n5. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "![Image](https://github.com/user-attachments/assets/ffd778b7-8620-4dd4-9229-edcac7210679)\n\nFYI @eugkuo "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?\n\n@mostlikelee do you want to include GitOps in this ticket or should GitOps and UI tickets be separated for reasons of scoping, etc.\n\ncc @ddribeiro "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Given that GitOps is a core differentiator for Fleet and given that the requesting customer wants GitOps for their workflows, GitOps needs to be part of the spec here (though it'll get its own subtask), as does `generate-gitops` support."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I neglected to mention you on these so re-adding to ping you:\n\nI've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n    1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n3. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n4. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, where we display the updated name/icon/version is going to determine at which level we need to implement, which will in turn have interplay with both inventory and access controls. Probably also useful to walk through how we get name/version/icon now and where they're stored.\n\nKey questions:\n\n1. Are any fields globally editable? If so, that means only global roles can edit them, right?\n2. For names, what happens when an associated app arrives in inventory with a different name?\n\n## Name\n\nFor everything without a bundle ID, gets set once on first inventory or package upload, and is the unique key for associating both installers and inventory for that source _globally_. The name is at the `software_title` level, and is visible in a bunch of places (self-service, software title details, etc.).\n\nFor apps with bundle IDs, this is added on initial upload or inventory, but may be edited later during software ingestion if we have a more \"canonical\" name come in from inventory. There's also the contributor API endpoint for editing names manually, but inventory may overwrite them. Unique key in these cases is bundle ID. The name is still at the `software_title` level, and is still visible in the same places.\n\n## Icon\n\nFor software that has been added as a VPP app on a team, each app has a URL for the 512x512 version of the Apple icon, as a PNG, loaded on-the-fly from Apple by the client. Icons are revised when they're revised upstream.\n\nFor software titles without an associated VPP app on the same team, icons are shown based on matching to SVGs embedded in the code, based on name + source matching. This means that Fleet server updates determine which icon is shown.\n\nThe above means that icons are currently team-specific with a global fallback.\n\nInventory doesn't affect icons. For example, iOS apps inventoried via MDM will have the generic Apple icon unless we have an SVG override (or the same app was added as a VPP app for that team).\n\nIcons *could* be extracted from some types of custom packages on upload.\n\n## Version\n\nThe below information is orthogonal to inventoried (installed) version.\n\nSoftware version is attached to the package or VPP app, so it's team-specific rather than global.\n\nFor VPP apps, version is set on add and updated hourly from Apple, since the latest version is pushed when a VPP app is installed.\n\nFor FMAs, the version in the FMA manifest is copied over when the FMA is imported into the software library.\n\nFor custom packages, the version is extracted as metadata on upload.\n\n---\n\nSince it's come up before on other features, the tradeoff with allowing edits of these values is that we'll get fewer bug reports when we're parsing metadata incorrectly on upload/inventory, as IT admins will just fix the names/icons/versions they care about if there aren't too many of them. My suggestion here would be to add analytics for cases where name/icon/version needed to be edited, and check in with customers who use that feature a lot to make sure we're not overlooking bugged behavior. How that data point is implemented will vary depending on how software field overrides work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given that scope has dropped on this, seems like we want to treat this as another piece of self-service, attached to the `software_installer`.\n\nOn the most recent review call I mentioned \"square PNG with dimension min/max\" and GitOps. Need to dig into this further."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee I've updated the designs and  [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=ALS0rcz3jje1fQwT-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642) to reflect that the only additional update is for the app icon.\n\nLMK what you think."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Does #29177 block this ticket? Also, there's no reason we don't allow jpgs and gifs as well as pngs once 29177 is done is there?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo 29177 doesn't block this, though there's some implementation overlap such that if we hit both of these in the same sprint we'll need to be more careful about subtask traffic jams (still two swimlanes worth of backend across the two tickets though).\n\nRe: JPG/GIF, those formats aren't the right match for icons, unlike SVG vs. PNG don't bring anything special to the table for the icon use case that PNG doesn't, and it's trivial to convert JPEG -\u003e PNG or GIF -\u003e PNG (since all are raster formats) where the raster -\u003e vector PNG -\u003e SVG conversion is less straightforward."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Figma looks good, thanks @eugkuo !\n\n- Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n- Only other thing to spec is how we want to show the error if it's not a square between specific dimensions."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n\n@RachelElysia Love the suggestion. Updated!"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I've added a test plan to this ticket. LMK what you think.\n\n@iansltx I know we discussed this yesterday but I can't quite remember the answer. When this icon is updated is it updated throughout our system? Like will it show up in the library and inventory with the new icon as well?\n\ncc @mostlikelee @RachelElysia "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added an [Error message design](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?node-id=7341-1459\u0026t=OJ1KwfgvtY5eZfwZ-11) to this ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Sorry for the delay on this. Originally my thought was \"just follow what we do for VPP apps\", which I thought was:\n\n1. Icon is associated with the VPP app\n2. Icon shows up when viewing the software title on the team that has the VPP app set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the VPP app is in scope\n\nWith the above assumption, custom package icons would behave as follows:\n\n1. Icon is associated with the software package\n2. Icon shows up when viewing the software title on the team that has the package set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the installer is in scope\n\nIn reality, if a VPP app gets added on _any_ team, a zero value-looking object gets tacked onto the all-teams view for that title; you can see this for [Keynote in Dogfood](https://dogfood.fleetdm.com/software/titles/1245). This object includes the App Store icon URL. We can do this in part because VPP icons _are_ global for a given Apple app ID (and the icon URL is stored on the global VPP apps table in the DB rather than on the team-specific table)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm still thinking that we handle custom packages according to the above (tied to the package, only shows up where we would populate package info), but that's not actually consistent with VPP if current VPP behavior is intended VPP behavior.\n\nA side effect of handling package icons this way is that an All Teams view of software wouldn't have an icon. The only workarounds for this would be:\n\n1. We pick the first (for some definition of \"first\") icon we find for a custom package\n2. We make software icon overrides global rather than package/team based\n\n...so this is a good design review discussion, both to determine desired VPP behavior and desired behavior here (which may be influenced by the \"why\" behind desired VPP behavior)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per this morning's discussion, I'm pausing digging in on eng DRI on this in favor of getting #27983 spec'd, as the expectation is that this will _not_ make it into the 4.71 dev sprint. There are also questions around existing behavior that should probably be cleaned up, as that will provide a consistent foundation to build this on. Those questions are documented in #29886."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee \n\nI've updated the [Prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?page-id=2%3A130\u0026node-id=7347-2401\u0026t=uf2ocmJrBfpBl076-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7347%3A1958) so that editing app icons happens at the title level and not at the package level. I've also removed icons at the package level to avoid confusion.\n\nThe expectation is that the icon at the sotware title level would be associated with the software everywhere this title is shown (in library and inventory and self-service).\n\n@RachelElysia Thoughts on wanting/needing a loading screen for the modal and a confirmation save vs immediately jumping back to the software title page with a toast confirmation?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One pivotal question that will determine a bunch of implementation details: are these icons 1:1 with `software_installers` records (in which case currently they're 1:1 with teams) or are they more global than that?\n\nLooking at the 1:1 with `software_installers` option:\n\n## Pros\n\n* Consistent with self-service flag and categories\n* Allows for e.g. marking app icons as \"beta\" (or using a version-specific logo) on a canary team if that team has a different app version\n* Doesn't interfere with VPP app icon semantics if a custom-icon package is available on one team and a VPP app is available on another (once we sort out which wins for All Teams)\n* Access control for icon edit matches access control for all software package edits, vs. requiring a global role\n\n## Cons\n\n* Icon must be set once per team (less of a big deal with GitOps?)\n* Undefined behavior for showing software in \"All Teams\" (worse than VPP's current undefined behavior)\n* Potentially jarring if switching teams changes or loses an icon (this happens with VPP)\n* If implemented as \"an icon URL under software package\", inventoried software versions won't see the icon\n\nQuestion is how many of the pros/cons matter in this particular use case. FWIW I would expect that in either case we would be consistent with the icon shown within a team, for calls to software endpoints (not software version endpoints). Since My device only calls software endpoints (not versions), the icon on the software list would match the icon for self-service install (and update)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "One thing to add to what @iansltx is saying is that there are apps that have/will change icons with various releases (see Adobe products, which look like they update their icon every few years).\n\nSo. It seems like we should go back to associating icons with installer packages. I still feel like the Software title icon should inherit the latest installer package icon. \n\nWRT All teams and defining icons. Why can't we show installer packages on the all teams level and let people edit the icons there when editing. If a software title is selected from \"All teams\" we would show all the installer packages that have been added (surfacing the team(s) the packages are tied to). Ideally we'd be able to collapse all the installer packages so that we would only need to show one installer package that had been uploaded associated with multiple teams.\n\nI'm sure this is blowing up scope and throwing wrenches all over the place, but what do we think about the idea?\n\n@iansltx @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo What would you define as \"latest\" here? Most-recently uploaded/updated? Would that work cross-team? How would that interact with VPPs, which have their versions automatically bumped within ~1 hour of a new version coming out on Apple's side?\n\nRe: showing all installers when viewing All Teams, while that's useful, that would require decent-sized API and frontend changes, so deserves its own ticket."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I'd define latest as the latest version number (newest version).\n\nI totally hear you on showing all installers on All teams being its own ticket. I'll write that as a feature request when I get a chance."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Hm. So the idea would be that, for All Teams, we'd check all VPP apps and all packages with icons customized, rank by version number descending, and use the icon of whatever was at the top? Which would usually be the VPP app due to auto-updates, but might fall back to an FMA or the like.\n\nIf that's the idea, we might have to do some finagling to make sure the version calculation is fast...and we'll need to decide on what happens if the same package is uploaded to two different teams with two different icons...but that _would_ mean that at least the \"all teams\" part of #29886 is now expected/intended behavior, which is good (still need to decide what to do with version view there though)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nThe part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\n@mostlikelee could you gut check us on what we're talking about here? I know you were trying to keep this from getting out of hand and I don't want to explode things unknowingly. Clearly some of this is looking into the future, but could you make sure to ground us to what we 'need' or 'should' be doing at this time?\n\nThanks!"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh my, we may have officially took a detour to the dark side of icon town.  lets get a chat on the books for next week."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e [@iansltx](https://github.com/iansltx) Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nOriginal thought was handle it on retrieval but we could handle the recalculation when the criteria for which icon wins changed. That would be in the VPP version bump cron, when a custom icon was added/deleted, when a package was edited/deleted, or eventually when a FMA was added. For the last bit, FMA icons would actually get _lower_ priority than custom icons because they're currently implemented as just software title matching based defaults, but I'd expect that to change to the same \"priority\" as custom package icons once #29177 is implemented.\n\nWe'd need to add a column to `software_titles` for this, to point to the `software_installer` we want to use the custom icon of (if any), but that's doable if we need icon display at the All Teams level to work a specific way.\n\n\u003e \n\u003e The part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\nRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I have it at the top of the design review column in the drafting board so was intending to make this the first thing we talk about at DR on Tuesday. If you think this warrants its own time I'm open to it."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003eRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?\n\n@iansltx . But wouldn't it be cooooool if fleet recognizes a unique software package that's uploaded to our servers and pushes that out to everyone? Like why hold duplicates of the same thing? The icon thing we could do by organization so that doesn't get too wonky. If an organization wants to change their icon it will affect the entire organization but it won't affect others. So if Zorro corp wants to bastardize all their app icons with a flaming 'z' they can go for it but it won't touch Acorn Inc."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo There are some tradeoffs there that expand well beyond (the scope of) icon management and potentially conflict with tradeoffs needed for multiple installers per team. Definitely easier to discuss this synchronously.\n\nAlso not sure what you mean by \"organization\" (global? team?). One thing I'm thinking of is MSP customers who are running each company as its own team, and how this functionality should work in that deep of a silo."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh interesting use case where teams are acting like companies. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Given the above conversation, should custom package icons be scoped to the team/package they're on, or should they be global (at the software title level)? This has implications for how #29177 gets implemented, so is a higher-priority decison."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "```mermaid\nflowchart TD\n    A[\"Has custom icon (uploaded by user)\"] -- Yes --\u003e B[\"Show custom icon on software title (not on version) on team where icon (package) is uploaded\"]\n    A -- No --\u003e C[\"Is VPP app?\"]\n    C -- Yes --\u003e D[\"Show icon from App Store on software title (not on version) on team where VPP is added)\"]\n    C -- No --\u003e E[\"Strict name matching\"]\n    E -- Yes --\u003e F[\"Show SVG icon on a software title/version based on strict name/source rules defined by Fleet (contributors) in frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    E -- No --\u003e G[\"Loose name matching\"]\n    G -- Yes --\u003e H[\"Show SVG icon on a software/version title based on what software name starts with. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    G -- No --\u003e I[\"Source-based matching\"]\n    I -- Yes --\u003e J[\"Show SVG icon on a software/version title based on the software source. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    I -- No --\u003e K[\"Default fallback\"]\n    K --\u003e L[\"Show SVG package icon on a software/version. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@noahtalerman @iansltx, if you get the chance, could you please review the flowchart above?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica For the above, my biggest questions are how much of the decision tree applies to the following matrix:\n\n| | My device | Host details |\n| - | --- | --- |\n| Installed | My device \u003e Software | Host details \u003e Software \u003e Inventory |\n| Available | My device \u003e Self-service | Host dtails \u003e Software \u003e Library |\n\nAnd, for the inventory views, if we're showing anything other than SVG icons, where do those icons exist in the API response?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx I think let's keep this simple. If there's an icon override, we keep it on software title level under `software_package` or `app_store_app` as `custom_icon_url`.\n\nSVGs are displayed everywhere, and I think we should add more of them in the future. As we plan to introduce webview setup experience in the future, SVGs will be displayed there as well.\n\n- `GET /api/latest/fleet/software/titles` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/software/titles/:id` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/hosts/:id/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/device/:token/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n\nSo, icon overrides will be only available for software titles that are available. It won't show up on the versions of that title, and it won't show up in other teams."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@marko-lisica Is this being added to fleetctl generate-gitops?\n\nShould this work for team and global admins, and team and global maintainers, but not other users?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "FE Tests:\n- SoftwareIcon.tsx has no tests\n- GitOps yaml add to the test\n- GitOps mode disable editing"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Rough spec'ing notes:\n\n## GitOps changes\n\nIcon\nLocal hashing\nDeduplicate uploads\nReturn icon hash + filename on batch software status endpoint\nReturn icon hash + filename on batch VPP app status endpoint\nDon't repeat no-op uploads (use hash + filename)\nHash on icon PUT request\nRun in parallel\n\n## Generate-gitops\n\n## My device\n\nSoftware list endpoint; different URL\nIcon GET by device ID\n\n## Main API\n\nListHostSoftware (different URL)\nUpdate icon - incl. validation of format/size server side\nGet icon\nDelete icon\nSoftware titles list endpoint\nSoftware title endpoint\nSoftware versions endpoint (title ID)\nSoftware version endpoint (title ID)\nPackage + app store add/edit responses (make sure icon in response)\n\nSetup experience - update endpoint\n\nDocs\n\n## FE\n\nTitles view\nEdit modal\nPreview\n\nTitle list\nVersions list (don't download icon multiple times for the same title)\nAuthenticate when relative URL\nVersion view\nSoftware inventory\nSoftware library\n\nRename edit\n\nSelf-service tab\nSoftware tab of my device\n\nSetup experience UI"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @mostlikelee Just pushed https://github.com/fleetdm/fleet/pull/31324/commits/c577ded229f6a114d6fd940db2282ed8f69cad55?w=1 to API/YAML because we were missing some API endpoints based on the spec work I just did."
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "## Related user story\n\n#29478\n\n## Task\n\nPer #31324:\n\n### Groundwork\n\n- [ ] Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID, fkey to software_titles\n- [ ] Add icons table to S3 cleanup cron exclusion list\n- [ ] Delete software icon references when a package or app store app is removed from a software title, either one by one or as a GitOps bulk action\n\n### PUT\n\n- [ ] Require team ID\n- [ ] Disallow for software titles that have neither a software package nor an app store app associated\n- [ ] Access control matches package edit\n- [ ] Require one of (hash \u0026\u0026 filename) xor (file contents)\n- [ ] If hash + filename, validate the requester has access to an icon with that hash, and if so upsert the icon hash as-is, else 4xx consistent with when a batch software upload includes a hash that we don't have\n- [ ] If file contents, validate that a square PNG was submitted, min 120x120, max 1024x1024, and if valid then hash and persist to S3 alongside software installers\n- [ ] Emit an activity matching a software or VPP app edit, including icon URL in the activity payload, depending on which type of installer was associated with the software on that team at that time; see #31382\n\n### DELETE\n\n- [ ] Require team ID\n- [ ] Access control matches package delete\n- [ ] Remove record of icon, leave deletion of the underlying file for the cleanup cron for consistency with software packages\n\n### GET (main API)\n\n- [ ] Require team ID\n- [ ] Access control matches software view\n- [ ] If override exists in DB, 200 and return image bytes\n- [ ] Else if VPP app is associated _on that team_, 302 to VPP icon URL\n- [ ] Else 404\n\n### GET (device token auth)\n\n- [ ] Access control matches the team the host is on\n- [ ] Same 200/302/404 logic as for the main endpoint\n\n## Condition of satisfaction\n\nEndpoints and underlying database calls/migration are implemented. Visibility of these icon URLs is handled in a subsequent subtask.",
          "number": 31895,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: CRUD endpoints",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31895"
        },
        "estimate": 13,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8U",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Custom Icons: CRUD endpoints",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755144992507889)"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895.\n\n## Task\n\nUpdate existing endpoints that need to reference software icons to support new functionality, per #31324:\n\n### Icon URLs\n\nIn all cases, move icon URL from `app_store_app` level to the top level of the software title. Priority order:\n\n1. If viewing within the context of a team and that team has an icon specified in the DB, relative URL to the icon GET endpoint\n2. Else if viewing within the context of a team and that team has a VPP app associated to the software title, (absolute) URL of the VPP icon\n3. Else null\n\nFor these endpoints:\n\n- [ ] Main host software (references REST API GET for overridden icons)\n- [ ] Device-auth host software (references device-auth icon GET for overridden icons)\n- [ ] Software titles list\n- [ ] Software titles entity\n- [ ] Software package add/edit response\n- [ ] App store app add/edit response\n- [ ] Setup experience software list\n\n~### Software title IDs~\n\n~The following endpoints need to be updated to include software title ID in responses:~\n\n~- [ ] Software versions list~\n~- [ ] Software version entity~\n^Taking these two out of scope for the iteration^\n\n## Condition of satisfaction\n\nExisting endpoints have been updated to reflect icon override changes. Once this task (and its prerequisite) are complete, all frontend work for this story should be unblocked.",
          "number": 31896,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: Existing endpoint changes",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31896"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8c",
        "labels": [
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Custom Icons: Existing endpoint changes",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755144992725179)"
          }
        ]
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895. Generate-gitops work is blocked by #31896.\n\n## Task\n\nSupport icon editing via GitOps in a performant way.\n\n### Server-side\n\n- [x] Include icon hash and filename from the database on batch software responses\n- [x] Include icon hash and filename from the database on batch VPP app response\n- [x] On VPP app set response, clear all icons for any software titles on that team that aren't associated with packages or VPP apps (doing this on the VPP call because it happens second)\n\n### Generate-gitops\n\n- [ ] Populate icon paths in YAML when software titles mention a relative URL for an icon (don't pull VPP app icons)\n- [ ] Same as above, but for VPP apps\n- [ ] Download icons to the referenced icon paths with up to 16 concurrent connections\n\n### GitOps apply\n\n- [x] For supplied icons, validate square PNGs with 120-1024px dimensions client-side\n- [x] Use software and VPP app response payloads, compared with local icon filenames and hashes, to build a list of:\n\n1. Icons that do not need to be modified (filename and hash match for the specified title)\n2. Icons that don't currently exist server-side, so need to be uploaded to one title first\n3. Icons that will exist server-side after step 2, so they can be associated to remaining titles by just referencing hash and filename\n4. Icons that should be removed from a given title that otherwise still exists (server-side will automatically clean up icons for software titles that no longer have a package or app store app associated)\n\n- [x] Upload icons that need to be pushed server-side at concurrency 4 (configurable by CLI flag or env var)\n- [x] Update icons where bytes already exist server-side at concurrency 10 (configurable by a different CLI flag or env var)\n- [x] Delete icons from software titles where icon isn't specified at concurrency 10 (configurable by the same env var/cli flag as above)\n- [x] Add final-state icon hash list to a map shared across all teams, so a given icon is uploaded at most once per GitOps run even cross-team. Use this struct when processing subsequent teams.\n\n## Condition of satisfaction\n\nCustom icons can be round-tripped from being set in the Fleet UI to GitOps (via generate-gitops) and back (via gitops application), with reasonable performance cross-team by avoiding repeated work; two sequential applies of the same YAML with no icon modifications out-of-band should generate zero HTTP requests dedicated to icon management since we'll be able to tell from response payloads that we have no-ops.",
          "number": 31897,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: GitOps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31897"
        },
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8g",
        "labels": [
          "~gitops",
          "~backend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð£ In progress",
        "title": "Custom Icons: GitOps",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755144992950349)"
          }
        ]
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "## Related user story\n\n#29478\n\n## Task\n\nUpdate the following guides:\n\n- [ ] [Self-service software](https://fleetdm.com/guides/software-self-service)\n- [ ] [Custom packages](https://fleetdm.com/guides/deploy-software-packages)\n- [ ] [VPP apps](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet)\n\nto reference icons/how to change icons\n\n## Condition of satisfaction\n\nArticle updates are merged.",
          "number": 31898,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: Guide updates",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31898"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8k",
        "labels": [
          ":improve documentation",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð¥ Ready",
        "title": "Custom Icons: Guide updates",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755145076773799)"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31896.\n\n## Task\n\nSee Figma for full specs on the software title entity page, plus modals from that page other than the icon edit one, but here's a summary of TODOs, plus some more technical bits:\n\n- [ ] Update software icon component to pull icon from title base rather than app store app, using auth when we have it (so, not in My device) and given a relative URL; fall back to existing SVG logic if an authenticated request fails (since we'll have to MITM those requests anyway rather than using a src attribute) or if there's no icon URL.\n- [ ] For the above component, allow specifying a team ID and software title ID in lieu of a software title payload, in which case the relative URL for an icon will be built and called, with 200s/302s rendering an icon and other response codes falling back (we'll need this in another subtask)\n- [ ] Add tests for the above component\n- [ ] On the software title entity page when a team is selected and either a package or app store app is associated, show the edit pencil (greyed out/tooltipped in GitOps mode) next to software title, linked to a dummy modal for now\n- [ ] When in GitOps mode, if a custom icon (relative URL) is supplied, include a download link for the icon and relevant YAML changes in the \"Show YAML\" modal. Don't include it if we're using an absolute (Apple VPP app icon CDN) URL.\n- [ ] Add tests for the above modal\n- [ ] Update modal titles for package/VPP app edit screens\n\n## Condition of satisfaction\n\nA reusable icon component for software, net of new icon payload location, exists and is used on the software title entity page. All modifications required for this story are completed on the software title entity page and linked modals except for software icon edit itself.",
          "number": 31900,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: Icon retrieval + SW title entity page + modals other than icon edit",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31900"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8w",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Custom Icons: Icon retrieval + SW title entity page + modals other than icon edit"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31900.\n\n## Task\n\nBuild out the software icon edit modal on the software title page. Previews are out of scope for this subtask. See Figma for details.\n\n- [x] Treat absolute icon URL as blank/default; retrieve the icon on edit modal open if a relative URL is provided to determine filename (and have the icon on hand for preview)\n- [x] When selecting an icon to upload, reject/error/reset input if the icon isn't a square PNG 120-1024px on each side\n- [x] Allow removing an existing icon via the DELETE endpoint\n- [x] Properly handle errors delivered from server-side on PUT/DELETE HTTP calls\n\n## Condition of satisfaction\n\nIcon editing via the UI works, albeit without previews in the modal.",
          "number": 31901,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: Icon editing UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31901"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP80",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Custom Icons: Icon editing UI",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 3 rounding up to be safe, including tests"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#29478; blocked by #31901\n\n## Task\n\nImplement icon previews in the icon edit modal as [spec'd in Figma](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=2-130\u0026p=f)\n\n## Condition of satisfaction\n\nIcon edits in the modal reflect Figma, including displaying the correct icon when we're pulling from VPP or using a fallback SVG.",
          "number": 31902,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: Icon edit preview",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31902"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP88",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Custom Icons: Icon edit preview",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 2 including tests"
          }
        ]
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31900.\n\n## Task\n\nEnsure icon overrides are displayed in all relevant pages in the web UI, specifically:\n\n- [ ] Software titles list when filtered to a specific team\n~- [ ] Software versions list when filtered to a specific team (should only have one HTTP request per software title since all will have the same icon URL; will need to generate icon URL based on team ID/title ID as spec'd in #31900)~\n~- [ ] Software version entity when filtered to a specific team (will need to generate icon URL based on team ID/title ID)~\n- [ ] Setup experience software selection modal\n- [ ] Host details in Software \u003e Inventory tab\n- [ ] Host details in Software \u003e Library tab\n- [ ] My device in Software tab\n- [ ] My device in Self-service tab\n\n## Condition of satisfaction\n\nSoftware icons are overridden across Fleet when viewing software within the context of a team, whether implicitly at the host level or explicitly when viewing a software title or version.",
          "number": 31903,
          "repository": "fleetdm/fleet",
          "title": "Custom Icons: Display updates outside software title entity UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31903"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP9A",
        "labels": [
          "~frontend",
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Custom Icons: Display updates outside software title entity UI"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in dogfood ()\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nApp Store apps are missing the bullet \"â¢\" before the version:\n\u003cimg width=\"278\" height=\"283\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b20e88c4-1f62-4fc7-99f8-cbff2f3bd28c\" /\u003e\n\n### ð ï¸ To fix\n\nAdd the bullet for App Store apps.\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Policies \u003e Manage automations \u003e Install software in dogfood\n2. Check a policy and view an App Store app in the dropdown\n",
          "number": 31966,
          "repository": "fleetdm/fleet",
          "title": "Policies \u003e Manage automations \u003e Install software: Missing bullet \"â¢\"",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31966"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwVd4",
        "labels": [
          "bug",
          "~frontend",
          "~released bug",
          ":product",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "c0338111",
          "startDate": "2025-07-28",
          "title": "Sprint 45"
        },
        "status": "âï¸Awaiting QA",
        "title": "Policies \u003e Manage automations \u003e Install software: Missing bullet \"â¢\"",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "done for 4.74 â"
          }
        ]
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "**Fleet version**: 4.68.1\n\n**Web browser and operating system**: latest Chrome\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nfrom customer-faltona:\n\n\u003e greetings! I think i found a bug in the API:\n\u003e \n\u003e ```\n\u003e ï£¿ ~/ curl -X GET \\\n\u003e   \"https://fleetdm.blah.net/api/v1/fleet/software/titles?packages_only=true\" \\\n\u003e   -H \"Authorization: Bearer $TOKEN\" \\\n\u003e   -H \"Content-Type: application/json\" | wc -l\n\u003e   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n\u003e                                  Dload  Upload   Total   Spent    Left  Speed\n\u003e 100  497k    0  497k    0     0  1237k      0 --:--:-- --:--:-- --:--:-- 1236k\n\u003e    22855\n\u003e \n\u003e ï£¿ ~/ curl -X GET \\\n\u003e   \"https://fleetdm.blah.net/api/v1/fleet/software/titles?packages_only=false\" \\\n\u003e   -H \"Authorization: Bearer $TOKEN\" \\\n\u003e   -H \"Content-Type: application/json\" | wc -l\n\u003e   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n\u003e                                  Dload  Upload   Total   Spent    Left  Speed\n\u003e 100  497k    0  497k    0     0  1207k      0 --:--:-- --:--:-- --:--:-- 1206k\n\u003e    22855\n\u003e \n\u003e ï£¿ ~/ curl -X GET \\\n\u003e   \"https://fleetdm.blah.net/api/v1/fleet/software/titles\" \\\n\u003e   -H \"Authorization: Bearer $TOKEN\" \\\n\u003e   -H \"Content-Type: application/json\" | wc -l\n\u003e   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n\u003e                                  Dload  Upload   Total   Spent    Left  Speed\n\u003e 100  497k    0  497k    0     0  1226k      0 --:--:-- --:--:-- --:--:-- 1224k\n\u003e    22855\n\u003e  ```\n\u003e The `?packages_only=true` parameter doesn't seem to do anything.\n\u003e \n\u003e Looking at the results of `/api/v1/fleet/software/titles`, i do infact have software_package entries:\n\u003e```\n\u003e     {\n\u003e       \"id\": 3204,\n\u003e       \"name\": \"Duo Desktop.app\",\n\u003e       \"source\": \"apps\",\n\u003e       \"hosts_count\": 8,\n\u003e       \"versions_count\": 1,\n\u003e       \"versions\": [\n\u003e         {\n\u003e           \"id\": 61745,\n\u003e           \"version\": \"7.9.0.0\",\n\u003e           \"vulnerabilities\": null\n\u003e         }\n\u003e       ],\n\u003e       \"software_package\": {\n\u003e         \"name\": \"DuoDesktop-7.8.0.0.pkg\",\n\u003e         \"automatic_install_policies\": null,\n\u003e         \"version\": \"7.8.0.0\",\n\u003e         \"platform\": \"darwin\",\n\u003e         \"self_service\": true,\n\u003e         \"icon_url\": null,\n\u003e         \"last_install\": null,\n\u003e         \"last_uninstall\": null,\n\u003e         \"package_url\": \"http://blah.local:8000/DuoDesktop-7.8.0.0.pkg\"\n\u003e       },\n\u003e       \"app_store_app\": null,\n\u003e       \"bundle_identifier\": \"com.duosecurity.duo-device-health\",\n\u003e       \"hash_sha256\": \"blahd04d\"\n\u003e     },\n\u003e```\n\u003e But my goal is to automate ingestion of package\n\u003e we are on 4.68.1. Let me know if I'm misunderstanding!\n\u003e \n\u003e also feel free to redirect me if there is a better way to get this data.\n\u003e \n\u003e `\"package_url\": \"blah.pkg\"` is automated, but slows down CI a lot since packages are downloaded each run (fleet doesn't know the SHA till it downloads it)\n\u003e \n\u003e specifying a hash is nice, but i've not found a workaround to automate pushing the package into fleet\n\u003e So my goal is:\n\u003e \n\u003e - grab software package SHA256s that fleet knows about\n\u003e - grab `sha256` from github release artifacts where our packages reside\n\u003e - determine which packages in github need to be shoved into fleet\n\u003e - push only the packages that are missing from fleet\n\u003e - then our IT team can upload things to github release artifacts and specify a hash in CI cause packages automatically replicate over\n\u003e \n\u003e I'd want to do the same thing for bootstrap packages, seems very straightforward on that front:\n\u003e ```\n\u003e {\n\u003e   \"name\": \"bootstrap-package.pkg\",\n\u003e   \"team_id\": 0,\n\u003e   \"sha256\": \"6bebb443blah\",\n\u003e   \"token\": \"AA598E2A-blah\",\n\u003e   \"created_at\": \"2023-04-20T13:02:05Z\"\n\u003e }\n\u003e ```\n\u003e docs could be clearer/should explain what the default of 0 does.\n\nfrom @iansltx: \n\n\u003e We might wind up revising docs rather than updating behavior but need to have something to attach that effort to.\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\nMake sure that  if `packages_only=true` that `GET /software/titles` endpoint returns titles that have software package (excluding titles with VPP app). \n\n### ð§âð» Â Steps to reproduce\n\n1. run the API commands above to validate `/titles` endpoint with `?packages_only=true\"` \u0026 `?packages_only=false\"` parameters\n\n\n### ð¯ï¸ More info _(optional)_\n\nN/A",
          "number": 31581,
          "repository": "fleetdm/fleet",
          "title": "Output from packages_only=true \u0026 packages_only=false on /titles endpoint is the same",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31581"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwVo4",
        "labels": [
          "bug",
          ":product",
          "customer-faltona",
          "~csa",
          "~mdm-maturity",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Output from packages_only=true \u0026 pacakges_only=false on /titles endpoint is the same"
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "**Fleet version**: 4.69.0\n\n**Web browser and operating system**: Ubuntu\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n`customer-numa` is observing different install counts depending on the method they use to observe. The count of hosts on which Fleet installed the software is incorrect.\n\n\u003cimg width=\"3766\" height=\"1098\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1729ea9a-61fa-49b1-9b9e-348247cb0fc7\" /\u003e\n\n### ð§âð» Â Steps to reproduce\n\n1. Upload a custom software package with automatic install enabled\n2. Find a host that doesn't have that version of software and refetch it to run a policy\n3. Once the policy fails and the software installation starts, go to the software title details \u003e package card and observe that 1 host is pending installation\n4. After the installation is complete, the pending count is 0, but the other counts (installed and failed) have not increased.\n5. Clicking on the \"Installed\" or \"Failed\" buttons doesn't show any hosts as well.\n\n### ð¯ï¸ More info _(optional)_\n\nThis way you can reproduce this with VMs:\n\n1.  There are various ways you can add numerous hosts, I used docker to create amazon linux VMs. I tried ubuntu but was unable to turn scripts on, probably because the image is minimal and does not support systemd that is needed for orbit (I think)\n2. If using Amazon Linux, download any software that you can have 2 versions of. I used htop \n3. Spin up VMs with older version pre-installed\n4. Wait for the software to populate, confirm the numbers on the htop software page, filter for hosts with this software installed. Make sure that it matches what you'd expect based on your setup\n5. Add a newer version package and turn on automatic installs. The policy should check for the version as well. i.e.: \n~~~\nSELECT 1 \nWHERE \n  (SELECT COUNT(*) FROM rpm_packages) = 0 \n  OR EXISTS (\n    SELECT 1 \n    FROM rpm_packages \n    WHERE name = 'htop' \n      AND version_compare(version, '3.2.2') \u003e= 0\n  );\n~~~\n6. You can refetch the hosts to trigger policy\n7. Monitor numbers on the same pages, comparing against what is actually installed on the hosts\n\n\n\u003c!-- ### ð ï¸ To fix --\u003e\nProduct designer: @marko-lisica \n\nThe number of hosts on which software is installed through Fleet should be accurate. If the software package/VPP is installed through Fleet \"Installed\" count should increase after a successful install.",
          "number": 30403,
          "repository": "fleetdm/fleet",
          "title": "Host count discrepancy on software packages",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30403"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwXbo",
        "labels": [
          "bug",
          ":release",
          "customer-numa",
          "#g-software",
          "customer-juliana"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Host count discrepancy on software packages",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Discrepancies in host count after deploying .deb package #6888](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/1773e035-23e0-485e-92f5-3cca2265cc32)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Spent some time reproducing this issue, updated the steps and added different screenshot of discrepancies that I noticed. Some things just take time to update probably because of their asynchronous nature, but the screenshots are after waiting and also running cron jobs to be sure. \n\nI used Amazon Linux docker containers to simulate numerous hosts and used .rpm packages there. Initially, customer was running into issues with .deb packages but it seems like it doesn't matter "
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Retested on the latest RC and still seeing the host count going to 0 on the package. Similarly searching for \"Installed\" software results in 0 hosts while searching simply for that software id or version shows 20 hosts as expected. \n\n\u003cimg width=\"7526\" height=\"5860\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5c51e05a-b4bc-4601-957e-91c5652a9d83\" /\u003e"
          },
          {
            "author": {
              "login": "reeblybeebly"
            },
            "body": "**Fleet version**: 4.71.0\n\n`customer-juliana` has reported the same issue when attempting to monitor install of Firefox in their environment. Host Updated: Never does not reflect the number of hosts installed.\n\nScreenshot provided by customer\n\n\u003cimg width=\"633\" height=\"701\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d5600c0a-2f48-42ec-8052-14b6c353bff5\" /\u003e"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue with host update display and custom software package propagation #7495](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3003de11-0884-46f9-a70e-4cd852ed18b4)"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003cimg width=\"2070\" height=\"1185\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e67b777b-46ea-47eb-b680-11c42eaabefb\" /\u003e\n\n- I think this works as designed, counts in the versions table on the software are calculated hourly when cron job runs, that's why count is different when user opens actual version.\n- Counts under package name are counts of what Fleet installed, pending to install, or failed to install.\n  - Currently, we don't change count if some app is uninstalled\n\n---\n\n\u003cimg width=\"2434\" height=\"1976\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f90e4a4a-a94c-462f-84e8-5174781ddaa4\" /\u003e\n- This also works as designed, when \"Installed\" filter is applied this means \"installed by Fleet\".\n\n---\n\n\u003cimg width=\"3784\" height=\"1910\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d47c1c63-c843-41af-8dde-991bb49a4fe6\" /\u003e\n@AndreyKizimenko Maybe some hosts went offline when you ran the policy manually?\n\n@iansltx Can you review these use cases? I want to confirm what works as intended and what we should consider a bug. We should probably divide this into a few bugs and feature requests, as some elements may function as designed."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Retested on the latest RC and still seeing the host count going to 0 on the package. Similarly searching for \"Installed\" software results in 0 hosts while searching simply for that software id or version shows 20 hosts as expected.\n\u003e \n\u003e \u003cimg alt=\"Image\" width=\"2000\" height=\"2000\" src=\"https://private-user-images.githubusercontent.com/87822796/469868293-5c51e05a-b4bc-4601-957e-91c5652a9d83.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTQzMzAzNjIsIm5iZiI6MTc1NDMzMDA2MiwicGF0aCI6Ii84NzgyMjc5Ni80Njk4NjgyOTMtNWM1MWUwNWEtYjRiYy00NjAxLTk1N2UtOTFjNTY1MmE5ZDgzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA4MDQlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwODA0VDE3NTQyMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTEyZGFjMzdhYzk0OWFhN2Y3YWE3MDljN2JkYTVjNDY3NWUwNTI1NzhkZTc5MTFhYzlmOWQxNWZlZWI4NzQyOGImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.Y4-5n_vWvQz2nAlLHeOgbmxLXaxaC-uPsD2TR-lY_bE\"\u003e\n\n@iansltx This looks like a bug."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Can timebox this to determine whether a bug or a timing issue, and maybe fix the bug."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Sorry, I read this too quickly. Seems like this will require some research to track down/split issues up. 2-3pt eng effort seems like an appropriate timebox for this, and to my previous comment we might get a bugfix out of that effort."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "@marko-lisica for your question about running a policy and comparing its results against what is shown on the policy itself, I think that time it was even showing unenrolled hosts. The count hasn't updated because an hourly job hasn't run yet, so numbers from the previous job are still shown even though the same policy has been manually re-run. \n\nMost of these might be intentional, but at the same time, confusing to the customers, resulting in these issues/questions being raised. I tried to come up with as many confusing scenarios as possible while testing this, but in the end, many values would stabilize within an hour if nothing else changed on the hosts. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Most of these might be intentional, but at the same time, confusing to the customers, resulting in these issues/questions being raised. I tried to come up with as many confusing scenarios as possible while testing this, but in the end, many values would stabilize within an hour if nothing else changed on the hosts.\n\n@AndreyKizimenko I agree, but I want to ensure we treat improvements to things we designed intentionally as feature requests. I scheduled some time tomorrow for us. I would appreciate it if you could walk me through these use cases so I can better understand them and file issues accordingly.\n\n@iansltx I'll discuss this with Andrey and let you know if I need assistance. For now, you don't need to spend time on it.\n\n"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "After taking a look at it with Marko we noticed that the most inconsistent area is the software policy:\n\n- The Installed number is always wrong (as shown on my previous comment as well) but it also doesn't match with what you can see on the policies page\n\n\u003cimg width=\"3766\" height=\"1098\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/25012621-a701-4a2f-9eb6-5f44349fb95f\" /\u003e"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @AndreyKizimenko, thanks for helping with this one. I just updated repro steps to make things easier to understand. @mason-buettner I think this is what `customer-numa` experienced."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e **Fleet version**: 4.71.0\n\u003e \n\u003e `customer-juliana` has reported the same issue when attempting to monitor install of Firefox in their environment. Host Updated: Never does not reflect the number of hosts installed.\n\u003e \n\u003e Screenshot provided by customer\n\u003e \n\u003e \u003cimg alt=\"Image\" width=\"633\" height=\"701\" src=\"https://private-user-images.githubusercontent.com/92950643/472151031-d5600c0a-2f48-42ec-8052-14b6c353bff5.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTQ5MzUyMzgsIm5iZiI6MTc1NDkzNDkzOCwicGF0aCI6Ii85Mjk1MDY0My80NzIxNTEwMzEtZDU2MDBjMGEtMmY0OC00MmVjLTgwNTItMTRiNmMzNTNiZmY1LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA4MTElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwODExVDE3NTUzOFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTZhZTRkMTExODViYmVlMDAwYThiMDYzMzc4MTlmMjBjYjZmM2U3NWExMjliMWEzMjkxNWNiYjU2ZmVjNjlhNGEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.n5OPOxvaEKAT9Cbzdp-QLhUFHuziKESkxBXdy9kO6Yk\"\u003e\n\nHey @reeblybeebly, I don't think this bug addresses what customer Juliana experienced. From what I can see in Unthread, they need to wait for the cron job to run to get an accurate number of hosts on the software title page. This issue may have occurred because they added new software, and the cron job hadn't run yet.\n\n\u003cimg width=\"1195\" height=\"1046\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5322e705-1e60-4eae-b167-f1780dfc47c6\" /\u003e\n\nI would double-check with the customer what they see when they click on that count link,"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica What's the \"to fix\" here?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx I know that disscussion is long, but I think the only bug is that \"Installed\" count doesn't increase if software is installed through Fleet (in package card).\n\nI updated \"To fix\" section to be more clear."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica The numbers between policies and software installs mean two different things.\n\nIn policies, you have pass/fail based on an osquery query. In software installs, you have successful installs by Fleet since the package was uploaded. These numbers intentionally reset when a new version is uploaded, though maybe there's unexpected behavior when that update comes in via GitOps. Either way, I wouldn't expect those numbers to match."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e [@marko-lisica](https://github.com/marko-lisica) The numbers between policies and software installs mean two different things.\n\u003e \n\u003e In policies, you have pass/fail based on an osquery query. In software installs, you have successful installs by Fleet since the package was uploaded. These numbers intentionally reset when a new version is uploaded, though maybe there's unexpected behavior when that update comes in via GitOps. Either way, I wouldn't expect those numbers to match.\n\n@iansltx Makes sense to me. I think we had those screenshots from policies just to show that the policy ran (software was installed) and counts in the software \u003e package card didn't change. The problem here is when software package is installed, the count in the package card isn't updated."
          }
        ]
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent: 1.46.0\n\nIncludes updates to: \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n\n- Desktop `v1.45.1` \u003e `v1.46.0`\n\nFleet 1.46.0 has been released to the `edge` channel.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 32066,
          "repository": "fleetdm/fleet",
          "title": "Release QA: fleetd v1.46.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32066"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwdew",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.46.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Release QA: fleetd v1.46.0"
      }
    ]
  },
  {
    "timestamp": "2025-08-19T07:04:55.247945315Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243609663689)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Please include instructions on how to use said tool, esp for environments with many teams and packages please!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev If on-call remains quiet, take this one iydm"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "```\ndiff --git a/cmd/fleetctl/fleetctl/fleetctl.go b/cmd/fleetctl/fleetctl/fleetctl.go\nindex c1f0c5c31d..46bef6e0d0 100644\n--- a/cmd/fleetctl/fleetctl/fleetctl.go\n+++ b/cmd/fleetctl/fleetctl/fleetctl.go\n@@ -74,6 +74,7 @@ func CreateApp(\n \t\trunScriptCommand(),\n \t\tgitopsCommand(),\n \t\tgenerateGitopsCommand(),\n+\t\tgitopsTransformationsCommand(),\n \t}\n \treturn app\n }\ndiff --git a/cmd/fleetctl/fleetctl/gitops_transformations.go b/cmd/fleetctl/fleetctl/gitops_transformations.go\nnew file mode 100644\nindex 0000000000..55f15cf448\n--- /dev/null\n+++ b/cmd/fleetctl/fleetctl/gitops_transformations.go\n@@ -0,0 +1,178 @@\n+package fleetctl\n+\n+import (\n+\t\"encoding/json\"\n+\t\"errors\"\n+\t\"fmt\"\n+\t\"io\"\n+\t\"maps\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"slices\"\n+\t\"strings\"\n+\n+\t\"github.com/ghodss/yaml\"\n+\t\"github.com/urfave/cli/v2\"\n+)\n+\n+var w io.Writer = os.Stdout\n+\n+var transformations = map[string]func([]string) error{\n+\t\"software-fields-to-team\": func(inputFiles []string) error {\n+\t\tfor _, file := range inputFiles {\n+\t\t\t// var err error\n+\t\t\t// var b []byte\n+\t\t\tfmt.Fprintf(w, \"[+] Transforming file '%s'\\n\", file)\n+\n+\t\t\tb, err := os.ReadFile(file)\n+\t\t\tif err != nil {\n+\t\t\t\treturn fmt.Errorf(\"error reading file %s: %w\", file, err)\n+\t\t\t}\n+\t\t\tvar top map[string]json.RawMessage\n+\t\t\tif err := yaml.Unmarshal(b, \u0026top); err != nil {\n+\t\t\t\treturn fmt.Errorf(\"failed to unmarshal file %s: %w\", file, err)\n+\t\t\t}\n+\n+\t\t\tfor key, value := range top {\n+\t\t\t\tfmt.Printf(\"%s: %s\\n\", key, string(value))\n+\t\t\t}\n+\t\t}\n+\t\treturn nil\n+\t},\n+}\n+\n+func gitopsTransformationsCommand() *cli.Command {\n+\tvar (\n+\t\tflFilenames       cli.StringSlice\n+\t\toutputDirectory   string\n+\t\tflTransformations cli.StringSlice\n+\t\tforce             bool\n+\t)\n+\n+\treturn \u0026cli.Command{\n+\t\tName:        \"gitops-transformations\",\n+\t\tUsage:       \"Apply transformations to GitOps configuration files.\",\n+\t\tUsageText:   `fleetctl gitops-transformations [options]`,\n+\t\tDescription: \"Perform transformations on existing GitOps configuration files for Fleet.\",\n+\t\tFlags: []cli.Flag{\n+\t\t\t\u0026cli.StringSliceFlag{\n+\t\t\t\tName:        \"f\",\n+\t\t\t\tRequired:    true,\n+\t\t\t\tEnvVars:     []string{\"FILENAME\"},\n+\t\t\t\tDestination: \u0026flFilenames,\n+\t\t\t\tUsage:       \"The file(s) with the GitOps configuration.\",\n+\t\t\t},\n+\t\t\t\u0026cli.StringFlag{\n+\t\t\t\tName:        \"dir\",\n+\t\t\t\tRequired:    true,\n+\t\t\t\tDestination: \u0026outputDirectory,\n+\t\t\t\tUsage:       \"The directory to write transformed GitOps configuration file(s)\",\n+\t\t\t},\n+\t\t\t\u0026cli.StringSliceFlag{\n+\t\t\t\tName:        \"t\",\n+\t\t\t\tRequired:    false,\n+\t\t\t\tDestination: \u0026flTransformations,\n+\t\t\t\tUsage:       \"The transformation(s) to apply to the GitOps configuration.\",\n+\t\t\t},\n+\t\t\t\u0026cli.BoolFlag{\n+\t\t\t\tName:  \"force\",\n+\t\t\t\tUsage: \"Overwrite existing files.\",\n+\t\t\t},\n+\t\t},\n+\t\tAction: func(c *cli.Context) error {\n+\t\t\tvar err error\n+\n+\t\t\t// verify output directory\n+\t\t\tif outputDirectory == \"\" {\n+\t\t\t\treturn errors.New(\"-dir must be specified\")\n+\t\t\t}\n+\t\t\tif _, err := os.Stat(outputDirectory); os.IsNotExist(err) {\n+\t\t\t\treturn fmt.Errorf(\"output directory does not exist: %s\", outputDirectory)\n+\t\t\t}\n+\t\t\tif force {\n+\t\t\t\terr = os.RemoveAll(outputDirectory)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn fmt.Errorf(\"Error removing output directory: %v\\n\", err)\n+\t\t\t\t}\n+\t\t\t\terr = os.MkdirAll(outputDirectory, 0o755)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn fmt.Errorf(\"Error recreating output directory: %v\\n\", err)\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// verify filenames\n+\t\t\ttotalFilenames := len(flFilenames.Value())\n+\t\t\tif totalFilenames == 0 {\n+\t\t\t\treturn errors.New(\"-f must be specified\")\n+\t\t\t}\n+\t\t\tfor _, flFilename := range flFilenames.Value() {\n+\t\t\t\tif strings.TrimSpace(flFilename) == \"\" {\n+\t\t\t\t\treturn errors.New(\"file name cannot be empty\")\n+\t\t\t\t}\n+\t\t\t\tif len(filepath.Base(flFilename)) \u003e filenameMaxLength {\n+\t\t\t\t\treturn fmt.Errorf(\"file name must be less than %d characters: %s\", filenameMaxLength, filepath.Base(flFilename))\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// verify transformations\n+\t\t\tvar transformationsToApply []string\n+\t\t\tvar unknownTransformations []string\n+\t\t\tif len(flTransformations.Value()) == 0 {\n+\t\t\t\tfmt.Fprintln(w, \"[!] No transformations specified, will attempt to apply all transformations\")\n+\t\t\t\ttransformationsToApply = slices.Collect(maps.Keys(transformations))\n+\t\t\t}\n+\t\t\tfor _, flTransformation := range flTransformations.Value() {\n+\t\t\t\tif _, ok := transformations[flTransformation]; !ok {\n+\t\t\t\t\tunknownTransformations = append(unknownTransformations, flTransformation)\n+\t\t\t\t} else {\n+\t\t\t\t\ttransformationsToApply = append(transformationsToApply, flTransformation)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif len(unknownTransformations) \u003e 0 {\n+\t\t\t\treturn fmt.Errorf(\"unknown transformations specified: %s\", strings.Join(unknownTransformations, \", \"))\n+\t\t\t}\n+\n+\t\t\tfilesToTransform, err := filesToOutputDirectory(flFilenames.Value(), outputDirectory)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\n+\t\t\tfor _, flTransformation := range transformationsToApply {\n+\t\t\t\ttransformFunc := transformations[flTransformation]\n+\t\t\t\tfmt.Fprintf(w, \"[+] Applying transformation '%s' to GitOps configuration files...\\n\", flTransformation)\n+\t\t\t\terr := transformFunc(filesToTransform)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\treturn nil\n+\t\t},\n+\t}\n+}\n+\n+func filesToOutputDirectory(files []string, outputDir string) ([]string, error) {\n+\tvar outputFiles []string\n+\tfor _, file := range files {\n+\t\tfilename := filepath.Base(file)\n+\t\toutputFile := filepath.Join(outputDir, filename)\n+\n+\t\tif err := os.MkdirAll(outputDir, 0o755); err != nil {\n+\t\t\treturn nil, fmt.Errorf(\"failed to create output directory: %w\", err)\n+\t\t}\n+\n+\t\tcontent, err := os.ReadFile(file)\n+\t\tif err != nil {\n+\t\t\treturn nil, fmt.Errorf(\"failed to read file %s: %w\", file, err)\n+\t\t}\n+\n+\t\tif err := os.WriteFile(outputFile, content, 0o644); err != nil {\n+\t\t\treturn nil, fmt.Errorf(\"failed to write output file: %w\", err)\n+\t\t}\n+\t\toutputFiles = append(outputFiles, outputFile)\n+\t}\n+\treturn outputFiles, nil\n+}\n```"
          }
        ],
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdtOjc",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "status": "âï¸Awaiting QA",
        "issueNumber": 29894,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# `fleetd` agent: 1.46.0\n\nIncludes updates to: \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n\n- Desktop `v1.45.1` \u003e `v1.46.0`\n\nFleet 1.46.0 has been released to the `edge` channel.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwdew",
        "issueNumber": 32066,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-19T19:04:31.836831112Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpos",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31215,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdsLBo",
        "status": "âï¸Awaiting QA",
        "issueNumber": 4498,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdAjcc",
        "labels": [
          "~frontend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Confirmed during 8/4 standup:: This was previously approved in #31384, but since much of the code has been in flux, I am holding off until 4.72 is completely QAed and this PR will solely be a code organization PR and no changes to ensure another deep dive QA will be unnecessary"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Upped this from a 3 to a 5 because I realized that there are 0 tests on the VPP install modal, software package install modal, and software uninstall modal. \n\nNeeded tests on each of those modals: \n- various status message based on what page they're on and whether it's successfulxpendingxfailed\n- whether they show versions or not\n- whether they show more details\n- what the action button is (since it's different for self-service vs admin)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@RachelElysia are we just adding test coverage here or does QA need to retest any self service flows?"
          }
        ],
        "issueNumber": 31309,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP0g",
        "status": "ð£ In progress",
        "issueNumber": 30238,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.72\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\n\u003cimg width=\"720\" height=\"592\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3fb10186-89d6-4b2f-9d51-de7941e432a2\" /\u003e\n\n### ð ï¸ To fix\n\nProduct designer @marko-lisica \n\nFor tarballs, we'll go straight to the \"Installed\" status (won't wait for refetch, as it's not in the inventory). Click on \"Installed\" will show the details modal with install script output.\n\nNo tooltips over \"Installed.\" See this separate issue here: https://github.com/fleetdm/fleet/issues/31297\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add a tar.gz file to a team's library, made available for Self Service. Include install and uninstall scripts.\nFor a physical linux box you can use the go tar.gz file here: https://drive.google.com/file/d/15uKzk2J7IYH7MNYhBHdPAKP_uvVXSx1Z/view?usp=sharing\nFor a linux VM on Apple Silicon you can use the go tar.gz file here: https://drive.google.com/file/d/1ktV0lZH88Q7lqdFUIo3YCt_mgcql1NUN/view?usp=sharing\nInstall script is: `mv $INSTALLER_PATH/* /usr/local`\nUninstall script is: `rm -rf /usr/local/go`\n2. On enrolled linux host, open Self service and click \"Install\"\n3. Wait for install to complete, refetch to complete, then hover over \"Installed\" status\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nI used a different tar.gz when reproducing to gather additional info, seems this is only happening for the first install.\nAPI Response:\n```\n    {\n      \"id\": 3875,\n      \"name\": \"gimp-3.0.0.tar.gz\",\n      \"source\": \"tgz_packages\",\n      \"status\": \"installed\",\n      \"installed_versions\": null,\n      \"software_package\": {\n        \"name\": \"gimp-3.0.0.tar.gz\",\n        \"automatic_install_policies\": null,\n        \"version\": \"\",\n        \"platform\": \"linux\",\n        \"self_service\": true,\n        \"icon_url\": null,\n        \"last_install\": {\n          \"install_uuid\": \"e48dbdaf-dde1-44cb-b8c2-6f29839eeaec\",\n          \"installed_at\": \"2025-08-11T14:28:44.201641Z\"\n        },\n        \"last_uninstall\": null,\n        \"package_url\": null\n      },\n      \"app_store_app\": null\n    },\n```"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdbCMM",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "status": "ð¥ Ready",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reassigning because I'm right in the middle of the interrupt work swimlane :("
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia thanks for noticing that _uninstall_ is the tooltip being shown, so we're going to want an API response for this one to troubleshoot further. Given that @jmwatts is out and to avoid a repro rabbit trail, going to make the call of not blocking the release for this; we'll troubleshoot and resolve in 4.73."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "More info:\nrecently_uninstalled UI status would only show if `newerDate === lastUninstallDate` which is super bizarre in this case and would require repro with API responses"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Updated ticket to show install UI status\n"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts / @iansltx I might need more help reproducing this, maybe in a call?\n\nBasically, something in `getUiStatus` helper function is pointing this installer to the wrong ui_status\n\nHere's the code:\n```\nexport const getUiStatus = (\n  software: IHostSoftware,\n  isHostOnline: boolean,\n  hostSoftwareUpdatedAt?: string | null\n): IHostSoftwareUiStatus =\u003e {\n  const { status, installed_versions } = software;\n\n  const lastInstallDate = getLastInstall(software)?.installed_at;\n  const lastUninstallDate = getLastUninstall(software)?.uninstalled_at;\n  const installerVersion = getInstallerVersion(software);\n\n  // 1. Failed install states\n  if (status === \"failed_install\") {\n    if (\n      installerVersion \u0026\u0026\n      installed_versions \u0026\u0026\n      installed_versions.some(\n        (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n      )\n    ) {\n      return \"failed_install_update_available\";\n    }\n    return \"failed_install\";\n  }\n\n  // 2. Failed uninstall states\n  if (status === \"failed_uninstall\") {\n    if (\n      installerVersion \u0026\u0026\n      installed_versions \u0026\u0026\n      installed_versions.some(\n        (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n      )\n    ) {\n      return \"failed_uninstall_update_available\";\n    }\n    return \"failed_uninstall\";\n  }\n\n  // 3. Pending install/update\n  if (status === \"pending_install\") {\n    if (\n      installed_versions \u0026\u0026\n      installed_versions.length \u003e 0 \u0026\u0026\n      installerVersion\n    ) {\n      const isUpdate = installed_versions.some(\n        (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n      );\n      if (isUpdate) {\n        return isHostOnline ? \"updating\" : \"pending_update\";\n      }\n    }\n    return isHostOnline ? \"installing\" : \"pending_install\";\n  }\n\n  // 4. Pending uninstall\n  if (status === \"pending_uninstall\") {\n    return isHostOnline ? \"uninstalling\" : \"pending_uninstall\";\n  }\n\n  // **Recently_uninstalled check comes BEFORE update_available**\n  if (software.status === null \u0026\u0026 lastUninstallDate \u0026\u0026 hostSoftwareUpdatedAt) {\n    const newerDate = getNewerDate(hostSoftwareUpdatedAt, lastUninstallDate);\n    if (newerDate === lastUninstallDate) {\n      return \"recently_uninstalled\";\n    }\n  }\n\n  // 5. Update available and recently updated\n  if (\n    installerVersion \u0026\u0026\n    installed_versions \u0026\u0026\n    installed_versions.some(\n      (iv) =\u003e compareVersions(iv.version, installerVersion) === -1\n    )\n  ) {\n    if (!lastInstallDate) {\n      return \"update_available\";\n    }\n    const newerDate = hostSoftwareUpdatedAt\n      ? getNewerDate(hostSoftwareUpdatedAt, lastInstallDate)\n      : lastInstallDate;\n    return newerDate === lastInstallDate\n      ? \"recently_updated\"\n      : \"update_available\";\n  }\n\n  // 6. Recently installed (not an update)\n  if (\n    software.status === \"installed\" \u0026\u0026\n    lastInstallDate \u0026\u0026\n    hostSoftwareUpdatedAt\n  ) {\n    const newerDate = getNewerDate(hostSoftwareUpdatedAt, lastInstallDate);\n    if (newerDate === lastInstallDate) {\n      return \"recently_installed\";\n    }\n  }\n\n  // 7. Tarballs edge case\n  if (software.source === \"tgz_packages\" \u0026\u0026 software.status === \"installed\") {\n    return \"installed\";\n  }\n\n  // 8. Default to installed or uninstalled based on installed_versions\n  if (installed_versions \u0026\u0026 installed_versions.length \u003e 0) return \"installed\";\n\n  return \"uninstalled\";\n};\n```\n\nSomehow it's passing both if statements in line 6 where it should be failing at least one of them:\nEither should fail:\n```\n    software.status === \"installed\" \u0026\u0026\n    lastInstallDate \u0026\u0026\n    hostSoftwareUpdatedAt\n```\n\nor should fail \n```\n    const newerDate = getNewerDate(hostSoftwareUpdatedAt, lastInstallDate);\n    if (newerDate === lastInstallDate) {\n```\n\nbut I can't tell which or why without help repro in real time.\n\nHere's a diagram of what we want fixed (crossed out is current behavior, circled is wanted behavior):\n\n\u003cimg width=\"396\" height=\"703\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/de100dc2-cee1-4260-bd33-9ff8ffc5cc61\" /\u003e\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "2nd to last API response:\n```\n{\n  \"host\": {\n    \"created_at\": \"2025-08-14T15:02:47Z\",\n    \"updated_at\": \"2025-08-14T20:55:26Z\",\n    \"software_updated_at\": \"2025-08-14T20:49:24Z\",\n    \"id\": 46,\n    \"detail_updated_at\": \"2025-08-14T20:49:25Z\",\n    \"label_updated_at\": \"2025-08-14T20:49:25Z\",\n    \"policy_updated_at\": \"2025-08-14T20:49:25Z\",\n    \"last_enrolled_at\": \"2025-08-14T15:02:47Z\",\n    \"seen_time\": \"2025-08-14T20:55:31Z\",\n    \"refetch_requested\": true,\n    \"hostname\": \"nimda-Vivobook\",\n    \"uuid\": \"18005795-ed98-4640-89fe-f123c7dc0919\",\n    \"platform\": \"ubuntu\",\n    \"osquery_version\": \"5.19.0\",\n    \"orbit_version\": \"25.8.8984\",\n    \"fleet_desktop_version\": \"1.45.1\",\n    \"scripts_enabled\": true,\n    \"os_version\": \"Ubuntu 24.04.2 LTS\",\n    \"build\": \"\",\n    \"platform_like\": \"debian\",\n    \"code_name\": \"noble\",\n    \"uptime\": 283194000000000,\n    \"memory\": 16378298368,\n    \"cpu_type\": \"x86_64\",\n    \"cpu_subtype\": \"186\",\n    \"cpu_brand\": \"13th Gen Intel(R) Core(TM) i3-1315U\",\n    \"cpu_physical_cores\": 6,\n    \"cpu_logical_cores\": 8,\n    \"hardware_vendor\": \"ASUSTeK COMPUTER INC.\",\n    \"hardware_model\": \"Vivobook_ASUSLaptop X1404VA_X1404VA\",\n    \"hardware_version\": \"1.0\",\n    \"hardware_serial\": \"T2N0CX02929507A\",\n    \"computer_name\": \"nimda-Vivobook\",\n    \"primary_mac\": \"ec:8e:77:85:3b:c6\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 60,\n    \"logger_tls_period\": 4,\n    \"team_id\": null,\n    \"pack_stats\": null,\n    \"team_name\": null,\n    \"users\": [\n      {\n        \"uid\": 0,\n        \"username\": \"root\",\n        \"type\": \"\",\n        \"groupname\": \"root\",\n        \"shell\": \"/bin/bash\"\n      },\n      {\n        \"uid\": 1000,\n        \"username\": \"nimda\",\n        \"type\": \"\",\n        \"groupname\": \"nimda\",\n        \"shell\": \"/bin/bash\"\n      }\n    ],\n    \"gigs_disk_space_available\": 938.2,\n    \"percent_disk_space_available\": 93,\n    \"gigs_total_disk_space\": 1006.45,\n    \"issues\": {\n      \"failing_policies_count\": 0,\n      \"critical_vulnerabilities_count\": 0,\n      \"total_issues_count\": 0\n    },\n    \"mdm\": {\n      \"enrollment_status\": null,\n      \"dep_profile_error\": false,\n      \"server_url\": null,\n      \"name\": \"\",\n      \"encryption_key_available\": false,\n      \"encryption_key_archived\": false,\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": null,\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": null,\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"\",\n        \"detail\": \"\",\n        \"bootstrap_package_name\": \"\"\n      },\n      \"device_status\": \"unlocked\",\n      \"pending_action\": \"\",\n      \"connected_to_fleet\": false\n    },\n    \"refetch_critical_queries_until\": null,\n    \"dep_assigned_to_fleet\": false,\n    \"last_restarted_at\": \"2025-08-11T14:09:31Z\",\n    \"policies\": [],\n    \"labels\": [\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 9,\n        \"author_id\": null,\n        \"name\": \"All Hosts\",\n        \"description\": \"All hosts which have enrolled in Fleet\",\n        \"query\": \"select 1;\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 11,\n        \"author_id\": null,\n        \"name\": \"Ubuntu Linux\",\n        \"description\": \"All Ubuntu hosts\",\n        \"query\": \"select 1 from os_version where platform = 'ubuntu';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 15,\n        \"author_id\": null,\n        \"name\": \"All Linux\",\n        \"description\": \"All Linux distributions\",\n        \"query\": \"SELECT 1 FROM osquery_info WHERE build_platform LIKE '%ubuntu%' OR build_distro LIKE '%centos%';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"packs\": [\n      {\n        \"created_at\": \"2025-03-06T19:03:44Z\",\n        \"updated_at\": \"2025-03-06T19:03:44Z\",\n        \"id\": 1,\n        \"name\": \"something\",\n        \"disabled\": false,\n        \"type\": null,\n        \"labels\": null,\n        \"label_ids\": null,\n        \"hosts\": null,\n        \"host_ids\": null,\n        \"teams\": null,\n        \"team_ids\": null\n      }\n    ],\n    \"batteries\": null,\n    \"last_mdm_enrolled_at\": null,\n    \"last_mdm_checked_in_at\": null,\n    \"status\": \"online\",\n    \"display_text\": \"nimda-Vivobook\",\n    \"display_name\": \"nimda-Vivobook\"\n  },\n  \"self_service\": true,\n  \"org_logo_url\": \"\",\n  \"org_logo_url_light_background\": \"\",\n  \"org_contact_url\": \"https://fleetdm.com/company/contact\",\n  \"license\": {\n    \"tier\": \"premium\",\n    \"organization\": \"Fleet Device Management Inc.\",\n    \"device_count\": 100,\n    \"expiration\": \"2025-12-30T18:00:00-06:00\",\n    \"note\": \"Created with Fleet License key dispenser\",\n    \"managed_cloud\": false\n  },\n  \"global_config\": {\n    \"mdm\": {\n      \"enabled_and_configured\": true\n    },\n    \"features\": {\n      \"enable_software_inventory\": true\n    }\n  }\n}\n\n```\nResponse after refetch completed:\n```\n{\n  \"host\": {\n    \"created_at\": \"2025-08-14T15:02:47Z\",\n    \"updated_at\": \"2025-08-14T20:56:05Z\",\n    \"software_updated_at\": \"2025-08-14T20:49:24Z\",\n    \"id\": 46,\n    \"detail_updated_at\": \"2025-08-14T20:56:06Z\",\n    \"label_updated_at\": \"2025-08-14T20:56:06Z\",\n    \"policy_updated_at\": \"2025-08-14T20:56:06Z\",\n    \"last_enrolled_at\": \"2025-08-14T15:02:47Z\",\n    \"seen_time\": \"2025-08-14T20:55:31Z\",\n    \"refetch_requested\": false,\n    \"hostname\": \"nimda-Vivobook\",\n    \"uuid\": \"18005795-ed98-4640-89fe-f123c7dc0919\",\n    \"platform\": \"ubuntu\",\n    \"osquery_version\": \"5.19.0\",\n    \"orbit_version\": \"25.8.8984\",\n    \"fleet_desktop_version\": \"1.45.1\",\n    \"scripts_enabled\": true,\n    \"os_version\": \"Ubuntu 24.04.2 LTS\",\n    \"build\": \"\",\n    \"platform_like\": \"debian\",\n    \"code_name\": \"noble\",\n    \"uptime\": 283595000000000,\n    \"memory\": 16378298368,\n    \"cpu_type\": \"x86_64\",\n    \"cpu_subtype\": \"186\",\n    \"cpu_brand\": \"13th Gen Intel(R) Core(TM) i3-1315U\",\n    \"cpu_physical_cores\": 6,\n    \"cpu_logical_cores\": 8,\n    \"hardware_vendor\": \"ASUSTeK COMPUTER INC.\",\n    \"hardware_model\": \"Vivobook_ASUSLaptop X1404VA_X1404VA\",\n    \"hardware_version\": \"1.0\",\n    \"hardware_serial\": \"T2N0CX02929507A\",\n    \"computer_name\": \"nimda-Vivobook\",\n    \"primary_mac\": \"ec:8e:77:85:3b:c6\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 60,\n    \"logger_tls_period\": 4,\n    \"team_id\": null,\n    \"pack_stats\": null,\n    \"team_name\": null,\n    \"users\": [\n      {\n        \"uid\": 0,\n        \"username\": \"root\",\n        \"type\": \"\",\n        \"groupname\": \"root\",\n        \"shell\": \"/bin/bash\"\n      },\n      {\n        \"uid\": 1000,\n        \"username\": \"nimda\",\n        \"type\": \"\",\n        \"groupname\": \"nimda\",\n        \"shell\": \"/bin/bash\"\n      }\n    ],\n    \"gigs_disk_space_available\": 937.9,\n    \"percent_disk_space_available\": 93,\n    \"gigs_total_disk_space\": 1006.45,\n    \"issues\": {\n      \"failing_policies_count\": 0,\n      \"critical_vulnerabilities_count\": 0,\n      \"total_issues_count\": 0\n    },\n    \"mdm\": {\n      \"enrollment_status\": null,\n      \"dep_profile_error\": false,\n      \"server_url\": null,\n      \"name\": \"\",\n      \"encryption_key_available\": false,\n      \"encryption_key_archived\": false,\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": null,\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": null,\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"\",\n        \"detail\": \"\",\n        \"bootstrap_package_name\": \"\"\n      },\n      \"device_status\": \"unlocked\",\n      \"pending_action\": \"\",\n      \"connected_to_fleet\": false\n    },\n    \"refetch_critical_queries_until\": null,\n    \"dep_assigned_to_fleet\": false,\n    \"last_restarted_at\": \"2025-08-11T14:09:31Z\",\n    \"policies\": [],\n    \"labels\": [\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 9,\n        \"author_id\": null,\n        \"name\": \"All Hosts\",\n        \"description\": \"All hosts which have enrolled in Fleet\",\n        \"query\": \"select 1;\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 11,\n        \"author_id\": null,\n        \"name\": \"Ubuntu Linux\",\n        \"description\": \"All Ubuntu hosts\",\n        \"query\": \"select 1 from os_version where platform = 'ubuntu';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      },\n      {\n        \"created_at\": \"2025-03-06T15:26:01Z\",\n        \"updated_at\": \"2025-03-06T15:26:01Z\",\n        \"id\": 15,\n        \"author_id\": null,\n        \"name\": \"All Linux\",\n        \"description\": \"All Linux distributions\",\n        \"query\": \"SELECT 1 FROM osquery_info WHERE build_platform LIKE '%ubuntu%' OR build_distro LIKE '%centos%';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"packs\": [\n      {\n        \"created_at\": \"2025-03-06T19:03:44Z\",\n        \"updated_at\": \"2025-03-06T19:03:44Z\",\n        \"id\": 1,\n        \"name\": \"something\",\n        \"disabled\": false,\n        \"type\": null,\n        \"labels\": null,\n        \"label_ids\": null,\n        \"hosts\": null,\n        \"host_ids\": null,\n        \"teams\": null,\n        \"team_ids\": null\n      }\n    ],\n    \"batteries\": null,\n    \"last_mdm_enrolled_at\": null,\n    \"last_mdm_checked_in_at\": null,\n    \"status\": \"online\",\n    \"display_text\": \"nimda-Vivobook\",\n    \"display_name\": \"nimda-Vivobook\"\n  },\n  \"self_service\": true,\n  \"org_logo_url\": \"\",\n  \"org_logo_url_light_background\": \"\",\n  \"org_contact_url\": \"https://fleetdm.com/company/contact\",\n  \"license\": {\n    \"tier\": \"premium\",\n    \"organization\": \"Fleet Device Management Inc.\",\n    \"device_count\": 100,\n    \"expiration\": \"2025-12-30T18:00:00-06:00\",\n    \"note\": \"Created with Fleet License key dispenser\",\n    \"managed_cloud\": false\n  },\n  \"global_config\": {\n    \"mdm\": {\n      \"enabled_and_configured\": true\n    },\n    \"features\": {\n      \"enable_software_inventory\": true\n    }\n  }\n}\n\n```\n\nSoftware response after refetch:\n```\n {\n      \"id\": 3526,\n      \"name\": \"go1.24.3.linux-amd64.tar.gz\",\n      \"source\": \"tgz_packages\",\n      \"status\": \"installed\",\n      \"installed_versions\": null,\n      \"software_package\": {\n        \"name\": \"go1.24.3.linux-amd64.tar.gz\",\n        \"automatic_install_policies\": null,\n        \"version\": \"\",\n        \"platform\": \"linux\",\n        \"self_service\": true,\n        \"icon_url\": null,\n        \"last_install\": {\n          \"install_uuid\": \"fdf7eeae-2df2-4694-95a1-e3665bfc0f6a\",\n          \"installed_at\": \"2025-08-14T20:55:26.882191Z\"\n        },\n        \"last_uninstall\": null,\n        \"package_url\": null\n      },\n      \"app_store_app\": null\n    },\n```"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Looks like this is a backend bug, specifically, `software_updated_at` on the host isn't getting updated after refetch:\n\n`\"software_updated_at\": \"2025-08-14T20:49:24Z\",`\nSo the frontend thinks the refetch hasn't happened because the API isn't returning an updated `software_updated_at` timestamp that's newer than the `last_install.installed_at`, which it has, but BE some reason didn't update `software_updated_at`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica So, this appears to currently be expected behavior, but we need to figure out how to handle this. Bringing this to design review. Context:\n\n1. Currently, FE ârecently installedâ UX relies on software last updated\n2. This persists for tar.gz installers when theyâre the only thing that changed on a host because tarballs donât get inventoried even after the auto-refetch post-install\n3. Because there are no changes in inventory resulting from a tarball install, we hit the no-op branch when running software inventory even though we refetched successfully, which means that the software updated timestamp isn't touched\n4. If inventory doesn't change, we explicitly shouldnât update software last updated timestamp per [this test](https://github.com/fleetdm/fleet/blob/250d26f53a0592f2748329f32c7df5e110ddc919/server/datastore/mysql/hosts_test.go#L3149-L3160)\n5. We _also_ no-op when last opened time on all inventoried software differs by less than a configured delta; the default is currently one hour despite changes in 4.71 for refetching vitals more often; if we touch the software last updated time on no-ops while retaining this delta we'll be shwoing software as recently updated when last opened times are stale\n6. Potential option: have FE look at details-updated timestamp rather than software-updated timestamp and keep existing behavior (donât touch updated timestamp on no-op)\n\n[More context in Slack](https://fleetdm.slack.com/archives/C086V2QK76X/p1755195429676139)"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "As part of the solution for [this bug](https://github.com/fleetdm/fleet/issues/31297), we are removing tooltips."
          }
        ],
        "issueNumber": 31721,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdL8SA",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet UI scrolling issue on policy automations page #6515](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/e0769c7b-805a-4272-897a-de7c5f7af36b)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Timebox to 1 point."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @marko-lisica ! What a great, simple solution \u003c3\n\nEst: 1"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Was going to evict this bit the fix looks trivial so going to keep in for now."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@RachelElysia I'm still seeing this a bit on the latest RC build.\n\nhttps://github.com/user-attachments/assets/82a6b2ca-ddf5-4475-b171-f3f75c0a2a0f"
          }
        ],
        "issueNumber": 30004,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxFk",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The reason for this is we starts-with match on Linux platform names for app icons, and `arch` is a Linux platform name.\n\nWe wind up using the same code paths for software icons as for OS icons, so this code winds up being rather brittle; just dropping \"Arch\" out of the list would mean we'd get a generic package icon for Arch Linux hosts rather than the penguin. So getting this right without breaking something else is going to require a bit of a refactor as the current algorithm is too naive.\n\n@marko-lisica do we even want to show the penguin for software packages? Our default for Linux packages of various types is a generic package icon, so right now we have a mix of penguins (for items that have a linux platform inside the name) and generic package icons (for everything else), for no reason that's obvious to an admin. Maybe OS icons (penguin, Windows, Apple OSes, Android, ChromeOS) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software?\n\nPushing this back to In Progress to get an answer on the above."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Maybe OS icons (penguin, Windows, Apple OSes, Android, ChromeOS) should have their own bucket, limited to use on the OS list/detail pages, at which point the penguin would no longer leak into software?\n\n@iansltx I think this is a good solution. We have a default icon for Linux packages, so we won't need the \"penguin\" icon for that purpose. Also, other platforms have a default icon for packages."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752671903129569"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks for filing @nonpunctual and looking into the root cause @iansltx and product designing/updating the to-fix @marko-lisica .\n\nBold Est: 1 rounding up to 2 to add tests and internal documentation\n\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nViewed software inventory for several macOS, Linux, and Windows hosts. Also searched for any containing \"arch\". Penguin icon no longer appears. \nAlso confirmed that it still appears for Linux OS versions."
          }
        ],
        "issueNumber": 30803,
        "changeType": "modified"
      },
      {
        "content": {
          "title": "(Timebox) ðª²Warning state on last-opened time calculation when changing the name of an existing software"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxBg",
        "title": "(Timebox) ðª²Warning state on last-opened time calculation when changing the name of an existing software",
        "comments": [
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I see that the steps to reproduce is still a **to do**.\n\nHowever, the way you've written it sounds like part of the ticket will be to find a way to reproduce this. I'm a little uncertain how to proceed. Should I move this forward and indicate that todo as part of the fix area?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Whoops, my bad on removing `:reproduce`"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Yeah, this will need to be moved through to engineering with the reproduce tag intact as we'll likely need to coordinate with customers to get a repro."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "let's timebox this, whether it is reproduction, or adding logging"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulling the :reproduce label off of this since that makes it less clear whose work queue this is in. Timebox is for investigation/repro by an engineer."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@ksykulev heads up that this is a related ticket: https://github.com/fleetdm/fleet/issues/29050"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman @marko-lisica See [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1754591131297309) for context on why this is Waiting. We have some product questions on whether/when we should clear \"last opened\", and the behavior may not be consistent right now cross-os (e.g. @zwass mentioned that we don't take version into account when checking package last-opened times in Linux)."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Was able to reproduce the warning in the log:\n\n```\nlevel=warn ts=2025-08-07T19:08:27.209411Z msg=\"updateModifiedHostSoftwareDB: last opened at is nil for new software, but not for current software\" new_software=\"Microsoft Word\" current_software=\"Microsoft Word\" bundle_identifier=com.microsoft.Word\n```\nBy doing the following:\n\n1. Install Microsoft Word, and open\n2. Refetch host vitals\n3. Confirm \"Last used\" time is shown on Host \u003e Software \u003eInventory tab\n4. Reinstall or Update Microsoft Word via Fleet, do not open\n5. Refetch completes after installation automatically\n6. \"Last used\" time is cleared out on Host \u003e Software \u003eInventory tab\n\nAdded steps to repro in description."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Not sure we need more confirmation, but..\nI downloaded firefox 139.0.4, installed it\n\n\u003cimg width=\"1206\" height=\"105\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9c714aa4-6e4b-4e9a-9741-8f5bdddcd980\" /\u003e\n\nOpened firefox\n\n\u003cimg width=\"1219\" height=\"126\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a07f13ee-cacb-4f58-bbde-092b31846c7b\" /\u003e\n\nDownloaded firefox 141.0.3, installed it\n\n\u003cimg width=\"1203\" height=\"126\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9f4138ea-edd9-4bf8-9c00-e1c274526c2f\" /\u003e"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @noahtalerman @marko-lisica See [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1754591131297309) for context on why this is Waiting. We have some product questions on whether/when we should clear \"last opened\", and the behavior may not be consistent right now cross-os (e.g. @zwass mentioned that we don't take version into account when checking package last-opened times in Linux).\n\nUp to @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "waiting on copy change, documenting the oddity"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "- A tooltip will be added on macOS hosts to indicate that updating the application in place will resets last opened time\n- A tooltip will be added on Windows/Linux hosts to indicate that last open time is tied to an install path/package name verse a version. So updating an application in place will not clear the last open time.\n- Add documentation in the API endpoint describing the nuance.\n- Change the log level when it is detected that a last open time will be changed to null and the source is not apps (aka windows/linux)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "bringing this to design review"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Design review didn't get to this 8/19, going to be discussed 8/20. #32064 and #32067 not quite sub-tasks as they are results of the time-box"
          }
        ],
        "issueNumber": 29061,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdhNKc",
        "status": "âï¸Awaiting QA",
        "issueNumber": 28189,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwOKI",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "status": "âï¸Awaiting QA",
        "issueNumber": 31546,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwOYw",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "status": "âï¸Awaiting QA",
        "issueNumber": 32025,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwVd4",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "status": "âï¸Awaiting QA",
        "issueNumber": 31966,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8s",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "issueNumber": 31163,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnxU",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "issueNumber": 31206,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCn44",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "issueNumber": 31207,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [ ] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [ ] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [ ] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [ ] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [ ] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [ ] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [ ] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [ ] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [ ] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [ ] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [ ] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [ ] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [ ] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [ ] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [ ] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [ ] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [ ] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [ ] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [ ] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [ ] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [ ] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [ ] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [ ] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [ ] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n- [ ] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n\n### Engineering\n\n - [ ] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [ ] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [ ] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [ ] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [ ] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [ ] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [ ] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [ ] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [ ] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [ ] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [ ] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdhCgY",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "issueNumber": 31495,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# `fleetd` agent: 1.46.0\n\nIncludes updates to: \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n\n- Desktop `v1.45.1` \u003e `v1.46.0`\n\nFleet 1.46.0 has been released to the `edge` channel.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.71.0: Pass\n4.72.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwdew",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "fleetd [v1.46.0](https://github.com/fleetdm/fleet/blob/main/orbit/CHANGELOG.md#orbit-1460-aug-15-2025) has been released to stable!"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Fleet upgrade shines,\nEdge tested, all systems go,\nSmoother user flow glows."
          }
        ],
        "issueNumber": 32066,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: Observed in Fleet's dogfood environment (commit `45c366c`)\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nOn the Vulnerability detail page, the font size in 19.2px:\n\n\u003cimg width=\"328\" height=\"356\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5724cda7-a891-4be3-80a2-bfd257912fc4\" /\u003e\n\nOn the Software title details page and Host details page the font size is 24px:\n\n\u003cimg width=\"407\" height=\"244\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f35b318a-8e74-4696-9db9-9db46da6cd42\" /\u003e\n\n\u003cimg width=\"533\" height=\"192\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ff370510-ed83-497d-8958-93cd7e349adf\" /\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Visit the Vulnerability details page and check the font size of the CVE header\n\n### ð ï¸ To fix\n\nUpdate the header on the Vulnerability details page to be 24px font size.",
          "number": 31383,
          "repository": "fleetdm/fleet",
          "title": "Vulnerability (CVE) details page: Inconsistent text size",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31383"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgdyYJg",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Vulnerability (CVE) details page: Inconsistent text size",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Hey @mostlikelee @RachelElysia if we have frontend capacity in the current sprint, this one could be a quick one to knock out."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1\n\nThanks @noahtalerman -- will likely get it in 4.73"
          }
        ],
        "issueNumber": 31383,
        "changeType": "added"
      },
      {
        "assignees": [
          "mostlikelee",
          "Illbjorn"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nAfter updating to Fleet 4.71.0, `customer-leiden` is not able to upload any custom installers that are greater than 16MB to their Fleet server. They are using min.io for S3 compatible storage for their software installers.\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n\nTo reproduce you may need to run minio \"not in localhost\" (behind ngrok) so that the AWS SDK attempts to do chunking instead of one giant request with the whole content of the package.\n\n1. Configure a Fleet server running 4.71.0 to use min.io as S3 compatible storage for software installers.\n2. Run a ngrok tunnel to http://localhost:9000/.\nRun Fleet the following way (replace FLEET_S3_SOFTWARE_INSTALLERS_ENDPOINT_URL with your ngrok tunnel URL):\n```\nFLEET_S3_SOFTWARE_INSTALLERS_BUCKET=software-installers-dev \\\nFLEET_S3_SOFTWARE_INSTALLERS_REGION=minio \\\nFLEET_S3_SOFTWARE_INSTALLERS_PREFIX=dev-prefix \\\nFLEET_S3_SOFTWARE_INSTALLERS_ENDPOINT_URL=https://\u003cngrok-tunnel-url\u003e \\\nFLEET_S3_SOFTWARE_INSTALLERS_ACCESS_KEY_ID=minio \\\nFLEET_S3_SOFTWARE_INSTALLERS_SECRET_ACCESS_KEY='minio123!' \\\nFLEET_S3_SOFTWARE_INSTALLERS_FORCE_S3_PATH_STYLE=true \\\n./build/fleet serve --dev --dev_license --logging_debug 2\u003e\u00261 | tee ~/fleet.txt \n```\n3. Upload a .pkg greater than 16MB as a custom package to a Fleet team.\n4. An error will appear that says `api error BadRequest: chunk too big: choose chunk size \u003c= 16MiB`.\n\u003cimg width=\"798\" height=\"103\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/85d03f9d-c377-4aa7-ac81-ad38ce7c6f09\" /\u003e\n\n### ð¯ï¸ More info _(optional)_\n\n- Version reported by customer: minio version `RELEASE.2025-02-28T09-55-16Z` (Community edition.)\n\n- Comment from customer:\n\u003e https://github.com/fleetdm/fleet/blob/main/server/datastore/s3/common_file_store.go#L63\nthey are not using the s3manager which means they cant specify the chunk size\nyeah that means minio is forcing the 16MB chunk size now\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\n\nImplement an upload manager to chunk uploads. PR: #32010\n\nMore context:\n\n\u003cimg width=\"688\" height=\"596\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/44c533ef-9e5e-4de1-9c08-084230eebd04\" /\u003e",
          "number": 31667,
          "repository": "fleetdm/fleet",
          "title": "Unable to upload custom installers greater than 16MB using min.io as S3 compatible storage",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31667"
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdyz6Q",
        "labels": [
          "bug",
          ":product",
          "customer-leiden",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Unable to upload custom installers greater than 16MB using min.io as S3 compatible storage",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@ddribeiro can you provide additional info on how they have min.io deployed?\nI have min.io as part of my docker container setup and do not see this issue, but it may be related to the way it's configured in the environment so any additional information you can provide would be helpful. "
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@jmwatts It sounds like the customer is using the default configuration. See this thread in Slack: https://fleetdm.slack.com/archives/C07NZ7B02AF/p1754576328724309?thread_ts=1754489427.523069\u0026cid=C07NZ7B02AF"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@ddribeiro I found this bug https://github.com/minio/minio/issues/21303\nI'm not 100% sure on what the fix is at the moment, but will continue to try to reproduce. I think I may need an updated minio image in my docker setup. Will consult the team on this one though. Thanks!"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I am still not able to reproduce this issue using the same build of minio that the customer is using. @lucasmrod any thoughts on what else we can try here?"
          },
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "@jmwatts \n\nFinally I was able to reproduce.\n\nIt seems you need to run minio \"not in localhost\" (behind ngrok) so that the AWS SDK attempts to do chunking instead of one giant request with the whole content of the package.\n\n1. Run a ngrok tunnel to http://localhost:9000.\n2. Run Fleet the following way (replace `FLEET_S3_SOFTWARE_INSTALLERS_ENDPOINT_URL` with your ngrok tunnel URL):\n```\nFLEET_S3_SOFTWARE_INSTALLERS_BUCKET=software-installers-dev \\\nFLEET_S3_SOFTWARE_INSTALLERS_REGION=minio \\\nFLEET_S3_SOFTWARE_INSTALLERS_PREFIX=dev-prefix \\\nFLEET_S3_SOFTWARE_INSTALLERS_ENDPOINT_URL=https://\u003cngrok-tunnel-url\u003e \\\nFLEET_S3_SOFTWARE_INSTALLERS_ACCESS_KEY_ID=minio \\\nFLEET_S3_SOFTWARE_INSTALLERS_SECRET_ACCESS_KEY='minio123!' \\\nFLEET_S3_SOFTWARE_INSTALLERS_FORCE_S3_PATH_STYLE=true \\\n./build/fleet serve --dev --dev_license --logging_debug 2\u003e\u00261 | tee ~/fleet.txt \n```\n3. Attempt to upload **custom** software installer larger than ~16 MB."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thank you so much @lucasmrod !!\n\nWas able to reproduce with above steps. "
          },
          {
            "author": {
              "login": "Illbjorn"
            },
            "body": "I believe the solution to this is to use the S3 upload manager to take advantage of chunked uploads as the `PUT` operation reads the entire upload target into memory before starting the upload. See [here](https://github.com/fleetdm/fleet/pull/32010) for more details."
          },
          {
            "author": {
              "login": "Illbjorn"
            },
            "body": "Copied from [here](https://github.com/fleetdm/fleet/pull/32010#discussion_r2282653577), I believe this is the root cause of the problem (conclusion at the bottom).\n\n# RCA\n\nHoly cow that was an adventure...\n- [Here](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1796) is the base PUT object handler.\n- In that function, we [switch on the AWS v4 signature header](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1893-L1906) ([header](https://github.com/minio/minio/blob/master/internal/http/headers.go#L122) key is `X-Amz-Content-Sha256`)\n- If this header has any of the following values, a [signed](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1895) or [unsigned](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1902) chunked reader is used:\n  - `authTypeStreamingSigned` ([value](https://github.com/minio/minio/blob/master/cmd/streaming-signature-v4.go#L43) by way of [this](https://github.com/minio/minio/blob/master/cmd/auth-handler.go#L85-L88))\n  - `authTypeStreamingSignedTrailer` ([value](https://github.com/minio/minio/blob/master/cmd/streaming-signature-v4.go#L44) by way of [this](https://github.com/minio/minio/blob/master/cmd/auth-handler.go#L91-L94))\n  - `authTypeStreamingUnsignedTrailer` ([value](https://github.com/minio/minio/blob/master/cmd/signature-v4-utils.go#L43) by way of [this](https://github.com/minio/minio/blob/master/cmd/auth-handler.go#L97-L100))\n\nNow, looking at AWS SDK v2:\n- The third header above (`X-Amz-Content-Sha256: STREAMING-UNSIGNED-PAYLOAD-TRAILER`) is used [here](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_compute_input_checksum.go#L157-L171) if:\n  - The request is HTTPS\n  - `EnableComputePayloadHash` is true\n- `EnableComputePayloadHash` is set only [here](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_add.go#L85).\n- The above assignment is, itself, set [here](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_add.go#L74) via `EnableComputeSHA256PayloadHash`.\n- The above assignment comes in as an InputMiddlewareOptions[ param](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_add.go#L59).\n\nLooking further for where `EnableComputeSHA256PayloadHash` is assigned (still AWS SDK v2):\n- It's only ever assigned [here](https://github.com/aws/aws-sdk-go-v2/blob/service/s3/v1.81.0/service/s3/api_op_PutObject.go#L990), but it's a static true value assigned.\n- The above is a smithy request middleware, which is added to a middleware stack [here](https://github.com/aws/aws-sdk-go-v2/blob/service/s3/v1.81.0/service/s3/api_op_PutObject.go#L917).\n- The above middleware stack is added from, :tada: , [here ](https://github.com/aws/aws-sdk-go-v2/blob/service/s3/v1.81.0/service/s3/api_op_PutObject.go#L150)(`s3Client.PutObject`).\n\n# Conclusion\n\nSo, I think this means: if the request is over HTTPS, period, the 16MB chunk limitation from MinIO should always present itself.\n"
          }
        ],
        "issueNumber": 31667,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n**Web browser and operating system**: n/a\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nIf I switch to a team that has the software installer but no hosts with that software, the pill for the software name filter still shows and I get \"No hosts match the current criteria\":\n![Image](https://github.com/user-attachments/assets/cf2c427c-0344-4030-be29-9bb4849ed009)\nbut if I switch to a team that doesn't have the software installer added, the pill goes away:\n![Image](https://github.com/user-attachments/assets/18645f92-a406-45f8-98ca-e9640b9cbb92)\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Click on a software title in the fleet software library\n2. Click on the host count so that a filtered view shows for hosts with that software installed\n3. Change the team dropdown to a different team (try one that has an installer added for that software title, and one that does not)\n\n### ð¯ï¸ More info _(optional)_\nLikely existing prior to 4.71.0 but the fix for #26258 uncovered this issue\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n### ð ï¸ To fix\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\nProduct designer: @marko-lisica \n\n- When the user changes team, filter pill should remain (no matter if the team has that software) on the page until user click \"x\" icon inside the pill.\n- Add `software_title` to response of`/api/latest/fleet/hosts?software_title_id=\u003cid\u003e` even when there are no hosts that have this software installed in specific team.\n- If the user shouldn't have access to that software, we can return `software_title.name` so we can display a filter pill on the hosts page.",
          "number": 30340,
          "repository": "fleetdm/fleet",
          "title": "Unable to remove filter if team dropdown selection is changed when viewing host list for an installed software title",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30340"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgdzKe0",
        "labels": [
          "bug",
          "~good first issue",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð£ In progress",
        "title": "Unable to remove filter if team dropdown selection is changed when viewing host list for an installed software title",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Can you confirm existence for \u003c= 4.70? If this is truly unrelease we'll need assistance from another team on getting this fixed I think, due to OOO and such."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx This is the behavior in 4.69.0\nAt first, the filter is there, but eventually it disappears. So I'm not sure whether to call this released or unreleased. The difference in 4.69.0 is that there is a short window where you can remove the filter by clicking the x and then you're no longer looking at a filtered view. That is not possible in the 4.71.0 code path.\nhttps://github.com/user-attachments/assets/23c4dbe2-d794-4f9e-a252-b2a50d5a62b2"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Got it. This feels closer to \"unreleased\" than \"released\" (yay stacked bugs!), but we also need design input on the fix here.\n\nI can think of two options here:\n\nOption 1: Add a filter chip mentioning the software title ID, with the X to remove, e.g. \"Software Title: 123\". We could do this client-side, or could do this server-side with an elided app name.\n\nOption 2: Add a \"reset all filters\" link on the empty state that clears everything out. I can take an initial stab at copy here.\n\n@marko-lisica Which makes sense here?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx @jmwatts I'm looking at dogfood (4.70) and I don't see this behavior. It looks good to me.\n\nhttps://github.com/user-attachments/assets/2f00276d-dad6-4689-9363-f99f848633f5"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@marko-lisica on 4.70 you have to wait on the page a while for it to happen. However, this bug is filed against 4.71.0 where we've fixed the issue where you see the \"Something's gone wrong\" message, but the filter disappears immediately. That is why we're calling this one an unreleased bug.\n\n4.70 Dogfood:\n\nhttps://github.com/user-attachments/assets/a35b879f-1898-4cbe-acbc-dbb2e56e6995"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@jmwatts I think it should work as before. The filter pill should stay on the screen until the user selects \"x\" icon. I'm going to add \"To fix\" section to the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Tricky bit here is that if you navigate to a team that doesn't have a given title and make the API call, delivering the name of the app has some access control implications.\n\nSince we're filtering on software version ID, and some teams don't have that version ID listed anywhere, users limited to those teams would be able to use this endpoint to enumerate installed software versions that they wouldn't normally be able to see, if we just grabbed the software version information as-is without looking at access controls.\n\nWe could remediate this by doing an access control check in the not-found case, and skipping the filter response when the user shouldn't be able to see the filtered software version. That would result in the same \"broken\" screen as above, but doesn't leak any information. Or we could return a 403 like we do when an API client asks for a software version by ID that doesn't exist on the team they're looking at, and that they don't have access to via another team (this is a slight info leak, but we already explicitly do it elsewhere)."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Planning poker: [link](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753879914055519)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding to release board for full stack work"
          }
        ],
        "issueNumber": 30340,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-08-20T07:05:13.169174364Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk80",
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243569811379)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reassigned as I'm behind on sprint work, pending on-call capacity (this might fall back to me if stuff gets busy, TBD)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving this completed subtask to awaiting QA to avoid confusion on the waiting state.   parent story will be ready to test when all subtasks are in"
          }
        ],
        "issueNumber": 31164,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5RY",
        "status": "ð£ In progress",
        "issueNumber": 32042,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "The version reported in osquery is 16.0 but when I look in \"About this Mac\" and System Settings \u003e\u003e General it's 26.0\nIt does get the build right though... 25A5279m"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I try to enforce encryption I'm not seeing the banner instructing me to restart or log out, until I've restarted or logged out. Then it stays there no matter how many times I restart. I'm not seeing the banner clear and even after running the `cleanups_then_aggregation` cron the encryption status isn't updated and it says `unrecognized`:\n\n![Image](https://github.com/user-attachments/assets/f3c0b064-8aae-4c39-9993-bd01af2fbd84)\n\nOn the host, I can see the disk encryption profile in System Settings and Filevault is turned on and a recovery key has been set:\n\n\u003cimg width=\"741\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/013cc568-6b97-4bbb-be68-a458bbbdf56b\" /\u003e\n\n\u003cimg width=\"730\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/986b4c3e-42f2-4b9c-9756-f1acc8e1f302\" /\u003e"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Apple introduced a new Device Migration feature (that only works with the latest OSes) which will move your host from a 3rd party MDM server over to Fleet,  all via ABM. It works! however during the enrollment to Fleet the Setup Experience SwiftDialogue window did not display the software Fleet was installing in the background"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-numa\nmacOS 26 - MDM migration invokes Setup Experience (silently) - awaitconfigured\n\n- Upgraded endpoint to macOS 26 \n- ABM recognizes that\n- Able to set a deadline\n- Device starts to migrate\n- Unenrolled from previous MDM (didnât have to initiate anything)\n- Recognizes that it needs to enroll into Fleet\n- Waiting for âdevice configuredâ command\n- Starts going through setup experience again (calling through all apps, VPP apps, setup script)\n\nExpected behavior: Assume host has all apps already installed. Itâs been previously managed. Itâs not a net new device so it shouldnât run setup experience. VPP apps would get removed from previous MDM so those would be the one thing that should run again\n\nNote from @mostlikelee : Technically, as soon as the device gets the Fleet MDM profile, the apps should come along with it. We should test"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-eponym\nFleet menu bar item doesn't show up after enrollment in beta 2"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet menu not showing after enrollment in macOS 26 beta 2 #6834](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3ec39176-1e2a-49ec-aea4-3c44108d90d0)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Changing MDMs without a deadline doesn't not show a notification on the host. Maybe it takes a lot more time (writing this after waiting for 2-3 hours)"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Hi all ð , any issues directly related to the new MDM migration feature Apple introduced in ABM should be tracked separately here https://github.com/orgs/fleetdm/projects/58/views/9?pane=issue\u0026itemId=119675644\u0026issue=fleetdm%7Cfleet%7C30695\n"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Noticed that MacOS26 isn't getting orbit updates from a local tuf server. WIll retest it later next week and file an issue "
          },
          {
            "author": {
              "login": "reeblybeebly"
            },
            "body": "`customer-thumper` reported several occurrences of a host enrollment issue on macOS Tahoe 26, where the \"setup is complete\" dialog box is blank, as evident in the provided screenshot.\n\n**Fleet Version:** 4.71.1\n**macOS Version:** 26.0 Beta 25A5316i\n\nPotentially related logging pulled from server\n```{\ncalendarTime:Mon Aug 11 14:15:05 2025 UTC\nhostIdentifier:B397E6E6-7985-56BF-9BAC-B297B186F192\nunixTime:1754921705\nquery_id:373\nname:pack/team-2/\u003ccustomer-thumper\u003e usr directory\nnumerics:false\naction:snapshot\nepoch:0\ndecorations:{\nhost_uuid:B397E6E6-7985-56BF-9BAC-B297B186F192\nhostname:10bd3a85e979-mac\n}\ncounter:0\nsnapshot:[\n{\ndirectory_status:Exists\nprimary_user:\u003cuser\u003e\n}\n]\n}\n```\n**Screenshot**\n\n\u003cimg width=\"3024\" height=\"1964\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/876d80db-d518-49f3-bc05-9bd50edcaa27\" /\u003e"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue during macOS 26 onboarding #7769](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/7384f042-079b-4283-a4e7-5e079beb7fc9)"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue with macOS 26 beta 6 (25A5338b) #7782](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/d2c77f6f-b5f2-42be-8b6c-12ae96bfa4fd)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "I went over all the issues reported in this ticket. Grouping them below by whether they have been reproduced or fixed in the next Beta version (currently on Beta 7). I'm still confirming a couple of issues and will update this comment once I'm done with those \n\n**Still applicable:** \n\n- [Setup Experience SwiftDialogue isn't displayed on MacOS26 during the migration](https://github.com/fleetdm/fleet/issues/32096)\n- [Setup experience SwiftDialogue is empty during ADE enrollment](https://github.com/fleetdm/fleet/issues/32099)\n\n**Still investigating:** \n\n- Changing MDMs without a deadline does not show a notification on the host - will be tested as part of this ticket https://github.com/fleetdm/fleet/issues/30695\n \n**Can not reproduce / Fixed:** \n\n- Wrong version is displayed for MacOS 26 hosts\n   - Resolved with an update, but was also tracked here: https://github.com/fleetdm/fleet/issues/30026\n- Disk encryption banner doesn't display and doesn't get cleared\n- MacOS26 isn't getting orbit updates from a local tuf server\n   - Resolved on the latest Beta. Banner is displayed, gets cleared, and the Disk encryption policy status updates as expected, eventually going to Verified \n \n        \u003cimg height=\"1000\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5d84da0d-154a-404e-9ea3-c0148c2c3e5a\" /\u003e\n\n- Fleet menu bar item doesn't show up after enrollment in beta 2\n   - Unable to reproduce this in either of the scenarios: \n      - Fleet installed manually\n      - ADE enrollment\n      - Migration from another MDM server\n- Fleet icon is showing host as offline \n   - Unable to reproduce this in either of the scenarios: \n      - Fleet installed manually\n      - ADE enrollment\n      - Migration from another MDM server\n\n\n"
          }
        ],
        "issueNumber": 30136,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-20T19:04:31.056111791Z",
    "items": [
      {
        "content": {
          "body": "## Related user story\n\n#30738\n\n## Task\n\nChange copy for empty state (if no vulnerabilities detected) on software version details.\n\nWhat Fleet covers link: https://fleetdm.com/guides/vulnerability-processing#coverage\n\n\u003cimg width=\"1148\" height=\"601\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fb4c4055-fb02-4a86-b53d-aa74b4532e85\" /\u003e\n\n## Condition of satisfaction\n\nThe UI is updated per the req above.\n"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv040",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32027,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdL8SA",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet UI scrolling issue on policy automations page #6515](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/e0769c7b-805a-4272-897a-de7c5f7af36b)"
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "Timebox to 1 point."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @marko-lisica ! What a great, simple solution \u003c3\n\nEst: 1"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Was going to evict this bit the fix looks trivial so going to keep in for now."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@RachelElysia I'm still seeing this a bit on the latest RC build.\n\nhttps://github.com/user-attachments/assets/82a6b2ca-ddf5-4475-b171-f3f75c0a2a0f"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Discussed at standup. New behavior will be addressed in a future feature request. \n\nScrolling was improved with this ticket, so ready for release."
          }
        ],
        "issueNumber": 30004,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5qg",
        "status": "ð£ In progress",
        "issueNumber": 32043,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdyYJg",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31383,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdVUIs",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Seems like the `vscode_edition` column serves the same purpose here?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@iansltx oh interesting! Does `vscode_edition` already tell us VS Code v. Cursor v. Windsurf?\n\nIf yes, then it sounds like no osquery changes are needed.\n\nIf not, then I think we stick with a new `ide_type` column. While we're making osquery changes, we take the opportunity to make `vscode_extensions` consistent with the [`chrome_extensions` table](https://fleetdm.com/tables/chrome_extensions).\n\ncc @zwass "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman It doesn't give us that ability right now (because it doesn't have the mapping added for the user data dirs for windsurf/cursor/vscode-oss), but it uses the exact same method to pull the information that we'd use to get that info, so adding a new column would either wind us up with two columns for the exact same info or one column that we'd have to artificially pin to older behavior, complicating dev/maintenance."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "\nAh, I didn't notice the `vscode_edition` column when we discussed this. I agree with @iansltx this should definitely be used to better match the behavior of the `chrome_extensions` table where `edge` vs. `beta` vs. `brave`, etc. are included in the same column."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] Fleet's agent (fleetd) changes: Add 3 new values to the existing column `vscode_edition` to the [`vscode_extensions` osquery table](https://osquery.io/schema/5.18.1/#vscode_extensions). `cursor` can be one of `windsurf`, or `vscode_oss`.\n\n@zwass just chatted with @iansltx and we decided update the specs to use the `vscode_edition` column.\n\nWe also decided to bring in VSCodium which will return `vscode_oss`.\n\nNot sure if other forks (less used) have the same value. Can you please help us do that research? We want to know if `vscode_oss` is VSCodium specific so we can show \"VSCodium\" in the UI/API. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Made some tweaks to the test plan for more accuracy, given that we need a users cross join to get VSCode extensions. The new query is based on [our existing VSCode extensions detail query](https://fleetdm.com/vitals/v-scode-extensions#apple)."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "\u003e Not sure if other forks (less used) have the same value. Can you please help us do that research? We want to know if vscode_oss is VSCodium specific so we can show \"VSCodium\" in the UI/API.\n\nCan we have it return `vscodium` for maximum clarity?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@zwass The pattern of dotfiles dirs is `.vscode-oss`, hence my thought of maintaining the \"hyphens to underscores\" pattern. I'm also not 100% sure whether VSCodium is the only fork that uses that dir naming scheme; mind doing a quick check? If that really _is_ VSCodium specific, fair enough and we can break the pattern to specifically call out that we know VSCodium is the only fork that uses that dir naming convention."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "https://github.com/osquery/osquery/pull/8664\n\nWent with `vscodium` since the server and insiders variants seem to use that. I'm guessing the `vscode-oss` string is a bit of a historical artifact.\n\nIt was also easy to add Trae so I did that."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@zwass Hate to pile on at the last second, but maybe we should include AWS's new Kiro editor in here?"
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "It's an easy change but wouldn't go out til the next osquery release in 6 weeks or so. "
          }
        ],
        "issueNumber": 31476,
        "changeType": "modified"
      },
      {
        "assignees": [
          "Illbjorn"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdyz6Q",
        "issueNumber": 31667,
        "changeType": "modified"
      },
      {
        "assignees": [
          "zwass"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer,\n| I want to see Cursor and Windsurf extensions and their vulnerabilities (CVEs) in Fleet's software inventory\n| so that I can track which hosts have which have vulnerable extensions.\n\n## Roadmap item\n\nNone. \n\n## Original requests\n\n- #30260\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @zwass \n\n## Changes\n\n### Product\n- [x] UI changes: On the **Software** page in Fleet, add these new types: IDE extension (Windsurf|Cursor|VSCodium/VS Code fork); the last type is a fallback for when we know an extension is for VSCode but haven't mapped that particular fork even though osquery returns it (e.g. Trae)\n\nScreenshot below shows the existing \"IDE extension (VS Code)\" type as an example:\n\n\u003cimg width=\"1263\" height=\"424\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/85b15916-e62a-4797-b523-eec610a93955\" /\u003e\n\n  - These new types also show up on the **Software \u003e Versions** page (`/software/versions`), **Software title details** page (`/software/titles/:id`), and **Software version** details page (`/software/versions/:id`). \n  - Screenshots below show the **Software title details** page and **Software version details** page pages for a VS Code extension as examples:\n\n\u003cimg width=\"698\" height=\"453\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f733d96c-ce2a-4a12-a8b0-8c7119f912da\" /\u003e\n\n\u003cimg width=\"848\" height=\"633\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1ed619e7-4652-4147-b2c0-1c8157c3457a\" /\u003e\n\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: No changes.\n- [x] REST API changes: #31760\n\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] Changes to paid features or tiers: Fleet Free and Fleet Premium\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] Other reference documentation changes: No changes\n- [ ] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [ ] Test plan is finalized\n- [ ] Contributor API changes: #31760\n- [ ] Feature guide changes: #31488\n- [ ] Revise host vitals queries for `vscode_extensions` to take edition into account\n- [ ] Revise host vitals queries using `browser` to use `extension_for` as the aliased column\n- [ ] Database schema migrations: Rename `browser` to `extension_for` in the database on `software` and `software_titles`, and use that column for storying VSCode edition\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n- Risk description: We're renaming a column in a hot table, but this should only affect migrations\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n1. Install Cursor, Windsurf, VSCodium, VS Code, and Trae on each of Windows, macOS, and Linux hosts. Install a different but overlapping set of extensions on each editor. At least one extension on each editor fork should have at least one vulnerability.\n2. Enroll the hosts into Fleet using an osquery version new enough to include #31476.\n3. Confirm that each extension shows up as a separate software title for each editor (Software view), and that extensions are inventoried across all OSes (all three OSes should resolve to the same software title for the same extension on the same editor). Trae should be listed as \"IDE extension (VS Code fork)\" to confirm that we have a fallback for any editor forks that we don't explicitly support.\n4. Confirm that extensions are visible and tagged with the associated editor fork in Host details \u003e Software \u003e Inventory and in My device \u003e Software views.\n5. Run vulnerability processing and confirm that a vulnerable extension is marked as such across all editor forks.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 31397,
          "repository": "fleetdm/fleet",
          "title": "Software inventory and vulnerabilities: Add Cursor and Windsurf extensions",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31397"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd1guQ",
        "labels": [
          "story",
          ":release",
          ":help-customers",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "Software inventory and vulnerabilities: Add Cursor and Windsurf extensions",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Does Windsurf even have extensions? Based on some quick research it sounds like no. Does Cursor? Sounds like yes but I'm not sure if it's 100% overlap with VS Code extensions. All VS Code extensions + Cursor specific ones?"
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "I'm using Cursor and AFAIU it uses regular VSCode extensions. It actually offers to import your extensions from VSCode.\n\nI opened up Windsurf and it also seems to use regular VSCode extensions, it says it gets them from https://open-vsx.org/."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@zwass do Cursor and Windsurf extensions have unique vulnerabilities (CVEs) that their VS Code extension equivalent doesn't? \n\nOr do they just have the same CVEs as their equivalent VS Code extensions? For example this [Claude Code CVE](https://nvd.nist.gov/vuln/detail/CVE-2025-52882) affects VS Code, Cursor, and Windsurf extensions. \n\nThe reason I ask is because I think we want to do CVE mapping for Cursor and Windsurf extensions like we do for VS Code: https://github.com/fleetdm/fleet/pull/31488\n\nThe follow up question is, do we do that as part of this story or follow up in a separate story?\n\nMaybe if Cursor and Windsurf extensions just have the same CVEs as their VS Code extensions equivalent (already in Fleet), and/or it's relatively quick to add CVE mapping for Cursor and Windsurf extensions, we do that as part of this story.\n\nWhat do you think?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e For additional UI changes, thinking we want to rename `browser` to `subtype` in the database if we really want to split type out here, so we can use the same column for VSCode vs. a fork like Cursor as we do for Chrome vs. a fork like Edge. Otherwise we wind up running into database design/maintenance messiness.\n\n@iansltx if you get the chance, can you please update the specs with this so @zwass can work off of it?\n\nAlso, can you please move the API design to a PR? Thanks!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Figured out a better field name for what I was getting at: `extension_for`, which works for both browsers and editors, and slots into eventual JetBrains work. `ide` feels super weird here because while JetBrains products are IDEs, VSCode isn't."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @mostlikelee This sould be ready for a likely-async User story review."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @zwass do Cursor and Windsurf extensions have unique vulnerabilities (CVEs) that their VS Code extension equivalent doesn't? \n\u003e \n\u003e Or do they just have the same CVEs as their equivalent VS Code extensions? For example this [Claude Code CVE](https://nvd.nist.gov/vuln/detail/CVE-2025-52882) affects VS Code, Cursor, and Windsurf extensions. \n\u003e \n\u003e The reason I ask is because I think we want to do CVE mapping for Cursor and Windsurf extensions like we do for VS Code: https://github.com/fleetdm/fleet/pull/31488\n\u003e \n\u003e The follow up question is, do we do that as part of this story or follow up in a separate story?\n\u003e \n\u003e Maybe if Cursor and Windsurf extensions just have the same CVEs as their VS Code extensions equivalent (already in Fleet), and/or it's relatively quick to add CVE mapping for Cursor and Windsurf extensions, we do that as part of this story.\n\u003e \n\u003e What do you think?\n\n@iansltx do you know?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman The extensions are still VSCode extensions under the hood, so we would treat them as VSCode extensions for vuln processing. We get this for free because the source column in the database will be vscode_extensions across the board."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @iansltx I unassigned you (specs and API design are done) so it's clear that @zwass is now responsible for moving it forward when Zach has capacity.\n\n@mostlikelee I moved this story to the `:release` board so you can track it there. Up to you to move it to \"Ready for QA\" when the changes are ready to test. This is what we do when Zach is helping build stories for other product groups.\n\ncc @lukeheath "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "cc @ddribeiro ^"
          }
        ],
        "issueNumber": 31397,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-08-21T07:07:47.119461599Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "status": "ð£ In progress",
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdyz6Q",
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@ddribeiro can you provide additional info on how they have min.io deployed?\nI have min.io as part of my docker container setup and do not see this issue, but it may be related to the way it's configured in the environment so any additional information you can provide would be helpful. "
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@jmwatts It sounds like the customer is using the default configuration. See this thread in Slack: https://fleetdm.slack.com/archives/C07NZ7B02AF/p1754576328724309?thread_ts=1754489427.523069\u0026cid=C07NZ7B02AF"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@ddribeiro I found this bug https://github.com/minio/minio/issues/21303\nI'm not 100% sure on what the fix is at the moment, but will continue to try to reproduce. I think I may need an updated minio image in my docker setup. Will consult the team on this one though. Thanks!"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "I am still not able to reproduce this issue using the same build of minio that the customer is using. @lucasmrod any thoughts on what else we can try here?"
          },
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "@jmwatts \n\nFinally I was able to reproduce.\n\nIt seems you need to run minio \"not in localhost\" (behind ngrok) so that the AWS SDK attempts to do chunking instead of one giant request with the whole content of the package.\n\n1. Run a ngrok tunnel to http://localhost:9000.\n2. Run Fleet the following way (replace `FLEET_S3_SOFTWARE_INSTALLERS_ENDPOINT_URL` with your ngrok tunnel URL):\n```\nFLEET_S3_SOFTWARE_INSTALLERS_BUCKET=software-installers-dev \\\nFLEET_S3_SOFTWARE_INSTALLERS_REGION=minio \\\nFLEET_S3_SOFTWARE_INSTALLERS_PREFIX=dev-prefix \\\nFLEET_S3_SOFTWARE_INSTALLERS_ENDPOINT_URL=https://\u003cngrok-tunnel-url\u003e \\\nFLEET_S3_SOFTWARE_INSTALLERS_ACCESS_KEY_ID=minio \\\nFLEET_S3_SOFTWARE_INSTALLERS_SECRET_ACCESS_KEY='minio123!' \\\nFLEET_S3_SOFTWARE_INSTALLERS_FORCE_S3_PATH_STYLE=true \\\n./build/fleet serve --dev --dev_license --logging_debug 2\u003e\u00261 | tee ~/fleet.txt \n```\n3. Attempt to upload **custom** software installer larger than ~16 MB."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Thank you so much @lucasmrod !!\n\nWas able to reproduce with above steps. "
          },
          {
            "author": {
              "login": "Illbjorn"
            },
            "body": "I believe the solution to this is to use the S3 upload manager to take advantage of chunked uploads as the `PUT` operation reads the entire upload target into memory before starting the upload. See [here](https://github.com/fleetdm/fleet/pull/32010) for more details."
          },
          {
            "author": {
              "login": "Illbjorn"
            },
            "body": "Copied from [here](https://github.com/fleetdm/fleet/pull/32010#discussion_r2282653577), I believe this is the root cause of the problem (conclusion at the bottom).\n\n# RCA\n\nHoly cow that was an adventure...\n- [Here](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1796) is the base PUT object handler.\n- In that function, we [switch on the AWS v4 signature header](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1893-L1906) ([header](https://github.com/minio/minio/blob/master/internal/http/headers.go#L122) key is `X-Amz-Content-Sha256`)\n- If this header has any of the following values, a [signed](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1895) or [unsigned](https://github.com/minio/minio/blob/master/cmd/object-handlers.go#L1902) chunked reader is used:\n  - `authTypeStreamingSigned` ([value](https://github.com/minio/minio/blob/master/cmd/streaming-signature-v4.go#L43) by way of [this](https://github.com/minio/minio/blob/master/cmd/auth-handler.go#L85-L88))\n  - `authTypeStreamingSignedTrailer` ([value](https://github.com/minio/minio/blob/master/cmd/streaming-signature-v4.go#L44) by way of [this](https://github.com/minio/minio/blob/master/cmd/auth-handler.go#L91-L94))\n  - `authTypeStreamingUnsignedTrailer` ([value](https://github.com/minio/minio/blob/master/cmd/signature-v4-utils.go#L43) by way of [this](https://github.com/minio/minio/blob/master/cmd/auth-handler.go#L97-L100))\n\nNow, looking at AWS SDK v2:\n- The third header above (`X-Amz-Content-Sha256: STREAMING-UNSIGNED-PAYLOAD-TRAILER`) is used [here](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_compute_input_checksum.go#L157-L171) if:\n  - The request is HTTPS\n  - `EnableComputePayloadHash` is true\n- `EnableComputePayloadHash` is set only [here](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_add.go#L85).\n- The above assignment is, itself, set [here](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_add.go#L74) via `EnableComputeSHA256PayloadHash`.\n- The above assignment comes in as an InputMiddlewareOptions[ param](https://github.com/aws/aws-sdk-go-v2/blob/cdf4c4b3fa27b48a7614c78551f74cbcc0c8ec47/service/internal/checksum/middleware_add.go#L59).\n\nLooking further for where `EnableComputeSHA256PayloadHash` is assigned (still AWS SDK v2):\n- It's only ever assigned [here](https://github.com/aws/aws-sdk-go-v2/blob/service/s3/v1.81.0/service/s3/api_op_PutObject.go#L990), but it's a static true value assigned.\n- The above is a smithy request middleware, which is added to a middleware stack [here](https://github.com/aws/aws-sdk-go-v2/blob/service/s3/v1.81.0/service/s3/api_op_PutObject.go#L917).\n- The above middleware stack is added from, :tada: , [here ](https://github.com/aws/aws-sdk-go-v2/blob/service/s3/v1.81.0/service/s3/api_op_PutObject.go#L150)(`s3Client.PutObject`).\n\n# Conclusion\n\nSo, I think this means: if the request is over HTTPS, period, the 16MB chunk limitation from MinIO should always present itself.\n"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Upload limit fixed,\nLike rivers in the cloud, flow,\nFleet users rejoice."
          }
        ],
        "issueNumber": 31667,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv040",
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "issueNumber": 32027,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdVUIs",
        "labels": [
          "story",
          ":release",
          ":help-customers",
          "customer-numa",
          "#g-software"
        ],
        "issueNumber": 31476,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "status": "ð£ In progress",
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003e **This issue is based on a [Slack message](https://fleetdm.slack.com/archives/C019WG4GH0A/p1755716347111089?thread_ts=1755712252.282599\u0026cid=C019WG4GH0A) from Anthony Maxwell in `#help-engineering`  and may contain confidential information. Issue created by anthonymaxwell**\n\n## Goal\n```\nIt looks like https://github.com/fleetdm/fleet/actions/runs/17104155390/job/48508533130#step:14:804this one\u003e's been failing for a bit. We have https://github.com/Illbjorn/fleet/blob/feat/minio-tls-support/server/vulnerabilities/nvd/cve_test.go#L158-L564statically defined CPE-to-CVE mappings\u003e in there, but are pulling the latest vuln data from https://github.com/Illbjorn/fleet/blob/feat/minio-tls-support/server/vulnerabilities/nvd/cve.go#L79-L117fleetdm/vulnerabilities\u003e + https://github.com/Illbjorn/fleet/blob/feat/minio-tls-support/server/vulnerabilities/nvd/cve.go#L119-L152NVD\u003e. CPE-to-CVE mappings can be updated so I think we need to update this test to seed the database rather than pull latest data.\n```\n\n\u003c!--\n\u003e ##### About this integration\n\u003e - There may or may not be file attachments in the original Slack message.  Either way, they are not included here.\n\u003e - The link to the original Slack message will always break eventually, and may already be broken.  (Slack messages are deleted after 90 days.)\n\u003e - This automation lives in mikermcneil's Zapier account.\n--\u003e\n\n## How?\n- [ ] TODO",
          "number": 11935,
          "repository": "fleetdm/confidential",
          "title": "ð¬ #help-engineering: It looks like https://github.com/fleetdm/fleet/actions/runs/17104155390/job/48508533130#step:14:804this one\u003e's been failing for a bit. We have https://github.com/Illbjorn/fleet/blob/feat/minio-tls-support/server/vulnerabilities/nvd/cve_test.go#L158-L56...",
          "type": "Issue",
          "url": "https://github.com/fleetdm/confidential/issues/11935"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd2PTE",
        "labels": [
          ":help-it-and-enablement"
        ],
        "repository": "https://github.com/fleetdm/confidential",
        "status": "Done",
        "title": "ð¬ #help-engineering: It looks like https://github.com/fleetdm/fleet/actions/runs/17104155390/job/48508533130#step:14:804this one\u003e's been failing for a bit. We have https://github.com/Illbjorn/fleet/blob/feat/minio-tls-support/server/vulnerabilities/nvd/cve_test.go#L158-L56...",
        "comments": [
          {
            "author": {
              "login": "xpkoala"
            },
            "body": "From https://fleetdm.slack.com/archives/C01EZVBHFHU/p1684932349297049\r\n\r\nReed: One of the Windows software entries\r\n``` \r\n{\r\n        \"id\": 5097,\r\n        \"name\": \"Microsoft Edge\",\r\n        \"version\": \"113.0.1774.50\",\r\n        \"source\": \"programs\",\r\n        \"vendor\": \"Microsoft Corporation\",\r\n        \"generated_cpe\": \"cpe:2.3:a:microsoft:edge:113.0.1774.50:*:*:*:*:windows:*:*\",\r\n        \"vulnerabilities\": null,\r\n        \"installed_paths\": [\r\n          \"C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\"\r\n        ]\r\n      },\r\n```\r\nThere are a handful of software entries showing on the page with some including `installed_paths` data and others not. I would expect to see the file paths for software that are sending the information but the column does not exist.\r\n\r\n\u003cimg width=\"1581\" alt=\"image\" src=\"https://github.com/fleetdm/fleet/assets/11012743/36d973ee-17ef-44b9-ae6f-821b09153acd\"\u003e\r\n"
          },
          {
            "author": {
              "login": "xpkoala"
            },
            "body": "In another test I removed all software entries from the `software` table that were connected to the Windows host **except** for one (Edge) which was providing an `installed_paths` value.\r\n\r\nUpon refreshing the page I confirmed the single software entry but I was still not seeing the file path present.\r\n\r\n \r\n![image (1)](https://github.com/fleetdm/fleet/assets/11012743/69c5633e-41e4-4055-be1a-88fbff4820ab)\r\n"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "In nature's embrace,\nPaths revealed, time remembered,\nFleet unites us all."
          }
        ],
        "issueNumber": 11935,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdUpoM",
        "title": "Unfreeze Cloudflare Warp macOS FMA",
        "issueNumber": 31549,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-21T19:04:40.951396584Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP0g",
        "status": "ð¦¤ âIn review",
        "issueNumber": 30238,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv040",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed on kernels pages we show the updated copy and the link works as expected\n\n\u003cimg width=\"1295\" height=\"519\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/11463d20-f927-4cf9-bf99-8d9d377d102b\" /\u003e"
          }
        ],
        "issueNumber": 32027,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "labels": [
          "story",
          ":release",
          "~vulnerability-management",
          "customer-rialto",
          "#g-software"
        ],
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [ ] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [ ] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [ ] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [ ] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [x] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [ ] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [x] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [x] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [ ] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [ ] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [ ] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [ ] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [x] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [ ] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [ ] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [x] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [x] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [x] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [x] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [x] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [ ] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [ ] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [ ] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n- [ ] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n\n### Engineering\n\n - [ ] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [ ] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [ ] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [ ] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [ ] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [ ] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [ ] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [ ] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [ ] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [ ] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [ ] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.72.0\n\n**Web browser and operating system**: \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nVulns that should show up for RHEL (CentOS and Fedora) OS' Linux kernels are not shown in Fleet.\n\n### ð ï¸ To fix\n\nImplement support for scanning vulns on kernels from RHEL based OS. \n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Enroll a RHEL (CentOS or Fedora) host in Fleet. \n2. Run vulns processing\n3. Note that the Linux kernel shows up as software for this host, but does not have any vulnerabilities.\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdhCgY",
        "issueNumber": 31495,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "* @noahtalerman: *User requested this because* they want to define `labels_` in `team-name.yml` for custom packages in order to apply different label-based scoping across teams **without duplicating software-package definitions**. This scoping pattern is already used for App Store apps, Fleet-maintained apps, and configuration profiles, and users expect consistency.\n\n  * @noahtalerman: *In the interim* can duplicate software-package definitions across teams, which is inefficient and error-prone. This inconsistency has already caused incorrect self-service exposure and misconfigured devices due to mismatched profile scoping.\n\n  * @noahtalerman: *Eventually* Fleet could restore support for `labels_` in `team-name.yml` for custom packages, to bring custom packages in line with existing GitOps patterns and reduce unnecessary duplication across GitOps configurations.\n\n---\n\n### User stories\n\n- #30095\n",
          "number": 29567,
          "repository": "fleetdm/fleet",
          "title": "Revert back to allowing labels_ to be defined in team-name.yml",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/29567"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd4nFM",
        "labels": [
          "~gitops",
          ":release",
          "#g-software",
          "~core"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Revert back to allowing labels_ to be defined in team-name.yml",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "## Problem\n\nI used to be able to define by label scoping for custom packages in my `team-name.yml` files. It seems with the release of 4.68.0 this has been moved to the `software-package.yml` files. From the docs (which has a typo that needs to be fixed):\n\n\u003e Currently, for Fleet-maintained apps and App Store (VPP) apps, the labels_ and categories keys are specified in the team YAML (teams/team-name.yml, or teams/no-team.yml). For custom packages, they keys are specified in the package YAML (lib/software-name.package.yml).\n\n`labels_` needs to be defined in the `team-name.yml` file because I need different scoping depending on the team and I don't want to create multiple software entries for the same software title just to support this scoping requirement. I also want a consistent experience with scoping in gitops. For example, configuration profiles are scoped by using the `labels_` in my `team-name.yml` files. App Store apps and FMAs are also scoped by using the `labels_` in my `team-name.yml`.\n\nI was also given no warning of this change which led to users seeing software in self-service that they should not be running and that won't be configured correctly since they aren't in scope of the related configuration profiles.\n\n## What have you tried?\n\nN/A - this worked prior to 4.68.0.\n\n## Potential solutions\n\nRevert whatever change moved `labels_` to only being supported in software-package.yml files\n\n## What is the expected workflow as a result of your proposal?\n\nI can use `labels_` in my `team-name.yml` files to support custom scoping across my teams without needing to create multiple `software-package.yml` files."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@allenhouchins heads up that we decided to push [the user story](https://github.com/fleetdm/fleet/issues/30095) associated with this request out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240 \n- https://github.com/fleetdm/fleet/issues/27983 \n\nWe'll come back to this request soon.\n\ncc @zayhanlon @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "#30095 covers fixing this so I'm pulling this onto the board with the `fleetctl gitops` work as the parent. No estimate as work is already accounted for in the parent ticket estimate."
          }
        ],
        "issueNumber": 29567,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdg7ps",
        "title": "Error when viewing details for CVE-2025-36350 and CVE-2025-36357",
        "issueNumber": 31474,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-22T07:04:53.833636837Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdhCgY",
        "status": "ð£ In progress",
        "issueNumber": 31495,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5qg",
        "status": "ð¦¤ âIn review",
        "issueNumber": 32043,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica (/cc @mostlikelee) We have three issues that'll need product direction here.\\, based on some initial research.\n\nIn descending order of magnitude:\n\n## Multiple kernels\n\nLinux hosts generally have multiple kernels installed, though only one is active at a time. How do we want to handle this, given that a host can be actively using an older/vulnerable kernel, or that kernel may be available but not loaded, and we won't be able to tell one way or the other based on software inventory (we _can_ based on the `kernel_info` table but we don't currently inventory that)?\n\nFor example, I cross-referenced `kernel_info` version with inventoried packages on Dogfood to see how Linux hosts there lined up:\n\n* [fedora 41](https://dogfood.fleetdm.com/hosts/1348) - `kernel-core` RPM package (`kernel` would work too but doesn't on the other host; was running the later of multiple versions)\n* [ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1319) - `linux-image-*-generic` (`linux-image-generic-hwe-*` returned one of the two kernels, and not the one the host was actually running)\n* [another fedora 41](https://dogfood.fleetdm.com/hosts/1318) - `kernel-core` RPM package (was running the older kernel)\n* [another ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1267) - `linux-image-*-genreric` (was running the older kernel IIRC)\n\nAll of the above hosts have more than one kernel version installed, and it's a toss-up on whether a given host is using the latest installed kernel or some other one (using `kernel_info` as the source of truth). The two Ubuntu hosts have quite different kernel versions installed as well between each other.\n\n## No kernel\n\nHow do we want to handle Linuxes that don't have a kernel? Linux running in a container shares the host kernel, so won't have kernel vulnerabilities of its own. I'm assuming we need to show these hosts in the OS list UI, but we'll need to communicate that no, those hosts didn't have a kernel of their own, so there won't be kernel-level vulns inside the container, though the host might have some. For example, `SELECT * FROM kernel_info` on an Ubuntu container running in Docker for Mac gets me a kernel version of `6.10.14-linuxkit`, which won't match anything in OVALs for the OS inside the container.\n\n## Where to display kernel version\n\nThinking we want to just show the kernel version, and only the version number part of it (so, software `version` field), as part of the Version column in the OS list, leaving the OS name as-is. This will mean that there will be multiple rows for the same OS name, but that's probably still cleaner than having two versions in the name line."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Temporarily assigning this to @marko-lisica we I'm blocked on decisions about no-kernel/multi-kernel. I'll self-assign to continue spec'ing once unblocked."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "FYI @marko-lisica I'm baking in the assumption that individual CVE UIs do _not_ change as part of this story, so we won't be showing Linux OSes in the Operating Systems section of individual vulns. The vulnerability affected hosts will be fully covered in the software section anyway (for each kernel) so we aren't hiding information here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "For reference: per discussions yesterday, we're keeping the OS list to one item per OS version, rolling up all kernel vulns into that single entry, and splitting out kernels when viewing a single OS version's details. This ensures that hosts aren't double-counted in list views when they have multiple kernels installed, and aren't skipped when they have no kernel of their own."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Two pieces of feedback from @jmwatts as we were walking through UI/test plans today (corresponding to Figma comments):\n\n1. Add a dev note or example UI row indicating \"view all hosts\" when kernel rows are rolled over\n2. Add help text above the kernels list (inside the kernels card) explaining why host counts are expected to not sum up from kernels to the overall number. Something like:\n\n\u003e Each Linux host may have multiple kernels instealled. Containerized and paravirtualized hosts do not have a kernel of their own.\n\n@jmwatts Let me know if we need to explicitly say \"host counts won't sum up\" or whether the above is enough."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @iansltx @jmwatts, thanks for the feedback.\n\nI added few more dev notes in Figma:\n\u003cimg width=\"921\" height=\"887\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/524bb7a9-33fc-47f3-88be-8e41ad922db6\" /\u003e\n\n "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch.\n2. Enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. \n3. Enroll a Linux host in a container with a different OS version unique to that container.\n4. Run vulnerabilities + cleanups/aggregations jobs.\n- [x] Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n- [x] Confirm that the API response populates the vulnerabilities key for Linux OS versions.\n- [ ] Navigate to a Linux OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version.\n- [ ] Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n- [ ] Clicking the host count on the kernel card should navigate to the host list filtered by OS\n- [ ] Clicking \"view all hosts\" in this card should navigate to a host list filtered by kernel. \n- [ ] Confirm that the API response for the individual OS version includes vulnerabilities and kernels entries, with kernels format matching what you'd see in software_title.versions[] when viewing an individual software title.\n- [ ] Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nNOTES: \nRemoved: On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show ---. #31495"
          }
        ],
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpos",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n- [x] Reviewed updates"
          }
        ],
        "issueNumber": 31215,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOeo",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @AndreyKizimenko, this works as intended. Please look at [this dev note](https://www.figma.com/design/j2M1heOh8eZD6LcUJks6HE/-9956-Add-multiple-Apple-Business-Manager-and-Volume-Purchasing-Program-connections?node-id=5530-8689\u0026t=D4pAdmkTE5HFzdo8-11) and the others related to team selection.\n\nI'm closing this one. Let me know if that makes sense to you."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "\"All Teams\" lost sight,\nIn dropdown's clouded height,\nRestored, it takes flight."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Hi @marko-lisica, this is on me, could've definitely described it better. I understand the reason why we want to hide All Teams, the issue that I'm seeing is that it isn't brought back when the user removes individual teams. You can see on the screenshot bellow that no team is selected by All Teams is still missing. \n\n\u003cimg width=\"823\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7a59eda1-8bab-4e63-b5ad-4448bdd8bb8b\" /\u003e"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "I'm also re-reading through the dev notes and I'm not sure whether we are referring about removing an option from the dropdown or just clearing it out from the selection. Selecting All Teams clears out individual teams from the selection and the other way around, selecting any team while you have All Teams clears out All Teams, which I think matches what design is describing. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@AndreyKizimenko Do you have one or more VPP tokens? Not sure, but the reason why you don't see \"All teams\" might be that you already selected some team for another VPP token.It would be easier for me to understand if you could record the behavior you observe and believe is a bug."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "@marko-lisica No, another VPP token doesn't have any teams assigned. Attaching a video with the whole flow \n\nhttps://github.com/user-attachments/assets/b453a5f2-38dd-4473-bb16-d89981748ae5"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Thanks @AndreyKizimenko! I just specified a fix in the `ð ï¸ To fix` section in the issue description. Let me know if that solves the problem. "
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Yeah, I think this will solve it. Thank you, Marko! "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Obtain a VPP token\n2. Go to: https://andrey.ngrok.app/settings/integrations/mdm/vpp\n3. Add the token\n4. Select Actions \u003e Edit teams \u003e Select any team \u003e Save5.\n5. Reopen\n6. Remove the previously selected individual team\n\n- [x] Ensure \"All teams\" is an available option\n- [x] Ensure if other teams are selected \"All teams\" is still an available option\n- [x] Ensure if \"All teams\" is selected, adding individual teams removes \"All teams\" and only selects individual teams\n- [x] Ensure if \"All teams\" is selected and then removed, no teams are assigned the VPP token"
          }
        ],
        "issueNumber": 30357,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @lukeheath marking this story as `P2`. The current behavior makes it look like Fleet does not understand how people actually use CVSS.  But now we do."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "TODO RAchel: first draft of test plan"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Just filled in this story checklist so it's ready for User Story Review (credit to @RachelElysia for the test plan)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "assigning to @RachelElysia to estimate"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@lukeheath needs your estimate here and we can move it to the software board"
          },
          {
            "author": {
              "login": "jacobshandling"
            },
            "body": "For everyone's info, I was asked to estimate this this morning and estimated it at a 4. Looks like changing the project removed the estimate. @sharon-fdm @mostlikelee "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh no that's my bad.  we discussed in sprint kickoff review that Luke is going to take this one @jacobshandling "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "I'll assign a 4 here and move it to the software board for Luke"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Might be minimal extra work to solve #30524 alongside this since filter + sort seems like it would be sufficient there. Maybe dev this with that request in mind and check with the customer to see whether that solves their issue?"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "removing milestone.  will not get to this story this sprint"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath Can you create Sprint 45 and move this into it?"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@RachelElysia Thanks for taking this. I thought I'd be able to squeeze it in, but wasn't able to."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n- [x] Min max is present and new help text is present\n- [x] Min max is enabled only if vuln software toggle is enabled\n- [x] Defaults to \"Any severity\"\n- [x] If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n- [x] If a user clicks on \"Any severity\", the min and max are cleared\n- [x] If a user clicks on \"Custom severity\", the min and max do not change\n- [x] If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n- [x] If a user clears both custom min/max, the dropdown will change to \"Any severity\" but returns to \"Custom severity\" if they start typing\n- [x] If the user hits apply with no severity entered, it will apply any severity\n- [x] If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n- [x] If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n- [x] If the user types in an invalid number into either min/max (e.g. 4.11 or -3), the in label error states it must be a number between 0-10 with an increment of 0.1\n- [x] 12b. The user cannot type in string as the input is limited to type number\n- [x] If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n- [x] By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n- [x] Clearing the filter should show all software\n\n@RachelElysia Questions:\nâ The Figma appears to show placeholder text but I don't see any in the UI - should that be there?\nâ The modal accepts 010 as a number - should it?\nâ If I enter 10 in the max, it clears it out on save - should it?\nâ If I set the filter to \"Critical Severity\" it changes it to \"Custom Severity\" on save and clears out the max value - should it?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Thanks @jmwatts for your thoroughness!\n\nâ The Figma appears to show placeholder text but I don't see any in the UI - should that be there?\nIt should, putting in a followup PR for this\n\nâ The modal accepts 010 as a number - should it?\nLooking at this, I would have to add a check to `InputField` `type number`'s `onInputChange` function, but I'd be worried it might be too restrictive if someone needs to use input field with leading zeros? It feels hacky, so I think we should only add this into  `InputField` `type number`'s `onInputChange` function if it prevents a bug, but the UI/API kindly handles 0003 so I think it's okay to leave it in. Thoughts @marko-lisica \n\nâ If I enter 10 in the max, it clears it out on save - should it?\nI did this to minimize the number of unnecessary parameters passed, like if they input 0 and 10, it really means no cvss custom range... but if it's causing Critical Severity to change to custom, it's buggy. so I'll add it back in and only clear both min and max if both values are set (\"0\" and \"10\")\n\nâ If I set the filter to \"Critical Severity\" it changes it to \"Custom Severity\" on save and clears out the max value - should it?\nIt should stay Critical Severity, putting in a followup PR for this"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "\u003e Looking at this, I would have to add a check to InputField type number's onInputChange function, but I'd be worried it might be too restrictive if someone needs to use input field with leading zeros? It feels hacky, so I think we should only add this into InputField type number's onInputChange function if it prevents a bug, but the UI/API kindly handles 0003 so I think it's okay to leave it in. Thoughts @marko-lisica\n\n@RachelElysia Sounds good to me.\n\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n- [x] Min max is present and new help text is present\n- [x] Min max is enabled only if vuln software toggle is enabled\n- [x] Defaults to \"Any severity\"\n- [x] If a user clicks on a given severity like \"Critical severity\", the min and max will be auto populated\n- [x] If a user clicks on \"Any severity\", the min and max are cleared\n- [x] If a user clicks on \"Custom severity\", the min and max do not change\n- [x] If a user types in a custom min or custom max, the dropdown will change to \"Custom severity\"\n- [x] If a user clears both custom min/max, the dropdown will change to \"Any severity\" but returns to \"Custom severity\" if they start typing\n- [x] If the user hits apply with no severity entered, it will apply any severity\n- [x] If the user clicks apply with only a min entered, it will only apply the min (e.g. \u003e=4.0)\n- [x] If the user clicks apply with only a max entered, it will only apply the max (e.g. \u003c= 8.0)\n- [x] If the user types in an invalid number into either min/max (e.g. 4.11 or -3), the in label error states it must be a number between 0-10 with an increment of 0.1\n- [x] 12b. The user cannot type in string as the input is limited to type number\n- [x] If the user types in a min larger than the max, the Apply button is disabled with a tooltip stating that the min can not be greater than the max.\n- [x] By clicking \"Apply\", the severity ranges will filter results to only vulnerable software with severity scores in the selected range\n- [x] Clearing the filter should show all software\n\n\n- [x] Placeholder text is now shown \n- [x] The modal accepts 010 as a number\n- [x] If I enter 10 in the max, it does not clear it out on save\n- [x] If I set the filter to \"Critical Severity\" it no longer changes to \"Custom Severity\" on save or clears out the max value \n- [x] Running Fleet \"Free\" only shows \"Vulnerable software\" toggle for /software/titles, /hosts/id/software, and the My device \u003e\u003e Software pages, and does not show additional filters\n- [x] Running Fleet \"Premium\" shows additional filter items for /software/titles and /hosts/id/software pages, and then the My device \u003e\u003e Software page does not show additional filters\n- [x] Additional filters show for observer, maintainer, and admin roles"
          }
        ],
        "issueNumber": 30248,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdUaqU",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica FYI we already have `\"last_opened_at\": null` on the API for installed app versions that haven't been opened, so no API changes required here. Revised the ticket template to reflect this.\n\nGoing to include a separate comment with more specific instructions on all I'm pretty sure we need to do, to see if I can feed this into Zed + Sonnet 4 and have it one-shot this :)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "All we need to do for this is\n\n1. Show `Never` rather than `---` on the column when the API field is null and `source` is `programs` or `apps` (those are the two sources where we have last opened time info), in `HostSoftwareTableConfig.tsx`\n2. Show `Never` rather than skipping the \"Last used\" field in `SoftwareDetailsModal.tsx` and `InventoryVersion.tsx` when the API field is null and `source` is programs or `apps`\n3. Rename \"Last used\" to \"Last opened\" in all three places, and remove the tooltip wrapper in `HostSoftwareTableConfig.tsx`\n4. Update tests in `SoftwareDetailsModal.tests.tsx` to reflect the above changes"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Mind pulling down the `ð¤-31268` branch and seeing if that gets us what we want here?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tweaks needed:\n\n* When showing multiple versions, show \"Never\" if all versions don't have an opened time and each individual version would've shown \"Never\"\n* Don't use the grey color for \"Never\" (but keep it for `---`)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica \n\n\u003cimg width=\"808\" height=\"342\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20422141-d1eb-445e-9c12-92edd366c242\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review, we're showing \"Not supported\" rather than \"---\" for sources where we don't support last opened time. Updated the screenshot in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia Where do these map to in the UI?\n\nfrontend/pages/hosts/details/cards/Software/SoftwareDetailsModal/SoftwareDetailsModal.tsx\nfrontend/pages/hosts/details/components/InventoryVersions/InventoryVersions.tsx\n\nI think I'm missing a case in the test plan to cover both of these."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Fixed the screenshot to show both cases."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Found the other place where last opened time is: My device \u003e Software. Test plan is updated. Ping when the test plan is good to go; code's already written (by me) so this will land directly on the release board once the test plan is good to go."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan is good to go, tried to move it to the release board, wouldn't budge. GitHub is defiant today. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given #31638 is landing soon, updated the spec here (and code in the PR) to include `deb_packages` and `rpm_packages` in supported software types. Support for the additional package types will land in osquery before 4.73 is out, and 4.73 will include detail query updates for support here, so RPM/DEB last-opened-at can be tested as part of QA for #27902."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          }
        ],
        "issueNumber": 31268,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdMZs8",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\n\u003cimg width=\"697\" height=\"262\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/66df103f-b840-4d35-ac61-62b442934c0f\" /\u003e"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e FYI @marko-lisica @mostlikelee I assigned Tim. Up to Tim to bring this through estimation.\n\nCorrect, i'm DRI for anything Ready for Spec onward.   In many cases I'll delegate in those cases i'll re-assign the story."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta This is now spec'd; estimate is capacity allocation for my review. Feel free to self-assign (for some reason GitHub is fighting my ability to assign this to you), move from Waiting to In progress, and assign me for PR review when it's up. Thanks again!"
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "I'm not a collaborator on the repository or part of the organization/team with write access, so GitHub isnât letting me self-assign this issue"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Got it, that makes sense that I wasn't able to either. Either way, this is yours to move forward with as/when you see fit."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Apparently there's a weird GitHub idiosyncrasy (bug? anti-abuse measure?) where external folks have to comment on the issue before they show up as a potential assignee, so your comment actually allowed me to assign you, which I've done. Thanks @lukeheath for assisting with troubleshooting that one :)\n\nMoving this to Ready now, and you can move to In progress when you're actively working on it."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Hey! Iâve started work on this â PR here: [#31370](https://github.com/fleetdm/fleet/pull/31370).  \nI've updated the PR description to reference this issue instead, as itâs the more accurate one.  \nAlso, I donât have permission to move the issue to âIn progress,â just FYI. Let me know if anything else is needed. Thanks!\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Thanks! Didn't know that had already been approved. I've gone ahead and merged it and am moving this to Awaiting QA."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Thanksðð¤"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nNavigate to /software/vulnerabilities/\u003ccve_that_isn't_detected\u003e\n\n- [x] Verify that CVE number is included in the copy in empty state in both Fleet Free and Premium.\n\nFree:\n\u003cimg width=\"1249\" height=\"322\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cf6ec51d-d3b6-4159-84fd-ac0e0aaa5253\" /\u003e\n\nPremium:\n\u003cimg width=\"1246\" height=\"304\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c7b78188-5775-4880-b24e-f6c440d649c5\" /\u003e"
          }
        ],
        "issueNumber": 31377,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdqQM4",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding `customer-numa` as they recently requested last_opened_at on windows"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          }
        ],
        "issueNumber": 31932,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jmwatts"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to see the last time my end users opened Linux software\n| so that I can understand whether or not my end users are actually using the licensed software that my organization pays for and if not, reduce the number of licenses.\n\n## Roadmap item\n\nNone.\n\n## Original requests\n\n+ https://github.com/fleetdm/fleet/issues/27087\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @iansltx \n\n## Changes\n\n### Product\n- [x] UI changes: \n\nOn the **Host details \u003e Software**, **My device \u003e Software**, and **My device \u003e Self-service** (in the \"Install details\" modal) pages:\n![Image](https://github.com/user-attachments/assets/8d0d1551-d5bd-48b5-b00e-e12d37beef2a)\n- @noahtalerman: Instead of \"Last used\" we now say \"Last opened\"\n\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: No changes\n- [x] REST API changes: \n  - In the API endpoints that power the Host details and My device pages, the `last_opened_at` property is now supported (can be not `null`) for software with the `source`, `deb_packages` \u0026 `rpm_packages`\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] Changes to paid features or tiers: No changes\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] Other reference documentation changes: No changes\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: TODO \u003c!-- Specify changes in the the Contributor API doc page as a PR to reference docs release branch following the guidelines in the handbook here: https://fleetdm.com/handbook/product-design#drafting Put \"No changes\" if there are no changes necessary. --\u003e\n- [ ] Feature guide changes: TODO \u003c!-- Specify if a new feature guide is required at fleetdm.com/guides, or if a previous guide should be updated to reflect feature changes. --\u003e\n- [ ] Database schema migrations: TODO \u003c!-- Specify what changes to the database schema are required. (This will be used to change migration scripts accordingly.) Remove this checkbox if there are no changes necessary. --\u003e\n- [ ] Load testing: TODO  \u003c!-- List any required scalability testing to be conducted.  Remove this checkbox if there is no scalability testing required. --\u003e\n- [ ] Load testing/osquery-perf improvements: TODO \u003c!-- List, or link a subtask for, any osquery-perf or load test environment changes required to comprehensively load test this story if load testing is needed. --\u003e\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: TODO \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low / High TODO \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: TODO \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n- [ ] Open the .deb package and verify that the \"Last opened\" time is updated.\n  - \"Last opened\" shows up on the Host details \u003e Software, My device page \u003e Software, My device \u003e Self-service \n- [ ] Install the .deb package in a couple different locations with a couple different versions. Verify that you see a unique \"Last opened\" time for each location (path) or version.\n- [ ] Install a .deb package and don't open it. Verify that Fleet shows \"Never\" for \"Last opened\"\n- [ ] Repeat the above for .rpm packages\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 32171,
          "repository": "fleetdm/fleet",
          "title": "Last opened time for Linux software",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32171"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd5V9o",
        "labels": [
          "story",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "â Ready for release",
        "title": "Last opened time for Linux software",
        "issueNumber": 32171,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdnBvc",
        "title": "Software inventory: See last time Linux software was used",
        "issueNumber": 27902,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-22T19:04:34.302901543Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5qg",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Fleetctl now responds,\nMDM commands clearer,\nLike a cloud's soft dawn."
          }
        ],
        "issueNumber": 32043,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdzKe0",
        "status": "ð£ In progress",
        "issueNumber": 30340,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          "P2",
          "#g-software",
          "customer-coppelia"
        ],
        "issueNumber": 30853,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdUaqU",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica FYI we already have `\"last_opened_at\": null` on the API for installed app versions that haven't been opened, so no API changes required here. Revised the ticket template to reflect this.\n\nGoing to include a separate comment with more specific instructions on all I'm pretty sure we need to do, to see if I can feed this into Zed + Sonnet 4 and have it one-shot this :)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "All we need to do for this is\n\n1. Show `Never` rather than `---` on the column when the API field is null and `source` is `programs` or `apps` (those are the two sources where we have last opened time info), in `HostSoftwareTableConfig.tsx`\n2. Show `Never` rather than skipping the \"Last used\" field in `SoftwareDetailsModal.tsx` and `InventoryVersion.tsx` when the API field is null and `source` is programs or `apps`\n3. Rename \"Last used\" to \"Last opened\" in all three places, and remove the tooltip wrapper in `HostSoftwareTableConfig.tsx`\n4. Update tests in `SoftwareDetailsModal.tests.tsx` to reflect the above changes"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Mind pulling down the `ð¤-31268` branch and seeing if that gets us what we want here?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tweaks needed:\n\n* When showing multiple versions, show \"Never\" if all versions don't have an opened time and each individual version would've shown \"Never\"\n* Don't use the grey color for \"Never\" (but keep it for `---`)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica \n\n\u003cimg width=\"808\" height=\"342\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20422141-d1eb-445e-9c12-92edd366c242\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review, we're showing \"Not supported\" rather than \"---\" for sources where we don't support last opened time. Updated the screenshot in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia Where do these map to in the UI?\n\nfrontend/pages/hosts/details/cards/Software/SoftwareDetailsModal/SoftwareDetailsModal.tsx\nfrontend/pages/hosts/details/components/InventoryVersions/InventoryVersions.tsx\n\nI think I'm missing a case in the test plan to cover both of these."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Fixed the screenshot to show both cases."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Found the other place where last opened time is: My device \u003e Software. Test plan is updated. Ping when the test plan is good to go; code's already written (by me) so this will land directly on the release board once the test plan is good to go."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan is good to go, tried to move it to the release board, wouldn't budge. GitHub is defiant today. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given #31638 is landing soon, updated the spec here (and code in the PR) to include `deb_packages` and `rpm_packages` in supported software types. Support for the additional package types will land in osquery before 4.73 is out, and 4.73 will include detail query updates for support here, so RPM/DEB last-opened-at can be tested as part of QA for #27902."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "meeting scheduled for Monday"
          }
        ],
        "issueNumber": 31268,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdqQM4",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding `customer-numa` as they recently requested last_opened_at on windows"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "meeting scheduled for Monday"
          }
        ],
        "issueNumber": 31932,
        "changeType": "modified"
      },
      {
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "issueNumber": 31165,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-23T07:05:00.36126603Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica (/cc @mostlikelee) We have three issues that'll need product direction here.\\, based on some initial research.\n\nIn descending order of magnitude:\n\n## Multiple kernels\n\nLinux hosts generally have multiple kernels installed, though only one is active at a time. How do we want to handle this, given that a host can be actively using an older/vulnerable kernel, or that kernel may be available but not loaded, and we won't be able to tell one way or the other based on software inventory (we _can_ based on the `kernel_info` table but we don't currently inventory that)?\n\nFor example, I cross-referenced `kernel_info` version with inventoried packages on Dogfood to see how Linux hosts there lined up:\n\n* [fedora 41](https://dogfood.fleetdm.com/hosts/1348) - `kernel-core` RPM package (`kernel` would work too but doesn't on the other host; was running the later of multiple versions)\n* [ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1319) - `linux-image-*-generic` (`linux-image-generic-hwe-*` returned one of the two kernels, and not the one the host was actually running)\n* [another fedora 41](https://dogfood.fleetdm.com/hosts/1318) - `kernel-core` RPM package (was running the older kernel)\n* [another ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1267) - `linux-image-*-genreric` (was running the older kernel IIRC)\n\nAll of the above hosts have more than one kernel version installed, and it's a toss-up on whether a given host is using the latest installed kernel or some other one (using `kernel_info` as the source of truth). The two Ubuntu hosts have quite different kernel versions installed as well between each other.\n\n## No kernel\n\nHow do we want to handle Linuxes that don't have a kernel? Linux running in a container shares the host kernel, so won't have kernel vulnerabilities of its own. I'm assuming we need to show these hosts in the OS list UI, but we'll need to communicate that no, those hosts didn't have a kernel of their own, so there won't be kernel-level vulns inside the container, though the host might have some. For example, `SELECT * FROM kernel_info` on an Ubuntu container running in Docker for Mac gets me a kernel version of `6.10.14-linuxkit`, which won't match anything in OVALs for the OS inside the container.\n\n## Where to display kernel version\n\nThinking we want to just show the kernel version, and only the version number part of it (so, software `version` field), as part of the Version column in the OS list, leaving the OS name as-is. This will mean that there will be multiple rows for the same OS name, but that's probably still cleaner than having two versions in the name line."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Temporarily assigning this to @marko-lisica we I'm blocked on decisions about no-kernel/multi-kernel. I'll self-assign to continue spec'ing once unblocked."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "FYI @marko-lisica I'm baking in the assumption that individual CVE UIs do _not_ change as part of this story, so we won't be showing Linux OSes in the Operating Systems section of individual vulns. The vulnerability affected hosts will be fully covered in the software section anyway (for each kernel) so we aren't hiding information here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "For reference: per discussions yesterday, we're keeping the OS list to one item per OS version, rolling up all kernel vulns into that single entry, and splitting out kernels when viewing a single OS version's details. This ensures that hosts aren't double-counted in list views when they have multiple kernels installed, and aren't skipped when they have no kernel of their own."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Two pieces of feedback from @jmwatts as we were walking through UI/test plans today (corresponding to Figma comments):\n\n1. Add a dev note or example UI row indicating \"view all hosts\" when kernel rows are rolled over\n2. Add help text above the kernels list (inside the kernels card) explaining why host counts are expected to not sum up from kernels to the overall number. Something like:\n\n\u003e Each Linux host may have multiple kernels instealled. Containerized and paravirtualized hosts do not have a kernel of their own.\n\n@jmwatts Let me know if we need to explicitly say \"host counts won't sum up\" or whether the above is enough."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @iansltx @jmwatts, thanks for the feedback.\n\nI added few more dev notes in Figma:\n\u003cimg width=\"921\" height=\"887\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/524bb7a9-33fc-47f3-88be-8e41ad922db6\" /\u003e\n\n "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch.\n2. Enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. \n3. Enroll a Linux host in a container with a different OS version unique to that container.\n4. Run vulnerabilities + cleanups/aggregations jobs.\n- [x] Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n- [x] Confirm that the API response populates the vulnerabilities key for Linux OS versions.\n- [ ] Navigate to a Linux OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version.\n- [ ] Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n- [x] Clicking the host count on the kernel card should navigate to the host list filtered by OS\n- [x] Clicking \"view all hosts\" in this card should navigate to a host list filtered by kernel. \n- [ ] Confirm that the API response for the individual OS version includes vulnerabilities and kernels entries, with kernels format matching what you'd see in software_title.versions[] when viewing an individual software title.\n- [ ] Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nNOTES: \nRemoved: On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show ---. #31495"
          }
        ],
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdvjTs",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31283,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpok",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962273099)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jakestenger this is a subtask.  you'll want to add customer labels to the parent story"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Larger customer environments are 50-125k linux hosts. Will spin up load test environment to evaluate vulnerability processing times and page loads. "
          }
        ],
        "issueNumber": 31214,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-25T07:05:44.810154514Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCn44",
        "status": "Waiting",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753681073584279)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This is built, but doesn't make sense to review until underlying backend work is done, and that work doesn't make sense to review until #30095 is in."
          }
        ],
        "issueNumber": 31207,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoAQ",
        "status": "ð£ In progress",
        "issueNumber": 30849,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnxU",
        "status": "ð£ In progress",
        "issueNumber": 31206,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd4nFM",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð¦¤ âIn review",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "## Problem\n\nI used to be able to define by label scoping for custom packages in my `team-name.yml` files. It seems with the release of 4.68.0 this has been moved to the `software-package.yml` files. From the docs (which has a typo that needs to be fixed):\n\n\u003e Currently, for Fleet-maintained apps and App Store (VPP) apps, the labels_ and categories keys are specified in the team YAML (teams/team-name.yml, or teams/no-team.yml). For custom packages, they keys are specified in the package YAML (lib/software-name.package.yml).\n\n`labels_` needs to be defined in the `team-name.yml` file because I need different scoping depending on the team and I don't want to create multiple software entries for the same software title just to support this scoping requirement. I also want a consistent experience with scoping in gitops. For example, configuration profiles are scoped by using the `labels_` in my `team-name.yml` files. App Store apps and FMAs are also scoped by using the `labels_` in my `team-name.yml`.\n\nI was also given no warning of this change which led to users seeing software in self-service that they should not be running and that won't be configured correctly since they aren't in scope of the related configuration profiles.\n\n## What have you tried?\n\nN/A - this worked prior to 4.68.0.\n\n## Potential solutions\n\nRevert whatever change moved `labels_` to only being supported in software-package.yml files\n\n## What is the expected workflow as a result of your proposal?\n\nI can use `labels_` in my `team-name.yml` files to support custom scoping across my teams without needing to create multiple `software-package.yml` files."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@allenhouchins heads up that we decided to push [the user story](https://github.com/fleetdm/fleet/issues/30095) associated with this request out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240 \n- https://github.com/fleetdm/fleet/issues/27983 \n\nWe'll come back to this request soon.\n\ncc @zayhanlon @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "#30095 covers fixing this so I'm pulling this onto the board with the `fleetctl gitops` work as the parent. No estimate as work is already accounted for in the parent ticket estimate."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Fixed as part of #31163."
          }
        ],
        "issueNumber": 29567,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify setup experience, custom targets (labels), self-service, \u0026 categories for all my software in the team YAML\n| so that I can define scoping at the team level and not at the software level.\n\n## Key result\n\nNone. Prioritized because it's mission critical for `customer-numa` to replace their current self-service software solution.\n\n## Original requests\n\n- #30067\n- #29567\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @iansltx  \n\n## Changes\n\n### Product\n- [x] UI changes: No changes.\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: #30837 (includes VPP/FMA)\n- [x] REST API changes: No changes\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: `fleetctl generate-gitops` includes the `setup_experience` flag in the inline software package/VPP app YAML when a software package or VPP app is included in Setup Experience, omits it otherwise (same as how self-service behaves).\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Script or command to migrate removed keys from package YAML files to the team level\n- [x] Contributor API changes: No changes; use the existing `install_during_setup` parameter in software batch endpoints (already wired up in `fleetctl`)\n- [ ] Feature guide changes: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\n### Test plan\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### Setup experience w/GitOps\n\nFor the purposes of this test plan, this format is what is meant by in-line on the team YAML:\n\n\u003cimg width=\"532\" height=\"167\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/859273cd-a1bf-4eb4-a3af-5d170772ec9f\" /\u003e\n\nAnd this is what is meant by referenced by path:\n\n\u003cimg width=\"238\" height=\"58\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/476be359-104f-431a-9e97-43b887ed754f\" /\u003e\n\nWhere the referenced file is of this format:\n\n\u003cimg width=\"478\" height=\"108\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4b7c570e-0eef-401b-8acb-22cc3ac5ee95\" /\u003e\n\n- [ ] Add App Store app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add Fleet-maintained app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add a custom package in-line, on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Don't specify the new `setup_experience` key.  Verify that the software isn't added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `true`.  Verify that the software is added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `false`.  Verify that the software is not added to macOS Setup Experience when GitOps is run. \n- [ ] ERROR PATH: Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key within the package YAML, setting the value to `true`. Run GitOps and confirm there is an easy to understand error message.\n\n#### Custom target (labels)\n\n- [ ] In the team YAML, set `labels_include_any` for a custom package that is defined in-line. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_include_any` for a custom package that is referenced by path. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is defined in-line. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is referenced by path. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the package YAML, set `labels_include_any` to include a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n- [ ] In the package YAML, set `labels_exclude_any` to exclude a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### Categories\n\n- [ ] In the team YAML, set `categories` to include one or more categories that exist in Fleet for a custom package that is defined in-line. Verify that the categories are applied when GitOps is run.\n- [ ] In the package YAML, set `categories` to include one or more categories that exist in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### No team\n\n- [ ] Verify that setup experience, custom targets (labels), and categories work as defined above for \"No team\" (`no-team.yml`)\n\n\n#### Backwards compatibility\n\n- [ ] In the team YAML, specify the old `macos_setup.software` key, add software in-line, and do not specify the new `setup_experience` for any software. Confirm the software is added to setup experience. \n- [ ] In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n- [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see the same error message.\n\n#### GitOps speed\n\n- [ ] Run GitOps with 99 packages and 500 teams before and after this change. Verify that the speed of GitOps isn't negatively impacted.\n\n#### Migration script\n\n- [ ] Run the script to migrate the the old package YAML format to the new format and verify that the script works. [#31165](https://github.com/fleetdm/fleet/issues/31165)\n\n#### Generate-GitOps\n- [ ] fleetctl generate-gitops includes the setup experience flag on software for which it is set.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev Per comments on the original request from @noahtalerman and @mostlikelee, we want to:\n\n1. Add a `setup_experience` bool on the same level as `self_service` on custom packages, VPP apps, and FMAs, default `false`. Use that to determine whether software is included in setup experience.\n2. Stub the `macos_setup.software` key in GitOps; if it exists in a config, hard-fail with a link to docs for the new way of specifying setup experience.\n\nPlan will be that we _don't_ have a deprecation period on this to keep the code clean and avoid drawing out instances where we have to support both cases. Throwing a prompt at an LLM or two to see if we can make a bot do the work of moving YAML around (we might want a step 3 above of providing a tool to move YAML around)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually, scratch the LLM option for now, as the migration path is more nuanced. One nuance here is that if Team A and Team B both import a set of software, but Team A has a piece of software marked for setup experience and Team B does not, we now need two software files (one with the setup experience flag set, one without) where we previously had one.\n\n@allenhouchins Does this tweak (and its downstream requirements) make sense? In our case the Workstations team has setup experience software defined, but the corresponding canary team doesn't, so for our own setup we'd need to split package YAMLs.\n\nFor reference, here's the prompt I threw into JetBrains Junie, as well as Zed + Claude Sonnet 4:\n\n```\nIn `it-and-security`, for each app store app under `macos_setup.software`, remove it from there and add `setup_experience: true` under the corresponding entry in `app_store_apps` in the same team file. For each software package under `macos_setup.software`, remove it from there and add `setup_experience: true` inside the corresponding YAML file. Finally, remove the `macos_setup.software` key in the YAML file.\n```\n\nNote that the above does _not_ cover the package YAML splitting nuance, and my attempts at making this work with an open-weights model small enough to run in 64GB unified memory failed."
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "I much prefer the current set up of adding it to the `software` block to basically say \"make this software available to this team\" then creating a secondary reference in `macos_setup.software` to say \"make this software available through this method\". For any software we expect all employees to use (\"critical\"), I want it to be installed via `macos_setup`, `auto-install` if its removed, and available in `self-service` for patching and easy re-installation/troubleshooting. I don't want to have to create multiple `software_title.yml` to achieve this. \n\nI'm already running into challenges with some of the recent changes we've made to software where I will have to [create multiple software entries if I want software scoped differently in teams](https://github.com/fleetdm/fleet/issues/29567) so anything we can do to handle additional logic behind the scenes and avoid having to create multiple software entries of the same software just to use it differently, will always get my vote.\n\n\u003e run in 64GB unified memory failed.\n\n64GB?! Yikes! "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I much prefer the current set up of adding it to the software block to basically say \"make this software available to this team\" then creating a secondary reference in macos_setup.software to say \"make this software available through this method\".\n\n@allenhouchins interesting! I added you to Tuesday's #g-software design review to take a look at the current designs and discuss."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on #27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time, though based on the source of this original request the software GitOps update activity should be split into its own story, as the customer isn't asking for that, \"core to Fleet\" notwithstanding, as the activity work is likely the majority of the effort on this ticket if it's brought in. Splitting stories allows for easier parallelization, and allows for derisking both stories."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Based on linked issues, looks like we missed calling out some scope here. I'm assuming that allowing specifying macOS setup experience in `fleet_maintained_apps`, as well as in `app_store_apps`, is in scope here. Revising YAML docs so that's clearer now (as well as contributor API docs).\n\nEDIT: Never mind. YAML docs don't include this explicitly, but it's dev note'd in a comment on the PR. And it's in the test plan."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Turns out, the contributor API for this already has the correct (per-package) format, so these changes won't have a server-side component (all `fleetctl`)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman I thought we had missed frontend scope here because there might have been changes to the modals/exports we added in #28110. But it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?\n\n@iansltx that's right!"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] REST API changes: No changes\n\n@iansltx also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\nThis helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\nWe've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\""
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e \u003e * [x]  REST API changes: No changes\n\u003e \n\u003e [@iansltx](https://github.com/iansltx) also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\u003e \n\u003e This helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\u003e \n\u003e We've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\"\n\n@noahtalerman All of the \"no changes\" items are still in the issue description, under the \"No-ops\" heading (\"Product no-ops\" probably makes more sense here, and I've used that heading title on other tickets where I've done this). Sounds like you missed them because they were \"below the fold\" but they're there, and splitting them out should actually make the \"we intentionally didn't do these things\" rundown easier. Thoughts on maintaining that \"split out into a subheading\" pattern, but moving that subheading up above the Engineering section?\n\nMy reason for doing this tweak (was going to mention this in chat channels but ran out of time, but discussed this with @mostlikelee ahead of time) is that stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development has more serious consequences than having to scroll down in the Confirm and celebrate ritual.\n\nAdditionally, the act of explicitly moving items to a \"these are the things that won't change\" heading during spec provides another \"are we _sure_ this isn't changing\" checkpoint prior to estimation. That actually wound up helpful on #30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes. Moving the Figma link to the more appropriate checkbox decreased likelihood of confusion during both development (imminently) and Confirm and celebrate (later), while maintaining an explicit list of parts of the product that are out of scope for the story.\n\nI hadn't PR'd a handbook/story template change for this because I wanted to dial in how it looked with real-world examples first, hence why you're seeing this for the first time here."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development\n\n@iansltx ah, I hear you but the current way has been working for the other product groups. We just have to look at all the checkboxes to see which have \"No changes\".\n\nTo keep things consistent across product groups and reduce change for now let's please keep the story issue template the same. I removed \n\nThanks for testing it out!\n\n\u003eThat actually wound up helpful on https://github.com/fleetdm/fleet/issues/30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes.\n\nIt sounds like we (it was me) messed up in this case. That's a whoops from me. I forgot about the new GitOps mode checkbox."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulled this back to Ready for spec as there are outstanding test plan questions that we're working through."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @noahtalerman For the following test plan item:\n\n\u003e In the team YAML, specify the old macos_setup.software key, leave it empty, and specify the new setup_experience for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nThere's no straightforward way to get GitOps to behave this way; when deserializing, values in YAML always appear to be set/valud, even if the `software` key isn't provided. We _might_ be able to reach into YAML and parse things manually to tell the difference between \"key not set\" and \"key set and empty\" but I'm thinking that the existence of an empty software key doesn't hurt anything in this particular case, so probably not worth it.\n\nOf course, we _can_ easily capture cases where the sotware list is not empty (and fail if we see setup experience set on both a package/app store definition and the setup experience software key), which matters most from a conflict resolution perspective I believe.\n\nThe above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\nOn the bright side, I _was_ able to differentiate between \"setup experience flag isn't supplied\" and \"setup experience flag exists and is set to false\", so we can fail fast when the setup experience software key has items in it but the setup experience flag is set on any software on the team (vs. only failing when setup experience is set to `true` somewhere)."
          }
        ],
        "issueNumber": 30095,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8s",
        "status": "ð¦¤ âIn review",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243530523269)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Self-QA checklist:\n\n### VPP\n\n- [x] Add App Store app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [x] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [x] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n### FMA\n\n- [x] Add Fleet-maintained app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [x] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [x] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n### Custom Package\n\n- [x] Add a custom package in-line, on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [x] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [x] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n- [x] Add a custom package YAML file and reference the package YAML on the team YAML. Don't specify the new `setup_experience` key.  Verify that the software isn't added to macOS Setup Experience when GitOps is run. \n- [x] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `true`.  Verify that the software is added to macOS Setup Experience when GitOps is run. \n- [x] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `false`.  Verify that the software is not added to macOS Setup Experience when GitOps is run. \n- [x] ERROR PATH: Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key within the package YAML, setting the value to `true`. Run GitOps and confirm there is an easy to understand error message.\n\n#### Custom target (labels)\n\n- [x] In the team YAML, set `labels_include_any` for a custom package that is defined in-line. Verify that the label inclusions are applied when GitOps is run. \n- [x] In the team YAML, set `labels_include_any` for a custom package that is referenced by path. Verify that the label inclusions are applied when GitOps is run. \n- [x] In the team YAML, set `labels_exclude_any` for a custom package that is defined in-line. Verify that the label exclusions are applied when GitOps is run. \n- [x] In the team YAML, set `labels_exclude_any` for a custom package that is referenced by path. Verify that the label exclusions are applied when GitOps is run. \n- [x] In the package YAML, set `labels_include_any` to include a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n- [x] In the package YAML, set `labels_exclude_any` to exclude a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### Categories\n\n- [x] In the team YAML, set `categories` to include one or more categories that exist in Fleet for a custom package that is defined in-line. Verify that the categories are applied when GitOps is run.\n- [x] In the package YAML, set `categories` to include one or more categories that exist in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### No team\n\n- [x] Verify that setup experience, custom targets (labels), and categories work as defined above for \"No team\" (`no-team.yml`)\n\n\n#### Backwards compatibility\n\n- [x] In the team YAML, specify the old `macos_setup.software` key, add software in-line, and do not specify the new `setup_experience` for any software. Confirm the software is added to setup experience. \n- (!) In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n- [x] Repeat the step above with some software in the `macos_setup.software` key. You should see the same error message.\n"
          }
        ],
        "issueNumber": 31163,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocking waiting on replication steps for QA steps from contributor"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "contributor is OOO, and fleetd cut happened this morning.  I'll figure out next steps here"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the PR is reverted from the 1.46 release branch so we don't block the fleetd release"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@fuhry Can you point us to a package that previously failed that gets fixed by this change?"
          }
        ],
        "issueNumber": 31396,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdvkm4",
        "status": "ð£ In progress",
        "issueNumber": 32018,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-25T19:04:49.97609898Z",
    "items": [
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.73.0\n\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\n\u003cimg width=\"1767\" height=\"477\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f42bd9c5-cc6d-4207-8946-370be4bee1cd\" /\u003e\n\n### ð ï¸ To fix\n\n\u003cimg width=\"215\" height=\"502\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05acd2e8-e1a9-4dca-92bc-4d72e96d20cc\" /\u003e\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to /software/titles page\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32255,
          "repository": "fleetdm/fleet",
          "title": "Vulnerabilities missing tooltip on /software/titles page",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32255"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd_ysM",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Vulnerabilities missing tooltip on /software/titles page",
        "issueNumber": 32255,
        "changeType": "added"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.73.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\nList of hosts includes any hosts with that kernel but is not filtered to the operating system\n\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\nEasiest seen on [Dogfood](https://dogfood.fleetdm.com/software/os/201) environment\n1. From /software/os click on a Linux OS that has multiple hosts with multiple kernels (will require having at least one host that has the kernel but does not have the operating system that you clicked on)\n2. Note the number of hosts listed for each kernel\n3. Click on the \"view all hosts\" link for one of the kernels listed (this will need to be a kernel that also exists on a host that is running a different version of the operating system) \n\n\u003cimg width=\"964\" height=\"609\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/915a2ee0-dd8f-4d02-9225-e3ab0ef46d31\" /\u003e\n\n4. Note that the number of hosts in the resulting list doesn't match the number of hosts that was displayed on the previous page\n5. Note that the hosts listed don't all have the same operating system\n\u003cimg width=\"964\" height=\"288\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bab37247-dbf2-43e3-8175-c327f68bf5ea\" /\u003e\n\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nOne way to get in this state is to have an Ubuntu host that was previously on 24.04.2 and had the linux-image-6.8.0-78-generic, 6.8.0-78.78 kernel, then upgraded to 24.04.3\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32259,
          "repository": "fleetdm/fleet",
          "title": "Clicking \"view all hosts\" for a kernel listed under a Linux operating system only returns results filtered to the kernel (not operating system)",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32259"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Clicking \"view all hosts\" for a kernel listed under a Linux operating system only returns results filtered to the kernel (not operating system)",
        "issueNumber": 32259,
        "changeType": "added"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "**Fleet version**: 4.73.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\n\u003cimg width=\"965\" height=\"596\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1a71d5b1-341e-4ee9-8041-a672c41f8b7f\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Navigate to /software/os and click on an operating system that has 0 hosts for the OS/Kernel combination\n2. Look at the results\n\n### ð¯ï¸ More info _(optional)_\nOne way to get in this state is to have an Ubuntu host that was previously on 24.04.2 and had the linux-image-6.8.0-71-generic, 6.8.0-71.71 kernel, then upgraded to 24.04.3\nCan be seen in [Dogfood](https://dogfood.fleetdm.com/software/os/201) environment\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32257,
          "repository": "fleetdm/fleet",
          "title": "OS Kernel list view doesn't filter out 0 host scenarios",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32257"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgd_2ms",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "OS Kernel list view doesn't filter out 0 host scenarios",
        "issueNumber": 32257,
        "changeType": "added"
      },
      {
        "content": {
          "title": "Output from packages_only=true \u0026 packages_only=false on /titles endpoint is the same"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwVo4",
        "status": "ð£ In progress",
        "title": "Output from packages_only=true \u0026 packages_only=false on /titles endpoint is the same",
        "issueNumber": 31581,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoeo",
        "labels": [
          "story",
          ":release",
          "customer-eponym",
          "customer-easterwood",
          "customer-numa",
          "customer-mozartia",
          "customer-gispen",
          "customer-fourier",
          "#g-software"
        ],
        "issueNumber": 25636,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify setup experience, custom targets (labels), self-service, \u0026 categories for all my software in the team YAML\n| so that I can define scoping at the team level and not at the software level.\n\n## Key result\n\nNone. Prioritized because it's mission critical for `customer-numa` to replace their current self-service software solution.\n\n## Original requests\n\n- #30067\n- #29567\n\n## Context\n- Product Designer: @noahtalerman\n- Engineer: @iansltx  \n\n## Changes\n\n### Product\n- [x] UI changes: No changes.\n- [x] CLI (fleetctl) usage changes: No changes\n- [x] YAML changes: #30837 (includes VPP/FMA)\n- [x] REST API changes: No changes\n- [x] Fleet's agent (fleetd) changes: No changes\n- [x] Activity changes: No changes\n- [x] Permissions changes: No changes\n- [x] GitOps mode UI changes: No changes\n- [x] GitOps generation changes: `fleetctl generate-gitops` includes the `setup_experience` flag in the inline software package/VPP app YAML when a software package or VPP app is included in Setup Experience, omits it otherwise (same as how self-service behaves).\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] My device and fleetdm.com/better changes: No changes\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Script or command to migrate removed keys from package YAML files to the team level\n- [x] Contributor API changes: No changes; use the existing `install_during_setup` parameter in software batch endpoints (already wired up in `fleetctl`)\n- [ ] Feature guide changes: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\n### Test plan\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### Setup experience w/GitOps\n\nFor the purposes of this test plan, this format is what is meant by in-line on the team YAML:\n\n\u003cimg width=\"532\" height=\"167\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/859273cd-a1bf-4eb4-a3af-5d170772ec9f\" /\u003e\n\nAnd this is what is meant by referenced by path:\n\n\u003cimg width=\"238\" height=\"58\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/476be359-104f-431a-9e97-43b887ed754f\" /\u003e\n\nWhere the referenced file is of this format:\n\n\u003cimg width=\"478\" height=\"108\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4b7c570e-0eef-401b-8acb-22cc3ac5ee95\" /\u003e\n\n- [ ] Add App Store app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add App Store app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add Fleet-maintained app in-line on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add Fleet-maintained app in-line on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n- [ ] Add a custom package in-line, on the team YAML file and don't specify the new `setup_experience` key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `true`. Verify that the software is added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package in-line, on the team YAML file and specify the new `setup_experience` key, setting the value to `false`. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Don't specify the new `setup_experience` key.  Verify that the software isn't added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `true`.  Verify that the software is added to macOS Setup Experience when GitOps is run. \n- [ ] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key on the team YAML, setting the value to `false`.  Verify that the software is not added to macOS Setup Experience when GitOps is run. \n- [ ] ERROR PATH: Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new `setup_experience` key within the package YAML, setting the value to `true`. Run GitOps and confirm there is an easy to understand error message.\n\n#### Custom target (labels)\n\n- [ ] In the team YAML, set `labels_include_any` for a custom package that is defined in-line. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_include_any` for a custom package that is referenced by path. Verify that the label inclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is defined in-line. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the team YAML, set `labels_exclude_any` for a custom package that is referenced by path. Verify that the label exclusions are applied when GitOps is run. \n- [ ] In the package YAML, set `labels_include_any` to include a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n- [ ] In the package YAML, set `labels_exclude_any` to exclude a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### Categories\n\n- [ ] In the team YAML, set `categories` to include one or more categories that exist in Fleet for a custom package that is defined in-line. Verify that the categories are applied when GitOps is run.\n- [ ] In the package YAML, set `categories` to include one or more categories that exist in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### No team\n\n- [ ] Verify that setup experience, custom targets (labels), and categories work as defined above for \"No team\" (`no-team.yml`)\n\n\n#### Backwards compatibility\n\n- [ ] In the team YAML, specify the old `macos_setup.software` key, add software in-line, and do not specify the new `setup_experience` for any software. Confirm the software is added to setup experience. \n- [ ] ~~In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).~~\n  - [ ] UPDATE: @noahtalerman: [Tricky to build](https://github.com/fleetdm/fleet/issues/30095#issuecomment-3218706681). Here's what we decided instead: setting `setup_experience` on individual packages with an empty `macos_setup.software` software key will result in a successful GitOps run with `setup_experience` flags applied to the relevant software.\n- [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see [this error message](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\n#### GitOps speed\n\n- [ ] Run GitOps with 99 packages and 500 teams before and after this change. Verify that the speed of GitOps isn't negatively impacted.\n\n#### Migration script\n\n- [ ] Run the script to migrate the the old package YAML format to the new format and verify that the script works. [#31165](https://github.com/fleetdm/fleet/issues/31165)\n\n#### Generate-GitOps\n- [ ] fleetctl generate-gitops includes the setup experience flag on software for which it is set.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev Per comments on the original request from @noahtalerman and @mostlikelee, we want to:\n\n1. Add a `setup_experience` bool on the same level as `self_service` on custom packages, VPP apps, and FMAs, default `false`. Use that to determine whether software is included in setup experience.\n2. Stub the `macos_setup.software` key in GitOps; if it exists in a config, hard-fail with a link to docs for the new way of specifying setup experience.\n\nPlan will be that we _don't_ have a deprecation period on this to keep the code clean and avoid drawing out instances where we have to support both cases. Throwing a prompt at an LLM or two to see if we can make a bot do the work of moving YAML around (we might want a step 3 above of providing a tool to move YAML around)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually, scratch the LLM option for now, as the migration path is more nuanced. One nuance here is that if Team A and Team B both import a set of software, but Team A has a piece of software marked for setup experience and Team B does not, we now need two software files (one with the setup experience flag set, one without) where we previously had one.\n\n@allenhouchins Does this tweak (and its downstream requirements) make sense? In our case the Workstations team has setup experience software defined, but the corresponding canary team doesn't, so for our own setup we'd need to split package YAMLs.\n\nFor reference, here's the prompt I threw into JetBrains Junie, as well as Zed + Claude Sonnet 4:\n\n```\nIn `it-and-security`, for each app store app under `macos_setup.software`, remove it from there and add `setup_experience: true` under the corresponding entry in `app_store_apps` in the same team file. For each software package under `macos_setup.software`, remove it from there and add `setup_experience: true` inside the corresponding YAML file. Finally, remove the `macos_setup.software` key in the YAML file.\n```\n\nNote that the above does _not_ cover the package YAML splitting nuance, and my attempts at making this work with an open-weights model small enough to run in 64GB unified memory failed."
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "I much prefer the current set up of adding it to the `software` block to basically say \"make this software available to this team\" then creating a secondary reference in `macos_setup.software` to say \"make this software available through this method\". For any software we expect all employees to use (\"critical\"), I want it to be installed via `macos_setup`, `auto-install` if its removed, and available in `self-service` for patching and easy re-installation/troubleshooting. I don't want to have to create multiple `software_title.yml` to achieve this. \n\nI'm already running into challenges with some of the recent changes we've made to software where I will have to [create multiple software entries if I want software scoped differently in teams](https://github.com/fleetdm/fleet/issues/29567) so anything we can do to handle additional logic behind the scenes and avoid having to create multiple software entries of the same software just to use it differently, will always get my vote.\n\n\u003e run in 64GB unified memory failed.\n\n64GB?! Yikes! "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I much prefer the current set up of adding it to the software block to basically say \"make this software available to this team\" then creating a secondary reference in macos_setup.software to say \"make this software available through this method\".\n\n@allenhouchins interesting! I added you to Tuesday's #g-software design review to take a look at the current designs and discuss."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on #27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time, though based on the source of this original request the software GitOps update activity should be split into its own story, as the customer isn't asking for that, \"core to Fleet\" notwithstanding, as the activity work is likely the majority of the effort on this ticket if it's brought in. Splitting stories allows for easier parallelization, and allows for derisking both stories."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Based on linked issues, looks like we missed calling out some scope here. I'm assuming that allowing specifying macOS setup experience in `fleet_maintained_apps`, as well as in `app_store_apps`, is in scope here. Revising YAML docs so that's clearer now (as well as contributor API docs).\n\nEDIT: Never mind. YAML docs don't include this explicitly, but it's dev note'd in a comment on the PR. And it's in the test plan."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Turns out, the contributor API for this already has the correct (per-package) format, so these changes won't have a server-side component (all `fleetctl`)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman I thought we had missed frontend scope here because there might have been changes to the modals/exports we added in #28110. But it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?\n\n@iansltx that's right!"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] REST API changes: No changes\n\n@iansltx also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\nThis helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\nWe've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\""
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e \u003e * [x]  REST API changes: No changes\n\u003e \n\u003e [@iansltx](https://github.com/iansltx) also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\u003e \n\u003e This helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\u003e \n\u003e We've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\"\n\n@noahtalerman All of the \"no changes\" items are still in the issue description, under the \"No-ops\" heading (\"Product no-ops\" probably makes more sense here, and I've used that heading title on other tickets where I've done this). Sounds like you missed them because they were \"below the fold\" but they're there, and splitting them out should actually make the \"we intentionally didn't do these things\" rundown easier. Thoughts on maintaining that \"split out into a subheading\" pattern, but moving that subheading up above the Engineering section?\n\nMy reason for doing this tweak (was going to mention this in chat channels but ran out of time, but discussed this with @mostlikelee ahead of time) is that stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development has more serious consequences than having to scroll down in the Confirm and celebrate ritual.\n\nAdditionally, the act of explicitly moving items to a \"these are the things that won't change\" heading during spec provides another \"are we _sure_ this isn't changing\" checkpoint prior to estimation. That actually wound up helpful on #30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes. Moving the Figma link to the more appropriate checkbox decreased likelihood of confusion during both development (imminently) and Confirm and celebrate (later), while maintaining an explicit list of parts of the product that are out of scope for the story.\n\nI hadn't PR'd a handbook/story template change for this because I wanted to dial in how it looked with real-world examples first, hence why you're seeing this for the first time here."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development\n\n@iansltx ah, I hear you but the current way has been working for the other product groups. We just have to look at all the checkboxes to see which have \"No changes\".\n\nTo keep things consistent across product groups and reduce change for now let's please keep the story issue template the same. I removed \n\nThanks for testing it out!\n\n\u003eThat actually wound up helpful on https://github.com/fleetdm/fleet/issues/30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes.\n\nIt sounds like we (it was me) messed up in this case. That's a whoops from me. I forgot about the new GitOps mode checkbox."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulled this back to Ready for spec as there are outstanding test plan questions that we're working through."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @noahtalerman For the following test plan item:\n\n\u003e In the team YAML, specify the old macos_setup.software key, leave it empty, and specify the new setup_experience for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nThere's no straightforward way to get GitOps to behave this way; when deserializing, values in YAML always appear to be set/valud, even if the `software` key isn't provided. We _might_ be able to reach into YAML and parse things manually to tell the difference between \"key not set\" and \"key set and empty\" but I'm thinking that the existence of an empty software key doesn't hurt anything in this particular case, so probably not worth it.\n\nOf course, we _can_ easily capture cases where the sotware list is not empty (and fail if we see setup experience set on both a package/app store definition and the setup experience software key), which matters most from a conflict resolution perspective I believe.\n\nThe above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\nOn the bright side, I _was_ able to differentiate between \"setup experience flag isn't supplied\" and \"setup experience flag exists and is set to false\", so we can fail fast when the setup experience software key has items in it but the setup experience flag is set on any software on the team (vs. only failing when setup experience is set to `true` somewhere)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e The above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\n@iansltx I think this is ok. I updated the test plan (below and in issue description). \n\nFYI @jmwatts\n\n\u003e - [ ] ~~In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).~~\n\u003e   - [ ] UPDATE: @noahtalerman: [Tricky to build](https://github.com/fleetdm/fleet/issues/30095#issuecomment-3218706681). Here's what we decided instead: setting `setup_experience` on individual packages with an empty `macos_setup.software` software key will result in a successful GitOps run with `setup_experience` flags applied to the relevant software.\n\u003e - [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see [this error message](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nI also updated the dev note with this decision: https://github.com/fleetdm/fleet/pull/30254/files#r2164318796"
          }
        ],
        "issueNumber": 30095,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-26T07:05:25.042205644Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_ysM",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed tooltip now shows and has correct copy"
          }
        ],
        "issueNumber": 32255,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoeo",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Reviewing the #25499 recording from yesterday, the topic came up of what is/isn't editable for FMAs in the Edit UI.\n\nThinking that now that we have install scripts for FMAs on GitHub, and those scripts can be pushed as part of an FMA update as of this ticket, we remove editability for install and uninstall scripts in particular. If we got something wrong, we can link users to the FMA slug to suggest a change. This has the side effect of notifying us when we have something wrong, versus an IT admin performing a one-off fix that we don't know anything about.\n\nPost-install script and pre-install query would stay editable since we don't have defaults for either.\n\nIf we need an escape hatch, we can offer admins the ability to unlink the package from being Fleet-maintained, at which point it behaves as a custom package (and we'd switch any Fleet-maintained policies to \"you're on your own for this\" mode at the same time). If an admin wants to opt back into us maintaining the package, they can delete/re-add, which is relatively low-effort since we're handling the heavy parts of config."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review today, we'll keep all scripts editable, and overwrite them when we import a new FMA version."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Self-assigning this to give @jahzielv more room this sprint."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman @eugkuo this was requested by `customer-numa` yesterday.  I think we should prioritize this in the next design sprint.\n\nCC: @zayhanlon @ddribeiro "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@eugkuo during feature fest, we decided to come back to this in a future design sprint. Prioritizing other work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One tricky bit on FMA updates is for (un)install scripts where the script needs to be modified by the IT admin to e.g. add a license key as an argument to a vendor-supplied install script. Idea is that these actions can't be performed in a post-install script (which we don't manage with FMAs), so an IT admin would need to munge the install script, and on an update of the app we'd need to either give them a heads-up or incorporate their changes.\n\n@mostlikelee you mentioned that this is already an issue with Cloudflare WARP for a license key or similar. Do you have docs on that? I saw #24216 and [Cloudflare's manual deployment docs](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/manual-deployment/), but the former doesn't appear to be configurable via the CLI, and the latter references a CLI that could be included in a post-install script (similar to what we see with SentinelOne configuration).\n\nSo either I'm missing something or there's probably a better example out there of install/uninstall (not post-install) scripts that would need to be tweaked by an IT admin after an FMA is imported, and we can use that example to determine how we can reasonably persist config across FMA updates (e.g. via extra env vars)."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman the customer ask here is to manage this via gitops to support the following workflow:\n1. customer updates app to latest version on canary team\n2. customer deploys app to hosts on canary team\n3. customer tests app on canary team\n4. customer deploys app to production team\n\nMy proposal:\n\n1. Add a `version` field to FMAs:\n```\nfleet_maintained_apps:\n    - slug: zoom/darwin\n      self_service: true\n      version: 1.0.1\n      categories:\n        - Productivity\n```\n\n2.  Add an option to bump versions in gitops config:\n\nbump all apps in file:\n```\nfleetctl gitops --bump-fma -f canary.yml\n```\nbump one app in file:\n```\nfleetctl gitops --bump-fma --app zoom/darwin -f canary.yaml\n```"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@allenhouchins what do you think ^"
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "@noahtalerman I added a note for us to start with this at tomorrow's unpacking meeting. "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@mostlikelee just chatted with @allenhouchins and we think the IT admin expectation is that Fleet, on each GitOps run, will just update any out-of-date Fleet-maintained apps.\n\nMeaning, we think we don't want to add any new keys as part of this story. When we ship this improvement, Fleet's Fleet-maintained apps should update without updating the [`it-and-security/` YAML](https://github.com/fleetdm/fleet/blob/main/it-and-security/teams/workstations.yml).\n\nThe best practice for the staged rollout will be to update the canary team's automatic install policy first and then the production team's policy after things look good.\n\nCheck out the \"Unpacking the why\" recording from 2025-06-24 for more context."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Flagging the suggested behavior as a BC break from the previously decided implementation. Existing impl doesn't change FMAs once they've been uploaded, and we intentionally opted into that when we spec'd FMAs-in-GitOps the first time.\n\nAdding `version: latest` as an opt-in for the logic you're describing resolves the BC break."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e the suggested behavior as a BC break from the previously decided implementation\n\n@iansltx that's ok. I think we want to be brave here and update the default behavior now that we understand what the IT admin expects.\n\nThat's why we marked these features as experimental!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Given this change in expected development for this story, does it still make sense to lump script edits in here? At this point those changes are orthogonal to what we'd need to do to switch from \"never update if the FMA is already in the library\" to \"always update.\"\n\nIf script override ability was discussed and determined to be required as part of this behavior change in Unpacking the why, fair enough, though without that scope this story is nearly spec-complete."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "\u003e The best practice for the staged rollout will be to update the canary team's automatic install policy first and then the production team's policy after things look good.\n\nHere is a scenario that may occur if we don't support version pinning:\n1. Prod team is currently getting patched to MyApp v1.0 via policy (rule: install if version less than 1.0)  \n2. MyApp v2.0 is added to canary team\n3. MyApp 2.0 is deployed to canary team via policy (rule: install if version less than 2.0) and tests successfully\n4. MyApp updated to 3.0 in FMA catalog\n5. Cannot add 2.0 to prod because it's no longer available in FMA catalog.  MyApp 3.0 cannot be deployed to prod because it's not tested.\n6. Gitops updates MyApp to 3.0 in canary\n7.  Wait for 3.0 to finish deploying again to canary team\n8.  GitOps run updates app to 4.0\n9.  etc... customer can never deploy to prod because canary is updating too frequently\n\nOne workaround here is to not run GitOps unless you plan on bumping FMA versions, but this will block other GitOps runs that have other intentions.\n\nAnother option could be to support a flag that does not bump FMAs (ie.  `fleetctl gitops --no-fma-updates`)\n\n@noahtalerman @allenhouchins \n "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e does it still make sense to lump script edits in here? At this point those changes are orthogonal to what we'd need to do to switch from \"never update if the FMA is already in the library\" to \"always update.\"\n\n@iansltx I think we want to keep the script edits as part of this story for now. At least during drafting. Why? To think a bit broader. I don't think we've fully thought through the world in which Fleet-maintained apps are updated but some apps have scripts that are overridden. \n\nDoes Fleet update the package for those apps but leave the scripts alone? I'm thinking probably but worth discussing and putting ourselves in `numa`'s shoes before deciding.\n\nThen, once the designs are settled then we can decide to split it up.\n"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Here is a scenario that may occur if we don't support version pinning\n\nI understand what you're saying @mostlikelee. \n\nI still think we want to update the default behavior to match IT admin expectations: that Fleet, on each GitOps run, will update any out-of-date Fleet-maintained apps.\n\nYou're thinking about the version pinning (version ceiling) problem. I think we want to solve that too."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Re: updating packages but leaving scripts alone, unless scripts are being explicitly provided we _wouldn't_ want to take that route, because:\n\n1. If we find a bug in our (un)install scripts, we want to be able to broadcast the fix to that bug aloneside other maintained app updates, vs. requiring admins to take manual action. The ability to push bugfixes on scripts was a big reason for the rearchitecture of Fleet-maintained apps that landed in v4.66.\n2. As versions of software get bumped, sometimes what counts as the correct (un)install script changes, so if we bump the software package but not the associated scripts we'll wind up delivering a broken (un)install. Currently, \"sometimes\" is \"all the time\" for MSI uninstall scripts, since we use ProductCode for uninstalls there; without bumping scripts alongside installer packages, as soon as a maintained app's version is bumped the associated uninstall script will silently stop working.\n\nOf the above, reason 2 will come up more often."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Re: updating packages but leaving scripts alone, unless scripts are being explicitly provided we wouldn't want to take that route\n\n@iansltx I think we're saying the same thing!\n\nTo rephrase [my comment above](https://github.com/fleetdm/fleet/issues/25636#issuecomment-3002016399), I think Fleet always updates/fixes scripts if they're not explicitly provided.\n\nFleet only leaves scripts along, but updates packages, if scripts are explicitly provided."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@iansltx given the change in scope above, do you think the tshirt size is still an `M`?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee With revised scope, inclusive of adding script overrides (plus post-install script and pre-install query) this feels like at/just above XS. Hard to call this an S tee-shirt size because S is ~3x the size of XS and swapping default plus adding the requisite gitops params isn't going to take a whole dev-sprint."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we don't think we'll have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Customer feedback:\n\nCan the update mechanism run server side instead? Updating FMAs only during gitops runs will impact processes and how we think about gitops.  ie.  if you want to ensure FMAs update 1x/hr you have to schedule gitops runs (with no yaml changes) at that frequency.\n\ncc: @kennyb-222 "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "updated the title as this ability already exists for custom packages"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on https://github.com/fleetdm/fleet/issues/27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time (and, with the reduction in scope of this story due to FMAs already being bumped on each GitOps run, T-shirt size is more like an XS, so it's rather easy to fit in). Happy to help get this ready, as the correct scope of work here (we're also missing post-install script and pre-install query) is covered in #30250."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica I believe the above may be ready for User Story Review, depending on your thoughts on the product part of the story description, plus answers to the below questions:\n\n1. Do we want to allow specifying FMA details in a separate file, similar to software packages? I'm assuming not in the YAML PR. If we _do_ want that option, do we want to deprecate the current inline option like we did for software packages, or do we want to keep it since the common case would involve specifying slug, self-service, and nothing else?\n2. Do we want to include pre-install query/post-install script as part of this work? I assumed that we do.\n\nOne caveat: 4.71 docs are out of date with `main` and have conflicts, and my bet is that 4.73 docs are even further behind. Let me know when the 4.73 docs branch is caught up with main/4.71/4.72 and I'll re-roll the YAML PR as needed. It's ready for review as-is (/cc @rachaelshaw) but I expect I'll need to re-roll it, as if I recall correctly the software YAML docs have changed a fair amount recently. The anticipated re-roll won't change the semantics of specified behavior though, so the embedded product decisions can be reviewed now, and exact verbiage can be dialed in post-reroll."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx This looks good to me! Let's review it once more with Noah today during design review, and I think we can move it to the user story review after that."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Async User Story Review signoffs:\n\n- [x] @mostlikelee \n- [x] @jmwatts "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Just one thing from the test plan:\n\u003e Create a YAML file with all four new fields added\n\nthere are only 3 based on the yaml PR, which is correct?\n\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee\n\n1. install script\n2. Uninstall script\n3. Pre-install query\n4. Post-install script"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "The YAML PR mentions pre-install query in the description but not the example, matching what we're doing elsewhere."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Create a YAML file with all four new fields added. Apply the YAML. Confirm that the FMA in the UI reflects all fields.\n2. Remove all but the install script, revise the install script, and re-apply. \n- [x] Confirm that the FMA in the UI blanks out pre-install query/post-install script, revises the install script, and reverts to the manifest version of the uninstall script.\n3. Remove the install script field in YAML and re-apply. \n- [x] Confirm that the FMA in the UI reverts to the manifest version of the install script."
          }
        ],
        "issueNumber": 25636,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "getvictor"
            },
            "body": "@mostlikelee I believe this is a P1 since this feature is broken right now. However, I've marked it a P2 since customer was OK waiting until 4.73 for the fix.\n\n@harrisonravazzolo Please add the customer label since I couldn't find it."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1752521340977199"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "lowered estimate, we already had validation logic"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed install/uninstall scripts referencing fleet secrets can now be used when adding software installers (custom installers and custom FMA scripts)"
          }
        ],
        "issueNumber": 30853,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "cc: @iansltx \n\nSecond backend bug that will be highly noticeable with hackathon work\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulling back to drafting as, while this means we can't show the automatic policies icon in software library/inventory in the host details view yet, we're no worse off than we are right now. @RachelElysia it still makes sense for the FE to consume the data when it's available, but unlike #30188 this isn't going to be an immediate source of user confusion, so there are items currently in the sprint we don't want to evict in favor of this, and potentially stuff we want to bring in instead of this."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added the following to this ticket which I think resolves the issue in question?\n\n- [Figma design](https://www.figma.com/design/neuhhOaQ0Qvh74xdqwmu6C/-30197-Host-Software-API--Surface-automatic-install-policies?node-id=5301-26\u0026t=RHjnRKdNhkv48TVg-11). When there is no self-service the icon changes to the recycle icon.\n\nI'll move this to ready to estimate and add planning poker. If there's other things to do please pull it back so that any remaining items can be addressed. Thanks!\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "Planning poker: https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1750684407360969\n\nHoping this is FE only."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Coolio. I added a design to this and moved it to ready to estimate, but it can sit there I guess until such time as we want to pull it forward."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo This is actually _backend_-only. FE work for this is already done. This is another ListHostSoftware related case, and we'll want to take care to _not_ have an N+1 here I think."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "Are there plans to create separate web API endpoints for the library and inventory? That could help simplify `ListHostSoftware`."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jahzielv In this case, that wouldn't help, as current designs call for showing the \"this has auto-install policies\" icon on both library and inventory pages within host software details. If we stopped showing installer-related icons on inventory that would clean things up a bit (though this would still need to implement this for the library side) but that'd require a change to the desired fix here.\n\nRe: splitting endpoints, that would be out of scope for this bug, and would need a new issue filed."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "\u003e Re: splitting endpoints, that would be out of scope for this bug, and would need a new issue filed.\n\nOh yeah for sure! I don't think it should be done here, but seeing this ticket made me think about it :D"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed install icons are now showig in Host \u003e\u003e Software \u003e\u003e Library\n\n- [x] No Self service, No policy -\u003e No icon indicator\n- [x] Self service, No policy -\u003e Self service icon indicator\n- [x] Self service, Policy, -\u003e Recycle + person icon indicator\n- [x] No Self service, Policy -\u003e Recycle icon indicator\n- [x] `automatic_install_policies` contains associated policies on `software_package`\n- [x] `\"self_service\": true` shows on `software_package`"
          }
        ],
        "issueNumber": 30197,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxHA",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Repro'd](https://dogfood.fleetdm.com/software/versions/568346)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed versions released after 138.0.7204.92 are not showing vulnerable"
          }
        ],
        "issueNumber": 30682,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-26T19:04:20.355875113Z",
    "items": [
      {
        "estimate": 13,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8U",
        "status": "ð£ In progress",
        "issueNumber": 31895,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdqQM4",
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding `customer-numa` as they recently requested last_opened_at on windows"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "meeting scheduled for Monday"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Related: https://github.com/osquery/osquery/issues/8677\n\nTherefore, will need to update Database to have two different timestamps and then verify that the API response returns the different (correct) timestamps"
          }
        ],
        "issueNumber": 31932,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to know when Mac or Windows app has never been used by a user\n| so that I can understand if I can decrease number of licenses for that app.\n\n## Roadmap item\n\nNone\n\n## Original requests\n\n- #27087 \n\n## Context\n- Product Designer: @marko-lisica  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @iansltx    \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [ ] UI changes:\n  - Show \"Never\" rather than omitting header entirely when a `apps` / `programs` / `deb_packages` / `rpm_packages` software item was never opened within modals that show last opened time, and rename headers from \"Last used\" to \"Last opened\" in multi-version host software details and in self-service software details modals\n  - Rename coulmn name form \"Last used\" to \"Last opened\" (on host \u003e software \u003e inventory page)\n  - If software `last_opened_at` is empty then show \"Never\" in \"Last opened\" column if we support last opened time for that source (`apps` or `programs`), `Not Supported` in grey otherwise\n\n\u003cimg width=\"811\" height=\"343\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c6b8dc7d-74ba-4772-88a2-38645f256a8c\" /\u003e\n\n- [ ] CLI (fleetctl) usage changes: No changes\n- [ ] YAML changes: No changes\n- [ ] REST API changes: No changes\n- [ ] Fleet's agent (fleetd) changes: No changes\n- [ ] GitOps Mode UI changes: No changes\n- [ ] GitOps generation changes: No changes\n- [ ] Activity changes: No changes\n- [ ] Permissions changes: No changes\n- [ ] Changes to paid features or tiers: Fleet Free\n- [ ] My device and fleetdm.com/better changes: No changes\n- [ ] Other reference documentation changes: No changes\n- [ ] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n- [ ] On the software inventory view in host details, confirm the \"Last opened\" column name with no tooltip\n- [ ] Install two versions of an app or Windows program on the same host, but don't open either, and refetch. Confirm that the software inventory shows \"Never\" in black in the \"Last opened\" column. Confirm that the modal for installed paths shows \"Never\" in both entries.\n- [ ] Install (or have in inventory) multiple versions of a software item for which we don't support last opened time. Confirm that the \"Last opened\" column shows \"Not supported\" in grey and the versions modal doesn't show the last opened time header.\n- [ ] Confirm that \"Never\" / \"Not supported\" are handled similar to the above with a single installed version on a host\n- [ ] Confirm behavior changes in the modal accessed by clicking a software item's name in My device \u003e Software.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdUaqU",
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica FYI we already have `\"last_opened_at\": null` on the API for installed app versions that haven't been opened, so no API changes required here. Revised the ticket template to reflect this.\n\nGoing to include a separate comment with more specific instructions on all I'm pretty sure we need to do, to see if I can feed this into Zed + Sonnet 4 and have it one-shot this :)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "All we need to do for this is\n\n1. Show `Never` rather than `---` on the column when the API field is null and `source` is `programs` or `apps` (those are the two sources where we have last opened time info), in `HostSoftwareTableConfig.tsx`\n2. Show `Never` rather than skipping the \"Last used\" field in `SoftwareDetailsModal.tsx` and `InventoryVersion.tsx` when the API field is null and `source` is programs or `apps`\n3. Rename \"Last used\" to \"Last opened\" in all three places, and remove the tooltip wrapper in `HostSoftwareTableConfig.tsx`\n4. Update tests in `SoftwareDetailsModal.tests.tsx` to reflect the above changes"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Mind pulling down the `ð¤-31268` branch and seeing if that gets us what we want here?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tweaks needed:\n\n* When showing multiple versions, show \"Never\" if all versions don't have an opened time and each individual version would've shown \"Never\"\n* Don't use the grey color for \"Never\" (but keep it for `---`)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica \n\n\u003cimg width=\"808\" height=\"342\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20422141-d1eb-445e-9c12-92edd366c242\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review, we're showing \"Not supported\" rather than \"---\" for sources where we don't support last opened time. Updated the screenshot in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia Where do these map to in the UI?\n\nfrontend/pages/hosts/details/cards/Software/SoftwareDetailsModal/SoftwareDetailsModal.tsx\nfrontend/pages/hosts/details/components/InventoryVersions/InventoryVersions.tsx\n\nI think I'm missing a case in the test plan to cover both of these."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Fixed the screenshot to show both cases."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Found the other place where last opened time is: My device \u003e Software. Test plan is updated. Ping when the test plan is good to go; code's already written (by me) so this will land directly on the release board once the test plan is good to go."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan is good to go, tried to move it to the release board, wouldn't budge. GitHub is defiant today. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given #31638 is landing soon, updated the spec here (and code in the PR) to include `deb_packages` and `rpm_packages` in supported software types. Support for the additional package types will land in osquery before 4.73 is out, and 4.73 will include detail query updates for support here, so RPM/DEB last-opened-at can be tested as part of QA for #27902."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "meeting scheduled for Monday"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Removed the following two items from the test plan as they are blocked due to an [existing osquery bug](https://github.com/osquery/osquery/issues/8677)\n\n- [ ] Open one of the versions. Refetch and confirm that the column shows the most recent opened time. Confirm that the modal shows the correct opened time on one entry, \"Never\" for the other.\n- [ ] Open the other version. Refetch and confirm that the column shows the most recent opened time. Confirm that the modal shows the correct opened time on both entries."
          }
        ],
        "issueNumber": 31268,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_2ms",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32257,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwVo4",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31581,
        "changeType": "modified"
      },
      {
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgd_ysM",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "issueNumber": 32255,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          "#g-software"
        ],
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "issueNumber": 32259,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP80",
        "status": "ð£ In progress",
        "issueNumber": 31901,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdhNKc",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "Thanks @iansltx. This will result in faster reviews that are more accurate, supporting stability. Moving to the drafting board to move across per https://fleetdm.com/handbook/engineering#draft-an-engineering-initiated-story. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Let me know what else you need test-plan-wise here. Thinking we can async the USR here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@drvcodenta Can you confirm that this is WIP in a comment? Side effect will be that I can assign you to this one."
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Yes it's WIP"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "this is looking great, closing"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Script diffs in view,\nReviewing made swift and true,\nConfidence renewed."
          }
        ],
        "issueNumber": 28189,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP0g",
        "status": "âï¸Awaiting QA",
        "issueNumber": 30238,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [x] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [x] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [ ] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [ ] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [x] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [ ] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [x] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [x] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [ ] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [ ] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [ ] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [ ] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [x] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [ ] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [ ] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [x] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [x] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [x] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [x] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [x] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [ ] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [ ] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [ ] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n- [ ] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n\n### Engineering\n\n - [ ] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [ ] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [ ] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [ ] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [ ] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [ ] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [ ] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [ ] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [ ] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [ ] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [ ] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd1guQ",
        "title": "Software inventory and vulnerabilities: Add Cursor and Windsurf extensions",
        "issueNumber": 31397,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdzKe0",
        "title": "Unable to remove filter if team dropdown selection is changed when viewing host list for an installed software title",
        "issueNumber": 30340,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdbCMM",
        "title": "tar.gz installs show in Self service as fetching inventory after install and refetch has already happened",
        "issueNumber": 31721,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdAjcc",
        "title": "Self-service actions carryover",
        "issueNumber": 31309,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-27T07:05:11.263629543Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP88",
        "status": "ð£ In progress",
        "issueNumber": 31902,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-27T19:04:30.244868921Z",
    "items": [
      {
        "content": {
          "body": "**Fleet version**: v4.72.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\n[CVE-2025-9074](https://nvd.nist.gov/vuln/detail/CVE-2025-9074) affects Docker Desktop on macOS, Windows, and Linux but is only being detected for `brew` installs and on Windows.\n\nThe CPE as reported in VulnCheck is:\n\n``` cpe:2.3:a:docker:desktop:*:*:*:*:*:*:*:*```\n\nIn Fleet, the CPE listed for[ macOS](https://dogfood.fleetdm.com/software/versions/569332) follows this format:\n\n```\n{\n  \"software\": {\n    \"id\": 569332,\n    \"name\": \"Docker Desktop\",\n    \"version\": \"4.43.2\",\n    \"bundle_identifier\": \"com.electron.dockerdesktop\",\n    \"source\": \"apps\",\n    \"browser\": \"\",\n    \"generated_cpe\": \"cpe:2.3:a:docker:docker_desktop:4.43.2:*:*:*:*:macos:*:*\",\n    \"vulnerabilities\": null\n  }\n}\n```\n\nFor [Windows](https://dogfood.fleetdm.com/software/titles/31393):\n\n```\n{\n  \"software\": {\n    \"id\": 545630,\n    \"name\": \"Docker Desktop\",\n    \"version\": \"4.39.0\",\n    \"source\": \"programs\",\n    \"browser\": \"\",\n    \"vendor\": \"Docker Inc.\",\n    \"generated_cpe\": \"cpe:2.3:a:docker:desktop:4.39.0:*:*:*:*:windows:*:*\",\n    \"vulnerabilities\": [\n      {\n        \"cve\": \"CVE-2025-3224\",\n        \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-3224\",\n        \"created_at\": \"2025-05-06T17:21:35Z\",\n        \"cvss_score\": 7.8,\n        \"epss_probability\": 0.0002,\n        \"cisa_known_exploit\": false,\n        \"cve_published\": \"2025-04-28T20:15:00Z\",\n        \"resolved_in_version\": \"4.41.0\"\n      },\n      {\n        \"cve\": \"CVE-2025-3911\",\n        \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-3911\",\n        \"created_at\": \"2025-05-06T15:21:17Z\",\n        \"cvss_score\": null,\n        \"epss_probability\": 0.00025,\n        \"cisa_known_exploit\": false,\n        \"cve_published\": \"2025-04-29T18:15:00Z\",\n        \"resolved_in_version\": \"4.41.0\"\n      },\n      {\n        \"cve\": \"CVE-2025-4095\",\n        \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-4095\",\n        \"created_at\": \"2025-05-06T15:21:49Z\",\n        \"cvss_score\": null,\n        \"epss_probability\": 0.00019,\n        \"cisa_known_exploit\": false,\n        \"cve_published\": \"2025-04-29T18:15:00Z\",\n        \"resolved_in_version\": \"4.41.0\"\n      },\n      {\n        \"cve\": \"CVE-2025-6587\",\n        \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-6587\",\n        \"created_at\": \"2025-07-03T20:22:10Z\",\n        \"cvss_score\": null,\n        \"epss_probability\": 0.00022,\n        \"cisa_known_exploit\": false,\n        \"cve_published\": \"2025-07-03T10:15:00Z\",\n        \"resolved_in_version\": \"4.43.0\"\n      },\n      {\n        \"cve\": \"CVE-2025-9074\",\n        \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2025-9074\",\n        \"created_at\": \"2025-08-22T12:23:42Z\",\n        \"cvss_score\": null,\n        \"epss_probability\": 0.0002,\n        \"cisa_known_exploit\": false,\n        \"cve_published\": \"2025-08-20T14:15:00Z\",\n        \"resolved_in_version\": \"4.44.3\"\n      }\n    ]\n  }\n}\n```\n\nI was not able to confirm the CPE for brew installations, but the issue **appears** to be due to the differences in generated cpe.\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Log in to dogfood\n2. Search for Docker \n3. See installed versions \n4. Search for  CVE-2025-9074\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32323,
          "repository": "fleetdm/fleet",
          "title": "False negative for CVE-2025-9074",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32323"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgeFnDI",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          ":incoming",
          "#g-software",
          "~qa-on-branch"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "False negative for CVE-2025-9074",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "verified this in localdev\n\n\u003cimg width=\"1211\" height=\"611\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/18d9af8d-769b-4c44-ae52-4e470edb413e\" /\u003e"
          }
        ],
        "issueNumber": 32323,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwXbo",
        "status": "ð£ In progress",
        "issueNumber": 30403,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Security Engineer,\n| I want to see vulnerabilities of Linux operating systems\n| so that I can prioritize remediation effectively.\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n#26804\n\n## Context\n- Product Designer: @marko-lisica  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @iansltx \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/857ERt8x6l5fnLC1Yuy0bA/-30738-Surface-Linux-OS-vulnerabilities?node-id=0-1\u0026t=WEmHWkALSDBpIMwE-1)\n- [x] REST API changes: #31130\n- [x] Changes to paid features or tiers: Fleet Free\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n#### Product no-ops\n\n- CLI (fleetctl) usage\n- YAML\n- Fleet's agent (fleetd)\n- GitOps Mode UI\n- GitOps generation\n- Activities\n- Permissionss\n- My device and fleetdm.com/better\n- Other reference documentation\n\n**NOTE: ** Since Linux vulnerabilities are with the kernel package rather than at the OS level, any vulnerability web hooks will correspond to the affected software item, _not_ at the OS level. This maintains existing behavior for Linux kernel vulnerabilities.\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Populate vulnerabilities lists (on OS list/version endpoints, _not_ in the OS CVEs list in the database, _not_ in the operating systems section of the vulnerabilities endpoints) for Linux OS versions with a deduplicated list of CVEs affecting kernels installed on all hosts with that OS specified\n- [ ] For the kernels list, host counts should navigate to a host set filtered by both OS ID and software ID\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: Mention OS vulnerabilities in the [vulnerability processing feature guide](https://fleetdm.com/guides/vulnerability-processing)\n- [ ] Database schema migrations: Add an `is_kernel` column to `software_titles` and populate as appropriate for all supported Linux distributions (test with a VM for each). Going forward, `is_kernel` should be set when a software title is created. May also need one or more tables to ensure vulnerability counts are retrieved quickly (e.g. `host_kernel_software_counts` containing both OS ID and kernel software ID).\n\n#### Database joins\n\n```\nSELECT DISTINCT software_cve.cve\nFROM software_cve\nJOIN software ON software.id = software_cve.software_id\nJOIN software_titles ON software_titles.id = software.title_id AND software.is_kernel = TRUE\nJOIN host_software ON host_software.software_id = software.id\nJOIN host_operating_system ON host_operating_system.host_id = host_software.host_id\nJOIN operating_systems ON operating_systems.id = host_operating_system\nWHERE [operating system query]\n```\n\nThe above is heavy enough that we likely need a table for `host_kernel_software_counts`, calculated at the same time as `host_software_counts`, that flattens the above, at which point we're trading freshness for ability to quickly pull information.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n- Requires load test: Probably; need to load a bunch (~50k, don't care about MDM) of Linux hosts with kernel software (need to ensure osquery-perf will return these items) and confirm performance impact of calculating kernel software stats. This may be doable locally.\n\n### Test plan\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch. Also enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. Also enroll a Linux host in a container with a different OS version unique to that container.\n2. Run vulnerabilities + cleanups/aggregations jobs.\n3. Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n4. On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show `---`. \n5. Confirm that the API response populates the `vulnerabilities` key for Linux OS versions.\n6. Navigate to an OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version, and clicking a host count in this card should navigate to a host list filtered by both software ID and OS version ID. Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n7. Confirm that the API response for the individual OS version includes `vulnerabilities` and `kernels` entries, with `kernels` format matching what you'd see in `software_title.versions[]` when viewing an individual software title.\n8. Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nAdditionally, verify that the above works in Free and Premium, with extra vulnerability details (scores etc.) omitted in Fleet Free.\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwVo4",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31581,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "status": "ð£ In progress",
        "issueNumber": 32259,
        "changeType": "modified"
      },
      {
        "content": {
          "title": "Validate macOS Tahoe on Fleet so that we can provide same day support when it goes to general release"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "title": "Validate macOS Tahoe on Fleet so that we can provide same day support when it goes to general release",
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd2PTE",
        "status": "Done",
        "issueNumber": 11935,
        "changeType": "modified"
      },
      {
        "assignees": [
          "xpkoala",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003e1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\u003cbr\u003e\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`) channels.\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n",
          "number": 32369,
          "repository": "fleetdm/fleet",
          "title": "Release QA: 4.72.1",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32369"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeGP2Q",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "â Ready for release",
        "title": "Release QA: 4.72.1",
        "issueNumber": 32369,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxBg",
        "title": "(Timebox) ðª²Warning state on last-opened time calculation when changing the name of an existing software",
        "issueNumber": 29061,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-08-28T07:05:13.161011742Z",
    "items": [
      {
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003e1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\u003cbr\u003e\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`) channels.\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeGP2Q",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.71.0 FLEET_VERSION_B=rc-patch-fleet-v4.72.1 go test -v\n--- PASS: TestUpgradeAToB (61.86s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t61.881s\n```\n\n```\n FLEET_VERSION_A=v4.71.1 FLEET_VERSION_B=rc-patch-fleet-v4.72.1 go test -v\n--- PASS: TestUpgradeAToB (59.32s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t59.336s\n```\n\n```\nFLEET_VERSION_A=v4.72.0 FLEET_VERSION_B=rc-patch-fleet-v4.72.1 go test -v\n--- PASS: TestUpgradeAToB (50.89s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t50.902s\n```\n\n"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "`#g-software` gives ð "
          },
          {
            "author": {
              "login": "xpkoala"
            },
            "body": "`#g-orch` gives ð "
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "#g-mdm gives ð "
          }
        ],
        "issueNumber": 32369,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "status": "ð¦¤ âIn review",
        "issueNumber": 32259,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-28T19:04:55.416318499Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32259,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31900.\n\n## Task\n\nBuild out the software icon edit modal on the software title page. Previews are out of scope for this subtask. See Figma for details.\n\n- [x] Treat absolute icon URL as blank/default; retrieve the icon on edit modal open if a relative URL is provided to determine filename (and have the icon on hand for preview)\n- [x] When selecting an icon to upload, reject/error/reset input if the icon isn't a square PNG 120-1024px on each side\n- [x] Allow removing an existing icon via the DELETE endpoint\n- [x] Properly handle errors delivered from server-side on PUT/DELETE HTTP calls\n\n## Condition of satisfaction\n\nIcon editing via the UI works, albeit without previews in the modal."
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP80",
        "issueNumber": 31901,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [x] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [x] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [x] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [x] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [x] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [x] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [x] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [x] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [x] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [x] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [x] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [x] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [x] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [x] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [x] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [x] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [x] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [x] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [x] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [x] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [x] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [x] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [x] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n- [x] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n\n### Engineering\n\n - [ ] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [x] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [x] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [x] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [x] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [x] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [x] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [x] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [x] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [ ] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [ ] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.72 \u0026 4.71 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nIf you select a specific software version you'll see \"Updated never\" for the last time the data was collected\n\n\u003cimg width=\"1464\" height=\"696\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/603f2cae-d0a9-446e-a6c3-97d4d0d17ed4\" /\u003e\n\n### ð ï¸ To fix\n\nCount on the software version doesn't rely on cron job, so we sould delete \"updated at\" from the UI\n\nProduct designer: @marko-lisica \n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Go to dogfood / local instance and select any installed software in the software list\n2. Select a specific version\n3. Check the time it was last updated \n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31601,
          "repository": "fleetdm/fleet",
          "title": "Software versions always show \"Updated never\" for their last updated time",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31601"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeJD3E",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~released bug",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Software versions always show \"Updated never\" for their last updated time",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "FE change to remove: 1"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Moving onto our board since I'm kinda blocked right now on feature work"
          }
        ],
        "issueNumber": 31601,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.73 (main) \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nText link is purple instead of black \n\n\u003cimg width=\"1840\" height=\"420\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7a0d84e2-afb9-4a46-b6b1-9b00217f3967\" /\u003e\n\n### ð ï¸ To fix\n\nWe want the text to be black.\n\nSee Info banner section here: https://www.figma.com/design/8oXlYXpgCV1Sn4ek7OworP/%F0%9F%A7%A9-Design-system?node-id=34-41\u0026p=f\u0026t=fu5phUpflr1zrcMT-0\n\nProduct designer: @noahtalerman\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Open Software\n2. Add software\n3. Select custom package\n4. Check Automatic install\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31944,
          "repository": "fleetdm/fleet",
          "title": "Learn more button on the Automatic install software banner is purple instead of black",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31944"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeJISk",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Learn more button on the Automatic install software banner is purple instead of black",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Found 8 cases of this (see PR for locations to QA) as this was a newer style in the style guide that was never prioritized to update old styles"
          }
        ],
        "issueNumber": 31944,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-08-29T19:04:54.766423411Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwXbo",
        "status": "ð¦¤ âIn review",
        "issueNumber": 30403,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgeFnDI",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "verified this in localdev\n\n\u003cimg width=\"1211\" height=\"611\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/18d9af8d-769b-4c44-ae52-4e470edb413e\" /\u003e"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "A false negative hides,\nDocker's vulnerability.\nFleet reveals the truth."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "confirmed on dogfood"
          }
        ],
        "issueNumber": 32323,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to add a custom icon for my software\n| so that my end users can easily find the software they need on the **My device \u003e Self-service** page.\n\n## Roadmap item\n\nNone\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #24802 \n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @iansltx \n  \nMake sure to solve this: #29886\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=0-1\u0026t=DrMQziG5Cl0BDJbU-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: #31324\n- [x] REST API changes: #31324\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: Specified in Figma above.\n- [x] GitOps generation changes:\n  - Specified in Figma above.\n  - `gitops-generate` command should download icons.\n- [x] Activity changes: #31382\n- [x] Permissions changes: Global/team admins and maintainers can apply update icon. Covered by \"Add, edit, and delete software\" in permissions guide.\n- [x] Changes to paid features or tiers: Available in Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: The icon added by user will display on self-service and software inventory tabs on My device page.\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: #31324\n- [ ] Feature guide changes: Update [self-service](https://fleetdm.com/guides/software-self-service), [custom package](https://fleetdm.com/guides/deploy-software-packages), [VPP](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) articles to reference icons/how to change them\n- [ ] Database schema migrations: Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID (will dump icons onto the software installers bucket)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### UI\n\n- [ ] Make sure that the edit action is available next to the software title name, only if the software title has a package or VPP app added.\n- [ ] Verify that the user can upload a PNG icon by clicking on the edit icon next to the software title name in the **Edit software** modal.\n- [ ] Verify that the user can only select PNG files.\n- [ ] Verify that Fleet returns an error if the icon doesn't fit into specs defined in Figma.\n- [ ] Make sure that the user can preview the icon in the **Edit software** modal, once it's selected and before it's uploaded.\n- [ ] Verify that the icon in the preview is displayed according to the priority order described in Figma..\n- [ ] Make sure that the preview under the **Fleet** tab shows the real software title name, icon, type and versions count. The table underneath the transparent overlay should be static.\n- [ ] Make sure that the preview under the **Self-service** tab shows the real software title name and icon. Other data should be static.\n- [ ] Make sure that if the user deletes the selected or uploaded icon, the preview shows the fallback icon.\n- [ ] Verify that when the VPP icon is available, the upload form is still available in the **Edit software** modal, so the user can override that icon with a custom PNG.\n- [ ] Make sure that the uploaded icon shows on software title details, ~version details,~ titles list, ~versions list,~ on a team where the icon is added.\n- [ ] Make sure that we do client-side validation if the icon size doesn't fit specs, before the user hit \"Save\" (upload) icon. Show error flash message specified in Figma. \n- [ ] Make sure that the uploaded icon shows on the host's software library and inventory pages, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows on the My device software and self-service tabs, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows in /controls/setup-experience/install-software when selecting software to be installed\n- [ ] Verify that when GitOps mode is enabled, on the software title details page, the edit button (next to the software title name) is disabled, and that the GitOps tooltip is displayed on hover.\n- [ ] Verify that `icon` field is added in GitOps generation modal.\n- [ ] Verify that icon download link is added in GitOps generation modal. \n\n#### API\n\n- [ ] Verify that the icon can be updated with the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be deleted with the new `DELETE /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be downloaded with the new `GET /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that Fleet errors if icons are not PNG, not square, or not between 120x120px and 1024x1024px, when user tries to upload with PUT endpoint.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles/:id`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/device/{token}/software`.\n- [ ] Verify that if no uploaded icon and no VPP added, `icon_url` is `null` (for every endpoint above).\n\n#### GitOps\n\n- [ ] Verify that the icon can be added to a software package (`software.packages` \u003e `lib/software-name.package.yml` \u003e `icon`).\n- [ ] Verify that the icon can be added to the App Store app (`software.appâ_storeâ_apps.icon`).\n- [ ] Verify that the icon can be removed from the software package or App Store app\n- [ ] Verify that adding the same icon file to software packages across multiple teams adds the icon for each software package on each team and doesn't result in significantly slower gitops runs or adverse file-system effects (excessive files in /tmp directory when running)\n- [ ] Verify that previously uploaded icons are downloaded and referenced when running `fleetctl generate-gitops`\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgeJD3E",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "issueNumber": 31601,
        "changeType": "modified"
      },
      {
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgeJISk",
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "issueNumber": 31944,
        "changeType": "modified"
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdLZck",
        "issueNumber": 31468,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdVUIs",
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Seems like the `vscode_edition` column serves the same purpose here?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@iansltx oh interesting! Does `vscode_edition` already tell us VS Code v. Cursor v. Windsurf?\n\nIf yes, then it sounds like no osquery changes are needed.\n\nIf not, then I think we stick with a new `ide_type` column. While we're making osquery changes, we take the opportunity to make `vscode_extensions` consistent with the [`chrome_extensions` table](https://fleetdm.com/tables/chrome_extensions).\n\ncc @zwass "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman It doesn't give us that ability right now (because it doesn't have the mapping added for the user data dirs for windsurf/cursor/vscode-oss), but it uses the exact same method to pull the information that we'd use to get that info, so adding a new column would either wind us up with two columns for the exact same info or one column that we'd have to artificially pin to older behavior, complicating dev/maintenance."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "\nAh, I didn't notice the `vscode_edition` column when we discussed this. I agree with @iansltx this should definitely be used to better match the behavior of the `chrome_extensions` table where `edge` vs. `beta` vs. `brave`, etc. are included in the same column."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] Fleet's agent (fleetd) changes: Add 3 new values to the existing column `vscode_edition` to the [`vscode_extensions` osquery table](https://osquery.io/schema/5.18.1/#vscode_extensions). `cursor` can be one of `windsurf`, or `vscode_oss`.\n\n@zwass just chatted with @iansltx and we decided update the specs to use the `vscode_edition` column.\n\nWe also decided to bring in VSCodium which will return `vscode_oss`.\n\nNot sure if other forks (less used) have the same value. Can you please help us do that research? We want to know if `vscode_oss` is VSCodium specific so we can show \"VSCodium\" in the UI/API. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Made some tweaks to the test plan for more accuracy, given that we need a users cross join to get VSCode extensions. The new query is based on [our existing VSCode extensions detail query](https://fleetdm.com/vitals/v-scode-extensions#apple)."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "\u003e Not sure if other forks (less used) have the same value. Can you please help us do that research? We want to know if vscode_oss is VSCodium specific so we can show \"VSCodium\" in the UI/API.\n\nCan we have it return `vscodium` for maximum clarity?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@zwass The pattern of dotfiles dirs is `.vscode-oss`, hence my thought of maintaining the \"hyphens to underscores\" pattern. I'm also not 100% sure whether VSCodium is the only fork that uses that dir naming scheme; mind doing a quick check? If that really _is_ VSCodium specific, fair enough and we can break the pattern to specifically call out that we know VSCodium is the only fork that uses that dir naming convention."
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "https://github.com/osquery/osquery/pull/8664\n\nWent with `vscodium` since the server and insiders variants seem to use that. I'm guessing the `vscode-oss` string is a bit of a historical artifact.\n\nIt was also easy to add Trae so I did that."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@zwass Hate to pile on at the last second, but maybe we should include AWS's new Kiro editor in here?"
          },
          {
            "author": {
              "login": "zwass"
            },
            "body": "It's an easy change but wouldn't go out til the next osquery release in 6 weeks or so. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This was merged into osquery ahead of the 5.19.0 release. Moving this to \"awaiting QA\"."
          }
        ],
        "issueNumber": 31476,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdvkm4",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Marking this as done since this ticket is primarily a capacity reservation."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Maxwell joins our team,\nGuidance through cloud city's gleam,\nFleet grows in his beam."
          }
        ],
        "issueNumber": 32018,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895.\n\n## Task\n\nUpdate existing endpoints that need to reference software icons to support new functionality, per #31324:\n\n### Icon URLs\n\nIn all cases, move icon URL from `app_store_app` level to the top level of the software title. Priority order:\n\n1. If viewing within the context of a team and that team has an icon specified in the DB, relative URL to the icon GET endpoint\n2. Else if viewing within the context of a team and that team has a VPP app associated to the software title, (absolute) URL of the VPP icon\n3. Else null\n\nFor these endpoints:\n\n- [ ] Main host software (references REST API GET for overridden icons)\n- [ ] Device-auth host software (references device-auth icon GET for overridden icons)\n- [ ] Software titles list\n- [ ] Software titles entity\n- [ ] Software package add/edit response\n- [ ] App store app add/edit response\n- [ ] Setup experience software list\n\n### Software title IDs\n\nThe following endpoints need to be updated to include software title ID in responses:\n\n~- [ ] Software versions list~\n~- [ ] Software version entity~\n^Taking these two out of scope for the iteration^\n\n## Condition of satisfaction\n\nExisting endpoints have been updated to reflect icon override changes. Once this task (and its prerequisite) are complete, all frontend work for this story should be unblocked."
        },
        "estimate": 5,
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8c",
        "issueNumber": 31896,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-08-30T07:04:53.523537011Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed results now filter to kernel and operating system\n\n\u003cimg width=\"304\" height=\"43\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/449a0480-cb14-4726-a362-5423c23f9848\" /\u003e\n\nAPI call is now including both os and kernel `\u0026software_version_id=575834\u0026os_name=Ubuntu\u0026os_version=24.04.2%20LTS`"
          }
        ],
        "issueNumber": 32259,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Heads-up: \"name\" editing would change which `software_title` the package is associated with based on how we're linking titles and packages right now, for OSes other than macOS, and that has implications for e.g. software updates where inventoried software need to name-match the corresponding installer. We also have validation that prevents package edits from  changing the associated software title. So we'll need to sort those implications out if we include name in scope here (this issue doesn't apply to icon and version)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \u0026 @noahtalerman  I've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n        1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n4. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n5. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "![Image](https://github.com/user-attachments/assets/ffd778b7-8620-4dd4-9229-edcac7210679)\n\nFYI @eugkuo "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?\n\n@mostlikelee do you want to include GitOps in this ticket or should GitOps and UI tickets be separated for reasons of scoping, etc.\n\ncc @ddribeiro "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Given that GitOps is a core differentiator for Fleet and given that the requesting customer wants GitOps for their workflows, GitOps needs to be part of the spec here (though it'll get its own subtask), as does `generate-gitops` support."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I neglected to mention you on these so re-adding to ping you:\n\nI've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n    1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n3. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n4. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, where we display the updated name/icon/version is going to determine at which level we need to implement, which will in turn have interplay with both inventory and access controls. Probably also useful to walk through how we get name/version/icon now and where they're stored.\n\nKey questions:\n\n1. Are any fields globally editable? If so, that means only global roles can edit them, right?\n2. For names, what happens when an associated app arrives in inventory with a different name?\n\n## Name\n\nFor everything without a bundle ID, gets set once on first inventory or package upload, and is the unique key for associating both installers and inventory for that source _globally_. The name is at the `software_title` level, and is visible in a bunch of places (self-service, software title details, etc.).\n\nFor apps with bundle IDs, this is added on initial upload or inventory, but may be edited later during software ingestion if we have a more \"canonical\" name come in from inventory. There's also the contributor API endpoint for editing names manually, but inventory may overwrite them. Unique key in these cases is bundle ID. The name is still at the `software_title` level, and is still visible in the same places.\n\n## Icon\n\nFor software that has been added as a VPP app on a team, each app has a URL for the 512x512 version of the Apple icon, as a PNG, loaded on-the-fly from Apple by the client. Icons are revised when they're revised upstream.\n\nFor software titles without an associated VPP app on the same team, icons are shown based on matching to SVGs embedded in the code, based on name + source matching. This means that Fleet server updates determine which icon is shown.\n\nThe above means that icons are currently team-specific with a global fallback.\n\nInventory doesn't affect icons. For example, iOS apps inventoried via MDM will have the generic Apple icon unless we have an SVG override (or the same app was added as a VPP app for that team).\n\nIcons *could* be extracted from some types of custom packages on upload.\n\n## Version\n\nThe below information is orthogonal to inventoried (installed) version.\n\nSoftware version is attached to the package or VPP app, so it's team-specific rather than global.\n\nFor VPP apps, version is set on add and updated hourly from Apple, since the latest version is pushed when a VPP app is installed.\n\nFor FMAs, the version in the FMA manifest is copied over when the FMA is imported into the software library.\n\nFor custom packages, the version is extracted as metadata on upload.\n\n---\n\nSince it's come up before on other features, the tradeoff with allowing edits of these values is that we'll get fewer bug reports when we're parsing metadata incorrectly on upload/inventory, as IT admins will just fix the names/icons/versions they care about if there aren't too many of them. My suggestion here would be to add analytics for cases where name/icon/version needed to be edited, and check in with customers who use that feature a lot to make sure we're not overlooking bugged behavior. How that data point is implemented will vary depending on how software field overrides work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given that scope has dropped on this, seems like we want to treat this as another piece of self-service, attached to the `software_installer`.\n\nOn the most recent review call I mentioned \"square PNG with dimension min/max\" and GitOps. Need to dig into this further."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee I've updated the designs and  [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=ALS0rcz3jje1fQwT-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642) to reflect that the only additional update is for the app icon.\n\nLMK what you think."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Does #29177 block this ticket? Also, there's no reason we don't allow jpgs and gifs as well as pngs once 29177 is done is there?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo 29177 doesn't block this, though there's some implementation overlap such that if we hit both of these in the same sprint we'll need to be more careful about subtask traffic jams (still two swimlanes worth of backend across the two tickets though).\n\nRe: JPG/GIF, those formats aren't the right match for icons, unlike SVG vs. PNG don't bring anything special to the table for the icon use case that PNG doesn't, and it's trivial to convert JPEG -\u003e PNG or GIF -\u003e PNG (since all are raster formats) where the raster -\u003e vector PNG -\u003e SVG conversion is less straightforward."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Figma looks good, thanks @eugkuo !\n\n- Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n- Only other thing to spec is how we want to show the error if it's not a square between specific dimensions."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n\n@RachelElysia Love the suggestion. Updated!"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I've added a test plan to this ticket. LMK what you think.\n\n@iansltx I know we discussed this yesterday but I can't quite remember the answer. When this icon is updated is it updated throughout our system? Like will it show up in the library and inventory with the new icon as well?\n\ncc @mostlikelee @RachelElysia "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added an [Error message design](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?node-id=7341-1459\u0026t=OJ1KwfgvtY5eZfwZ-11) to this ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Sorry for the delay on this. Originally my thought was \"just follow what we do for VPP apps\", which I thought was:\n\n1. Icon is associated with the VPP app\n2. Icon shows up when viewing the software title on the team that has the VPP app set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the VPP app is in scope\n\nWith the above assumption, custom package icons would behave as follows:\n\n1. Icon is associated with the software package\n2. Icon shows up when viewing the software title on the team that has the package set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the installer is in scope\n\nIn reality, if a VPP app gets added on _any_ team, a zero value-looking object gets tacked onto the all-teams view for that title; you can see this for [Keynote in Dogfood](https://dogfood.fleetdm.com/software/titles/1245). This object includes the App Store icon URL. We can do this in part because VPP icons _are_ global for a given Apple app ID (and the icon URL is stored on the global VPP apps table in the DB rather than on the team-specific table)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm still thinking that we handle custom packages according to the above (tied to the package, only shows up where we would populate package info), but that's not actually consistent with VPP if current VPP behavior is intended VPP behavior.\n\nA side effect of handling package icons this way is that an All Teams view of software wouldn't have an icon. The only workarounds for this would be:\n\n1. We pick the first (for some definition of \"first\") icon we find for a custom package\n2. We make software icon overrides global rather than package/team based\n\n...so this is a good design review discussion, both to determine desired VPP behavior and desired behavior here (which may be influenced by the \"why\" behind desired VPP behavior)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per this morning's discussion, I'm pausing digging in on eng DRI on this in favor of getting #27983 spec'd, as the expectation is that this will _not_ make it into the 4.71 dev sprint. There are also questions around existing behavior that should probably be cleaned up, as that will provide a consistent foundation to build this on. Those questions are documented in #29886."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee \n\nI've updated the [Prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?page-id=2%3A130\u0026node-id=7347-2401\u0026t=uf2ocmJrBfpBl076-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7347%3A1958) so that editing app icons happens at the title level and not at the package level. I've also removed icons at the package level to avoid confusion.\n\nThe expectation is that the icon at the sotware title level would be associated with the software everywhere this title is shown (in library and inventory and self-service).\n\n@RachelElysia Thoughts on wanting/needing a loading screen for the modal and a confirmation save vs immediately jumping back to the software title page with a toast confirmation?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One pivotal question that will determine a bunch of implementation details: are these icons 1:1 with `software_installers` records (in which case currently they're 1:1 with teams) or are they more global than that?\n\nLooking at the 1:1 with `software_installers` option:\n\n## Pros\n\n* Consistent with self-service flag and categories\n* Allows for e.g. marking app icons as \"beta\" (or using a version-specific logo) on a canary team if that team has a different app version\n* Doesn't interfere with VPP app icon semantics if a custom-icon package is available on one team and a VPP app is available on another (once we sort out which wins for All Teams)\n* Access control for icon edit matches access control for all software package edits, vs. requiring a global role\n\n## Cons\n\n* Icon must be set once per team (less of a big deal with GitOps?)\n* Undefined behavior for showing software in \"All Teams\" (worse than VPP's current undefined behavior)\n* Potentially jarring if switching teams changes or loses an icon (this happens with VPP)\n* If implemented as \"an icon URL under software package\", inventoried software versions won't see the icon\n\nQuestion is how many of the pros/cons matter in this particular use case. FWIW I would expect that in either case we would be consistent with the icon shown within a team, for calls to software endpoints (not software version endpoints). Since My device only calls software endpoints (not versions), the icon on the software list would match the icon for self-service install (and update)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "One thing to add to what @iansltx is saying is that there are apps that have/will change icons with various releases (see Adobe products, which look like they update their icon every few years).\n\nSo. It seems like we should go back to associating icons with installer packages. I still feel like the Software title icon should inherit the latest installer package icon. \n\nWRT All teams and defining icons. Why can't we show installer packages on the all teams level and let people edit the icons there when editing. If a software title is selected from \"All teams\" we would show all the installer packages that have been added (surfacing the team(s) the packages are tied to). Ideally we'd be able to collapse all the installer packages so that we would only need to show one installer package that had been uploaded associated with multiple teams.\n\nI'm sure this is blowing up scope and throwing wrenches all over the place, but what do we think about the idea?\n\n@iansltx @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo What would you define as \"latest\" here? Most-recently uploaded/updated? Would that work cross-team? How would that interact with VPPs, which have their versions automatically bumped within ~1 hour of a new version coming out on Apple's side?\n\nRe: showing all installers when viewing All Teams, while that's useful, that would require decent-sized API and frontend changes, so deserves its own ticket."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I'd define latest as the latest version number (newest version).\n\nI totally hear you on showing all installers on All teams being its own ticket. I'll write that as a feature request when I get a chance."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Hm. So the idea would be that, for All Teams, we'd check all VPP apps and all packages with icons customized, rank by version number descending, and use the icon of whatever was at the top? Which would usually be the VPP app due to auto-updates, but might fall back to an FMA or the like.\n\nIf that's the idea, we might have to do some finagling to make sure the version calculation is fast...and we'll need to decide on what happens if the same package is uploaded to two different teams with two different icons...but that _would_ mean that at least the \"all teams\" part of #29886 is now expected/intended behavior, which is good (still need to decide what to do with version view there though)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nThe part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\n@mostlikelee could you gut check us on what we're talking about here? I know you were trying to keep this from getting out of hand and I don't want to explode things unknowingly. Clearly some of this is looking into the future, but could you make sure to ground us to what we 'need' or 'should' be doing at this time?\n\nThanks!"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh my, we may have officially took a detour to the dark side of icon town.  lets get a chat on the books for next week."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e [@iansltx](https://github.com/iansltx) Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nOriginal thought was handle it on retrieval but we could handle the recalculation when the criteria for which icon wins changed. That would be in the VPP version bump cron, when a custom icon was added/deleted, when a package was edited/deleted, or eventually when a FMA was added. For the last bit, FMA icons would actually get _lower_ priority than custom icons because they're currently implemented as just software title matching based defaults, but I'd expect that to change to the same \"priority\" as custom package icons once #29177 is implemented.\n\nWe'd need to add a column to `software_titles` for this, to point to the `software_installer` we want to use the custom icon of (if any), but that's doable if we need icon display at the All Teams level to work a specific way.\n\n\u003e \n\u003e The part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\nRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I have it at the top of the design review column in the drafting board so was intending to make this the first thing we talk about at DR on Tuesday. If you think this warrants its own time I'm open to it."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003eRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?\n\n@iansltx . But wouldn't it be cooooool if fleet recognizes a unique software package that's uploaded to our servers and pushes that out to everyone? Like why hold duplicates of the same thing? The icon thing we could do by organization so that doesn't get too wonky. If an organization wants to change their icon it will affect the entire organization but it won't affect others. So if Zorro corp wants to bastardize all their app icons with a flaming 'z' they can go for it but it won't touch Acorn Inc."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo There are some tradeoffs there that expand well beyond (the scope of) icon management and potentially conflict with tradeoffs needed for multiple installers per team. Definitely easier to discuss this synchronously.\n\nAlso not sure what you mean by \"organization\" (global? team?). One thing I'm thinking of is MSP customers who are running each company as its own team, and how this functionality should work in that deep of a silo."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh interesting use case where teams are acting like companies. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Given the above conversation, should custom package icons be scoped to the team/package they're on, or should they be global (at the software title level)? This has implications for how #29177 gets implemented, so is a higher-priority decison."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "```mermaid\nflowchart TD\n    A[\"Has custom icon (uploaded by user)\"] -- Yes --\u003e B[\"Show custom icon on software title (not on version) on team where icon (package) is uploaded\"]\n    A -- No --\u003e C[\"Is VPP app?\"]\n    C -- Yes --\u003e D[\"Show icon from App Store on software title (not on version) on team where VPP is added)\"]\n    C -- No --\u003e E[\"Strict name matching\"]\n    E -- Yes --\u003e F[\"Show SVG icon on a software title/version based on strict name/source rules defined by Fleet (contributors) in frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    E -- No --\u003e G[\"Loose name matching\"]\n    G -- Yes --\u003e H[\"Show SVG icon on a software/version title based on what software name starts with. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    G -- No --\u003e I[\"Source-based matching\"]\n    I -- Yes --\u003e J[\"Show SVG icon on a software/version title based on the software source. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    I -- No --\u003e K[\"Default fallback\"]\n    K --\u003e L[\"Show SVG package icon on a software/version. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@noahtalerman @iansltx, if you get the chance, could you please review the flowchart above?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica For the above, my biggest questions are how much of the decision tree applies to the following matrix:\n\n| | My device | Host details |\n| - | --- | --- |\n| Installed | My device \u003e Software | Host details \u003e Software \u003e Inventory |\n| Available | My device \u003e Self-service | Host dtails \u003e Software \u003e Library |\n\nAnd, for the inventory views, if we're showing anything other than SVG icons, where do those icons exist in the API response?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx I think let's keep this simple. If there's an icon override, we keep it on software title level under `software_package` or `app_store_app` as `custom_icon_url`.\n\nSVGs are displayed everywhere, and I think we should add more of them in the future. As we plan to introduce webview setup experience in the future, SVGs will be displayed there as well.\n\n- `GET /api/latest/fleet/software/titles` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/software/titles/:id` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/hosts/:id/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/device/:token/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n\nSo, icon overrides will be only available for software titles that are available. It won't show up on the versions of that title, and it won't show up in other teams."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@marko-lisica Is this being added to fleetctl generate-gitops?\n\nShould this work for team and global admins, and team and global maintainers, but not other users?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "FE Tests:\n- SoftwareIcon.tsx has no tests\n- GitOps yaml add to the test\n- GitOps mode disable editing"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Rough spec'ing notes:\n\n## GitOps changes\n\nIcon\nLocal hashing\nDeduplicate uploads\nReturn icon hash + filename on batch software status endpoint\nReturn icon hash + filename on batch VPP app status endpoint\nDon't repeat no-op uploads (use hash + filename)\nHash on icon PUT request\nRun in parallel\n\n## Generate-gitops\n\n## My device\n\nSoftware list endpoint; different URL\nIcon GET by device ID\n\n## Main API\n\nListHostSoftware (different URL)\nUpdate icon - incl. validation of format/size server side\nGet icon\nDelete icon\nSoftware titles list endpoint\nSoftware title endpoint\nSoftware versions endpoint (title ID)\nSoftware version endpoint (title ID)\nPackage + app store add/edit responses (make sure icon in response)\n\nSetup experience - update endpoint\n\nDocs\n\n## FE\n\nTitles view\nEdit modal\nPreview\n\nTitle list\nVersions list (don't download icon multiple times for the same title)\nAuthenticate when relative URL\nVersion view\nSoftware inventory\nSoftware library\n\nRename edit\n\nSelf-service tab\nSoftware tab of my device\n\nSetup experience UI"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @mostlikelee Just pushed https://github.com/fleetdm/fleet/pull/31324/commits/c577ded229f6a114d6fd940db2282ed8f69cad55?w=1 to API/YAML because we were missing some API endpoints based on the spec work I just did."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia @ksykulev #32459 covers software version icon display (taken out of scope of this ticket) and vulnerabilities icon display (missed in this ticket; would have been a late add of new surface on a ticket that's already at risk). Subtasks have been updated."
          }
        ],
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895.\n\n## Task\n\nUpdate existing endpoints that need to reference software icons to support new functionality, per #31324:\n\n### Icon URLs\n\nIn all cases, move icon URL from `app_store_app` level to the top level of the software title. Priority order:\n\n1. If viewing within the context of a team and that team has an icon specified in the DB, relative URL to the icon GET endpoint\n2. Else if viewing within the context of a team and that team has a VPP app associated to the software title, (absolute) URL of the VPP icon\n3. Else null\n\nFor these endpoints:\n\n- [ ] Main host software (references REST API GET for overridden icons)\n- [ ] Device-auth host software (references device-auth icon GET for overridden icons)\n- [ ] Software titles list\n- [ ] Software titles entity\n- [ ] Software package add/edit response\n- [ ] App store app add/edit response\n- [ ] Setup experience software list\n\n~### Software title IDs~\n\n~The following endpoints need to be updated to include software title ID in responses:~\n\n~- [ ] Software versions list~\n~- [ ] Software version entity~\n^Taking these two out of scope for the iteration^\n\n## Condition of satisfaction\n\nExisting endpoints have been updated to reflect icon override changes. Once this task (and its prerequisite) are complete, all frontend work for this story should be unblocked."
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8c",
        "issueNumber": 31896,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31900.\n\n## Task\n\nEnsure icon overrides are displayed in all relevant pages in the web UI, specifically:\n\n- [ ] Software titles list when filtered to a specific team\n~- [ ] Software versions list when filtered to a specific team (should only have one HTTP request per software title since all will have the same icon URL; will need to generate icon URL based on team ID/title ID as spec'd in #31900)~\n~- [ ] Software version entity when filtered to a specific team (will need to generate icon URL based on team ID/title ID)~\n- [ ] Setup experience software selection modal\n- [ ] Host details in Software \u003e Inventory tab\n- [ ] Host details in Software \u003e Library tab\n- [ ] My device in Software tab\n- [ ] My device in Self-service tab\n\n## Condition of satisfaction\n\nSoftware icons are overridden across Fleet when viewing software within the context of a team, whether implicitly at the host level or explicitly when viewing a software title or version."
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP9A",
        "issueNumber": 31903,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.73.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\n\u003cimg width=\"442\" height=\"271\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/810d0852-f704-450f-b589-80caf547242e\" /\u003e\n\u003cimg width=\"1027\" height=\"810\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/116cab82-a35d-4139-8683-8ad09c267c60\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Using Self service, install software on a host\n2. Click on Install Status link once software is installed\n3. View modal\n\n### ð¯ï¸ More info _(optional)_\nPer [figma here](https://www.figma.com/design/hWzvl1RvMOuqlcjYpWjkbu/-29728-Hackathon--Update-host-details-software-card?node-id=2-130\u0026p=f\u0026t=XSKsR5sqEvCJhbBY-0), it looks like there should be more space between the success message and the divider\n\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32474,
          "repository": "fleetdm/fleet",
          "title": "Success circle is too close to divider on Self service \u003e\u003e Install status details",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32474"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeLy9U",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Success circle is too close to divider on Self service \u003e\u003e Install status details",
        "issueNumber": 32474,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-09-02T07:05:21.713757712Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev Per comments on the original request from @noahtalerman and @mostlikelee, we want to:\n\n1. Add a `setup_experience` bool on the same level as `self_service` on custom packages, VPP apps, and FMAs, default `false`. Use that to determine whether software is included in setup experience.\n2. Stub the `macos_setup.software` key in GitOps; if it exists in a config, hard-fail with a link to docs for the new way of specifying setup experience.\n\nPlan will be that we _don't_ have a deprecation period on this to keep the code clean and avoid drawing out instances where we have to support both cases. Throwing a prompt at an LLM or two to see if we can make a bot do the work of moving YAML around (we might want a step 3 above of providing a tool to move YAML around)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually, scratch the LLM option for now, as the migration path is more nuanced. One nuance here is that if Team A and Team B both import a set of software, but Team A has a piece of software marked for setup experience and Team B does not, we now need two software files (one with the setup experience flag set, one without) where we previously had one.\n\n@allenhouchins Does this tweak (and its downstream requirements) make sense? In our case the Workstations team has setup experience software defined, but the corresponding canary team doesn't, so for our own setup we'd need to split package YAMLs.\n\nFor reference, here's the prompt I threw into JetBrains Junie, as well as Zed + Claude Sonnet 4:\n\n```\nIn `it-and-security`, for each app store app under `macos_setup.software`, remove it from there and add `setup_experience: true` under the corresponding entry in `app_store_apps` in the same team file. For each software package under `macos_setup.software`, remove it from there and add `setup_experience: true` inside the corresponding YAML file. Finally, remove the `macos_setup.software` key in the YAML file.\n```\n\nNote that the above does _not_ cover the package YAML splitting nuance, and my attempts at making this work with an open-weights model small enough to run in 64GB unified memory failed."
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "I much prefer the current set up of adding it to the `software` block to basically say \"make this software available to this team\" then creating a secondary reference in `macos_setup.software` to say \"make this software available through this method\". For any software we expect all employees to use (\"critical\"), I want it to be installed via `macos_setup`, `auto-install` if its removed, and available in `self-service` for patching and easy re-installation/troubleshooting. I don't want to have to create multiple `software_title.yml` to achieve this. \n\nI'm already running into challenges with some of the recent changes we've made to software where I will have to [create multiple software entries if I want software scoped differently in teams](https://github.com/fleetdm/fleet/issues/29567) so anything we can do to handle additional logic behind the scenes and avoid having to create multiple software entries of the same software just to use it differently, will always get my vote.\n\n\u003e run in 64GB unified memory failed.\n\n64GB?! Yikes! "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I much prefer the current set up of adding it to the software block to basically say \"make this software available to this team\" then creating a secondary reference in macos_setup.software to say \"make this software available through this method\".\n\n@allenhouchins interesting! I added you to Tuesday's #g-software design review to take a look at the current designs and discuss."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on #27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time, though based on the source of this original request the software GitOps update activity should be split into its own story, as the customer isn't asking for that, \"core to Fleet\" notwithstanding, as the activity work is likely the majority of the effort on this ticket if it's brought in. Splitting stories allows for easier parallelization, and allows for derisking both stories."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Based on linked issues, looks like we missed calling out some scope here. I'm assuming that allowing specifying macOS setup experience in `fleet_maintained_apps`, as well as in `app_store_apps`, is in scope here. Revising YAML docs so that's clearer now (as well as contributor API docs).\n\nEDIT: Never mind. YAML docs don't include this explicitly, but it's dev note'd in a comment on the PR. And it's in the test plan."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Turns out, the contributor API for this already has the correct (per-package) format, so these changes won't have a server-side component (all `fleetctl`)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman I thought we had missed frontend scope here because there might have been changes to the modals/exports we added in #28110. But it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?\n\n@iansltx that's right!"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] REST API changes: No changes\n\n@iansltx also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\nThis helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\nWe've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\""
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e \u003e * [x]  REST API changes: No changes\n\u003e \n\u003e [@iansltx](https://github.com/iansltx) also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\u003e \n\u003e This helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\u003e \n\u003e We've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\"\n\n@noahtalerman All of the \"no changes\" items are still in the issue description, under the \"No-ops\" heading (\"Product no-ops\" probably makes more sense here, and I've used that heading title on other tickets where I've done this). Sounds like you missed them because they were \"below the fold\" but they're there, and splitting them out should actually make the \"we intentionally didn't do these things\" rundown easier. Thoughts on maintaining that \"split out into a subheading\" pattern, but moving that subheading up above the Engineering section?\n\nMy reason for doing this tweak (was going to mention this in chat channels but ran out of time, but discussed this with @mostlikelee ahead of time) is that stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development has more serious consequences than having to scroll down in the Confirm and celebrate ritual.\n\nAdditionally, the act of explicitly moving items to a \"these are the things that won't change\" heading during spec provides another \"are we _sure_ this isn't changing\" checkpoint prior to estimation. That actually wound up helpful on #30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes. Moving the Figma link to the more appropriate checkbox decreased likelihood of confusion during both development (imminently) and Confirm and celebrate (later), while maintaining an explicit list of parts of the product that are out of scope for the story.\n\nI hadn't PR'd a handbook/story template change for this because I wanted to dial in how it looked with real-world examples first, hence why you're seeing this for the first time here."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development\n\n@iansltx ah, I hear you but the current way has been working for the other product groups. We just have to look at all the checkboxes to see which have \"No changes\".\n\nTo keep things consistent across product groups and reduce change for now let's please keep the story issue template the same. I removed \n\nThanks for testing it out!\n\n\u003eThat actually wound up helpful on https://github.com/fleetdm/fleet/issues/30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes.\n\nIt sounds like we (it was me) messed up in this case. That's a whoops from me. I forgot about the new GitOps mode checkbox."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulled this back to Ready for spec as there are outstanding test plan questions that we're working through."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @noahtalerman For the following test plan item:\n\n\u003e In the team YAML, specify the old macos_setup.software key, leave it empty, and specify the new setup_experience for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nThere's no straightforward way to get GitOps to behave this way; when deserializing, values in YAML always appear to be set/valud, even if the `software` key isn't provided. We _might_ be able to reach into YAML and parse things manually to tell the difference between \"key not set\" and \"key set and empty\" but I'm thinking that the existence of an empty software key doesn't hurt anything in this particular case, so probably not worth it.\n\nOf course, we _can_ easily capture cases where the sotware list is not empty (and fail if we see setup experience set on both a package/app store definition and the setup experience software key), which matters most from a conflict resolution perspective I believe.\n\nThe above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\nOn the bright side, I _was_ able to differentiate between \"setup experience flag isn't supplied\" and \"setup experience flag exists and is set to false\", so we can fail fast when the setup experience software key has items in it but the setup experience flag is set on any software on the team (vs. only failing when setup experience is set to `true` somewhere)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e The above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\n@iansltx I think this is ok. I updated the test plan (below and in issue description). \n\nFYI @jmwatts\n\n\u003e - [ ] ~~In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).~~\n\u003e   - [ ] UPDATE: @noahtalerman: [Tricky to build](https://github.com/fleetdm/fleet/issues/30095#issuecomment-3218706681). Here's what we decided instead: setting `setup_experience` on individual packages with an empty `macos_setup.software` software key will result in a successful GitOps run with `setup_experience` flags applied to the relevant software.\n\u003e - [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see [this error message](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nI also updated the dev note with this decision: https://github.com/fleetdm/fleet/pull/30254/files#r2164318796"
          },
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "@iansltx We are implementing https://github.com/fleetdm/fleet/issues/30877 for v4.74.0.\nLet me know when this is merged to `main` so we can add support for setting `setup_experience: true` on Linux packages."
          }
        ],
        "issueNumber": 30095,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jahzielv"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to get MDM command result in a vertical format\n| so that I can read and copy long command payload and output more easily.\n\n## Roadmap item\n\nNone\n\n## Original requests\n\n#31473\n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @jahzielv \n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Product\n- [x] UI changes: No changes.\n- [x] CLI (fleetctl) usage changes:\n  - `fleetctl get mdm-command-results`: Instead of returning a table as output, return command outputs vertically. As in [this comment](https://github.com/fleetdm/fleet/issues/31500#issuecomment-3206932975).\n- [x] YAML changes: No changes.\n- [x] REST API changes: No changes.\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps mode UI changes: No changes.\n- [x] GitOps generation changes: No changes.\n- [x] Activity changes: No changes.\n- [x] Permissions changes: No changes.\n- [x] Changes to paid features or tiers: Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: No changes.\n- [x] Other reference documentation changes: No changes.\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [x] Contributor API changes: No changes \u003c!-- Specify changes in the the Contributor API doc page as a PR to reference docs release branch following the guidelines in the handbook here: https://fleetdm.com/handbook/product-design#drafting Put \"No changes\" if there are no changes necessary. --\u003e\n- [x] Feature guide changes: No changes \u003c!-- Specify if a new feature guide is required at fleetdm.com/guides, or if a previous guide should be updated to reflect feature changes. --\u003e\n- [x] Database schema migrations: No changes \u003c!-- Specify what changes to the database schema are required. (This will be used to change migration scripts accordingly.) Remove this checkbox if there are no changes necessary. --\u003e\n- [x] Load testing: No changes  \u003c!-- List any required scalability testing to be conducted.  Remove this checkbox if there is no scalability testing required. --\u003e\n- [x] Load testing/osquery-perf improvements: No changes \u003c-- List, or link a subtask for, any osquery-perf or load test environment changes required to comprehensively load test this story if load testing is needed. --\u003e\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: TODO \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low / High TODO \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: TODO \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n1. Run `fleetctl get mdm-commands` to get the ID of one of the recent MDM commands\n2. Run `fleetctl get mdm-command-results --id \u003ccommand_id\u003e`\n3. Verify that the command is printed vertically\n4. Send a new MDM command to multiple hosts using `fleetctl mdm run-command`\n5. Get the results using the above command line and verify that the results for all hosts are returned and that the output follows the format specified [here](https://github.com/fleetdm/fleet/issues/31500#issuecomment-3206932975).\n6. Turn Wi-Fi off on an MDM-enrolled host. Send an MDM command to this host.\n7. Validate that the output of `fleetctl get mdm-command-results --id \u003ccommand_id\u003e` is correct (should be `No results received. Please check again later.`).\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 31500,
          "repository": "fleetdm/fleet",
          "title": "fleetctl: return MDM command result in a vertical format",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31500"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgeQApA",
        "labels": [
          "story",
          ":product",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "fleetctl: return MDM command result in a vertical format",
        "comments": [
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @jahzielv, could you please help me and play the product designer role for this story? It will help to make a decision faster. When you get the chance, please add it to the design review agenda so we can review what's been done so far."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "cc @mostlikelee ^^"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "@marko-lisica @noahtalerman \n\nthis is what I have based on our convo at design review:\n\n```shell\n$ fleetctl get mdm-command-results --id=15a8551f-9535-41de-8971-a750d54187f8\nID:\n15a8551f-9535-41de-8971-a750d54187f8\n\nTIME:\n2025-08-20T14:09:50Z\n\nTYPE:\nDeviceInformation\n\nSTATUS:\nAcknowledged\n\nHOSTNAME:\ntestmacs-mac-mini.local\n\nPAYLOAD:\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n  \u003cdict\u003e\n    \u003ckey\u003eCommand\u003c/key\u003e\n    \u003cdict\u003e\n      \u003ckey\u003eQueries\u003c/key\u003e\n      \u003carray\u003e\n        \u003cstring\u003eOSVersion\u003c/string\u003e\n        \u003cstring\u003eDeviceName\u003c/string\u003e\n        \u003cstring\u003eSerialNumber\u003c/string\u003e\n        \u003cstring\u003eIsSupervised\u003c/string\u003e\n      \u003c/array\u003e\n      \u003ckey\u003eRequestType\u003c/key\u003e\n      \u003cstring\u003eDeviceInformation\u003c/string\u003e\n    \u003c/dict\u003e\n    \u003ckey\u003eCommandUUID\u003c/key\u003e\n    \u003cstring\u003e15a8551f-9535-41de-8971-a750d54187f8\u003c/string\u003e\n  \u003c/dict\u003e\n\u003c/plist\u003e\n\n\nRESULTS:\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n  \u003cdict\u003e\n    \u003ckey\u003eCommandUUID\u003c/key\u003e\n    \u003cstring\u003e15a8551f-9535-41de-8971-a750d54187f8\u003c/string\u003e\n    $DATA_REDACTED\n\u003c/plist\u003e\n\n---\n\nID:\n15a8551f-9535-41de-8971-a750d54187f8\n\nTIME:\n2025-08-20T14:09:50Z\n\nTYPE:\nDeviceInformation\n\nSTATUS:\nAcknowledged\n\nHOSTNAME:\ntests-MacBook-Air.local\n\nPAYLOAD:\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n  \u003cdict\u003e\n    \u003ckey\u003eCommand\u003c/key\u003e\n    \u003cdict\u003e\n      \u003ckey\u003eQueries\u003c/key\u003e\n      \u003carray\u003e\n        \u003cstring\u003eOSVersion\u003c/string\u003e\n        \u003cstring\u003eDeviceName\u003c/string\u003e\n        \u003cstring\u003eSerialNumber\u003c/string\u003e\n        \u003cstring\u003eIsSupervised\u003c/string\u003e\n      \u003c/array\u003e\n      \u003ckey\u003eRequestType\u003c/key\u003e\n      \u003cstring\u003eDeviceInformation\u003c/string\u003e\n    \u003c/dict\u003e\n    \u003ckey\u003eCommandUUID\u003c/key\u003e\n    \u003cstring\u003e15a8551f-9535-41de-8971-a750d54187f8\u003c/string\u003e\n  \u003c/dict\u003e\n\u003c/plist\u003e\n\n\nRESULTS:\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n  \u003cdict\u003e\n    \u003ckey\u003eCommandUUID\u003c/key\u003e\n    \u003cstring\u003e15a8551f-9535-41de-8971-a750d54187f8\u003c/string\u003e\n    $DATA_REDACTED\n  \u003c/dict\u003e\n\u003c/plist\u003e\n```\n\nI added the `---` between the results, and I made this the default output (note there's no flag passed to the command).\n\nwdyt?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@jahzielv @noahtalerman I updated the \"Product\" section, and specified that the command will, by default, have vertical output instead of the table (which is broken mostly).\n\nI think this is ready for user story review."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Sweet!"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "Btw, I added a couple steps to the test plan to make sure we test the flow with multiple results."
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "@jmwatts @marko-lisica per our convo in slack, I updated the test plan to test for the \"No results\" case. Thanks!"
          }
        ],
        "issueNumber": 31500,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-09-02T19:04:39.895535147Z",
    "items": [
      {
        "assignees": [
          "RachelElysia"
        ],
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgeLy9U",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          "~assisting g-orchestration",
          ":incoming",
          "#g-software"
        ],
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð¦¤ âIn review",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Hi @juan-fdz-hawa, just a quick note â for local styling issues, let's try to avoid making global changes. Iâm revert ingyour update in [this PR](https://github.com/fleetdm/fleet/pull/32217/files#r2316435884) and apply the fix locally to the specific component affected because it caused all these styling issues with every other modal on the device user page"
          }
        ],
        "issueNumber": 32474,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8c",
        "status": "ð£ In progress",
        "issueNumber": 31896,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8w",
        "status": "ð£ In progress",
        "issueNumber": 31900,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [ ] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [ ] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [ ] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [ ] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n- [ ] Complete MDM Smoke test\n- [ ] Complete Orchestration Smoke test\n- [ ] Complete Software Smoke test\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [x] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [x] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [x] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [x] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [x] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [x] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [x] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [x] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [x] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [x] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [x] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [x] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [x] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [x] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [x] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [x] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [x] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [x] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [x] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [x] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [x] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [x] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [x] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n- [x] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n\n### Engineering\n\n - [ ] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [x] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [x] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [x] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [x] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [x] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [x] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [x] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [x] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [ ] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [x] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-09-03T07:05:51.542797156Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeLy9U",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32474,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "labels": [
          "story",
          ":release",
          "customer-preston",
          "customer-cisneros",
          "customer-numa",
          "~mdm-maturity",
          "#g-software",
          "prospect-verstappen",
          "~context"
        ],
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdsS6Q",
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "issueNumber": 31999,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwXbo",
        "status": "âï¸Awaiting QA",
        "issueNumber": 30403,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP0g",
        "labels": [
          "story",
          "~frontend",
          ":release",
          "customer-numa",
          "~mdm-maturity",
          "#g-software"
        ],
        "issueNumber": 30238,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "milestone": {
          "title": "fleetd-1.48.0"
        },
        "issueNumber": 31396,
        "changeType": "modified"
      },
      {
        "assignees": [
          "Illbjorn"
        ],
        "content": {
          "body": "**Fleet version**: `main` 4dd22e639e5b6b429a2fa1caa29629ee28c6e966.\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nFAIL: TestIntegrationsParseReleaseHTML (0.44s)\nFAIL: TestIntegrationsParseReleaseHTML/should_parse_security_updates (0.03s)\n\nhttps://github.com/fleetdm/fleet/actions/runs/17392833270",
          "number": 32496,
          "repository": "fleetdm/fleet",
          "title": "Vulnerability test `TestIntegrationsParseReleaseHTML` failing on `main`",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32496"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeS31Q",
        "labels": [
          "bug",
          "#g-software",
          "flaky-ci-tests"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Vulnerability test `TestIntegrationsParseReleaseHTML` failing on `main`",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving to in spec to discuss \"to fix\""
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "moving this back to the release board as the workaround is basically complete.  @Illbjorn will file an eng init for the longer term solution."
          }
        ],
        "issueNumber": 32496,
        "changeType": "added"
      },
      {
        "assignees": [
          "drvcodenta"
        ],
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a contributor to Fleet-maintained apps,\n| I want to pull install scripts from Homebrew's artifact install key\n| so that I can specify (and auto-update) install instructions that are maintained by Homebrew for casks that use this convention.\n\n## Key result\n\n100 FMAs\n\n## Original requests\n\n#30518\n\n## Context\n- Product Designer: @iansltx \n- Engineering DRI: @iansltx \n\n### Engineering\n- [x] Test plan is finalized\n- [ ] New Homebrew key is supported, correctly generating install scripts over multiple packages (see [search on GitHub for all affected packages](https://github.com/search?q=repo%3AHomebrew%2Fhomebrew-cask%20%22installer%20script%3A%20%7B%22\u0026type=code)) that use this key, including Logitech Options+\n- [ ] Existing FMAs using the key are regenerated to use the new install script, removing unneeded custom script references\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\n1. Review the Homebrew FMA contributor docs.\n2. Add or revise Logitech Options+ (or [another similarly configured cask](https://github.com/search?q=repo%3AHomebrew%2Fhomebrew-cask%20%22installer%20script%3A%20%7B%22\u0026type=code)) in Homebrew-based FMA manifests to remove any specified (un)install scripts. If (un)install scripts were specified previously, remove them. If this is a new FMA, do not provide any (un)install scripts.\n3. Run FMA ingestion\n4. Confirm that the resulting manifest, when imported verbatim into Fleet, results in an app that passes QA for (un)install\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n",
          "number": 30781,
          "repository": "fleetdm/fleet",
          "title": "Pull Fleet-maintained app custom install scripts from homebrew's artifact install key",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30781"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgeS_WM",
        "labels": [
          "story",
          "~backend",
          "~engineering-initiated",
          ":product",
          "#g-software",
          "~qa-on-branch",
          "fma"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "ð¥ Ready",
        "title": "Pull Fleet-maintained app custom install scripts from homebrew's artifact install key",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "these are urgent enough that i'm moving them to the product board"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - Product Designer: @jahzielv\n\u003e - Engineering DRI: @jahzielv\n\n@jahzielv heads up that I just assigned you to this user story in the \"Ready\" column on the drafting board. Looks like you're bring this story through drafting.\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This is ready for async User story review, and can be moved directly to Ready to estimate once USR clears. Whoever does that, please set up Planning Poker when you make that move, similar to #26404.\n\nAsync USR signoff:\n\n- [x] @mostlikelee \n- [x] @jmwatts "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753133298483759)"
          },
          {
            "author": {
              "login": "drvcodenta"
            },
            "body": "Hey @iansltx , I think I can get something working on this -- would you please assign this to me?"
          }
        ],
        "issueNumber": 30781,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-09-03T19:04:41.863526895Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeLy9U",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Hi @juan-fdz-hawa, just a quick note â for local styling issues, let's try to avoid making global changes. Iâm revert ingyour update in [this PR](https://github.com/fleetdm/fleet/pull/32217/files#r2316435884) and apply the fix locally to the specific component affected because it caused all these styling issues with every other modal on the device user page"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed spacing has been corrected\n\n\u003cimg width=\"1776\" height=\"648\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6ef375e1-05cb-4a18-98d3-18c17dafc0fa\" /\u003e\n\n\u003cimg width=\"1774\" height=\"512\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4b5c4db3-8cc6-4d3c-9280-69b8adc8fe05\" /\u003e"
          }
        ],
        "issueNumber": 32474,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdqQM4",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "adding `customer-numa` as they recently requested last_opened_at on windows"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "meeting scheduled for Monday"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Related: https://github.com/osquery/osquery/issues/8677\n\nTherefore, will need to update Database to have two different timestamps and then verify that the API response returns the different (correct) timestamps"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nModified database per note above. Confirmed API response now returns different time stamps for each version/path:\n\n\u003cimg width=\"1773\" height=\"917\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4dd550fa-011a-4caf-8ea5-38bd7e749542\" /\u003e"
          }
        ],
        "issueNumber": 31932,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdUaqU",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica FYI we already have `\"last_opened_at\": null` on the API for installed app versions that haven't been opened, so no API changes required here. Revised the ticket template to reflect this.\n\nGoing to include a separate comment with more specific instructions on all I'm pretty sure we need to do, to see if I can feed this into Zed + Sonnet 4 and have it one-shot this :)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "All we need to do for this is\n\n1. Show `Never` rather than `---` on the column when the API field is null and `source` is `programs` or `apps` (those are the two sources where we have last opened time info), in `HostSoftwareTableConfig.tsx`\n2. Show `Never` rather than skipping the \"Last used\" field in `SoftwareDetailsModal.tsx` and `InventoryVersion.tsx` when the API field is null and `source` is programs or `apps`\n3. Rename \"Last used\" to \"Last opened\" in all three places, and remove the tooltip wrapper in `HostSoftwareTableConfig.tsx`\n4. Update tests in `SoftwareDetailsModal.tests.tsx` to reflect the above changes"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Mind pulling down the `ð¤-31268` branch and seeing if that gets us what we want here?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tweaks needed:\n\n* When showing multiple versions, show \"Never\" if all versions don't have an opened time and each individual version would've shown \"Never\"\n* Don't use the grey color for \"Never\" (but keep it for `---`)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica \n\n\u003cimg width=\"808\" height=\"342\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20422141-d1eb-445e-9c12-92edd366c242\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per design review, we're showing \"Not supported\" rather than \"---\" for sources where we don't support last opened time. Updated the screenshot in the issue description."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia Where do these map to in the UI?\n\nfrontend/pages/hosts/details/cards/Software/SoftwareDetailsModal/SoftwareDetailsModal.tsx\nfrontend/pages/hosts/details/components/InventoryVersions/InventoryVersions.tsx\n\nI think I'm missing a case in the test plan to cover both of these."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Fixed the screenshot to show both cases."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Found the other place where last opened time is: My device \u003e Software. Test plan is updated. Ping when the test plan is good to go; code's already written (by me) so this will land directly on the release board once the test plan is good to go."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx test plan is good to go, tried to move it to the release board, wouldn't budge. GitHub is defiant today. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given #31638 is landing soon, updated the spec here (and code in the PR) to include `deb_packages` and `rpm_packages` in supported software types. Support for the additional package types will land in osquery before 4.73 is out, and 4.73 will include detail query updates for support here, so RPM/DEB last-opened-at can be tested as part of QA for #27902."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Moved to waiting as testing is currently blocked. \n\n- It seems osquery is using spotlight to determine last_opened_time\n- This is dependent on bundle id\n- Two different versions installed at two different paths with the same bundle id, only one of them has ever been opened\n- osquery reports both opened at roughly/exactly the same time\n\nThis means that we don't really have a way to differentiate between different paths/versions when showing last opened time\nWe're not quite sure how the issue described in [#31932](https://github.com/fleetdm/fleet/issues/31932) actually happened, but I can't reproduce it now, and the fix for that issue doesn't resolve what I'm seeing now.\n\nOutstanding questions:\nDo I write an osquery bug/feature of some sort?\nDo I change the test plan on [#31268](https://github.com/fleetdm/fleet/issues/31268) ? Right now the test plan fails but it's not a new thing.\n\nMeeting scheduled 8/25 to discuss"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "meeting scheduled for Monday"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Removed the following two items from the test plan as they are blocked due to an [existing osquery bug](https://github.com/osquery/osquery/issues/8677)\n\n- [ ] Open one of the versions. Refetch and confirm that the column shows the most recent opened time. Confirm that the modal shows the correct opened time on one entry, \"Never\" for the other.\n- [ ] Open the other version. Refetch and confirm that the column shows the most recent opened time. Confirm that the modal shows the correct opened time on both entries."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n- [x] On the software inventory view in host details, confirm the \"Last opened\" column name with no tooltip\n- [x] Install two versions of an app or Windows program on the same host, but don't open either, and refetch. Confirm that the software inventory shows \"Never\" in black in the \"Last opened\" column. Confirm that the modal for installed paths shows \"Never\" in both entries.\n- [x] Install (or have in inventory) multiple versions of a software item for which we don't support last opened time. Confirm that the \"Last opened\" column shows \"Not supported\" in grey and the versions modal doesn't show the last opened time header. (Browser plugins, Python packages, iOS Applications)\n- [x] Confirm that \"Never\" / \"Not supported\" are handled similar to the above with a single installed version on a host\n- [x] Confirm behavior changes in the modal accessed by clicking a software item's name in My device \u003e Software."
          }
        ],
        "issueNumber": 31268,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_2ms",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed OS Kernel list view now filters out 0 host scenarios"
          }
        ],
        "issueNumber": 32257,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Heads-up: \"name\" editing would change which `software_title` the package is associated with based on how we're linking titles and packages right now, for OSes other than macOS, and that has implications for e.g. software updates where inventoried software need to name-match the corresponding installer. We also have validation that prevents package edits from  changing the associated software title. So we'll need to sort those implications out if we include name in scope here (this issue doesn't apply to icon and version)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \u0026 @noahtalerman  I've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n        1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n4. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n5. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "![Image](https://github.com/user-attachments/assets/ffd778b7-8620-4dd4-9229-edcac7210679)\n\nFYI @eugkuo "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?\n\n@mostlikelee do you want to include GitOps in this ticket or should GitOps and UI tickets be separated for reasons of scoping, etc.\n\ncc @ddribeiro "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Given that GitOps is a core differentiator for Fleet and given that the requesting customer wants GitOps for their workflows, GitOps needs to be part of the spec here (though it'll get its own subtask), as does `generate-gitops` support."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I neglected to mention you on these so re-adding to ping you:\n\nI've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n    1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n3. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n4. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, where we display the updated name/icon/version is going to determine at which level we need to implement, which will in turn have interplay with both inventory and access controls. Probably also useful to walk through how we get name/version/icon now and where they're stored.\n\nKey questions:\n\n1. Are any fields globally editable? If so, that means only global roles can edit them, right?\n2. For names, what happens when an associated app arrives in inventory with a different name?\n\n## Name\n\nFor everything without a bundle ID, gets set once on first inventory or package upload, and is the unique key for associating both installers and inventory for that source _globally_. The name is at the `software_title` level, and is visible in a bunch of places (self-service, software title details, etc.).\n\nFor apps with bundle IDs, this is added on initial upload or inventory, but may be edited later during software ingestion if we have a more \"canonical\" name come in from inventory. There's also the contributor API endpoint for editing names manually, but inventory may overwrite them. Unique key in these cases is bundle ID. The name is still at the `software_title` level, and is still visible in the same places.\n\n## Icon\n\nFor software that has been added as a VPP app on a team, each app has a URL for the 512x512 version of the Apple icon, as a PNG, loaded on-the-fly from Apple by the client. Icons are revised when they're revised upstream.\n\nFor software titles without an associated VPP app on the same team, icons are shown based on matching to SVGs embedded in the code, based on name + source matching. This means that Fleet server updates determine which icon is shown.\n\nThe above means that icons are currently team-specific with a global fallback.\n\nInventory doesn't affect icons. For example, iOS apps inventoried via MDM will have the generic Apple icon unless we have an SVG override (or the same app was added as a VPP app for that team).\n\nIcons *could* be extracted from some types of custom packages on upload.\n\n## Version\n\nThe below information is orthogonal to inventoried (installed) version.\n\nSoftware version is attached to the package or VPP app, so it's team-specific rather than global.\n\nFor VPP apps, version is set on add and updated hourly from Apple, since the latest version is pushed when a VPP app is installed.\n\nFor FMAs, the version in the FMA manifest is copied over when the FMA is imported into the software library.\n\nFor custom packages, the version is extracted as metadata on upload.\n\n---\n\nSince it's come up before on other features, the tradeoff with allowing edits of these values is that we'll get fewer bug reports when we're parsing metadata incorrectly on upload/inventory, as IT admins will just fix the names/icons/versions they care about if there aren't too many of them. My suggestion here would be to add analytics for cases where name/icon/version needed to be edited, and check in with customers who use that feature a lot to make sure we're not overlooking bugged behavior. How that data point is implemented will vary depending on how software field overrides work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given that scope has dropped on this, seems like we want to treat this as another piece of self-service, attached to the `software_installer`.\n\nOn the most recent review call I mentioned \"square PNG with dimension min/max\" and GitOps. Need to dig into this further."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee I've updated the designs and  [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=ALS0rcz3jje1fQwT-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642) to reflect that the only additional update is for the app icon.\n\nLMK what you think."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Does #29177 block this ticket? Also, there's no reason we don't allow jpgs and gifs as well as pngs once 29177 is done is there?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo 29177 doesn't block this, though there's some implementation overlap such that if we hit both of these in the same sprint we'll need to be more careful about subtask traffic jams (still two swimlanes worth of backend across the two tickets though).\n\nRe: JPG/GIF, those formats aren't the right match for icons, unlike SVG vs. PNG don't bring anything special to the table for the icon use case that PNG doesn't, and it's trivial to convert JPEG -\u003e PNG or GIF -\u003e PNG (since all are raster formats) where the raster -\u003e vector PNG -\u003e SVG conversion is less straightforward."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Figma looks good, thanks @eugkuo !\n\n- Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n- Only other thing to spec is how we want to show the error if it's not a square between specific dimensions."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n\n@RachelElysia Love the suggestion. Updated!"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I've added a test plan to this ticket. LMK what you think.\n\n@iansltx I know we discussed this yesterday but I can't quite remember the answer. When this icon is updated is it updated throughout our system? Like will it show up in the library and inventory with the new icon as well?\n\ncc @mostlikelee @RachelElysia "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added an [Error message design](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?node-id=7341-1459\u0026t=OJ1KwfgvtY5eZfwZ-11) to this ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Sorry for the delay on this. Originally my thought was \"just follow what we do for VPP apps\", which I thought was:\n\n1. Icon is associated with the VPP app\n2. Icon shows up when viewing the software title on the team that has the VPP app set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the VPP app is in scope\n\nWith the above assumption, custom package icons would behave as follows:\n\n1. Icon is associated with the software package\n2. Icon shows up when viewing the software title on the team that has the package set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the installer is in scope\n\nIn reality, if a VPP app gets added on _any_ team, a zero value-looking object gets tacked onto the all-teams view for that title; you can see this for [Keynote in Dogfood](https://dogfood.fleetdm.com/software/titles/1245). This object includes the App Store icon URL. We can do this in part because VPP icons _are_ global for a given Apple app ID (and the icon URL is stored on the global VPP apps table in the DB rather than on the team-specific table)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm still thinking that we handle custom packages according to the above (tied to the package, only shows up where we would populate package info), but that's not actually consistent with VPP if current VPP behavior is intended VPP behavior.\n\nA side effect of handling package icons this way is that an All Teams view of software wouldn't have an icon. The only workarounds for this would be:\n\n1. We pick the first (for some definition of \"first\") icon we find for a custom package\n2. We make software icon overrides global rather than package/team based\n\n...so this is a good design review discussion, both to determine desired VPP behavior and desired behavior here (which may be influenced by the \"why\" behind desired VPP behavior)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per this morning's discussion, I'm pausing digging in on eng DRI on this in favor of getting #27983 spec'd, as the expectation is that this will _not_ make it into the 4.71 dev sprint. There are also questions around existing behavior that should probably be cleaned up, as that will provide a consistent foundation to build this on. Those questions are documented in #29886."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee \n\nI've updated the [Prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?page-id=2%3A130\u0026node-id=7347-2401\u0026t=uf2ocmJrBfpBl076-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7347%3A1958) so that editing app icons happens at the title level and not at the package level. I've also removed icons at the package level to avoid confusion.\n\nThe expectation is that the icon at the sotware title level would be associated with the software everywhere this title is shown (in library and inventory and self-service).\n\n@RachelElysia Thoughts on wanting/needing a loading screen for the modal and a confirmation save vs immediately jumping back to the software title page with a toast confirmation?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One pivotal question that will determine a bunch of implementation details: are these icons 1:1 with `software_installers` records (in which case currently they're 1:1 with teams) or are they more global than that?\n\nLooking at the 1:1 with `software_installers` option:\n\n## Pros\n\n* Consistent with self-service flag and categories\n* Allows for e.g. marking app icons as \"beta\" (or using a version-specific logo) on a canary team if that team has a different app version\n* Doesn't interfere with VPP app icon semantics if a custom-icon package is available on one team and a VPP app is available on another (once we sort out which wins for All Teams)\n* Access control for icon edit matches access control for all software package edits, vs. requiring a global role\n\n## Cons\n\n* Icon must be set once per team (less of a big deal with GitOps?)\n* Undefined behavior for showing software in \"All Teams\" (worse than VPP's current undefined behavior)\n* Potentially jarring if switching teams changes or loses an icon (this happens with VPP)\n* If implemented as \"an icon URL under software package\", inventoried software versions won't see the icon\n\nQuestion is how many of the pros/cons matter in this particular use case. FWIW I would expect that in either case we would be consistent with the icon shown within a team, for calls to software endpoints (not software version endpoints). Since My device only calls software endpoints (not versions), the icon on the software list would match the icon for self-service install (and update)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "One thing to add to what @iansltx is saying is that there are apps that have/will change icons with various releases (see Adobe products, which look like they update their icon every few years).\n\nSo. It seems like we should go back to associating icons with installer packages. I still feel like the Software title icon should inherit the latest installer package icon. \n\nWRT All teams and defining icons. Why can't we show installer packages on the all teams level and let people edit the icons there when editing. If a software title is selected from \"All teams\" we would show all the installer packages that have been added (surfacing the team(s) the packages are tied to). Ideally we'd be able to collapse all the installer packages so that we would only need to show one installer package that had been uploaded associated with multiple teams.\n\nI'm sure this is blowing up scope and throwing wrenches all over the place, but what do we think about the idea?\n\n@iansltx @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo What would you define as \"latest\" here? Most-recently uploaded/updated? Would that work cross-team? How would that interact with VPPs, which have their versions automatically bumped within ~1 hour of a new version coming out on Apple's side?\n\nRe: showing all installers when viewing All Teams, while that's useful, that would require decent-sized API and frontend changes, so deserves its own ticket."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I'd define latest as the latest version number (newest version).\n\nI totally hear you on showing all installers on All teams being its own ticket. I'll write that as a feature request when I get a chance."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Hm. So the idea would be that, for All Teams, we'd check all VPP apps and all packages with icons customized, rank by version number descending, and use the icon of whatever was at the top? Which would usually be the VPP app due to auto-updates, but might fall back to an FMA or the like.\n\nIf that's the idea, we might have to do some finagling to make sure the version calculation is fast...and we'll need to decide on what happens if the same package is uploaded to two different teams with two different icons...but that _would_ mean that at least the \"all teams\" part of #29886 is now expected/intended behavior, which is good (still need to decide what to do with version view there though)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nThe part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\n@mostlikelee could you gut check us on what we're talking about here? I know you were trying to keep this from getting out of hand and I don't want to explode things unknowingly. Clearly some of this is looking into the future, but could you make sure to ground us to what we 'need' or 'should' be doing at this time?\n\nThanks!"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh my, we may have officially took a detour to the dark side of icon town.  lets get a chat on the books for next week."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e [@iansltx](https://github.com/iansltx) Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nOriginal thought was handle it on retrieval but we could handle the recalculation when the criteria for which icon wins changed. That would be in the VPP version bump cron, when a custom icon was added/deleted, when a package was edited/deleted, or eventually when a FMA was added. For the last bit, FMA icons would actually get _lower_ priority than custom icons because they're currently implemented as just software title matching based defaults, but I'd expect that to change to the same \"priority\" as custom package icons once #29177 is implemented.\n\nWe'd need to add a column to `software_titles` for this, to point to the `software_installer` we want to use the custom icon of (if any), but that's doable if we need icon display at the All Teams level to work a specific way.\n\n\u003e \n\u003e The part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\nRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I have it at the top of the design review column in the drafting board so was intending to make this the first thing we talk about at DR on Tuesday. If you think this warrants its own time I'm open to it."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003eRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?\n\n@iansltx . But wouldn't it be cooooool if fleet recognizes a unique software package that's uploaded to our servers and pushes that out to everyone? Like why hold duplicates of the same thing? The icon thing we could do by organization so that doesn't get too wonky. If an organization wants to change their icon it will affect the entire organization but it won't affect others. So if Zorro corp wants to bastardize all their app icons with a flaming 'z' they can go for it but it won't touch Acorn Inc."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo There are some tradeoffs there that expand well beyond (the scope of) icon management and potentially conflict with tradeoffs needed for multiple installers per team. Definitely easier to discuss this synchronously.\n\nAlso not sure what you mean by \"organization\" (global? team?). One thing I'm thinking of is MSP customers who are running each company as its own team, and how this functionality should work in that deep of a silo."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh interesting use case where teams are acting like companies. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Given the above conversation, should custom package icons be scoped to the team/package they're on, or should they be global (at the software title level)? This has implications for how #29177 gets implemented, so is a higher-priority decison."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "```mermaid\nflowchart TD\n    A[\"Has custom icon (uploaded by user)\"] -- Yes --\u003e B[\"Show custom icon on software title (not on version) on team where icon (package) is uploaded\"]\n    A -- No --\u003e C[\"Is VPP app?\"]\n    C -- Yes --\u003e D[\"Show icon from App Store on software title (not on version) on team where VPP is added)\"]\n    C -- No --\u003e E[\"Strict name matching\"]\n    E -- Yes --\u003e F[\"Show SVG icon on a software title/version based on strict name/source rules defined by Fleet (contributors) in frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    E -- No --\u003e G[\"Loose name matching\"]\n    G -- Yes --\u003e H[\"Show SVG icon on a software/version title based on what software name starts with. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    G -- No --\u003e I[\"Source-based matching\"]\n    I -- Yes --\u003e J[\"Show SVG icon on a software/version title based on the software source. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    I -- No --\u003e K[\"Default fallback\"]\n    K --\u003e L[\"Show SVG package icon on a software/version. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@noahtalerman @iansltx, if you get the chance, could you please review the flowchart above?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica For the above, my biggest questions are how much of the decision tree applies to the following matrix:\n\n| | My device | Host details |\n| - | --- | --- |\n| Installed | My device \u003e Software | Host details \u003e Software \u003e Inventory |\n| Available | My device \u003e Self-service | Host dtails \u003e Software \u003e Library |\n\nAnd, for the inventory views, if we're showing anything other than SVG icons, where do those icons exist in the API response?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx I think let's keep this simple. If there's an icon override, we keep it on software title level under `software_package` or `app_store_app` as `custom_icon_url`.\n\nSVGs are displayed everywhere, and I think we should add more of them in the future. As we plan to introduce webview setup experience in the future, SVGs will be displayed there as well.\n\n- `GET /api/latest/fleet/software/titles` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/software/titles/:id` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/hosts/:id/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/device/:token/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n\nSo, icon overrides will be only available for software titles that are available. It won't show up on the versions of that title, and it won't show up in other teams."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@marko-lisica Is this being added to fleetctl generate-gitops?\n\nShould this work for team and global admins, and team and global maintainers, but not other users?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "FE Tests:\n- SoftwareIcon.tsx has no tests\n- GitOps yaml add to the test\n- GitOps mode disable editing"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Rough spec'ing notes:\n\n## GitOps changes\n\nIcon\nLocal hashing\nDeduplicate uploads\nReturn icon hash + filename on batch software status endpoint\nReturn icon hash + filename on batch VPP app status endpoint\nDon't repeat no-op uploads (use hash + filename)\nHash on icon PUT request\nRun in parallel\n\n## Generate-gitops\n\n## My device\n\nSoftware list endpoint; different URL\nIcon GET by device ID\n\n## Main API\n\nListHostSoftware (different URL)\nUpdate icon - incl. validation of format/size server side\nGet icon\nDelete icon\nSoftware titles list endpoint\nSoftware title endpoint\nSoftware versions endpoint (title ID)\nSoftware version endpoint (title ID)\nPackage + app store add/edit responses (make sure icon in response)\n\nSetup experience - update endpoint\n\nDocs\n\n## FE\n\nTitles view\nEdit modal\nPreview\n\nTitle list\nVersions list (don't download icon multiple times for the same title)\nAuthenticate when relative URL\nVersion view\nSoftware inventory\nSoftware library\n\nRename edit\n\nSelf-service tab\nSoftware tab of my device\n\nSetup experience UI"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @mostlikelee Just pushed https://github.com/fleetdm/fleet/pull/31324/commits/c577ded229f6a114d6fd940db2282ed8f69cad55?w=1 to API/YAML because we were missing some API endpoints based on the spec work I just did."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia @ksykulev #32459 covers software version icon display (taken out of scope of this ticket) and vulnerabilities icon display (missed in this ticket; would have been a late add of new surface on a ticket that's already at risk). Subtasks have been updated."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "We had a bit of a conversation about \"no team\" when talking about display name overrides. I noticed we don't have this explicitly mentioned in this test plan. I know \"no team\" is typically designated with a `0`. But probably worth calling this out."
          }
        ],
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica (/cc @mostlikelee) We have three issues that'll need product direction here.\\, based on some initial research.\n\nIn descending order of magnitude:\n\n## Multiple kernels\n\nLinux hosts generally have multiple kernels installed, though only one is active at a time. How do we want to handle this, given that a host can be actively using an older/vulnerable kernel, or that kernel may be available but not loaded, and we won't be able to tell one way or the other based on software inventory (we _can_ based on the `kernel_info` table but we don't currently inventory that)?\n\nFor example, I cross-referenced `kernel_info` version with inventoried packages on Dogfood to see how Linux hosts there lined up:\n\n* [fedora 41](https://dogfood.fleetdm.com/hosts/1348) - `kernel-core` RPM package (`kernel` would work too but doesn't on the other host; was running the later of multiple versions)\n* [ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1319) - `linux-image-*-generic` (`linux-image-generic-hwe-*` returned one of the two kernels, and not the one the host was actually running)\n* [another fedora 41](https://dogfood.fleetdm.com/hosts/1318) - `kernel-core` RPM package (was running the older kernel)\n* [another ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1267) - `linux-image-*-genreric` (was running the older kernel IIRC)\n\nAll of the above hosts have more than one kernel version installed, and it's a toss-up on whether a given host is using the latest installed kernel or some other one (using `kernel_info` as the source of truth). The two Ubuntu hosts have quite different kernel versions installed as well between each other.\n\n## No kernel\n\nHow do we want to handle Linuxes that don't have a kernel? Linux running in a container shares the host kernel, so won't have kernel vulnerabilities of its own. I'm assuming we need to show these hosts in the OS list UI, but we'll need to communicate that no, those hosts didn't have a kernel of their own, so there won't be kernel-level vulns inside the container, though the host might have some. For example, `SELECT * FROM kernel_info` on an Ubuntu container running in Docker for Mac gets me a kernel version of `6.10.14-linuxkit`, which won't match anything in OVALs for the OS inside the container.\n\n## Where to display kernel version\n\nThinking we want to just show the kernel version, and only the version number part of it (so, software `version` field), as part of the Version column in the OS list, leaving the OS name as-is. This will mean that there will be multiple rows for the same OS name, but that's probably still cleaner than having two versions in the name line."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Temporarily assigning this to @marko-lisica we I'm blocked on decisions about no-kernel/multi-kernel. I'll self-assign to continue spec'ing once unblocked."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "FYI @marko-lisica I'm baking in the assumption that individual CVE UIs do _not_ change as part of this story, so we won't be showing Linux OSes in the Operating Systems section of individual vulns. The vulnerability affected hosts will be fully covered in the software section anyway (for each kernel) so we aren't hiding information here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "For reference: per discussions yesterday, we're keeping the OS list to one item per OS version, rolling up all kernel vulns into that single entry, and splitting out kernels when viewing a single OS version's details. This ensures that hosts aren't double-counted in list views when they have multiple kernels installed, and aren't skipped when they have no kernel of their own."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Two pieces of feedback from @jmwatts as we were walking through UI/test plans today (corresponding to Figma comments):\n\n1. Add a dev note or example UI row indicating \"view all hosts\" when kernel rows are rolled over\n2. Add help text above the kernels list (inside the kernels card) explaining why host counts are expected to not sum up from kernels to the overall number. Something like:\n\n\u003e Each Linux host may have multiple kernels instealled. Containerized and paravirtualized hosts do not have a kernel of their own.\n\n@jmwatts Let me know if we need to explicitly say \"host counts won't sum up\" or whether the above is enough."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @iansltx @jmwatts, thanks for the feedback.\n\nI added few more dev notes in Figma:\n\u003cimg width=\"921\" height=\"887\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/524bb7a9-33fc-47f3-88be-8e41ad922db6\" /\u003e\n\n "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch.\n2. Enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. \n3. Enroll a Linux host in a container with a different OS version unique to that container.\n4. Run vulnerabilities + cleanups/aggregations jobs.\n- [x] Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n- [x] Confirm that the API response populates the vulnerabilities key for Linux OS versions.\n- [x] Navigate to a Linux OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version.\n- [x] Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n- [x] Clicking the host count on the kernel card should navigate to the host list filtered by OS\n- [x] Clicking \"view all hosts\" in this card should navigate to a host list filtered by kernel and OS.\n- [x] Confirm that the API response for the individual OS version includes vulnerabilities and kernels entries, with kernels format matching what you'd see in software_title.versions[] when viewing an individual software title.\n- [x] Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nNOTES: \nRemoved: On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show ---. #31495"
          }
        ],
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoc",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962030809)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA notes**\n\nConfirmed \n- [x] Vulnerabilities show up in the OS list endpoint for Linux hosts\n- [x] Kernels show up on the OS entity endpoint\n- [x] Host counts reflect only hosts with that combination of OS and kernel software (filtering out hosts with the same kernel software but a different OS version)."
          }
        ],
        "issueNumber": 31213,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdB-kE",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "**Final est: 5**\n1 update OS page, 3 add new table, 1 ensure software details page works\n\n**Bold estimate: 3** since those two 1s are tiny and the table is basic so might not be quite a 3"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA notes**\n\nVerified frontend changes as shown in [Figma](https://www.figma.com/design/857ERt8x6l5fnLC1Yuy0bA/-30738-Software-%3E-OS--Surface-Linux-kernel-vulnerabilities?node-id=2-130\u0026p=f\u0026t=RQPsb5yWWjoI2ZdP-0)"
          }
        ],
        "issueNumber": 31212,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8s",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31163,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-09-04T07:05:31.420154912Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "status": "âï¸Awaiting QA",
        "issueNumber": 30095,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoAQ",
        "status": "ð¦¤ âIn review",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "DONE @noahtalerman: What do we do about policy automations? Right now policies in GitOps assume one package per package YAML file.\n  - @iansltx: Today, `fleetctl generate-gitops` works around this by using a `hash_256` to specify the hash. Maybe we can use the same to solve this.\n \n@noahtalerman: Decided like this: either use hash or path to a file. If the file has more than one package, Fleet will error. Specified in [this dev note](https://github.com/fleetdm/fleet/pull/31086/files#r2222732518)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [ ] In your team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\u003e   - @noahtalerman: I think testing this requires the changes in this separate user story: https://github.com/fleetdm/fleet/issues/30095\n\nDONE: @noahtalerman: Pull this into #30095\n\n- @noahtalerman: Added the below to the test plan for #30095.\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @iansltx @jmwatts ^"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "TODOs (will write these up better later):\n\n* Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n* Documenting \"error if multiple packages in setup experience YAML file\"\n* Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n\nWe decided to deprecate support for the non-list behavior but maintain backwards compatibility. See this dev note: https://github.com/fleetdm/fleet/pull/31086/files#r2219494344\n\n\u003e Documenting \"error if multiple packages in setup experience YAML file\"\n\nIn this [separate GitOps story](https://github.com/fleetdm/fleet/issues/30095), we decided to support applying `setup_experience`. From that separate stories QA plan:\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\n\u003e Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?\n\nI think this is covered by the [YAML reference doc updates](https://github.com/fleetdm/fleet/pull/31086). We're showing that a list length of 1 is the best practice."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman FYI we'll need to make some slight tweaks to the modal implemented in #28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nAlso, thoughts on removing the old functionality and adding a script to fix existing software YAML files (linked from the \"this was removed\" error) instead of moving the schema to undocumented but still incurring the maintenance burden of supporting it? If we think this is the proper way to format software packages, \"indent the existing file by two spaces and prepend a `- ` to the first line might be simple enough to perform with a single sed/awk command."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "- UPDATE: @noahtalerman: Added [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) to the issue description (including test plan).\n\n\u003e FYI we'll need to make some slight tweaks to the modal implemented in https://github.com/fleetdm/fleet/issues/28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nYep! We want to tweak the UI here with an indent and a hyphen.\n\nDONE: @noahtalerman \n\nAlso, update the package name to include `.package`:\n\n\u003cimg width=\"597\" height=\"83\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b09f13a-630f-48bf-81b7-4555fc4c81a5\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Sorry for the delay on this one. Subtasks are created. Ask away with questions you have."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee @jmwatts @noahtalerman just worked through part of the test plan and...\n\nFor the \"specify the same package multiple ways and expect an error\" QA step in \"multiple YAML formats\", we don't actually stop an end user from specifying the same URL multiple times in the same GitOps config for the same team, and the result is \"last in wins.\" This is existing behavior (released bug), and also affects the first two error paths in the \"new functionality\" section of the test plan.\n\nGiven that we don't already solve for this, fixing this behavior would be a drastic scope expansion, as while we could catch more obvious cases client-side (same URL on multiple packages on the same team, same hash on multiple packages on the same team), catching different versions of the same package would only be doable server-side, and then only by tracking metadata as each package is downloaded and checking for duplicates at that stage. I think we may do this with hash right now, but given that we don't even dedupe the same URL we're definitely not deduping bulk actions that would overwrite packages with the next URL read.\n\nWill chat through this in standup tomorrow (Sep 4) and get an issue (IMO a released bug) filed thereafter."
          }
        ],
        "issueNumber": 30849,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP80",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31901,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP88",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31902,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8w",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31900,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP9A",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31903,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCn44",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31207,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnxU",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31206,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to add a custom icon for my software\n| so that my end users can easily find the software they need on the **My device \u003e Self-service** page.\n\n## Roadmap item\n\nNone\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #24802 \n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @iansltx \n  \nMake sure to solve this: #29886\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=0-1\u0026t=DrMQziG5Cl0BDJbU-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: #31324\n- [x] REST API changes: #31324\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: Specified in Figma above.\n- [x] GitOps generation changes:\n  - Specified in Figma above.\n  - `gitops-generate` command should download icons.\n- [x] Activity changes: #31382\n- [x] Permissions changes: Global/team admins and maintainers can apply update icon. Covered by \"Add, edit, and delete software\" in permissions guide.\n- [x] Changes to paid features or tiers: Available in Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: The icon added by user will display on self-service and software inventory tabs on My device page.\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: #31324\n- [ ] Feature guide changes: Update [self-service](https://fleetdm.com/guides/software-self-service), [custom package](https://fleetdm.com/guides/deploy-software-packages), [VPP](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) articles to reference icons/how to change them\n- [ ] Database schema migrations: Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID (will dump icons onto the software installers bucket)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### UI\n\n- [ ] Make sure that the edit action is available next to the software title name, only if the software title has a package or VPP app added.\n- [ ] Verify that the user can upload a PNG icon by clicking on the edit icon next to the software title name in the **Edit software** modal.\n- [ ] Verify that the user can only select PNG files.\n- [ ] Verify that Fleet returns an error if the icon doesn't fit into specs defined in Figma.\n- [ ] Make sure that the user can preview the icon in the **Edit software** modal, once it's selected and before it's uploaded.\n- [ ] Verify that the icon in the preview is displayed according to the priority order described in Figma..\n- [ ] Make sure that the preview under the **Fleet** tab shows the real software title name, icon, type and versions count. The table underneath the transparent overlay should be static.\n- [ ] Make sure that the preview under the **Self-service** tab shows the real software title name and icon. Other data should be static.\n- [ ] Make sure that if the user deletes the selected or uploaded icon, the preview shows the fallback icon.\n- [ ] Verify that when the VPP icon is available, the upload form is still available in the **Edit software** modal, so the user can override that icon with a custom PNG.\n- [ ] Make sure that the uploaded icon shows on software title details, ~version details,~ titles list, ~versions list,~ on a team where the icon is added.\n- [ ] Make sure that we do client-side validation if the icon size doesn't fit specs, before the user hit \"Save\" (upload) icon. Show error flash message specified in Figma. \n- [ ] Make sure that the uploaded icon shows on the host's software library and inventory pages, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows on the My device software and self-service tabs, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows in /controls/setup-experience/install-software when selecting software to be installed\n- [ ] Verify that when GitOps mode is enabled, on the software title details page, the edit button (next to the software title name) is disabled, and that the GitOps tooltip is displayed on hover.\n- [ ] Verify that `icon` field is added in GitOps generation modal.\n- [ ] Verify that icon download link is added in GitOps generation modal. \n\n#### API\n\n- [ ] Verify that the icon can be updated with the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that an icon can be added to \"no team\" via the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be deleted with the new `DELETE /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be downloaded with the new `GET /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that Fleet errors if icons are not PNG, not square, or not between 120x120px and 1024x1024px, when user tries to upload with PUT endpoint.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles/:id`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/device/{token}/software`.\n- [ ] Verify that if no uploaded icon and no VPP added, `icon_url` is `null` (for every endpoint above).\n\n#### GitOps\n\n- [ ] Verify that the icon can be added to a software package (`software.packages` \u003e `lib/software-name.package.yml` \u003e `icon`).\n- [ ] Verify that the icon can be added to the App Store app (`software.appâ_storeâ_apps.icon`).\n- [ ] Verify that the icon can be removed from the software package or App Store app\n- [ ] Verify that adding the same icon file to software packages across multiple teams adds the icon for each software package on each team and doesn't result in significantly slower gitops runs or adverse file-system effects (excessive files in /tmp directory when running)\n- [ ] Verify that previously uploaded icons are downloaded and referenced when running `fleetctl generate-gitops`\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpok",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753366962273099)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jakestenger this is a subtask.  you'll want to add customer labels to the parent story"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Larger customer environments are 50-125k linux hosts. Will spin up load test environment to evaluate vulnerability processing times and page loads. "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nSetup local environment on 4.72 with 50,022 hosts total, mostly Ubuntu 22.04 osquery-perf hosts.\nTotal of 106 teams, most are empty.\nI filtered down to the hosts that had kernels in software (6649) (only some hosts have software inventory and some don't due to osquery-perf randomization).\nThen transferred hosts, 20 Teams with 50 hosts each -\u003e 1000 hosts are on teams, 5649 are on \"No Team\"\nRan `cleanups_then_aggregation` cron\nRan `vulnerabilities` cron - Time to complete 29 min 18 seconds\nRan `vulnerabilities` cron again - Time to complete 1 hour, 29 minutes, and 49 seconds\nSubsequent runs took an hour and a half\n\nUpgraded to 4.73\nRan `cleanups_then_aggregation` cron\nRan `vulnerabilities` cron - Time to complete was approximately 30 min\nRan `vulnerabilities` cron again - Time to complete was approximately 1 hour, 30 minutes\n\n- [x] 4.73.0 Vulnerabilities cron run times were comparable to 4.72.0 cron run times\n\nNoticed loading /software/os page has been slower. On 4.72.0 the page took less than one second to load. On 4.73.0 it is consistently taking 6-7 seconds to load. Network speed when noticing this change is 87.5Mbps download/23Mbps upload.\n\nhttps://github.com/user-attachments/assets/4270f9c3-2e3f-4d2f-a6a8-d1c2c9855a9c\n\n"
          }
        ],
        "issueNumber": 31214,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCo1s",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Thanks for following the new [engineering-initiated process](https://fleetdm.com/handbook/engineering#create-an-engineering-initiated-story). This sounds like a good value add effort, so I'm prioritizing for drafting and assigning you as the product designer to complete the [draft an engineering-initiated story](https://fleetdm.com/handbook/engineering#draft-an-engineering-initiated-story) process."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "This actually looks product-complete, so pulling into User Story Review."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Note that per the eng-init section of the handbook, irrelevant product checkboxes were deleted from the issue description."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx One thing I'm not clear on from this ticket is what is the current state? How long does it currently take for the false positive to clear?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Current state is two hours. See\n\nhttps://github.com/fleetdm/fleet/blob/33a703920378a7084319da99a5af5c52a1cff6a2/articles/vulnerability-processing.md?plain=1#L28\n\n(I have a PR to fix the typo there)\n\nwhich maps to this code:\n\nhttps://github.com/fleetdm/fleet/blob/33a703920378a7084319da99a5af5c52a1cff6a2/server/vulnerabilities/nvd/cve.go#L326-L336"
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@iansltx Got it. And currently the Fleet cron runs hourly, so this change will take it from up to two hour to up to one hour? "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath (sorry, misunderstood your comment, one moment)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@lukeheath With this revision, the vulns run after a false positive is fixed would correct the issue. Via cron, that would happen every hour, but you could make it happen more quickly by triggering the job manually."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hey team! Please [add your planning poker estimate](https://app.zenhub.com/workspaces/Drafting-6192dd66ea2562000faea25c/issues/gh/fleetdm/fleet/26404?planning-poker) with Zenhub @jahzielv @ksykulev"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@lukeheath chatted with @mostlikelee and decided to deprioritize this one. We want to get to customer requests first and we need to make some room."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "```go\nnumberOfTimesExistingStaleVulnHandlingIncreasedFrictionOnVulnManagementWork++\n```\n\nFor #28983.\n"
          },
          {
            "author": {
              "login": "jahzielv"
            },
            "body": "yeah I forgot about that this morning: https://fleetdm.slack.com/archives/C086V2QK76X/p1747311488652479"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Ready for async User story review. Whoever signs off on this last, please move this directly to \"Ready for estimate\" and start Planning Poker, as this one's already spec-complete.\n\n- [x] @mostlikelee \n- [x] @jmwatts (you checked the \"test plan finalized\" box back on April 8, and the test plan hasn't been modified since, so...should be good here?)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@iansltx yes this one should be good"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753214019845799)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Tested this by inserting an extra `software_cve` entry pointed at a combination of existing CVE and existing software (but a CVE that didn't actually apply to that software), with NVD as the source ID, then ran the cron. Existing vulns stuck around, but my manually inserted false positive didn't. Still traverses the relevant code paths, but took less time to verify."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\nRestored a previous backup that exhibited a false positive vulnerability.\nRan vulnerability scanning.\nConfirmed that the false positive still showed up in the previous version.\nUpgraded to the fix version.\nRan vulnerability scanning again.\nConfirmed that the false positive no longer shows up."
          }
        ],
        "issueNumber": 26404,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCos4",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Reproduced. Had many installers uploaded to my fleet instance. Ran `fleetctl trigger --name uninstall_software_migration` and observed the following output:\n\n\n```\nlevel=debug ts=2025-07-07T15:20:22.899346Z component=http user=admin@fake.com method=POST uri=\"/api/latest/fleet/trigger?name=uninstall_software_migration\" took=8.484917ms\nlevel=debug ts=2025-07-07T15:20:22.90024Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=\"done, trigger received\"\nlevel=info ts=2025-07-07T15:20:22.915365Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" status=pending\nlevel=debug ts=2025-07-07T15:20:22.915439Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=starting jobID=uninstall_software_migration\nSDK 2025/07/07 10:20:22 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:23 WARN Response has no supported checksum. Not validating response payload.\nlevel=warn ts=2025-07-07T15:20:24.777168Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=543 storage_id=no_check err=\"unsupported file type\"\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nSDK 2025/07/07 10:20:24 WARN Response has no supported checksum. Not validating response payload.\nlevel=warn ts=2025-07-07T15:20:25.682907Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=544 storage_id=no_check err=\"unsupported file type\"\nlevel=warn ts=2025-07-07T15:20:28.107299Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=545 storage_id=3ccb062c081bd7ac5b8a9183ebb6a52cfd6046411e6d51a89f12e132b6672f63 err=\"unsupported file type\"\nlevel=warn ts=2025-07-07T15:20:28.308374Z cron=uninstall_software_migration component=uninstall_software_migration msg=\"extracting metadata from installer\" software_installer_id=547 storage_id=67dfa6f184794373a490d5d7ae1ae00b5db80d710c946f8be1ee210d12e54a05 err=\"unsupported file type\"\nlevel=info ts=2025-07-07T15:20:28.314756Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" status=completed\nlevel=debug ts=2025-07-07T15:20:28.317486Z cron=uninstall_software_migration component=uninstall_software_migration schedule=uninstall_software_migration instanceID=\"zzLKQdD0TOOTJLjckKrXV61MNHMn52+qHzuEhS5Wp0UuZvFUuRptmwjW0Eae1vfP5moE7h5kdiQqAlsdbTpXLQ==\" msg=\"23h55m27.682518s remaining until next tick\"\n```\n\n\nThose ids correspond to:\n```\nmysql\u003e select id, filename, extension from software_installers where id in (543, 544, 545, 547);\n+-----+----------------------------------------+-----------+\n| id  | filename                               | extension |\n+-----+----------------------------------------+-----------+\n| 543 | googlechrome.dmg                       | dmg       |\n| 544 | googlechromestandaloneenterprise64.msi | msi       |\n| 545 | AcroRdrDC_2500120529_MUI.dmg           | dmg       |\n| 547 | nice-dcv-viewer-2024.0.8004.arm64.dmg  | dmg       |\n+-----+----------------------------------------+-----------+\n4 rows in set (0.01 sec)\n```\n\nI noticed earlier occurrences of this in my logs as well, those packages corresponded to:\n```\n+-----+--------------------------------+-----------+\n| id  | filename                       | extension |\n+-----+--------------------------------+-----------+\n| 341 | A+ Suite for Mac_sign.pkg      | pkg       |\n| 342 | AcrobatUpd10116.pkg            | pkg       |\n| 343 | AddWindowsExplorerShortcut.exe | exe       |\n| 345 | Airtame.pkg                    | pkg       |\n| 346 | AutodeskFusion-005.pkg         | pkg       |\n| 347 | AutoPkg-2.7.3.pkg              | pkg       |\n| 348 | AWS VPN Client.pkg             | pkg       |\n| 349 | AWS_VPN_Client.msi             | msi       |\n| 351 | BoxDrive.pkg                   | pkg       |\n| 353 | cli-arm64.exe                  | exe       |\n| 354 | cli.exe                        | exe       |\n| 355 | CloudflareWARP.pkg             | pkg       |\n| 358 | Egnyte Connect-3.14.18.pkg     | pkg       |\n| 360 | Elmedia Player-8.22.pkg        | pkg       |\n+-----+--------------------------------+-----------+\n```\n\nSo, not certain this is related to a specific package type. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts FWIW `no_check` in the DB was a different issue (fixed in 4.71 or 4.72; we shouldn't have anything with a storage ID of `no_check`). Other errors were likely because the DB had software in it that wasn't in object storage. Fix I just PR'd fixed the original issue; the other ones look to be environmental to your local and/or resolved elsewhere already."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "merged before kickoff, so i'm assigning this to sprint 44.  will do the same next sprint so it's consistent."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "changing my mind here. this wont actually affect the burndown chart.  moving back to 45"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nUploaded a variety of package types (packages previously shown to cause this warning)\nRan fleetctl trigger --name uninstall_software_migration and watched the logs for warnings\nNo warnings resulted. "
          }
        ],
        "issueNumber": 30565,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "milestone": {
          "title": "Fleetd-1.47.0"
        },
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "blocking waiting on replication steps for QA steps from contributor"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "contributor is OOO, and fleetd cut happened this morning.  I'll figure out next steps here"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "the PR is reverted from the 1.46 release branch so we don't block the fleetd release"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@fuhry Can you point us to a package that previously failed that gets fixed by this change?"
          },
          {
            "author": {
              "login": "fuhry"
            },
            "body": "@iansltx I experienced a different issue (configuration file conflict) when installing Zscaler, but I knew to change this setting from some previous Debian/Ubuntu sysadmin experience. This wasn't demanded by any specific package used on our own Fleet-managed systems.\n\nI believe `sendmail`, `postfix` and `mariadb-server` are historically some of the worst offenders for high-priority prompts during installation. Although those are unlikely to be the kind of thing people are installing with Fleet, they should make good artificial test cases. Note that I haven't personally verified that these packages still do this, so please take this with a grain of salt."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Moving the milestone back because per #32521 this work is definitely in fleetd 1.47 /cc @jmwatts @mostlikelee @getvictor "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@fuhry I tried to reproduce the original issue with:\n\n[sendmail-base_8.17.2-1_all.deb](https://old-releases.ubuntu.com/ubuntu/pool/universe/s/sendmail/sendmail-base_8.17.2-1_all.deb) - installed, did not prompt\n[postfix_3.10.4-1_amd64.deb](http://http.us.debian.org/debian/pool/main/p/postfix/postfix_3.10.4-1_amd64.deb) - required several dependencies and could not be installed, did not prompt\n[mariadb-server_11.8.3+maria~ubu2404_amd64.deb](https://dlm.mariadb.com/4425632/MariaDB/mariadb-11.8.3/repo/ubuntu/pool/main/m/mariadb/mariadb-server_11.8.3+maria~ubu2404_amd64.deb) - required several dependencies and could not be installed, did not prompt\n\nAny hints on where to find the correct .deb files to reproduce would be very helpful! I need to see the initial defective behavior first and can then verify the fix. "
          }
        ],
        "issueNumber": 31396,
        "changeType": "modified"
      },
      {
        "assignees": [
          "marko-lisica"
        ],
        "content": {
          "body": "### Requestor\n\n- Application name: Omnissa Horizon Client\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [x] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [x] App adds successfully to team's library\n- [x] App installs successfully on host\n- [x] App opens successfully on host\n- [x] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog",
          "number": 32558,
          "repository": "fleetdm/fleet",
          "title": "New FMA: Omnissa Horizon Client",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32558"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeV3hE",
        "labels": [
          ":release",
          "#g-software",
          "fma"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "New FMA: Omnissa Horizon Client",
        "issueNumber": 32558,
        "changeType": "added"
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent: 1.47.2\n\nIncludes updates to: \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n\n- Desktop `v1.46.0` \u003e `v1.47.2`\n\nFleet 1.47.2 has been released to the `edge` channel.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 32561,
          "repository": "fleetdm/fleet",
          "title": "Release QA: fleetd v1.47.2",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32561"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeWFPI",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "Fleetd-1.47.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Release QA: fleetd v1.47.0",
        "issueNumber": 32561,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-09-04T19:04:31.715860262Z",
    "items": [
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.73.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n2nd pill doesn't show up immediately, takes a few seconds, then shows up\nhttps://github.com/user-attachments/assets/09b08603-bb18-46b6-bab3-e2c5b78aa9c5\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\n- Page loading state includes call to os version API\n- Pills, like table, do not show until page loading is complete\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. In Software \u003e\u003e OS click on an Ubuntu OS item that has kernels\n2. For one of the kernels listed, click \"View all hosts\"\n3. Watch the pills that show the filters at the top of the page\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32584,
          "repository": "fleetdm/fleet",
          "title": "Second pill doesn't show immediately when viewing hosts for linux kernel/OS combination",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32584"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeYVtA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "â Ready for release",
        "title": "Second pill doesn't show immediately when viewing hosts for linux kernel/OS combination",
        "issueNumber": 32584,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "New scope:\n\nhttps://fleetdm.slack.com/archives/C086V2QK76X/p1756921608426999",
          "number": 32583,
          "repository": "fleetdm/fleet",
          "title": "Last opened time tooltip",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32583"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgeYTSk",
        "labels": [
          ":release",
          "~sub-task",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-08-29T00:00:00Z",
          "title": "4.73.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "Done",
        "title": "Last opened time tooltip",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nVerified tooltip only appears for linux hosts on host inventory page or My device \u003e software item modal and shows correct tooltip copy."
          }
        ],
        "issueNumber": 32583,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.71.0\n\n**Web browser and operating system**: N/A\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\nI installed an App Store (VPP) app on a macOS host and I see this copy on **Host details \u003e Software** tab:\n\n\u003cimg width=\"472\" height=\"93\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3ead39fe-3266-49ab-816a-7c39fe39f411\" /\u003e\n\nThis isn't accurate because Fleet now verifies VPP apps: https://github.com/fleetdm/fleet/issues/28738\n\nAlso, the tooltip alignment is off. I think we want it center aligned over \"Installed\"\n\n### ð§âð» Â Steps to reproduce\n\n1. Add a VPP app in Fleet\n2. Head to a macOS hosts Host details page and install the app\n3. Wait until the status is \"Installed\" and hover over the status to see the tooltip\n\n### ð ï¸ To fix\n\nSpot in the code: https://github.com/fleetdm/fleet/blob/9bb618ead50dd789c6f82999f61dda6379f42e7a/frontend/pages/hosts/details/cards/Software/InstallStatusCell/InstallStatusCell.tsx#L76C11-L78\n- Update the tooltip alignment. We want it center aligned over \"Installed\"\n- Don't show tooltip over \"Installed\" status (on both host library and self-service)\n  - Improve install details modal on self-service to include timeago (as on screenshot below).\n  - \u003cimg width=\"1454\" height=\"452\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8c6c5812-5b08-4327-a69e-69f8269194a6\" /\u003e",
          "number": 31297,
          "repository": "fleetdm/fleet",
          "title": "Host details \u003e Software tab: Inaccurate tooltip copy",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31297"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgeYD_s",
        "labels": [
          "bug",
          "~frontend",
          ":product",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1636da2b",
          "startDate": "2025-08-18",
          "title": "Sprint 46"
        },
        "status": "âï¸Awaiting QA",
        "title": "Host details \u003e Software tab: Inaccurate tooltip copy",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - TODO: New copy\n\n@marko-lisica I assigned this one to you because I think you'll be faster at arriving at the right copy. \n\nI'm not caught up with the in progress improvements on the Host details and My device software pages.\n\nPlease let me know if I can help."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Tooltip is inaccurate for iOS/iPadOS as well, as we use MDM commands (specifically listing installed apps) to verify VPP apps ~~on those platforms~~ on all platforms."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Whenever the fix is designed, I can dev it and get it in 4.72. Jacob is currently working on modals for installed/uninstalled so we'll have to ensure those are clickable too. Thanks all"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@noahtalerman I believe we can eliminate tooltips since the statuses are clickable and the modals provide a timestamp.\n\nFleet installed software:\n\u003cimg width=\"663\" height=\"204\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5fda7517-a7e3-429c-b5e1-89845f23a952\" /\u003e\n\nEnd user installed software:\n\u003cimg width=\"703\" height=\"166\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ac46b6af-db73-433e-b58b-3c8270c85851\" /\u003e"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@marko-lisica up to you.\n\n\u003e modals provide a timestamp\n\nThey do? I don't see a timestamp in your screenshots."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Oh, I shared screenshoot from self-service, it's actually displayed on host details \u003e software \u003e library.\n\n\u003cimg width=\"727\" height=\"226\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c696dbbf-b88b-47c3-8f41-f89cae36dfb3\" /\u003e\n\nI think we should do this for self-service and eliminate tooltips.\n\n\"Fleet installed **Firefox.app** (10 minutes ago).\"\n"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Est: 1, several tiny changes, add tests, under 2 hours"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Gonna see if I can get this in today since I have flex time"
          }
        ],
        "issueNumber": 31297,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd5V9o",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nPer [slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1756921608426999), test plan has been changed to:\n\n- [x] Browser plugins and Python packages show as \"Not Supported\"\n- [x] Other types will either show \"Never\" or will show a last opened time, if the software was ever accessed at some point, either by an end user or by the system\n- [x] Tooltip shows on \"Last opened\" field for Linux hosts only and states \"The last time the package was opened by the end user or accessed by any process on the host.\""
          }
        ],
        "issueNumber": 32171,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd4nFM",
        "status": "âï¸Awaiting QA",
        "issueNumber": 29567,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to add a custom icon for my software\n| so that my end users can easily find the software they need on the **My device \u003e Self-service** page.\n\n## Roadmap item\n\nNone\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #24802 \n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @iansltx \n  \nMake sure to solve this: #29886\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=0-1\u0026t=DrMQziG5Cl0BDJbU-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: #31324\n- [x] REST API changes: #31324\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: Specified in Figma above.\n- [x] GitOps generation changes:\n  - Specified in Figma above.\n  - `gitops-generate` command should download icons.\n- [x] Activity changes: #31382\n- [x] Permissions changes: Global/team admins and maintainers can apply update icon. Covered by \"Add, edit, and delete software\" in permissions guide.\n- [x] Changes to paid features or tiers: Available in Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: The icon added by user will display on self-service and software inventory tabs on My device page.\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: #31324\n- [ ] Feature guide changes: Update [self-service](https://fleetdm.com/guides/software-self-service), [custom package](https://fleetdm.com/guides/deploy-software-packages), [VPP](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) articles to reference icons/how to change them\n- [ ] Database schema migrations: Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID (will dump icons onto the software installers bucket)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### UI\n\n- [ ] Make sure that the edit action is available next to the software title name, only if the software title has a package or VPP app added.\n- [ ] Verify that the user can upload a PNG icon by clicking on the edit icon next to the software title name in the **Edit software** modal.\n- [ ] Verify that the user can only select PNG files.\n- [ ] Verify that Fleet returns an error if the icon doesn't fit into specs defined in Figma.\n- [ ] Make sure that the user can preview the icon in the **Edit software** modal, once it's selected and before it's uploaded.\n- [ ] Verify that the icon in the preview is displayed according to the priority order described in Figma..\n- [ ] Make sure that the preview under the **Fleet** tab shows the real software title name, icon, type and versions count. The table underneath the transparent overlay should be static.\n- [ ] Make sure that the preview under the **Self-service** tab shows the real software title name and icon. Other data should be static.\n- [ ] Make sure that if the user deletes the selected or uploaded icon, the preview shows the fallback icon.\n- [ ] Verify that when the VPP icon is available, the upload form is still available in the **Edit software** modal, so the user can override that icon with a custom PNG.\n- [ ] Make sure that the uploaded icon shows on software title details, ~version details,~ titles list, ~versions list,~ on a team where the icon is added.\n- [ ] Make sure that we do client-side validation if the icon size doesn't fit specs, before the user hit \"Save\" (upload) icon. Show error flash message specified in Figma. \n- [ ] Make sure that the uploaded icon shows on the host's software library and inventory pages, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows on the My device software and self-service tabs, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows in /controls/setup-experience/install-software when selecting software to be installed\n- [ ] Verify that when GitOps mode is enabled, on the software title details page, the edit button (next to the software title name) is disabled, and that the GitOps tooltip is displayed on hover.\n- [ ] Verify that `icon` field is added in GitOps generation modal.\n- [ ] Verify that icon download link is added in GitOps generation modal. \n\n#### API\n\n- [ ] Verify that the icon can be updated with the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that an icon can be added to \"no team\" via the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be deleted with the new `DELETE /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be downloaded with the new `GET /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that Fleet errors if icons are not PNG, not square, or not between 120x120px and 1024x1024px, when user tries to upload with PUT endpoint.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles/:id`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/device/{token}/software`.\n- [ ] Verify that if no uploaded icon and no VPP added, `icon_url` is `null` (for every endpoint above).\n- [ ] Create a software package, add icon to software installer, edit the package (change something that is not icon related), delete the software package. This should generate a number of activities. \n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing package (icon url in activity)\n1 for deleting package (icon url in activity)\n```\n- [ ] Create a vpp app, add icon to vpp app, edit the vpp app (change something not icon related), delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing vpp app (icon url in activity)\n1 for deleting vpp app (icon url in activity)\n```\n- [ ] Create a vpp app, edit vpp app, delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for editing vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n1 for deleting vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n```\n\n#### GitOps\n\n- [ ] Verify that the icon can be added to a software package (`software.packages` \u003e `lib/software-name.package.yml` \u003e `icon`).\n- [ ] Verify that the icon can be added to the App Store app (`software.appâ_storeâ_apps.icon`).\n- [ ] Verify that the icon can be removed from the software package or App Store app\n- [ ] Verify that adding the same icon file to software packages across multiple teams adds the icon for each software package on each team and doesn't result in significantly slower gitops runs or adverse file-system effects (excessive files in /tmp directory when running)\n- [ ] Verify that previously uploaded icons are downloaded and referenced when running `fleetctl generate-gitops`\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Heads-up: \"name\" editing would change which `software_title` the package is associated with based on how we're linking titles and packages right now, for OSes other than macOS, and that has implications for e.g. software updates where inventoried software need to name-match the corresponding installer. We also have validation that prevents package edits from  changing the associated software title. So we'll need to sort those implications out if we include name in scope here (this issue doesn't apply to icon and version)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \u0026 @noahtalerman  I've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n        1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n4. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n5. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "![Image](https://github.com/user-attachments/assets/ffd778b7-8620-4dd4-9229-edcac7210679)\n\nFYI @eugkuo "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?\n\n@mostlikelee do you want to include GitOps in this ticket or should GitOps and UI tickets be separated for reasons of scoping, etc.\n\ncc @ddribeiro "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Given that GitOps is a core differentiator for Fleet and given that the requesting customer wants GitOps for their workflows, GitOps needs to be part of the spec here (though it'll get its own subtask), as does `generate-gitops` support."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I neglected to mention you on these so re-adding to ping you:\n\nI've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n    1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n3. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n4. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, where we display the updated name/icon/version is going to determine at which level we need to implement, which will in turn have interplay with both inventory and access controls. Probably also useful to walk through how we get name/version/icon now and where they're stored.\n\nKey questions:\n\n1. Are any fields globally editable? If so, that means only global roles can edit them, right?\n2. For names, what happens when an associated app arrives in inventory with a different name?\n\n## Name\n\nFor everything without a bundle ID, gets set once on first inventory or package upload, and is the unique key for associating both installers and inventory for that source _globally_. The name is at the `software_title` level, and is visible in a bunch of places (self-service, software title details, etc.).\n\nFor apps with bundle IDs, this is added on initial upload or inventory, but may be edited later during software ingestion if we have a more \"canonical\" name come in from inventory. There's also the contributor API endpoint for editing names manually, but inventory may overwrite them. Unique key in these cases is bundle ID. The name is still at the `software_title` level, and is still visible in the same places.\n\n## Icon\n\nFor software that has been added as a VPP app on a team, each app has a URL for the 512x512 version of the Apple icon, as a PNG, loaded on-the-fly from Apple by the client. Icons are revised when they're revised upstream.\n\nFor software titles without an associated VPP app on the same team, icons are shown based on matching to SVGs embedded in the code, based on name + source matching. This means that Fleet server updates determine which icon is shown.\n\nThe above means that icons are currently team-specific with a global fallback.\n\nInventory doesn't affect icons. For example, iOS apps inventoried via MDM will have the generic Apple icon unless we have an SVG override (or the same app was added as a VPP app for that team).\n\nIcons *could* be extracted from some types of custom packages on upload.\n\n## Version\n\nThe below information is orthogonal to inventoried (installed) version.\n\nSoftware version is attached to the package or VPP app, so it's team-specific rather than global.\n\nFor VPP apps, version is set on add and updated hourly from Apple, since the latest version is pushed when a VPP app is installed.\n\nFor FMAs, the version in the FMA manifest is copied over when the FMA is imported into the software library.\n\nFor custom packages, the version is extracted as metadata on upload.\n\n---\n\nSince it's come up before on other features, the tradeoff with allowing edits of these values is that we'll get fewer bug reports when we're parsing metadata incorrectly on upload/inventory, as IT admins will just fix the names/icons/versions they care about if there aren't too many of them. My suggestion here would be to add analytics for cases where name/icon/version needed to be edited, and check in with customers who use that feature a lot to make sure we're not overlooking bugged behavior. How that data point is implemented will vary depending on how software field overrides work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given that scope has dropped on this, seems like we want to treat this as another piece of self-service, attached to the `software_installer`.\n\nOn the most recent review call I mentioned \"square PNG with dimension min/max\" and GitOps. Need to dig into this further."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee I've updated the designs and  [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=ALS0rcz3jje1fQwT-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642) to reflect that the only additional update is for the app icon.\n\nLMK what you think."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Does #29177 block this ticket? Also, there's no reason we don't allow jpgs and gifs as well as pngs once 29177 is done is there?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo 29177 doesn't block this, though there's some implementation overlap such that if we hit both of these in the same sprint we'll need to be more careful about subtask traffic jams (still two swimlanes worth of backend across the two tickets though).\n\nRe: JPG/GIF, those formats aren't the right match for icons, unlike SVG vs. PNG don't bring anything special to the table for the icon use case that PNG doesn't, and it's trivial to convert JPEG -\u003e PNG or GIF -\u003e PNG (since all are raster formats) where the raster -\u003e vector PNG -\u003e SVG conversion is less straightforward."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Figma looks good, thanks @eugkuo !\n\n- Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n- Only other thing to spec is how we want to show the error if it's not a square between specific dimensions."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n\n@RachelElysia Love the suggestion. Updated!"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I've added a test plan to this ticket. LMK what you think.\n\n@iansltx I know we discussed this yesterday but I can't quite remember the answer. When this icon is updated is it updated throughout our system? Like will it show up in the library and inventory with the new icon as well?\n\ncc @mostlikelee @RachelElysia "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added an [Error message design](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?node-id=7341-1459\u0026t=OJ1KwfgvtY5eZfwZ-11) to this ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Sorry for the delay on this. Originally my thought was \"just follow what we do for VPP apps\", which I thought was:\n\n1. Icon is associated with the VPP app\n2. Icon shows up when viewing the software title on the team that has the VPP app set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the VPP app is in scope\n\nWith the above assumption, custom package icons would behave as follows:\n\n1. Icon is associated with the software package\n2. Icon shows up when viewing the software title on the team that has the package set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the installer is in scope\n\nIn reality, if a VPP app gets added on _any_ team, a zero value-looking object gets tacked onto the all-teams view for that title; you can see this for [Keynote in Dogfood](https://dogfood.fleetdm.com/software/titles/1245). This object includes the App Store icon URL. We can do this in part because VPP icons _are_ global for a given Apple app ID (and the icon URL is stored on the global VPP apps table in the DB rather than on the team-specific table)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm still thinking that we handle custom packages according to the above (tied to the package, only shows up where we would populate package info), but that's not actually consistent with VPP if current VPP behavior is intended VPP behavior.\n\nA side effect of handling package icons this way is that an All Teams view of software wouldn't have an icon. The only workarounds for this would be:\n\n1. We pick the first (for some definition of \"first\") icon we find for a custom package\n2. We make software icon overrides global rather than package/team based\n\n...so this is a good design review discussion, both to determine desired VPP behavior and desired behavior here (which may be influenced by the \"why\" behind desired VPP behavior)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per this morning's discussion, I'm pausing digging in on eng DRI on this in favor of getting #27983 spec'd, as the expectation is that this will _not_ make it into the 4.71 dev sprint. There are also questions around existing behavior that should probably be cleaned up, as that will provide a consistent foundation to build this on. Those questions are documented in #29886."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee \n\nI've updated the [Prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?page-id=2%3A130\u0026node-id=7347-2401\u0026t=uf2ocmJrBfpBl076-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7347%3A1958) so that editing app icons happens at the title level and not at the package level. I've also removed icons at the package level to avoid confusion.\n\nThe expectation is that the icon at the sotware title level would be associated with the software everywhere this title is shown (in library and inventory and self-service).\n\n@RachelElysia Thoughts on wanting/needing a loading screen for the modal and a confirmation save vs immediately jumping back to the software title page with a toast confirmation?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One pivotal question that will determine a bunch of implementation details: are these icons 1:1 with `software_installers` records (in which case currently they're 1:1 with teams) or are they more global than that?\n\nLooking at the 1:1 with `software_installers` option:\n\n## Pros\n\n* Consistent with self-service flag and categories\n* Allows for e.g. marking app icons as \"beta\" (or using a version-specific logo) on a canary team if that team has a different app version\n* Doesn't interfere with VPP app icon semantics if a custom-icon package is available on one team and a VPP app is available on another (once we sort out which wins for All Teams)\n* Access control for icon edit matches access control for all software package edits, vs. requiring a global role\n\n## Cons\n\n* Icon must be set once per team (less of a big deal with GitOps?)\n* Undefined behavior for showing software in \"All Teams\" (worse than VPP's current undefined behavior)\n* Potentially jarring if switching teams changes or loses an icon (this happens with VPP)\n* If implemented as \"an icon URL under software package\", inventoried software versions won't see the icon\n\nQuestion is how many of the pros/cons matter in this particular use case. FWIW I would expect that in either case we would be consistent with the icon shown within a team, for calls to software endpoints (not software version endpoints). Since My device only calls software endpoints (not versions), the icon on the software list would match the icon for self-service install (and update)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "One thing to add to what @iansltx is saying is that there are apps that have/will change icons with various releases (see Adobe products, which look like they update their icon every few years).\n\nSo. It seems like we should go back to associating icons with installer packages. I still feel like the Software title icon should inherit the latest installer package icon. \n\nWRT All teams and defining icons. Why can't we show installer packages on the all teams level and let people edit the icons there when editing. If a software title is selected from \"All teams\" we would show all the installer packages that have been added (surfacing the team(s) the packages are tied to). Ideally we'd be able to collapse all the installer packages so that we would only need to show one installer package that had been uploaded associated with multiple teams.\n\nI'm sure this is blowing up scope and throwing wrenches all over the place, but what do we think about the idea?\n\n@iansltx @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo What would you define as \"latest\" here? Most-recently uploaded/updated? Would that work cross-team? How would that interact with VPPs, which have their versions automatically bumped within ~1 hour of a new version coming out on Apple's side?\n\nRe: showing all installers when viewing All Teams, while that's useful, that would require decent-sized API and frontend changes, so deserves its own ticket."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I'd define latest as the latest version number (newest version).\n\nI totally hear you on showing all installers on All teams being its own ticket. I'll write that as a feature request when I get a chance."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Hm. So the idea would be that, for All Teams, we'd check all VPP apps and all packages with icons customized, rank by version number descending, and use the icon of whatever was at the top? Which would usually be the VPP app due to auto-updates, but might fall back to an FMA or the like.\n\nIf that's the idea, we might have to do some finagling to make sure the version calculation is fast...and we'll need to decide on what happens if the same package is uploaded to two different teams with two different icons...but that _would_ mean that at least the \"all teams\" part of #29886 is now expected/intended behavior, which is good (still need to decide what to do with version view there though)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nThe part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\n@mostlikelee could you gut check us on what we're talking about here? I know you were trying to keep this from getting out of hand and I don't want to explode things unknowingly. Clearly some of this is looking into the future, but could you make sure to ground us to what we 'need' or 'should' be doing at this time?\n\nThanks!"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh my, we may have officially took a detour to the dark side of icon town.  lets get a chat on the books for next week."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e [@iansltx](https://github.com/iansltx) Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nOriginal thought was handle it on retrieval but we could handle the recalculation when the criteria for which icon wins changed. That would be in the VPP version bump cron, when a custom icon was added/deleted, when a package was edited/deleted, or eventually when a FMA was added. For the last bit, FMA icons would actually get _lower_ priority than custom icons because they're currently implemented as just software title matching based defaults, but I'd expect that to change to the same \"priority\" as custom package icons once #29177 is implemented.\n\nWe'd need to add a column to `software_titles` for this, to point to the `software_installer` we want to use the custom icon of (if any), but that's doable if we need icon display at the All Teams level to work a specific way.\n\n\u003e \n\u003e The part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\nRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I have it at the top of the design review column in the drafting board so was intending to make this the first thing we talk about at DR on Tuesday. If you think this warrants its own time I'm open to it."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003eRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?\n\n@iansltx . But wouldn't it be cooooool if fleet recognizes a unique software package that's uploaded to our servers and pushes that out to everyone? Like why hold duplicates of the same thing? The icon thing we could do by organization so that doesn't get too wonky. If an organization wants to change their icon it will affect the entire organization but it won't affect others. So if Zorro corp wants to bastardize all their app icons with a flaming 'z' they can go for it but it won't touch Acorn Inc."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo There are some tradeoffs there that expand well beyond (the scope of) icon management and potentially conflict with tradeoffs needed for multiple installers per team. Definitely easier to discuss this synchronously.\n\nAlso not sure what you mean by \"organization\" (global? team?). One thing I'm thinking of is MSP customers who are running each company as its own team, and how this functionality should work in that deep of a silo."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh interesting use case where teams are acting like companies. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Given the above conversation, should custom package icons be scoped to the team/package they're on, or should they be global (at the software title level)? This has implications for how #29177 gets implemented, so is a higher-priority decison."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "```mermaid\nflowchart TD\n    A[\"Has custom icon (uploaded by user)\"] -- Yes --\u003e B[\"Show custom icon on software title (not on version) on team where icon (package) is uploaded\"]\n    A -- No --\u003e C[\"Is VPP app?\"]\n    C -- Yes --\u003e D[\"Show icon from App Store on software title (not on version) on team where VPP is added)\"]\n    C -- No --\u003e E[\"Strict name matching\"]\n    E -- Yes --\u003e F[\"Show SVG icon on a software title/version based on strict name/source rules defined by Fleet (contributors) in frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    E -- No --\u003e G[\"Loose name matching\"]\n    G -- Yes --\u003e H[\"Show SVG icon on a software/version title based on what software name starts with. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    G -- No --\u003e I[\"Source-based matching\"]\n    I -- Yes --\u003e J[\"Show SVG icon on a software/version title based on the software source. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    I -- No --\u003e K[\"Default fallback\"]\n    K --\u003e L[\"Show SVG package icon on a software/version. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@noahtalerman @iansltx, if you get the chance, could you please review the flowchart above?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica For the above, my biggest questions are how much of the decision tree applies to the following matrix:\n\n| | My device | Host details |\n| - | --- | --- |\n| Installed | My device \u003e Software | Host details \u003e Software \u003e Inventory |\n| Available | My device \u003e Self-service | Host dtails \u003e Software \u003e Library |\n\nAnd, for the inventory views, if we're showing anything other than SVG icons, where do those icons exist in the API response?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx I think let's keep this simple. If there's an icon override, we keep it on software title level under `software_package` or `app_store_app` as `custom_icon_url`.\n\nSVGs are displayed everywhere, and I think we should add more of them in the future. As we plan to introduce webview setup experience in the future, SVGs will be displayed there as well.\n\n- `GET /api/latest/fleet/software/titles` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/software/titles/:id` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/hosts/:id/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/device/:token/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n\nSo, icon overrides will be only available for software titles that are available. It won't show up on the versions of that title, and it won't show up in other teams."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@marko-lisica Is this being added to fleetctl generate-gitops?\n\nShould this work for team and global admins, and team and global maintainers, but not other users?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "FE Tests:\n- SoftwareIcon.tsx has no tests\n- GitOps yaml add to the test\n- GitOps mode disable editing"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Rough spec'ing notes:\n\n## GitOps changes\n\nIcon\nLocal hashing\nDeduplicate uploads\nReturn icon hash + filename on batch software status endpoint\nReturn icon hash + filename on batch VPP app status endpoint\nDon't repeat no-op uploads (use hash + filename)\nHash on icon PUT request\nRun in parallel\n\n## Generate-gitops\n\n## My device\n\nSoftware list endpoint; different URL\nIcon GET by device ID\n\n## Main API\n\nListHostSoftware (different URL)\nUpdate icon - incl. validation of format/size server side\nGet icon\nDelete icon\nSoftware titles list endpoint\nSoftware title endpoint\nSoftware versions endpoint (title ID)\nSoftware version endpoint (title ID)\nPackage + app store add/edit responses (make sure icon in response)\n\nSetup experience - update endpoint\n\nDocs\n\n## FE\n\nTitles view\nEdit modal\nPreview\n\nTitle list\nVersions list (don't download icon multiple times for the same title)\nAuthenticate when relative URL\nVersion view\nSoftware inventory\nSoftware library\n\nRename edit\n\nSelf-service tab\nSoftware tab of my device\n\nSetup experience UI"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @mostlikelee Just pushed https://github.com/fleetdm/fleet/pull/31324/commits/c577ded229f6a114d6fd940db2282ed8f69cad55?w=1 to API/YAML because we were missing some API endpoints based on the spec work I just did."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia @ksykulev #32459 covers software version icon display (taken out of scope of this ticket) and vulnerabilities icon display (missed in this ticket; would have been a late add of new surface on a ticket that's already at risk). Subtasks have been updated."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "We had a bit of a conversation about \"no team\" when talking about display name overrides. I noticed we don't have this explicitly mentioned in this test plan. I know \"no team\" is typically designated with a `0`. But probably worth calling this out."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Adding some more details about activities generated when adding/editing/deleting software installers/app store apps."
          }
        ],
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdsS6Q",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.72.0 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (68.56s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t68.581s\n```\n\n```\nFLEET_VERSION_A=v4.72.1 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (59.10s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t59.115s\n```\n\n```\nFLEET_VERSION_A=v4.71.1 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (52.30s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t52.321s\n```\n\n```\nFLEET_VERSION_A=v4.71.0 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (61.32s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t61.343s\n```"
          }
        ],
        "issueNumber": 31999,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# `fleetd` agent: 1.47.2\n\nIncludes updates to: \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n\n- Desktop `v1.46.0` \u003e `v1.47.2`\n\nFleet 1.47.2 has been released to the `edge` channel.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.72.0:\n4.73.0:\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:",
          "title": "Release QA: fleetd v1.47.2"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeWFPI",
        "status": "âï¸Awaiting QA",
        "title": "Release QA: fleetd v1.47.2",
        "issueNumber": 32561,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgeV3hE",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jkatz01 Manifest version does _not_ match; see [this test failure](https://github.com/fleetdm/fleet/actions/runs/17466455074/job/49603362571?pr=32582). [The manifest](https://github.com/fleetdm/fleet/blob/main/ee/maintained-apps/outputs/omnissa-horizon-client/darwin.json#L4) needs to be tweaked (similar to what we do for WhatsApp) to remove components of the version number that don't actually show up in inventory. We got lucky this time as the inventoried version is semver-compatible and can be directly inferred from what we get from Homebrew. I can review the PR for this fix once it's ready."
          }
        ],
        "issueNumber": 32558,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jakestenger"
        ],
        "content": {
          "body": "- `customer-faltona`: Hello fleetDM team, I was curious about how I would be able to order this table [Software -\u003e Vulnerabilities] by Severity AND Probability of exploit, e.g, once I've ordered by Severity, I'd like to know within the severity buckets, the probability of exploit - this is so that I can answer the question: of the Critical severity vulnerabilities that we have, which has the highest probability of exploit? Thanks for your help! \n- @jakestenger: `customer-faltona` requested the option to compound sort, or sort after filtering for a specific column value, within the Software -\u003e Vulnerabilities table. Currently only one column at a time can be sorted.\n\n![Image](https://github.com/user-attachments/assets/51ae5838-1aa8-407e-a0ff-d5dc2920403c)\n![Image](https://github.com/user-attachments/assets/78590083-adfe-40c2-ae5d-159d1567a72d)\n",
          "number": 30524,
          "repository": "fleetdm/fleet",
          "title": "Compound sorting for vulnerabilities table",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/30524"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeYcSE",
        "labels": [
          "customer-faltona",
          ":help-customers",
          "~csa"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "Compound sorting for vulnerabilities table",
        "comments": [
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "@jakestenger do you have a link to the Slack thread (unthread) of where this request originated?"
          },
          {
            "author": {
              "login": "jakestenger"
            },
            "body": "@allenhouchins Sure thing: https://fleetdm.unthread.io/dashboard/inbox/filter/157996ac-b986-4a8d-a9e2-d373f9c0e079/conversations/7dedb068-d20f-44fd-98ac-fcc0b9cf83ce"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "## What have you tried?\n\n\u003e Hello fleetDM team, I was curious about how I would be able to order this table [Software -\u003e Vulnerabilities] by Severity AND Probability of exploit, e.g, once I've ordered by Severity, I'd like to know within the severity buckets, the probability of exploit - this is so that I can answer the question: of the Critical severity vulnerabilities that we have, which has the highest probability of exploit? Thanks for your help!\n\n## Potential solutions\n\n* Compound sorting\n* Filter(s) for vulnerability severity, age, etc.., then sort filtered results\n\n## What is the expected workflow as a result of your proposal?\n\nSorting or filtering all detected vulnerabilities by severity (eg., Critical), then further sorting by additional value (eg., \"Probability of exploit\")."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jakestenger How close would we be once #30248 is implemented? If we had multiple axes of filtering (some of which, like min/max CVSS score) and then single-dimension sort on top of that, which filters would we need to support to handle this entire use case, given that compound sort tends to be finicky?"
          },
          {
            "author": {
              "login": "jakestenger"
            },
            "body": "@iansltx I'll check with the customer this week. The DRI at faltona is not usually on our sync calls, so I'll check with her on Slack."
          },
          {
            "author": {
              "login": "jakestenger"
            },
            "body": "@iansltx: message from the customer re: your proposal--\n\n`Hi @Jake Stenger if I understand correctly, the somewhat similar use case is described in [this issue](https://github.com/fleetdm/fleet/issues/30248), is that correct? If so, then no it would not meet the same use case, given that CVSS score thresholds only takes into account the one dimension of data (in this case, CVSS), but doesn't take into account the other dimension, which is probability of exploit (from [First.org](http://first.org/)).`"
          }
        ],
        "issueNumber": 30524,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdF67w",
        "title": "deb package hangs during install",
        "issueNumber": 31396,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-09-05T07:06:03.735541225Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeYVtA",
        "labels": [
          "bug",
          ":release",
          "~released bug",
          ":incoming",
          "#g-software"
        ],
        "status": "ð¦¤ âIn review",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts @mostlikelee changing this to a released bug since this actually happens to all osVersion filter pills, prior to this feature\n\nScreen recording of slow behavior:\n\nhttps://github.com/user-attachments/assets/69b8d565-487f-41bf-8111-480d120cb534\n\nOnly noticeable now since there's a second pill next to it. Fix incoming"
          }
        ],
        "issueNumber": 32584,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to specify multiple software (custom) packages in one YAML file\n| so that I can reuse those across teams and edit in one place.\n\n## Key result\n\nNone.\n\n## Original requests\n\nNone. This user story was prioritized after @fuhry (community member) opened this PR with a proposed solution:\n- #30790\n\n## Context\n- Product Designer: @noahtalerman\n- Engineering DRI: @iansltx \n\n## Changes\n\n### Product\n- [x] GitOps Mode UI changes: [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1)\n- [x] YAML changes: [YAML design PR](https://github.com/fleetdm/fleet/pull/31086)\n- [x] Changes to paid features or tiers: Fleet Premium only\n- [x] First draft of test plan added\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: No changes\n- [ ] Feature guide changes: No changes (only docs changes required are covered in the YAML design PR)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## Product No-ops\n\n- CLI (fleetctl) usage\n- UI changes (other than in GitOps Mode)\n- REST API\n- Fleet's agent (fleetd)\n- GitOps generation\n- Activities\n- Permissions\n- My device and fleetdm.com/better\n- Other reference documentation\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No\n- Risk level: Low\n\nWhile performance regressions etc. aren't at issue, we'll now have three formats for specifying software packages in YAML (inline, list in separate file, individual in separate file) so future development runs the risk of forgetting to implement functionality in all three. So, not a risk for this particular story, but a maintainability risk going forward.\n\n\n### Documentation \nReview [Updated Documentation](https://github.com/fleetdm/fleet/pull/31086/files?short_path=b711042#diff-b71104232d8fbaaf4bd537065533cbf39ec5f9bf028ec1d8083346953ed5178d) \n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\nNOTE: #30095 must be merged prior to this ticket or this test plan is invalid.\n[#31165](https://github.com/fleetdm/fleet/issues/31165) will need to be used to migrate yaml files or some parts of this test plan may fail.\n\n**New functionality**\n- [ ] Create a package YAML file with two custom packages specified by `url`. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet.\n- [ ] Next, In the team YAML, for your two custom packages, specify `self_service`, `categories`, and labels. Run GitOps, and verify that the options are applied to both packages. \n- [ ] Edit your package YAML file to have the two custom packages specified by `hash`. Ensure these packages have already been uploaded to Fleet. Run GitOps and verify that the two packages remain in the correct team in Fleet and that all additional settings in the team YAML are applied (Self service, categories, labels).\n- [ ] Edit your package YAML file to have one custom package specified by `hash` and the other specified by `url`. Ensure the software specified by hash has already been uploaded to Fleet. Run GitOps and verify that the two packages remain in the correct team in Fleet and that all additional settings in the team YAML list are applied (Self service, categories, labels).\n- [ ] Edit your package YAML file by removing one of the packages. Run GitOps and verify that the removed package is removed from Fleet.\n~- [ ] ERROR PATH: Create a package YAML file in the \"list format\" to have two versions of the same software, one custom package specified by `hash` and the other specified by `url`. Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.~\n~- [ ] ERROR PATH: Create a package YAML file in the \"list format\" to have one version of a software, and another package YAML to have a different version of the same software. Try both specified with just hash, both with just url, and one specified by `hash` and the other specified by `url`. Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.~\n- [ ] ERROR PATH: Add multiple FMA and/or VPP apps to a package YAML file in the \"list format\". Run GitOps and verify that there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error.\n\n**Backwards compatibility**\n- [ ] Backwards compatibility: Add packages in-line to the team YAML file. Run GitOps and verify that the package(s) is added to the correct team in Fleet.\n- [ ] Backwards compatibility: Create a package YAML file with one custom package in the [old package YAML format](https://github.com/fleetdm/fleet/pull/31086/files#r2219494344) (no array). Run GitOps and verify that the package is added to the correct team in Fleet. NOTE: self service, categories, labels will no longer be allowed in the package YAML due to #30095\n\n**Multiple YAML formats**\n- [ ] Without duplicating any packages, specify some packages in-line on the team YAML, specify some packages in a multi-package YAML, specify a single package in an individual YAML in the \"Old format\", and specify a single package in an individual YAML in the new \"List format\". Reference the multipackage, single \"old format\", and single new \"list format\" yaml files in-line on the Team YAML, alongside the in-line specified package. Run GitOps and verify that all packages are added to the correct team in Fleet.\n~- [ ] ERROR PATH: Using the same package info for all methods: Specify some packages in-line on the team YAML, specify some packages in a multi-package YAML, specify a single package in an individual YAML in the \"Old format\", and specify a single package in an individual YAML in the new \"List format\". Reference the multipackage, single \"old format\", and single new \"list format\" yaml files in-line on the Team YAML, alongside the in-line specified package. Run GitOps and make sure there is an easy to understand error message returned indicating what the problem is, and directing you to the team and package that caused the error. Try specifying the same package with all methods at once, and then de-duplicating them as you go, working through the gitops errors, to ensure you can resolve the issue. ~\n\n**Setup experience**\n- [ ] Create a single package YAML file in the new list format. Reference the package YAML on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the new list format. Reference the file in-line on the team YAML in the macos_setup.software key. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the old format. Reference the file in-line on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a single package YAML file in the old format. Reference the file in-line on the team YAML in the macos_setup.software key. Run GitOps and make sure the package is added to Setup experience. \n- [ ] Create a package YAML file in the new list format with multiple software items in it. Reference the package YAML on the team YAML and add the `setup_experience` key set to `true`. Run GitOps and make sure all packages are added to Setup experience. \n\n\n**Policy automations**\n- [ ] Create a package YAML with one package, in the old non-list format using `hash_sha256`. Create a policy YAML and reference the package using `hash_sha256`. Run GitOps and verify that the package is tied to the policy.\n\n\u003cimg width=\"645\" height=\"145\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1e945b7a-a845-4e40-a518-7d6b0d17cb9c\" /\u003e\n\n- [ ] Create a package YAML with one package, in the old non-list format using either `url` or `hash_sha256`. Create a policy YAML and reference the `package_path`. Run GitOps and verify that the package is tied to the policy.\n\n\u003cimg width=\"693\" height=\"143\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b3229af0-1fe5-47eb-940b-5f8f5038dbb6\" /\u003e\n\n- [ ] Create a package YAML with one package, in the new format. Create a policy YAML and reference the `package_path`. Run GitOps and verify that the package is tied to the policy. (Same as above, but the package.yml is in the list format)\n- [ ] Create a package YAML with multiple installers listed in it. Create a policy YAML and reference the `hash_sha256` of ONE of the software installers in the list from the file with multiple packages. Run GitOps and verify that the package is tied to the policy.\n- [ ] Create a package YAML with multiple installers listed in it. Create a policy YAML and reference the `package_path`. Verify that you see an easy to understand error message.\n\n**Large Environments**\n- [ ] A large environment with no changes to YAML that successfully applied in the previous version of Fleet without error should continue to apply without error. (Provided they have gone through the migration from #31165\n\n**UI Changes**\n- [ ] Turn on GitOps mode in Fleet and add a custom package. Verify that the UI changes [specified in Figma](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) show up.\n\n**`fleetctl generate-gitops`**\n- [ ] Add several packages in Fleet, and then run `fleetctl generate-gitops`. Use the YAML output in a GitOps run and verify that all the packages are still present in Fleet.\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n\n\n---\n## Problem\n\nThe list of software configured via GitOps might be dynamic, for example if the GitOps pipeline builds and pushes packages just before fleet gitops is called, or if partial package lists are shared between teams.\n\nIn these cases, it's useful to be able to include one file containing multiple packages. [This PR](https://github.com/fleetdm/fleet/pull/30790) refactors parseSoftware to support that use case.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoAQ",
        "comments": [
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "DONE @noahtalerman: What do we do about policy automations? Right now policies in GitOps assume one package per package YAML file.\n  - @iansltx: Today, `fleetctl generate-gitops` works around this by using a `hash_256` to specify the hash. Maybe we can use the same to solve this.\n \n@noahtalerman: Decided like this: either use hash or path to a file. If the file has more than one package, Fleet will error. Specified in [this dev note](https://github.com/fleetdm/fleet/pull/31086/files#r2222732518)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [ ] In your team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\u003e   - @noahtalerman: I think testing this requires the changes in this separate user story: https://github.com/fleetdm/fleet/issues/30095\n\nDONE: @noahtalerman: Pull this into #30095\n\n- @noahtalerman: Added the below to the test plan for #30095.\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @iansltx @jmwatts ^"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "TODOs (will write these up better later):\n\n* Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n* Documenting \"error if multiple packages in setup experience YAML file\"\n* Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e Deprecating non-list behavior (vs. not deprecating vs. removing/erroring + adding an automatic migration)\n\nWe decided to deprecate support for the non-list behavior but maintain backwards compatibility. See this dev note: https://github.com/fleetdm/fleet/pull/31086/files#r2219494344\n\n\u003e Documenting \"error if multiple packages in setup experience YAML file\"\n\nIn this [separate GitOps story](https://github.com/fleetdm/fleet/issues/30095), we decided to support applying `setup_experience`. From that separate stories QA plan:\n\n#### Multiple custom packages in one package YAML\n\n- [ ] Create a package YAML file with two custom packages specified by url. Reference the package YAML in a team YAML file and run GitOps. Verify that the two packages are added to the correct team in Fleet. \n- Next, In a team YAML, for your two custom packages, specify `self_service`, `setup_experience`, and labels. Run GitOps, and verify that the options are applied to both packages. \n\n\u003e Documenting that \"list length of 1\" is valid for places where a single YAML path is expected now?\n\nI think this is covered by the [YAML reference doc updates](https://github.com/fleetdm/fleet/pull/31086). We're showing that a list length of 1 is the best practice."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman FYI we'll need to make some slight tweaks to the modal implemented in #28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nAlso, thoughts on removing the old functionality and adding a script to fix existing software YAML files (linked from the \"this was removed\" error) instead of moving the schema to undocumented but still incurring the maintenance burden of supporting it? If we think this is the proper way to format software packages, \"indent the existing file by two spaces and prepend a `- ` to the first line might be simple enough to perform with a single sed/awk command."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "- UPDATE: @noahtalerman: Added [Figma wireframes](https://www.figma.com/design/VEN5nFcJKd4JOloCgcOOr2/-30849-GitOps--Support-multiple-software-packages-in-one-YAML-file?node-id=0-1\u0026t=84pueN40iALwPkhk-1) to the issue description (including test plan).\n\n\u003e FYI we'll need to make some slight tweaks to the modal implemented in https://github.com/fleetdm/fleet/issues/28110 if we're removing the top-level style of software package YAML from documentation, otherwise we'll be recommending that people use an undocumented/deprecated format.\n\nYep! We want to tweak the UI here with an indent and a hyphen.\n\nDONE: @noahtalerman \n\nAlso, update the package name to include `.package`:\n\n\u003cimg width=\"597\" height=\"83\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b09f13a-630f-48bf-81b7-4555fc4c81a5\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts Sorry for the delay on this one. Subtasks are created. Ask away with questions you have."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@mostlikelee @jmwatts @noahtalerman just worked through part of the test plan and...\n\nFor the \"specify the same package multiple ways and expect an error\" QA step in \"multiple YAML formats\", we don't actually stop an end user from specifying the same URL multiple times in the same GitOps config for the same team, and the result is \"last in wins.\" This is existing behavior (released bug), and also affects the first two error paths in the \"new functionality\" section of the test plan.\n\nGiven that we don't already solve for this, fixing this behavior would be a drastic scope expansion, as while we could catch more obvious cases client-side (same URL on multiple packages on the same team, same hash on multiple packages on the same team), catching different versions of the same package would only be doable server-side, and then only by tracking metadata as each package is downloaded and checking for duplicates at that stage. I think we may do this with hash right now, but given that we don't even dedupe the same URL we're definitely not deduping bulk actions that would overwrite packages with the next URL read.\n\nWill chat through this in standup tomorrow (Sep 4) and get an issue (IMO a released bug) filed thereafter."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e we don't actually stop an end user from specifying the same URL multiple times in the same GitOps config for the same team, and the result is \"last in wins.\" This is existing behavior (released bug), and also affects the first two error paths in the \"new functionality\" section of the test plan.\n\n@iansltx I think we can document this in the GitOps reference docs instead to move quickly and save some engineering effort. We can back to a different solution later if we need to.\n\nAlso, this \"last in wins\" behavior isn't limited to the same URL right? I'm assuming if two different URLs that have the same package, the last in wins. Or if two URLs have two packages (different versions) for the same software title, the last in wins.\n\nDocs can say something like \"If you specify the same package, even if they have different versions, in two places (same URL or different URLs) in your YAML the last one wins\"\n\nAlso, by \"last one\" we mean the package that's on a higher line number in the YAML right? I think we should be explicit about that too.\n"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Right now behavior is undefined in terms of which package wins relative to where it's listed in YAML. I want to say highest line number wins but there are enough layers between parsing and sending the payload to the server that I'm not certain that's how it would work (and add to this the interaction between FMAs and custom packages).\n\nIn standup today we decided to carve out a released bug with the known test plan failures here pulled into QA criteria for that bug. I just haven't had time to file it yet (will link it here when I do)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Updated the test plan to strike-out pieces that have been moved to #32607. Can continue the discussion there of documentation etc. as it's no longer in scope here."
          }
        ],
        "issueNumber": 30849,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica (/cc @mostlikelee) We have three issues that'll need product direction here.\\, based on some initial research.\n\nIn descending order of magnitude:\n\n## Multiple kernels\n\nLinux hosts generally have multiple kernels installed, though only one is active at a time. How do we want to handle this, given that a host can be actively using an older/vulnerable kernel, or that kernel may be available but not loaded, and we won't be able to tell one way or the other based on software inventory (we _can_ based on the `kernel_info` table but we don't currently inventory that)?\n\nFor example, I cross-referenced `kernel_info` version with inventoried packages on Dogfood to see how Linux hosts there lined up:\n\n* [fedora 41](https://dogfood.fleetdm.com/hosts/1348) - `kernel-core` RPM package (`kernel` would work too but doesn't on the other host; was running the later of multiple versions)\n* [ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1319) - `linux-image-*-generic` (`linux-image-generic-hwe-*` returned one of the two kernels, and not the one the host was actually running)\n* [another fedora 41](https://dogfood.fleetdm.com/hosts/1318) - `kernel-core` RPM package (was running the older kernel)\n* [another ubuntu 24.04.2](https://dogfood.fleetdm.com/hosts/1267) - `linux-image-*-genreric` (was running the older kernel IIRC)\n\nAll of the above hosts have more than one kernel version installed, and it's a toss-up on whether a given host is using the latest installed kernel or some other one (using `kernel_info` as the source of truth). The two Ubuntu hosts have quite different kernel versions installed as well between each other.\n\n## No kernel\n\nHow do we want to handle Linuxes that don't have a kernel? Linux running in a container shares the host kernel, so won't have kernel vulnerabilities of its own. I'm assuming we need to show these hosts in the OS list UI, but we'll need to communicate that no, those hosts didn't have a kernel of their own, so there won't be kernel-level vulns inside the container, though the host might have some. For example, `SELECT * FROM kernel_info` on an Ubuntu container running in Docker for Mac gets me a kernel version of `6.10.14-linuxkit`, which won't match anything in OVALs for the OS inside the container.\n\n## Where to display kernel version\n\nThinking we want to just show the kernel version, and only the version number part of it (so, software `version` field), as part of the Version column in the OS list, leaving the OS name as-is. This will mean that there will be multiple rows for the same OS name, but that's probably still cleaner than having two versions in the name line."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Temporarily assigning this to @marko-lisica we I'm blocked on decisions about no-kernel/multi-kernel. I'll self-assign to continue spec'ing once unblocked."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "FYI @marko-lisica I'm baking in the assumption that individual CVE UIs do _not_ change as part of this story, so we won't be showing Linux OSes in the Operating Systems section of individual vulns. The vulnerability affected hosts will be fully covered in the software section anyway (for each kernel) so we aren't hiding information here."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "For reference: per discussions yesterday, we're keeping the OS list to one item per OS version, rolling up all kernel vulns into that single entry, and splitting out kernels when viewing a single OS version's details. This ensures that hosts aren't double-counted in list views when they have multiple kernels installed, and aren't skipped when they have no kernel of their own."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Two pieces of feedback from @jmwatts as we were walking through UI/test plans today (corresponding to Figma comments):\n\n1. Add a dev note or example UI row indicating \"view all hosts\" when kernel rows are rolled over\n2. Add help text above the kernels list (inside the kernels card) explaining why host counts are expected to not sum up from kernels to the overall number. Something like:\n\n\u003e Each Linux host may have multiple kernels instealled. Containerized and paravirtualized hosts do not have a kernel of their own.\n\n@jmwatts Let me know if we need to explicitly say \"host counts won't sum up\" or whether the above is enough."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @iansltx @jmwatts, thanks for the feedback.\n\nI added few more dev notes in Figma:\n\u003cimg width=\"921\" height=\"887\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/524bb7a9-33fc-47f3-88be-8e41ad922db6\" /\u003e\n\n "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n\n1. Enroll a Linux host in a VM with two installed kernels, at least one of which has vulnerabilities, and a Linux host in a container (with zero installed kernels) for a bunch of our supported Linux distros, including Ubuntu, Debian, RHEL, Fedora, SUSE, and Arch.\n2. Enroll a Windows host and a macOS host. Hosts must have software inventoried, but don't need to be online at the same time. \n3. Enroll a Linux host in a container with a different OS version unique to that container.\n4. Run vulnerabilities + cleanups/aggregations jobs.\n- [x] Navigate to the Software \u003e OS tab. The \"Name\" column should only show OS name (plus major version for Windows). All hosts erolled in step 1 should be represented, host counts should match, and navigating to host counts to filter the host list by OS.\n- [x] Confirm that the API response populates the vulnerabilities key for Linux OS versions.\n- [x] Navigate to a Linux OS version. You should see a Kernels card instead of a Vulnerabilities card. Host counts should match the number of hosts with that kernel installed on that OS version.\n- [x] Container hosts should not be shown in this list. Hosts with multiple kernels should be counted once per kernel in the kernel card, but host count for the overall OS version should only count the host once.\n- [x] Clicking the host count on the kernel card should navigate to the host list filtered by OS\n- [x] Clicking \"view all hosts\" in this card should navigate to a host list filtered by kernel and OS.\n- [x] Confirm that the API response for the individual OS version includes vulnerabilities and kernels entries, with kernels format matching what you'd see in software_title.versions[] when viewing an individual software title.\n- [x] Navigate to a kernel in the kernel card. You should arrive at a normal software version details page, including vulnerability information. Host counts might not match the previous page, as the kernel may be used across multiple OS versions.\n\nNOTES: \nRemoved: On the Software \u003e OS tab, all Linux OSes should have one or more CVEs listed, matching expected kernel vulns for the constituent hosts, except for the containerized-only OS version, which should show ---. #31495"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Heads up that we are expectedly seeing longer load times on the OS page in environments with large numbers of Linux hosts with kernel vulnerabilities.  @noahtalerman I'm giving the ok here as I think we can iterate on this if we find there is customer pain, but let me know if you have any concerns.\n\ntest results: https://github.com/fleetdm/fleet/issues/31214#issuecomment-3250457578"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e On 4.72.0 the page took less than one second to load. On 4.73.0 it is consistently taking 6-7 seconds to load.\n\n@mostlikelee I'm onboard with shipping as is but I tracked a bug for this so we can follow up next sprint: https://github.com/fleetdm/fleet/issues/32613\n\nWe want all page load times to be under 5 seconds. If it was at less than one second, there must be some high value improvements we can make here."
          }
        ],
        "issueNumber": 30738,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\n# Goal: easy-to-follow test steps for checking a release manually\n\n# Important reference data\n\n1. [fleetctl preview setup](https://fleetdm.com/fleetctl-preview)\n2. [permissions documentation](https://fleetdm.com/docs/using-fleet/permissions) \n3. premium tests require license key (needs renewal) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjQwOTk1MjAwLCJzdWIiOiJkZXZlbG9wbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6ImJhc2ljIiwiaWF0IjoxNjIyNDI2NTg2fQ.WmZ0kG4seW3IrNvULCHUPBSfFdqj38A_eiXdV_DFunMHechjHbkwtfkf1J6JQJoDyqn8raXpgbdhafDwv3rmDw`\n4. premium tests require license key (active - Expires Sunday, January 1, 2023 12:00:00 AM) `fleetctl preview --license-key=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCBJbmMuIiwiZXhwIjoxNjcyNTMxMjAwLCJzdWIiOiJGbGVldCBEZXZpY2UgTWFuYWdlbWVudCIsImRldmljZXMiOjEwMCwibm90ZSI6ImZvciBkZXZlbG9wbWVudCBvbmx5IiwidGllciI6InByZW1pdW0iLCJpYXQiOjE2NDI1MjIxODF9.EGHQjIzM73YyMbnCruswzg360DEYCsDi9uz48YcDwQHq90BabGT5PIXRiculw79emGj5sk2aKgccTd2hU5J7Jw`\n\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n### Prerequisites\n\n1. `fleetctl preview` is set up and running the desired test version using [`--tag` parameters.](https://fleetdm.com/handbook/engineering#run-fleet-locally-for-qa-purposes)\n2. Unless you are explicitly testing older browser versions, browser is up to date.\n3. Certificate \u0026 flagfile are in place to create new host.\n4. In your browser, clear local storage using devtools.\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n5. Verify Windows host migrates from 3rd party MDM to Fleet when automatic migration is turned on.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n5. Verify `Turn Off MDM` for BYOD \u0026 ADE hosts.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eLock \u0026 Wipe\u003c/td\u003e\u003ctd\u003eVerify hosts can be locked \u0026 wiped\u003c/td\u003e\u003ctd\u003e\n\n1. Verify locking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n2. Verify unlocking a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n3. Verify wiping a host from the Fleet UI (macOS, Windows, \u0026 Linux)\n4. Verify wiping and locking hosts using `fleetctl` (macOS, Windows, \u0026 Linux)\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdsS6Q",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.72.0 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (68.56s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t68.581s\n```\n\n```\nFLEET_VERSION_A=v4.72.1 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (59.10s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t59.115s\n```\n\n```\nFLEET_VERSION_A=v4.71.1 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (52.30s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t52.321s\n```\n\n```\nFLEET_VERSION_A=v4.71.0 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (61.32s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t61.343s\n```"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "mdm gives a ð "
          },
          {
            "author": {
              "login": "xpkoala"
            },
            "body": "orch gives a ð "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "software gives ð "
          }
        ],
        "issueNumber": 31999,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpok",
        "status": "â Ready for release",
        "issueNumber": 31214,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "The version reported in osquery is 16.0 but when I look in \"About this Mac\" and System Settings \u003e\u003e General it's 26.0\nIt does get the build right though... 25A5279m"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "When I try to enforce encryption I'm not seeing the banner instructing me to restart or log out, until I've restarted or logged out. Then it stays there no matter how many times I restart. I'm not seeing the banner clear and even after running the `cleanups_then_aggregation` cron the encryption status isn't updated and it says `unrecognized`:\n\n![Image](https://github.com/user-attachments/assets/f3c0b064-8aae-4c39-9993-bd01af2fbd84)\n\nOn the host, I can see the disk encryption profile in System Settings and Filevault is turned on and a recovery key has been set:\n\n\u003cimg width=\"741\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/013cc568-6b97-4bbb-be68-a458bbbdf56b\" /\u003e\n\n\u003cimg width=\"730\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/986b4c3e-42f2-4b9c-9756-f1acc8e1f302\" /\u003e"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Apple introduced a new Device Migration feature (that only works with the latest OSes) which will move your host from a 3rd party MDM server over to Fleet,  all via ABM. It works! however during the enrollment to Fleet the Setup Experience SwiftDialogue window did not display the software Fleet was installing in the background"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-numa\nmacOS 26 - MDM migration invokes Setup Experience (silently) - awaitconfigured\n\n- Upgraded endpoint to macOS 26 \n- ABM recognizes that\n- Able to set a deadline\n- Device starts to migrate\n- Unenrolled from previous MDM (didnât have to initiate anything)\n- Recognizes that it needs to enroll into Fleet\n- Waiting for âdevice configuredâ command\n- Starts going through setup experience again (calling through all apps, VPP apps, setup script)\n\nExpected behavior: Assume host has all apps already installed. Itâs been previously managed. Itâs not a net new device so it shouldnât run setup experience. VPP apps would get removed from previous MDM so those would be the one thing that should run again\n\nNote from @mostlikelee : Technically, as soon as the device gets the Fleet MDM profile, the apps should come along with it. We should test"
          },
          {
            "author": {
              "login": "zayhanlon"
            },
            "body": "@PezHub from customer-eponym\nFleet menu bar item doesn't show up after enrollment in beta 2"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet menu not showing after enrollment in macOS 26 beta 2 #6834](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/3ec39176-1e2a-49ec-aea4-3c44108d90d0)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Changing MDMs without a deadline doesn't not show a notification on the host. Maybe it takes a lot more time (writing this after waiting for 2-3 hours)\n\n\n**UPDATE (from Gabe):** If a deadline is not set, users won't receive a notification. Devices will not automatically migrate if you do not set a deadline during the device management service reassignment in Apple Business Manager; the migration will only occur if a deadline is set, the device is erased, or the old profiles command is run. While you can assign a new device management service without a deadline, this action does not force the migration to happen immediately; the device will simply remain with the old service until a deadline is set or another trigger initiates the migration process. "
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "Hi all ð , any issues directly related to the new MDM migration feature Apple introduced in ABM should be tracked separately here https://github.com/orgs/fleetdm/projects/58/views/9?pane=issue\u0026itemId=119675644\u0026issue=fleetdm%7Cfleet%7C30695\n"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Noticed that MacOS26 isn't getting orbit updates from a local tuf server. WIll retest it later next week and file an issue "
          },
          {
            "author": {
              "login": "reeblybeebly"
            },
            "body": "`customer-thumper` reported several occurrences of a host enrollment issue on macOS Tahoe 26, where the \"setup is complete\" dialog box is blank, as evident in the provided screenshot.\n\n**Fleet Version:** 4.71.1\n**macOS Version:** 26.0 Beta 25A5316i\n\nPotentially related logging pulled from server\n```{\ncalendarTime:Mon Aug 11 14:15:05 2025 UTC\nhostIdentifier:B397E6E6-7985-56BF-9BAC-B297B186F192\nunixTime:1754921705\nquery_id:373\nname:pack/team-2/\u003ccustomer-thumper\u003e usr directory\nnumerics:false\naction:snapshot\nepoch:0\ndecorations:{\nhost_uuid:B397E6E6-7985-56BF-9BAC-B297B186F192\nhostname:10bd3a85e979-mac\n}\ncounter:0\nsnapshot:[\n{\ndirectory_status:Exists\nprimary_user:\u003cuser\u003e\n}\n]\n}\n```\n**Screenshot**\n\n\u003cimg width=\"3024\" height=\"1964\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/876d80db-d518-49f3-bc05-9bd50edcaa27\" /\u003e"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue during macOS 26 onboarding #7769](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/7384f042-079b-4283-a4e7-5e079beb7fc9)"
          },
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Issue with macOS 26 beta 6 (25A5338b) #7782](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/d2c77f6f-b5f2-42be-8b6c-12ae96bfa4fd)"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "I went over all the issues reported in this ticket. Grouping them below by whether they have been reproduced or fixed in the next Beta version (currently on Beta 7). I'm still confirming a couple of issues and will update this comment once I'm done with those \n\n**Still applicable:** \n\n- [Setup Experience SwiftDialogue isn't displayed on MacOS26 during the migration](https://github.com/fleetdm/fleet/issues/32096)\n- [Setup experience SwiftDialogue is empty during ADE enrollment](https://github.com/fleetdm/fleet/issues/32099)\n\n**Still investigating:** \n\n- Changing MDMs without a deadline does not show a notification on the host - will be tested as part of this ticket https://github.com/fleetdm/fleet/issues/30695\n \n**Can not reproduce / Fixed:** \n\n- Wrong version is displayed for MacOS 26 hosts\n   - Resolved with an update, but was also tracked here: https://github.com/fleetdm/fleet/issues/30026\n- Disk encryption banner doesn't display and doesn't get cleared\n- MacOS26 isn't getting orbit updates from a local tuf server\n   - Resolved on the latest Beta. Banner is displayed, gets cleared, and the Disk encryption policy status updates as expected, eventually going to Verified \n \n        \u003cimg height=\"1000\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5d84da0d-154a-404e-9ea3-c0148c2c3e5a\" /\u003e\n\n- Fleet menu bar item doesn't show up after enrollment in beta 2\n   - Unable to reproduce this in either of the scenarios: \n      - Fleet installed manually\n      - ADE enrollment\n      - Migration from another MDM server\n- Fleet icon is showing host as offline \n   - Unable to reproduce this in either of the scenarios: \n      - Fleet installed manually\n      - ADE enrollment\n      - Migration from another MDM server\n\n\n"
          }
        ],
        "issueNumber": 30136,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "### Requestor\n\n- Application name: Omnissa Horizon Client\n- Application platform: macOS\n\n---\n\n### Validation\n\n- [x] The following outputs are generated\n        - `/outputs/\u003capp-name\u003e/darwin.json` created\n        - `/outputs/apps.json` updated\n- [x] Manifest name matches osquery `app.name` (macOS) or `programs.name` (Windows)\n- [x] Manifest version scheme matches osquery `app.short_bundle_version` (macOS) or `programs.version` (Windows) version scheme\n- [x] Manifest `unique_identifier` matches osquery `app.bundle_identifier` (macOS only)\n\n### QA\n\n- [x] App adds successfully to team's library\n- [x] App installs successfully on host\n- [x] App opens successfully on host\n- [x] App uninstalls successfully on host\n\n### Icon\n\n- [ ] Icon added to Figma\n- [x] Icon added to Fleet\n- [x] Correct icon appears in the app catalog"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeV3hE",
        "issueNumber": 32558,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "**Fleet version**: Fleet 4.70.1  \n**Web browser and operating system**: Chrome (any version) running on macOS\n\n\u003chr/\u003e\n\n### ð¥  Actual behavior\nFleet reports that `iTerm2ImportStatus.app` (bundled inside iTerm2) is vulnerable to multiple critical CVEs affecting iTerm2\n\nThis appears to be a false positive. On the affected host, the parent `iTerm2.app` is version **3.5.14**, which is **not** vulnerable to these CVEs.\n\nThe detection is triggered specifically on the nested app located at: /Applications/iTerm.app/Contents/MacOS/iTerm2ImportStatus.app\n\nThis entry only appears in the software inventory after the nested app is launched manually via Terminal. Other dogfood hosts running iTerm2 v3.5.14 do not return `iTerm2ImportStatus.app` or any related CVEs unless the nested app has been executed.\n\n\u003cimg width=\"1396\" height=\"901\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3143e5d8-96b3-45a4-819b-e0471b01e48e\" /\u003e\n\nReplicated in dogfood: https://dogfood.fleetdm.com/software/versions/570416\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\n`iTerm2ImportStatus 1.0` should not be considered the same CPE as iTerm2 itself.\n\n### ð§âð»  Steps to reproduce\n1. Install `iTerm2.app` version **3.5.14** on macOS.\n2. Locate the nested app:  \n   `/Applications/iTerm.app/Contents/MacOS/iTerm2ImportStatus.app`\n3. Launch `iTerm2ImportStatus.app` via Terminal or Finder.\n4. Observe that Fleet reports vulnerabilities for iTerm2 against `iTerm2ImportStatus.app v1.0`, despite the parent iTerm2 version being **3.5.14**.\n\n### ð¯ï¸ More info _(optional)_\n- Other dogfood hosts running iTerm2 v3.5.14 do not return `iTerm2ImportStatus.app` or related CVEs unless the nested app is manually launched.\n- **Question for @zwass :** Is this expected osquery behavior where nested `.app` bundles require being launched before version metadata is exposed? \n\n**References:**  \n- iTerm2 parent app version on affected host: **3.5.14**  \n- Vulnerabilities incorrectly applied: multiple CVEs affecting iTerm2",
          "number": 31501,
          "repository": "fleetdm/fleet",
          "title": "iTerm2ImportStatus.app nested in iTerm2.app flagged with incorrect CVEs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31501"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgeZCx0",
        "labels": [
          "bug",
          "~vulnerability-management",
          ":product",
          "customer-stazzema",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "iTerm2ImportStatus.app nested in iTerm2.app flagged with incorrect CVEs",
        "comments": [
          {
            "author": {
              "login": "zwass"
            },
            "body": "I did some digging and found that `/Applications/iTerm.app/Contents/MacOS/iTerm2ImportStatus.app` gets added to the macOS LaunchServices database when it's opened for the first time (`/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -dump | grep -i iterm2import`).\n\nOsquery looks at all the apps registered with LaunchServices, so this is why it comes up.\n\nSeems like maybe the bug is that `iTerm2ImportStatus 1.0` (which is what is actually registered with LaunchServices) should not be considered the same CPE as `iTerm2` itself?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Looks like the reproduce tag was removed but the product tag was not added. Added product tag cc @mostlikelee @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755261116105419)"
          }
        ],
        "issueNumber": 31501,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-09-05T19:05:10.467061673Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv6VE",
        "status": "ð£ In progress",
        "issueNumber": 32046,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5Cs",
        "status": "ð£ In progress",
        "issueNumber": 32041,
        "changeType": "modified"
      },
      {
        "estimate": 8,
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5RY",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "updated to 8, implementation is complex"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Custom apps on iOS,\nIn Fleet, joyous growth unfolds,\nHarvest of code sows."
          }
        ],
        "issueNumber": 32042,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdvlEE",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Katz joins the Fleet crew,\nShared knowledge like morning dew,\nOnboarding takes flight."
          }
        ],
        "issueNumber": 32019,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to add a custom icon for my software\n| so that my end users can easily find the software they need on the **My device \u003e Self-service** page.\n\n## Roadmap item\n\nNone\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #24802 \n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @iansltx \n  \nMake sure to solve this: #29886\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=0-1\u0026t=DrMQziG5Cl0BDJbU-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: #31324\n- [x] REST API changes: #31324\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: Specified in Figma above.\n- [x] GitOps generation changes:\n  - Specified in Figma above.\n  - `gitops-generate` command should download icons.\n- [x] Activity changes: #31382\n- [x] Permissions changes: Global/team admins and maintainers can apply update icon. Covered by \"Add, edit, and delete software\" in permissions guide.\n- [x] Changes to paid features or tiers: Available in Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: The icon added by user will display on self-service and software inventory tabs on My device page.\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: #31324\n- [ ] Feature guide changes: Update [self-service](https://fleetdm.com/guides/software-self-service), [custom package](https://fleetdm.com/guides/deploy-software-packages), [VPP](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) articles to reference icons/how to change them\n- [ ] Database schema migrations: Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID (will dump icons onto the software installers bucket)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### UI\n\n- [x] Make sure that the edit action is available next to the software title name, only if the software title has a package or VPP app added.\n- [x] Verify that the user can upload a PNG icon by clicking on the edit icon next to the software title name in the **Edit software** modal.\n- [x] Verify that the user can only select PNG files.\n- [x] Verify that Fleet returns an error if the icon doesn't fit into specs defined in Figma.\n- [x] Make sure that the user can preview the icon in the **Edit software** modal, once it's selected and before it's uploaded.\n- [x] Verify that the icon in the preview is displayed according to the priority order described in Figma..\n- [x] Make sure that the preview under the **Fleet** tab shows the real software title name, icon, type and versions count. The table underneath the transparent overlay should be static.\n- [x] Make sure that the preview under the **Self-service** tab shows the real software title name and icon. Other data should be static.\n- [ ] Make sure that if the user deletes the selected or uploaded icon, the preview shows the fallback icon.\n- [x] Verify that when the VPP icon is available, the upload form is still available in the **Edit software** modal, so the user can override that icon with a custom PNG.\n- [x] Make sure that the uploaded icon shows on software title details, ~version details,~ titles list, ~versions list,~ on a team where the icon is added.\n- [x] Make sure that we do client-side validation if the icon size doesn't fit specs, before the user hit \"Save\" (upload) icon. Show error flash message specified in Figma. \n- [x] Make sure that the uploaded icon shows on the host's software library and inventory pages, on a host that is a member of the team where the icon is uploaded.\n- [x] Make sure that the uploaded icon shows on the My device software and self-service tabs, on a host that is a member of the team where the icon is uploaded.\n- [ ] Make sure that the uploaded icon shows in /controls/setup-experience/install-software when selecting software to be installed\n- [x] Verify that when GitOps mode is enabled, on the software title details page, the edit button (next to the software title name) is disabled, and that the GitOps tooltip is displayed on hover.\n- [x] Verify that `icon` field is added in GitOps generation modal.\n- [x] Verify that icon download link is added in GitOps generation modal. \n\n#### API\n\n- [ ] Verify that the icon can be updated with the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that an icon can be added to \"no team\" via the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be deleted with the new `DELETE /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be downloaded with the new `GET /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that Fleet errors if icons are not PNG, not square, or not between 120x120px and 1024x1024px, when user tries to upload with PUT endpoint.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles/:id`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/device/{token}/software`.\n- [ ] Verify that if no uploaded icon and no VPP added, `icon_url` is `null` (for every endpoint above).\n- [ ] Create a software package, add icon to software installer, edit the package (change something that is not icon related), delete the software package. This should generate a number of activities. \n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing package (icon url in activity)\n1 for deleting package (icon url in activity)\n```\n- [ ] Create a vpp app, add icon to vpp app, edit the vpp app (change something not icon related), delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing vpp app (icon url in activity)\n1 for deleting vpp app (icon url in activity)\n```\n- [ ] Create a vpp app, edit vpp app, delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for editing vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n1 for deleting vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n```\n\n#### GitOps\n\n- [ ] Verify that the icon can be added to a software package (`software.packages` \u003e `lib/software-name.package.yml` \u003e `icon`).\n- [ ] Verify that the icon can be added to the App Store app (`software.appâ_storeâ_apps.icon`).\n- [ ] Verify that the icon can be removed from the software package or App Store app\n- [ ] Verify that adding the same icon file to software packages across multiple teams adds the icon for each software package on each team and doesn't result in significantly slower gitops runs or adverse file-system effects (excessive files in /tmp directory when running)\n- [ ] Verify that previously uploaded icons are downloaded and referenced when running `fleetctl generate-gitops`\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.73.0\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n2nd pill doesn't show up immediately, takes a few seconds, then shows up\nhttps://github.com/user-attachments/assets/09b08603-bb18-46b6-bab3-e2c5b78aa9c5\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\n- Page loading state includes call to os version API\n- Pills, like table, do not show until page loading is complete\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. In Software \u003e\u003e OS click on an Ubuntu OS item that has kernels\n2. For one of the kernels listed, click \"View all hosts\"\n3. Watch the pills that show the filters at the top of the page\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeYVtA",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32584,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [x] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [x] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n\n### Smoke tests\nFor this ticket, we'll only be running smoke tests that apply to macOS/iOS/iPadOS Tahoe. \n[This template contains a detailed breakdown of the tests](https://github.com/fleetdm/fleet/blob/HEAD/.github/ISSUE_TEMPLATE/release-qa.md)\n\n**MDM**\n - [ ] MDM enrollment flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [ ] MDM migration flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [ ] OS settings\n   - MacOS\n   - iPadOS\n   - iOS\n - [ ] Setup experience\n   - MacOS\n - [ ] iOS/iPadOS\n   - iPadOS\n   - iOS\n - [ ] Lock \u0026 Wipe\n   - MacOS\n   - iPadOS - Wipe only\n   - iOS - Wipe only\n\n**Orchestration**\n- [ ] Packs flow\n   - MacOS\n- [ ] OS settings\n   - MacOS\n- [ ] Log destination flow\n   - MacOS\n   - iPadOS\n   - iOS\n\n**Software**\n- [ ] Query flow\n  - MacOS\n- [ ] My device page\n  - MacOS\n- [ ] Scripts\n  - MacOS\n- [ ] Software\n  - MacOS\n  - iPadOS\n  - iOS\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "labels": [
          "~gitops",
          ":release",
          "~sub-task",
          "~csa",
          "#g-software"
        ],
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeS31Q",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32496,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-09-06T07:04:34.33235264Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8c",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31896,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "status": "âï¸Awaiting QA",
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8U",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31895,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCnxU",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31206,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCn44",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31207,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP9A",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31903,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8w",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31900,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP88",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31902,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP80",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31901,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoAQ",
        "status": "âï¸Awaiting QA",
        "issueNumber": 30849,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdhCgY",
        "milestone": {
          "dueOn": "2025-10-10T00:00:00Z",
          "title": "4.75.0"
        },
        "issueNumber": 31495,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "milestone": {
          "dueOn": "2025-09-12T00:00:00Z",
          "title": "4.73.1"
        },
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeYcSE",
        "title": "Compound sorting for vulnerabilities table",
        "issueNumber": 30524,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-09-07T07:04:40.940867825Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "milestone": {
          "dueOn": "2025-09-12T00:00:00Z",
          "title": "4.73.1"
        },
        "issueNumber": 30136,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-09-08T07:06:07.866979829Z",
    "items": [
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895. Generate-gitops work is blocked by #31896.\n\n## Task\n\nSupport icon editing via GitOps in a performant way.\n\n### Server-side\n\n- [x] Include icon hash and filename from the database on batch software responses\n- [x] Include icon hash and filename from the database on batch VPP app response\n- [x] On VPP app set response, clear all icons for any software titles on that team that aren't associated with packages or VPP apps (doing this on the VPP call because it happens second)\n\n### Generate-gitops\n\n- [ ] Populate icon paths in YAML when software titles mention a relative URL for an icon (don't pull VPP app icons)\n- [ ] Same as above, but for VPP apps\n- [ ] Download icons to the referenced icon paths with up to 16 concurrent connections\n\n### GitOps apply\n\n- [ ] For supplied icons, validate square PNGs with 120-1024px dimensions client-side\n- [ ] Use software and VPP app response payloads, compared with local icon filenames and hashes, to build a list of:\n\n1. Icons that do not need to be modified (filename and hash match for the specified title)\n2. Icons that don't currently exist server-side, so need to be uploaded to one title first\n3. Icons that will exist server-side after step 2, so they can be associated to remaining titles by just referencing hash and filename\n4. Icons that should be removed from a given title that otherwise still exists (server-side will automatically clean up icons for software titles that no longer have a package or app store app associated)\n\n- [ ] Upload icons that need to be pushed server-side at concurrency 4 (configurable by CLI flag or env var)\n- [ ] Update icons where bytes already exist server-side at concurrency 10 (configurable by a different CLI flag or env var)\n- [ ] Delete icons from software titles where icon isn't specified at concurrency 10 (configurable by the same env var/cli flag as above)\n- [ ] Add final-state icon hash list to a map shared across all teams, so a given icon is uploaded at most once per GitOps run even cross-team. Use this struct when processing subsequent teams.\n\n## Condition of satisfaction\n\nCustom icons can be round-tripped from being set in the Fleet UI to GitOps (via generate-gitops) and back (via gitops application), with reasonable performance cross-team by avoiding repeated work; two sequential applies of the same YAML with no icon modifications out-of-band should generate zero HTTP requests dedicated to icon management since we'll be able to tell from response payloads that we have no-ops."
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8g",
        "status": "ð£ In progress",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755144992950349)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, VPP apps are specified once in GitOps YAML but map to usually three titles in Fleet. This means that icons can vary across titles and there's no way to represent the varying icon overrides in GitOps.\n\nWith the current endpoints, to detect this (for generate-gitops) for titles that have multiple icons specified we'll need to download the icons and hash them, and if there aren't matches we'll just need to pick one and document the mismatch. We can detect VPP defaults easily enough (because we don't mask them behind relative URLs), so can tell whether we have a mix of icon vs. no icon based on platform and can add notes as a result.\n\nGiven these nuances, going to come back to `generate-gitops` after I get the rest of the GitOps build done.\n\n/cc @noahtalerman @marko-lisica "
          }
        ],
        "issueNumber": 31897,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-09-08T19:04:52.876627811Z",
    "items": [
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "number": 32713,
          "repository": "fleetdm/fleet",
          "title": "Research/Spec: Unlisted app store apps",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32713"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgef1hU",
        "labels": [
          "~sub-task",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¦¤ âIn review",
        "title": "Research/Spec: Unlisted app store apps",
        "issueNumber": 32713,
        "changeType": "added"
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "**Fleet version**: v4.71.1\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n`customer-cervantes` reported a false positive vulnerability detected in Fleet. The customer noted that the reported vulnerability was known to be fixed via a patch provided by the vendor and not correctly recognized by Fleet vulnerability processing.\n\nCustomer Provided Screenshot\n\u003cimg width=\"2740\" height=\"382\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d3d6f617-d90c-4972-8b0f-93782eecb32d\" /\u003e\n\n```# yum info microcode_ctl:\nUpdating and loading repositories:\nRepositories loaded.\nInstalled packages\nName            : microcode_ctl\nEpoch           : 2\nVersion         : 2.1\nRelease         : 70.fc42\nArchitecture    : x86_64\nInstalled size  : 14.4 MiB\nSource          : microcode_ctl-2.1-70.fc42.src.rpm\nFrom repository : updates\nSummary         : Tool to transform and deploy CPU microcode update for x86\nURL             : https://pagure.io/microcode_ctl\nLicense         : GPL-2.0-or-later AND LicenseRef-Fedora-Firmware\nDescription     : The microcode_ctl utility is a companion to the microcode driver written\n                : by Tigran Aivazian \u003ctigran@aivazian.fsnet.co.uk\u003e.\n                : \n                : The microcode update is volatile and needs to be uploaded on each system\n                : boot i.e. it doesn't reflash your cpu permanently, reboot and it reverts\n                : back to the old microcode.\nVendor          : Fedora Project\n\nyum info shim-x64\nUpdating and loading repositories:\nRepositories loaded.\nInstalled packages\nName            : shim-x64\nEpoch           : 0\nVersion         : 15.8\nRelease         : 3\nArchitecture    : x86_64\nInstalled size  : 3.6 MiB\nSource          : shim-15.8-3.src.rpm\nFrom repository : updates\nSummary         : First-stage UEFI bootloader\nURL             : https://github.com/rhboot/shim/\nLicense         : BSD-3-Clause\nDescription     : Initial UEFI bootloader that handles chaining to a trusted full\n                : bootloader under secure boot environments. This package contains the\n                : version signed by the UEFI signing service.\nVendor          : Fedora Project\n```\n\n### ð§âð» Â Steps to reproduce\n\n- @jkatz01: Reproduced. \n1. Install microcode_ctl-2.1-70.fc42 and shim-x64-15.8-3 on Fedora 42\n2. Observe all the CVEs marked as resolved show up in Fleet\n(setuptools 74.1.3 also shows false positive)\n\nMost of the CVEs for microcode_ctl don't have a cpe listed on nvd.\n\n### ð¯ï¸ More info _(optional)_\nCustomer provided evidence of vulnerability fixes documented in release notes\nhttps://packages.fedoraproject.org/pkgs/shim/shim-x64/fedora-42.html\nhttps://packages.fedoraproject.org/pkgs/microcode_ctl/microcode_ctl/fedora-42-updates.html\n\nAdditionally the user reported that there may be other vulnerabilities on their system that they can't investigate due to the \"my device\" page truncating results. Providing this info only for context and we may investigate this as a feature request if necessary.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31968,
          "repository": "fleetdm/fleet",
          "title": "False Positive Vulnerability: microcode_ctl",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31968"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgegD-0",
        "labels": [
          "bug",
          ":product",
          "#g-software",
          "customer-cervantes"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "False Positive Vulnerability: microcode_ctl",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Question about vulnerabilities on Linux hosts #7886](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/a6f70f4a-b301-42ca-a117-895e96bbad1d)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Hmm, looking at the thread, this might be on an older version of Fleet after all? Checking."
          },
          {
            "author": {
              "login": "jkatz01"
            },
            "body": "Reproduced. \n1. Install microcode_ctl-2.1-70.fc42 and shim-x64-15.8-3 on Fedora 42\n2. Observe all the CVEs marked as resolved show up in Fleet\n(setuptools 74.1.3 also shows false positive)\n\nMost of the CVEs for microcode_ctl don't have a cpe listed on nvd."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Thanks @jkatz01!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1756878480272839)"
          }
        ],
        "issueNumber": 31968,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeYD_s",
        "status": "âï¸Awaiting QA",
        "issueNumber": 31297,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8g",
        "labels": [
          "~gitops",
          "~backend",
          ":release",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-10-10T00:00:00Z",
          "title": "4.75.0"
        },
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755144992950349)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, VPP apps are specified once in GitOps YAML but map to usually three titles in Fleet. This means that icons can vary across titles and there's no way to represent the varying icon overrides in GitOps.\n\nWith the current endpoints, to detect this (for generate-gitops) for titles that have multiple icons specified we'll need to download the icons and hash them, and if there aren't matches we'll just need to pick one and document the mismatch. We can detect VPP defaults easily enough (because we don't mask them behind relative URLs), so can tell whether we have a mix of icon vs. no icon based on platform and can add notes as a result.\n\nGiven these nuances, going to come back to `generate-gitops` after I get the rest of the GitOps build done.\n\n/cc @noahtalerman @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Decided to take this out of the scope for 4.74.  Gitops support for this feature is now estimated to land in 4.75.  @jmwatts I believe the test criteria in the parent story is still good."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee does that mean that the GitOps section of the test plan will not be able to be completed in 4.74.0? If that is the case, that portion of the test plan needs to be removed from that ticket and added either here, or to whichever ticket will be associated with the changes in 4.75.0."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jmwatts good call, i'll convert this to a story and update the test plans"
          }
        ],
        "issueNumber": 31897,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "status": "âï¸Awaiting QA",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1753243609663689)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Please include instructions on how to use said tool, esp for environments with many teams and packages please!"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev If on-call remains quiet, take this one iydm"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "For the sake of scrolling relocated this [here](https://gist.github.com/Illbjorn/c6e8473bf5b20049f58bdbe2259dad9f). (@Illbjorn)"
          }
        ],
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "content": {
          "title": "Research: Windows FMA"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdv6VE",
        "title": "Research: Windows FMA",
        "issueNumber": 32046,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv5Cs",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Unseen task ahead,\nGlass city in clouds awaits,\nFulfillment brings peace."
          }
        ],
        "issueNumber": 32041,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeZCx0",
        "labels": [
          "bug",
          "~vulnerability-management",
          ":product",
          "customer-stazzema",
          "#g-software",
          "~qa-on-branch"
        ],
        "status": "âï¸Awaiting QA",
        "issueNumber": 31501,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8k",
        "issueNumber": 31898,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version**: v4.71.1\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n`customer-mozartia` states they are getting reports from internal users that have both firefox.app and firefox ESR.app installed on their hosts are receiving false positive vulnerability reports for Firefox ESR.\n\n**Screenshots provided by customer**\n\n\u003cimg width=\"409\" height=\"199\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e686dd82-7c1d-4f21-a160-24570b674961\" /\u003e\n\n\u003cimg width=\"565\" height=\"257\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2eb033ad-bad6-43b8-96b4-b8b96b9624f6\" /\u003e\n\nIt is understood that both apps utilize the same bundle ID.\n\n### ð ï¸ To fix\n\n CPEs differentiate between ESR and non-ESR:\n\n\u003cimg width=\"778\" height=\"157\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6423cf97-8028-4f5b-94e8-31c41e34fb70\" /\u003e\n\nBuild the correct CPE when we see ESR versions of Firefox. Could probably do name matching here, but right now our CPE translations JSON feed doesn't include the ability to override `sw_edition` in the CPE (which is distinct from `target_sw`), so this will require server changes in addition to feed changes.\n\nProduct designer: @marko-lisica \n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\nConfirmed user is on Server Version 4.71.1 and Firefox ESR is latest available version\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 31989,
          "repository": "fleetdm/fleet",
          "title": "Incorrectly flagging vulnerabilities for Firefox ESR v128",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31989"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgef6qA",
        "labels": [
          "bug",
          ":release",
          "customer-mozartia",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-10-10T00:00:00Z",
          "title": "4.75.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "Incorrectly flagging vulnerabilities for Firefox ESR v128",
        "comments": [
          {
            "author": {
              "login": "Sampfluger88"
            },
            "body": "Linked to Unthread ticket:\n\u003e [Fleet incorrectly flags Firefox ESR v128 as outdated #7891](https://fleetdm.unthread.io/dashboard/inbox/all/conversations/62eb5dce-3c14-4ddb-803e-f11ee46621e6)"
          },
          {
            "author": {
              "login": "mkaply"
            },
            "body": "Let me know if y'all need some thoughts on how to detect ESR versus non ESR on mac (unfortunately the package names are the same and we can't change that)"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Installed Firefox ESR.app version 128.14.0 and confirmed there are some false positives being reported. One example is CVE-2025-8034 which explicitly states that it affects Firefox ESR \u003c 128.13\n\n\u003cimg width=\"1885\" height=\"549\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4782935c-b025-4b05-86f1-ffd5db35ca3f\" /\u003e\n\nAn example of the Firefox vs Firefox ESR false positive is CVE-2025-8044 \n\u003cimg width=\"1885\" height=\"544\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/63f78126-4148-4080-9330-3c851d3fa240\" /\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "CPEs differentiate between ESR and non-ESR:\n\n\u003cimg width=\"778\" height=\"157\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6423cf97-8028-4f5b-94e8-31c41e34fb70\" /\u003e\n\nWe'll need to build the correct CPE when we see ESR versions of Firefox. Could probably do name matching here, but right now our CPE translations JSON feed doesn't include the ability to override `sw_edition` in the CPE (which is distinct from `target_sw`), so this will require server changes in addition to feed changes."
          }
        ],
        "issueNumber": 31989,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "Tracking carry over work \n\n\n- Refactor work [request](https://github.com/fleetdm/fleet/pull/31018#discussion_r2225913183): Pull out Update card and Self Service card into components  on their own files \n- Unreleased bug: Multiple requests now timing out because 60 second FE timeout is not being reset",
          "number": 31309,
          "repository": "fleetdm/fleet",
          "title": "Self-service actions carryover",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31309"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgegLNI",
        "labels": [
          "~frontend",
          ":release",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¦¤ âIn review",
        "title": "Self-service actions carryover",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Confirmed during 8/4 standup:: This was previously approved in #31384, but since much of the code has been in flux, I am holding off until 4.72 is completely QAed and this PR will solely be a code organization PR and no changes to ensure another deep dive QA will be unnecessary"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Upped this from a 3 to a 5 because I realized that there are 0 tests on the VPP install modal, software package install modal, and software uninstall modal. \n\nNeeded tests on each of those modals: \n- various status message based on what page they're on and whether it's successfulxpendingxfailed\n- whether they show versions or not\n- whether they show more details\n- what the action button is (since it's different for self-service vs admin)"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@RachelElysia are we just adding test coverage here or does QA need to retest any self service flows?"
          }
        ],
        "issueNumber": 31309,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdhCgY",
        "title": "RHEL kernels don't have expected vulnerabilities in Fleet",
        "issueNumber": 31495,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-09-09T07:06:01.723369068Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgef1hU",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Current vpp app request:\n`GET https://vpp.itunes.apple.com/mdm/v2/assets`\n```\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n```\nWhere `token` is the `vpp_token_teams.token` from the database.\n\n\n\nMaking request for custom app meta data\n```\nconst response = await fetch('https://api.ent.apple.com/v1/stoken-authenticated-apps', {\n  headers: {\n    'Authorization': `Bearer ${jwtToken}`,\n    'Cookie': `itvt=${vppAppToken}`,\n    'Content-Type': 'application/json'\n  }\n});\n```\nThe `vppAppToken` is collected from the client who has uploaded the custom app via App Store Connect. \n\nThe `jwtToken` is generated from a KeyID, TeamID and signed with a private key (a p8 file). This information is gathered in an apple developer account with MDM vendor access (https://developer.apple.com/help/account/certificates/mdm-vendor-csr-signing-certificate). To generate this information in an apple developer account follow these steps: https://developer.apple.com/help/account/service-configurations/apps-and-books-for-organizations.\n\nIn order to create a jwt here is some simple golang pseudo code using github.com/golang-jwt/jwt/v5\n```\npackage main\n\nimport (\n  \"github.com/golang-jwt/jwt/v5\"\n)\n\nfunc loadPrivateKey(keyPath string) (*ecdsa.PrivateKey, error) {\n\tkeyData, err := ioutil.ReadFile(keyPath)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to read key file: %w\", err)\n\t}\n\n\tblock, _ := pem.Decode(keyData)\n\tif block == nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse PEM block\")\n\t}\n\n\tprivateKey, err := x509.ParsePKCS8PrivateKey(block.Bytes)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse private key: %w\", err)\n\t}\n\n\tecdsaKey, ok := privateKey.(*ecdsa.PrivateKey)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"key is not an ECDSA private key\")\n\t}\n\n\treturn ecdsaKey, nil\n}\n\n\nfunc main() {\n\tprivateKey, err := loadPrivateKey(\u003cpath to private key\u003e) //path to filesystem p8 file\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to load private key: %w\", err)\n\t}\n\tnow := time.Now()\n\tmaxDuration := time.Duration(15777000) * time.Second // 6 months\n\tclaims := jwt.RegisteredClaims{\n\t\tIssuer:      \u003cinsert team id from developer console here\u003e,                          // 10-character Team ID\n\t\tIssuedAt:  jwt.NewNumericDate(now),                \n\t\tExpiresAt: jwt.NewNumericDate(now.Add(maxDuration)), \n\t}\n\n\t// Create token with ES256 algorithm and required headers\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodES256, claims)\n\ttoken.Header[\"kid\"] = \u003cinert key id from developer console here\u003e // 10-character key ID\n\ttoken.Header[\"typ\"] = \"JWT\"\n\n\t// Sign the token\n\ttokenString, err := token.SignedString(privateKey)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to sign JWT: %w\", err)\n\t}\n\n\tfmt.Printf(\"Generated JWT: %s\\n\", tokenString)\n}\n```"
          }
        ],
        "issueNumber": 32713,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [x] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [x] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n\n### Smoke tests\nFor this ticket, we'll only be running smoke tests that apply to macOS/iOS/iPadOS Tahoe. \n[This template contains a detailed breakdown of the tests](https://github.com/fleetdm/fleet/blob/HEAD/.github/ISSUE_TEMPLATE/release-qa.md)\n\n**MDM**\n - [x] MDM enrollment flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] MDM migration flow\n   - MacOS\n - [x] OS settings\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] Setup experience\n   - MacOS\n - [x] iOS/iPadOS\n   - iPadOS\n   - iOS\n - [x] Lock \u0026 Wipe\n   - MacOS\n   - iPadOS - Wipe only\n   - iOS - Wipe only\n\n**Orchestration**\n- [ ] Packs flow\n   - MacOS\n- [ ] OS settings\n   - MacOS\n- [ ] Log destination flow\n   - MacOS\n   - iPadOS\n   - iOS\n\n**Software**\n- [x] Query flow\n  - MacOS\n- [x] My device page\n  - MacOS\n- [x] Scripts\n  - MacOS\n- [x] Software\n  - MacOS\n  - iPadOS\n  - iOS\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895. Generate-gitops work is blocked by #31896.\n\n## Task\n\nSupport icon editing via GitOps in a performant way.\n\n### Server-side\n\n- [x] Include icon hash and filename from the database on batch software responses\n- [x] Include icon hash and filename from the database on batch VPP app response\n- [x] On VPP app set response, clear all icons for any software titles on that team that aren't associated with packages or VPP apps (doing this on the VPP call because it happens second)\n\n### Generate-gitops\n\n- [ ] Populate icon paths in YAML when software titles mention a relative URL for an icon (don't pull VPP app icons)\n- [ ] Same as above, but for VPP apps\n- [ ] Download icons to the referenced icon paths with up to 16 concurrent connections\n\n### GitOps apply\n\n- [x] For supplied icons, validate square PNGs with 120-1024px dimensions client-side\n- [x] Use software and VPP app response payloads, compared with local icon filenames and hashes, to build a list of:\n\n1. Icons that do not need to be modified (filename and hash match for the specified title)\n2. Icons that don't currently exist server-side, so need to be uploaded to one title first\n3. Icons that will exist server-side after step 2, so they can be associated to remaining titles by just referencing hash and filename\n4. Icons that should be removed from a given title that otherwise still exists (server-side will automatically clean up icons for software titles that no longer have a package or app store app associated)\n\n- [ ] Upload icons that need to be pushed server-side at concurrency 4 (configurable by CLI flag or env var)\n- [ ] Update icons where bytes already exist server-side at concurrency 10 (configurable by a different CLI flag or env var)\n- [ ] Delete icons from software titles where icon isn't specified at concurrency 10 (configurable by the same env var/cli flag as above)\n- [x] Add final-state icon hash list to a map shared across all teams, so a given icon is uploaded at most once per GitOps run even cross-team. Use this struct when processing subsequent teams.\n\n## Condition of satisfaction\n\nCustom icons can be round-tripped from being set in the Fleet UI to GitOps (via generate-gitops) and back (via gitops application), with reasonable performance cross-team by avoiding repeated work; two sequential applies of the same YAML with no icon modifications out-of-band should generate zero HTTP requests dedicated to icon management since we'll be able to tell from response payloads that we have no-ops."
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8g",
        "issueNumber": 31897,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeYTSk",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nVerified tooltip only appears for linux hosts on host inventory page or My device \u003e software item modal and shows correct tooltip copy."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Tooltip time reveals,\nLike leaves tracing the sun's path,\nFleet's past steps made clear."
          }
        ],
        "issueNumber": 32583,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeLy9U",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Hi @juan-fdz-hawa, just a quick note â for local styling issues, let's try to avoid making global changes. Iâm revert ingyour update in [this PR](https://github.com/fleetdm/fleet/pull/32217/files#r2316435884) and apply the fix locally to the specific component affected because it caused all these styling issues with every other modal on the device user page"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed spacing has been corrected\n\n\u003cimg width=\"1776\" height=\"648\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6ef375e1-05cb-4a18-98d3-18c17dafc0fa\" /\u003e\n\n\u003cimg width=\"1774\" height=\"512\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4b5c4db3-8cc6-4d3c-9280-69b8adc8fe05\" /\u003e"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Success circle close,\nSpace brings clarity and peace,\nEase for eyes and minds."
          }
        ],
        "issueNumber": 32474,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_4SQ",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed results now filter to kernel and operating system\n\n\u003cimg width=\"304\" height=\"43\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/449a0480-cb14-4726-a362-5423c23f9848\" /\u003e\n\nAPI call is now including both os and kernel `\u0026software_version_id=575834\u0026os_name=Ubuntu\u0026os_version=24.04.2%20LTS`"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Kernel links to hosts diverse,\nLinux OS filtering could serve.\nClarity in view, users observe."
          }
        ],
        "issueNumber": 32259,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_2ms",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed OS Kernel list view now filters out 0 host scenarios"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Kernel list cleansed,\nNo more empty hosts remain,\nFleet's path is clearer."
          }
        ],
        "issueNumber": 32257,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd_ysM",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed tooltip now shows and has correct copy"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Tooltip revealed, clear,\nInfo flows like a bright stream,\nSecure, no more fear."
          }
        ],
        "issueNumber": 32255,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv040",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed on kernels pages we show the updated copy and the link works as expected\n\n\u003cimg width=\"1295\" height=\"519\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/11463d20-f927-4cf9-bf99-8d9d377d102b\" /\u003e"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "New UI reveals,\n\"Unsupported\" shown clearly,\nNo kernel fears here."
          }
        ],
        "issueNumber": 32027,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdsS6Q",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "```\nFLEET_VERSION_A=v4.72.0 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (68.56s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t68.581s\n```\n\n```\nFLEET_VERSION_A=v4.72.1 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (59.10s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t59.115s\n```\n\n```\nFLEET_VERSION_A=v4.71.1 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (52.30s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t52.321s\n```\n\n```\nFLEET_VERSION_A=v4.71.0 FLEET_VERSION_B=rc-minor-fleet-v4.73.0 go test -v\n--- PASS: TestUpgradeAToB (61.32s)\nPASS\nok  \tgithub.com/fleetdm/fleet/v4/test/upgrade\t61.343s\n```"
          },
          {
            "author": {
              "login": "PezHub"
            },
            "body": "mdm gives a ð "
          },
          {
            "author": {
              "login": "xpkoala"
            },
            "body": "orch gives a ð "
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "software gives ð "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Test steps clear as day,\nEase in use, like a bird's flight,\nFleet's path shines with light."
          }
        ],
        "issueNumber": 31999,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "content": {
          "body": "## Problem\n\nOn macos osquery last opened time is fetched from the spotlight index. https://github.com/osquery/osquery/blob/master/osquery/tables/system/darwin/apps.mm#L191-L203\nThis makes the value version dependent. So a new version will `nil` out the last open time.\nWindows \u0026 linux get this value differently. So when the software version is updated it should not return `nil` for last open time.\nWe are currently logging all the times when `LastOpenedAt == nil`\n\n## Potential solutions\n\nModify the logging to only catch the errors that are of concern. We know that on macos a version change can cause this value to be `nil`, which is expected, so we can ignore that log. However, we still want to log the unexpected, on windows/linux. If the `LastOpenedAt` is `nil` on windows/linux capture that event and log a message.\n\nRelated to https://github.com/fleetdm/fleet/issues/29061 and https://github.com/fleetdm/fleet/issues/32064\n",
          "number": 32067,
          "repository": "fleetdm/fleet",
          "title": "Change logging criteria for LastOpenedAt `nil`",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32067"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgegZj4",
        "labels": [
          ":product",
          "customer-faltona",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Change logging criteria for LastOpenedAt `nil`",
        "issueNumber": 32067,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxHA",
        "title": "Bug: False-positive for CVE-2025-6554 on Linux/macOS hosts",
        "issueNumber": 30682,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdUaqU",
        "title": "Host software: display info that Windows and Mac app never been opened",
        "issueNumber": 31268,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdDOeo",
        "title": "\"All Teams\" option is missing on the VPP token actions dropdown if another team was selected prior to it",
        "issueNumber": 30357,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxFk",
        "title": "Linux icon showing in software inventory for macOS native app",
        "issueNumber": 30803,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdMZs8",
        "title": "Include CVE number in empty state on vulnerability details",
        "issueNumber": 31377,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdL8SA",
        "title": "UI - Background page scrolls while editing Policy automations.",
        "issueNumber": 30004,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCoeo",
        "title": "GitOps: Override Fleet-maintained app install/uninstall scripts",
        "issueNumber": 25636,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgcYi4Y",
        "title": "Software page: filter by custom severity (CVSS score) ranges",
        "issueNumber": 30248,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdB-kE",
        "title": "Linux Vulns: Frontend",
        "issueNumber": 31212,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCxH8",
        "title": "Unable to apply software installers with Fleet secrets via GitOps",
        "issueNumber": 30853,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoc",
        "title": "Linux Vulns: API changes",
        "issueNumber": 31213,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdqQM4",
        "title": "last_opened_at not properly returned on host software inventory",
        "issueNumber": 31932,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCos4",
        "title": "Warning from uninstall_software_migration cron: unsupported file type",
        "issueNumber": 30565,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgd5V9o",
        "title": "Last opened time for Linux software",
        "issueNumber": 32171,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCw2A",
        "title": "Host Software API: Surface automatic install policies",
        "issueNumber": 30197,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpok",
        "title": "Linux Vulns: Optimization",
        "issueNumber": 31214,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpos",
        "title": "Linux Vulns: Guide Updates",
        "issueNumber": 31215,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCo1s",
        "title": "Clean up timing for clearing stale false-positive vulnerabilities",
        "issueNumber": 26404,
        "changeType": "removed"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCpoQ",
        "title": "Software \u003e OS: Surface Linux kernel vulnerabilities",
        "issueNumber": 30738,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-09-09T19:04:55.534666995Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegZj4",
        "status": "ð¦¤ âIn review",
        "issueNumber": 32067,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "**Fleet version:** 4.70.1  \n**Web browser and operating system:** Chrome 138.0.7204.169 (arm64) on macOS  \n\n### ð¥ Actual behavior  \nWhen uploading the SentinelOne PKG and enabling automatic install, Fleet generates a policy with:\n\n`SELECT 1 FROM apps WHERE bundle_identifier = 'com.sentinelone.sentinel-agent';`\n\nThis is an improvement over the previous behavior (`com.sentinelone.pkg.sentinel-agent`) from [#26597](https://github.com/fleetdm/fleet/issues/26597) and [PR #29249](https://github.com/fleetdm/fleet/commit/980adc0c45e5f500899df9956c3eaba562cf7b5b). However, the actual installed SentinelOne agent, as reported by the `osquery` apps table, uses:\n\n`com.sentinelone.SentinelAgent`\n\nBecause of this mismatch, the auto-generated policy fails detection until the bundle identifier is manually edited to `com.sentinelone.SentinelAgent`.  \n\n### ð§âð» Steps to reproduce  \n1. Upload the SentinelOne 24.4.1 PKG to Fleet 4.70.1.  \n2. Enable automatic install and allow Fleet to create the policy.  \n3. Observe the generated policy uses `bundle_identifier = 'com.sentinelone.sentinel-agent'`.  \n4. Observe that the policy fails until manually corrected to match the actual bundle identifier.  \n\n### ð¯ï¸ More info  \n- The correct bundle ID `com.sentinelone.SentinelAgent` is present in the SentinelOne PKG under `Library/LaunchAgents/com.sentinelone.agent.plist` in the `AssociatedBundleIdentifiers` key.  \n- This is the same value `osquery` reports in the apps table.  \n- Fleetâs current extraction logic pulls `com.sentinelone.sentinel-agent` from the component package metadata instead of reading the `AssociatedBundleIdentifiers` entry, which causes the mismatch.  \n- The fix in [#26597](https://github.com/fleetdm/fleet/issues/26597) resolved the .pkg identifier issue but still pulls the bundle ID from the wrong place in the PKG, so it doesnât match the value reported by osquery (com.sentinelone.SentinelAgent).\n- Related discussion: [iansltx comment calling out the discrepancy](https://github.com/fleetdm/fleet/issues/26597#issuecomment-2888479376).  \n\n### ð§ Current workaround  \nManually edit the auto-generated policy to use:\n\n`SELECT 1 FROM apps WHERE bundle_identifier = 'com.sentinelone.SentinelAgent';`\n\nThis allows the policy to pass and correctly detect the installed agent.  \n\n### ð Expected behavior  \nFleetâs automatic install policy generation should produce a working policy out of the box. For SentinelOne, the bundle identifier must match the installed appâs `Info.plist` and `AssociatedBundleIdentifiers` value as seen by `osquery`, which in this case is:\n\n`com.sentinelone.SentinelAgent`\n\n### ð ï¸ To fix\n\nProduct designer: @marko-lisica \n\nImprove .pkg extraction logic, so we get correct bundle ID for Sentinel, and make sure that we don't brake extraction for other packages that worked so far (celebrity apps).\n",
          "number": 31318,
          "repository": "fleetdm/fleet",
          "title": "Correct bundle identifier extraction for SentinelOne PKG auto-install policies",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/31318"
        },
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgei0yI",
        "labels": [
          "bug",
          ":release",
          "customer-preston",
          "~csa",
          "#g-software",
          "~sw-upload"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1ccd08bf",
          "startDate": "2025-09-08",
          "title": "Sprint 47"
        },
        "status": "ð¥ Ready",
        "title": "Correct bundle identifier extraction for SentinelOne PKG auto-install policies",
        "comments": [
          {
            "author": {
              "login": "AdamBaali"
            },
            "body": "### ð· Additional context\n\nAttaching screenshots from the SentinelOne 24.4.1 PKG showing where the correct bundle ID can be extracted.\n\n- The correct bundle identifier `com.sentinelone.SentinelAgent` is present in `Library/LaunchAgents/com.sentinelone.agent.plist` under the `AssociatedBundleIdentifiers` key.\n- This matches the value reported by osquery in the `apps` table.\n- Fleetâs current extraction logic appears to pull `com.sentinelone.sentinel-agent` from the component PKG metadata instead of using the value in this LaunchAgent plist.\n\n\u003cimg width=\"1142\" height=\"873\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dc820cd0-35ed-49f2-a667-eb477294a9f5\" /\u003e\n\u003cimg width=\"1142\" height=\"873\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/abb4b0c0-04f8-40f0-bbdc-90dc35c26f1f\" /\u003e\n\u003cimg width=\"1142\" height=\"873\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0b94b248-7f36-415d-ae68-41b6ea00ad28\" /\u003e\n\nThese files show the source of the correct bundle ID inside the PKG and why the current policy generation does not match what osquery reports."
          },
          {
            "author": {
              "login": "AdamBaali"
            },
            "body": "@nonpunctual let me know your thoughts on this when you have a moment."
          },
          {
            "author": {
              "login": "nonpunctual"
            },
            "body": "@AdamBaali added csa label. Looks perfect! cc @iansltx "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@AdamBaali Added a couple labels that'll be relevant if/when you see anything else like this."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Unassigned @AdamBaali because this needs to be triaged through to engineering. @mostlikelee @marko-lisica worth a discussion on whether we add a safety valve (see [Slack thread](https://fleetdm.slack.com/archives/C05FMG9G94P/p1753709661889419?thread_ts=1753705170.502829\u0026cid=C05FMG9G94P)) so we aren't blocking workflows until bugfixes are released unnecessarily, given that I can't think of a proper way to pull metadata extraction changes out of the context of a full Fleet release like we're doing for vuln feed/FMAs, and planning to do for software ingestion tweaks."
          }
        ],
        "issueNumber": 31318,
        "changeType": "added"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegLNI",
        "status": "ð¦¤ âIn review",
        "issueNumber": 31309,
        "changeType": "modified"
      },
      {
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgegD-0",
        "issueNumber": 31968,
        "changeType": "modified"
      },
      {
        "estimate": 3,
        "id": "PVTI_lADOBDAnic4A4BEUzgef6qA",
        "issueNumber": 31989,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [x] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [x] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n\n### Smoke tests\nFor this ticket, we'll only be running smoke tests that apply to macOS/iOS/iPadOS Tahoe. \n[This template contains a detailed breakdown of the tests](https://github.com/fleetdm/fleet/blob/HEAD/.github/ISSUE_TEMPLATE/release-qa.md)\n\n**MDM**\n - [x] MDM enrollment flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] MDM migration flow\n   - MacOS\n - [x] OS settings\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] Setup experience\n   - MacOS\n - [x] iOS/iPadOS\n   - iPadOS\n   - iOS\n - [x] Lock \u0026 Wipe\n   - MacOS\n   - iPadOS - Wipe only\n   - iOS - Wipe only\n\n**Orchestration**\n- [x] Packs flow\n   - MacOS\n- [x] OS settings\n   - MacOS\n- [ ] Log destination flow\n   - MacOS\n   - iPadOS\n   - iOS\n\n**Software**\n- [x] Query flow\n  - MacOS\n- [x] My device page\n  - MacOS\n- [x] Scripts\n  - MacOS\n- [x] Software\n  - MacOS\n  - iPadOS\n  - iOS\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\n# Smoke Tests\nSmoke tests are limited to core functionality and serve as a pre-release final review. If smoke tests are failing, a release cannot proceed.\n\n## Fleet core:\n\n**Fleet version** (Head to the \"My account\" page in the Fleet UI or run `fleetctl version`):\n\n**Web browser** _(e.g. Chrome 88.0.4324)_: \n\n\n### Orchestration\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eUpdate flow\u003c/td\u003e\u003ctd\u003e\n\n1. remove all fleet processes/agents/etc using `fleetctl preview reset` for a clean slate\n2. run `fleetctl preview` with no tag for latest stable\n3. create a host/query to later confirm upgrade with\n4. STOP fleet-preview-server instances in containers/apps on Docker\n5. run `fleetctl preview` with appropriate testing tag \u003c/td\u003e\u003ctd\u003eAll previously created hosts/queries are verified to still exist\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eLogin flow\u003c/td\u003e\u003ctd\u003e\n\n1. navigate to the login page and attempt to login with both valid and invalid credentials to verify some combination of expected results.\n2. navigate to the login page and attempt to login with both valid and invalid sso credentials to verify expected results.\n\u003c/td\u003e\u003ctd\u003e\n\n1. text fields prompt when blank\n2. correct error message is \"authentication failed\"\n3. forget password link prompts for email\n4. valid credentials result in a successful login.\n5. valid sso credentials result in a successful login\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n\n1. Packs successfully run on host machines after migrations \n2. New Packs can be created\n3. Packs can be edited and deleted\n4. Packs results information is logged\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLog destination flow\u003c/td\u003e\u003ctd\u003eVerify log destination for software, query, policy, and packs.\u003c/td\u003e\u003ctd\u003e\n\n1. Software, query, policy, and packs logs are successfully sent to external log destinations\n2. Software, query, policy, and packs logs are successfully sent to Filesystem log destinations\n \n\u003c/td\u003e\u003ctd\u003epass\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### MDM\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMDM enrollment flow\u003c/td\u003e\u003ctd\u003eVerify MDM enrollments, run MDM commands\u003c/td\u003e\u003ctd\u003e\n  \n1. Erase an ADE-eligible macOS host and verify able to complete automated enrollment flow.\n2. With Windows MDM turned On, enroll a Windows host and verify MDM is turned On for the host.\n3. Verify able to run MDM commands on both macOS and Windows hosts from the CLI.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMDM migration flow\u003c/td\u003e\u003ctd\u003eVerify MDM migration for ADE and non-ADE hosts\u003c/td\u003e\u003ctd\u003e\n  \n1. Turn off MDM on an ADE-eligible macOS host and verify that the native, \"Device Enrollment\" macOS notification appears.\n2. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n3. Turn off MDM on a non ADE-eligible macOS host.\n4. On the My device page, follow the \"Turn on MDM\" instructions and verify that MDM is turned on.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n\n1. Verify Profiles upload/download/delete (macOS \u0026 Windows).\n2. Verify Profiles are delivered to host and applied. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSetup experience\u003c/td\u003e\u003ctd\u003eVerify macOS Setup experience\u003c/td\u003e\u003ctd\u003e\n\n1. Configure End user authentication.\n3. Upload a Bootstrap package.\n4. Add software (FMA, VPP, \u0026 Custom pkg)\n5. Add a script\n6. Enroll an ADE-eligible macOS host and verify successful authentication.\n7. Verify Bootstrap package is delivered.\n8. Verify SwiftDialogue window displays.\n9. Verify software installs and script runs.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS updates\u003c/td\u003e\u003ctd\u003eVerify OS updates flow\u003c/td\u003e\u003ctd\u003e\n\n1. Configure OS updates (macOS \u0026 Windows).\n2. Verify on-device that Nudge prompt appears (macOS 13).\n3. Verify enforce minimumOS occurs during enrollment (macOS 14+).\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eiOS/iPadOS\u003c/td\u003e\u003ctd\u003eVerify enrollment, profiles, \u0026 software installs\u003c/td\u003e\u003ctd\u003e\n\n1. Verify ADE enrollment.\n2. Verify OTA enrollment.\n3. Verify Profiles are delivered to host and applied.\n4. Verify VPP apps install \u0026 display correctly in Activity feed.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eCertificates Upload\u003c/td\u003e\u003ctd\u003eAPNs cert and ABM token renewal workflow\u003c/td\u003e\u003ctd\u003e\n\n1. Renew APNs Certificate.\n2. Renew ABM Token.\n3. Ensure ADE hosts can enroll.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n### Software\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eCreate, edit, run, and delete queries. \u003c/td\u003e\u003ctd\u003e\n\n1. permissions regarding creating/editing/deleting queries are up to date with documentation\n2. syntax errors result in error messaging\n3. queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added and removed following modal instructions using your own device.\u003c/td\u003e\u003ctd\u003e\n\n1. Host is added via command line\n2. Host serial number and date added are accurate\n3. Host is not visible after it is deleted\n4. Warning and informational modals show when expected and make sense\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\n2. The \"My device\" page is populated correctly and as expected. \n3. Styling and padding appears correct.\n \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script library and execution\u003c/td\u003e\u003ctd\u003e\n\n1. Verify able to run a script on all host types from CLI.\n2. Verify scripts library upload/download/delete.\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\n4. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\n5. Verify UI loading state and statuses for scripts.\n8. Disable scripts globally and verify unable to run.\n9. Verify scripts display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software library and install / download\u003c/td\u003e\u003ctd\u003e\n\n1. Verify software library upload/download/delete.\n2. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\n3. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\n4. Verify UI loading state and statuses for installing software.\n7. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\n\u003ctr\u003e\u003ctd\u003eMigration Test\u003c/td\u003e\u003ctd\u003eVerify Fleet can migrate to the next version with no issues.\u003c/td\u003e\u003ctd\u003e\n\nUsing the github action https://github.com/fleetdm/fleet/actions/workflows/db-upgrade-test.yml\n1. Using the most recent stable version of Fleet and `main`, click `Run workflow`\n2. Enter the Docker tag of Fleet starting version, e.g. 'v4.64.2'\n3. Enter the Docker tag of Fleet version to upgrade to, e.g. 'rc-minor-fleet-v4.65.0'\n4. Click `Run workflow`.\n5. Action should complete successfully.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n### All Product Groups\n\u003ctable\u003e\n \u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eRelease blockers\u003c/td\u003e\u003ctd\u003eVerify there are no outstanding release blocking tickets.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this](https://github.com/fleetdm/fleet/labels/~release%20blocker) filter to view all open `~release blocker` tickets.\n2. If any are found raise an alarm in the `#help-engineering` and `#g-mdm` (or `#g-endpoint-ops`)  channels.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\n\u003ctr\u003e\u003ctd\u003eLoad tests - minor releases only unless otherwise specified\u003c/td\u003e\u003ctd\u003eVerify all load test metrics are within acceptable range on final build of RC.\u003c/td\u003e\u003ctd\u003e\n  \n1. Check [this Google doc](https://docs.google.com/document/d/1V6QtFzcGDsLnn2PIvGin74DAxdAN_3likjxSssOMMQI/edit?tab=t.0#heading=h.15acjob4ji20) to review load test key metrics and checks.\n2. After all expected changes have been merged to the RC branch, two load tests will need to be run - a new instance with no data, and a migrated instance.\n3. For the new instance with no data, set up a load test environment using the RC branch and allow it at least 24hrs of run time.\n4. For the migrated instance, set up a load test environment on the previous minor release branch. Once the environment has been set up and stabilized, follow the instructions in [Deploying code changes to fleet](https://github.com/fleetdm/fleet/blob/main/infrastructure/loadtesting/terraform/readme.md#deploying-code-changes-to-fleet) to migrate to the RC branch. Monitor the metrics post-migration to determine if any performance issues arise.\n5. Record metrics in [this spreadsheet](https://docs.google.com/spreadsheets/d/1FOF0ykFVoZ7DJSTfrveip0olfyRQsY9oT1uXCCZmuKc/edit?usp=drive_link) for the two load test runs. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e \n\u003c/table\u003e\n\n### Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n# `fleetd` agent:\n\nIncludes updates to: \n- Orbit: True / False\n- Desktop: True / False\n- Chrome extension: True / False\n\nList versions changes for any component updates below: \n\u003c!-- Remove items without updates --\u003e\n- Orbit `v1.xx.x` \u003e `v1.xx.x`\n- Desktop `v1.xx.x` \u003e `v1.xx.x`\n- Chrome extension `v1.xx.x` \u003e `v1.xx.x`\n\n## Testing gates for new `fleetd` release\n\n### Goal: Ensure new `fleetd` is tested and promoted from local \u003e edge \u003e stable channels\n\n1. Build a new `fleetd` from the release candidate branch as needed for Orbit, Desktop, and Chrome Extension.\n\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e`fleetd` local testing\u003c/td\u003e\n\u003ctd\u003e\n1. Following [Testing TUF]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/README.md)) instructions create binaries for Mac, Windows, and Ubuntu using your local TUF repository and install on macOS, Linux, and Windows hosts.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts install with the updated version and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` auto-update tests\u003c/td\u003e\n\u003ctd\u003e\n1. Conduct the [`fleetd` auto-update n+1 test]([url](https://github.com/fleetdm/fleet/blob/main/tools/tuf/test/Fleetd-auto-update-test-guide.md))\u003cbr\u003e\n2. QA certifies new release by commenting in issue.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Agent successfully auto-updates.\u003cbr\u003e\n2. Issue is certified by QA.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctd\u003e`fleetd` tests\u003c/td\u003e\n\u003ctd\u003e\n1. Set up a host in your instance to receive updates from the `edge` channels.\u003cbr\u003e\n2. Work with engineer leading the release to push changes to the `edge` channel.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n1. Confirm the hosts running on the edge channel receive the update and are working correctly.\u003cbr\u003e\n2. Confirm any new features and/or bug fixes associated with this release are working as intended.\u003cbr\u003e\n\u003c/td\u003e\n\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: edge` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\n\nInclude any notes on whether issues should block release or not as needed:\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgbpzkM",
        "issueNumber": 30136,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeZCx0",
        "labels": [
          "bug",
          ":release",
          "~vulnerability-management",
          "customer-stazzema",
          "#g-software",
          "~qa-on-branch"
        ],
        "comments": [
          {
            "author": {
              "login": "zwass"
            },
            "body": "I did some digging and found that `/Applications/iTerm.app/Contents/MacOS/iTerm2ImportStatus.app` gets added to the macOS LaunchServices database when it's opened for the first time (`/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -dump | grep -i iterm2import`).\n\nOsquery looks at all the apps registered with LaunchServices, so this is why it comes up.\n\nSeems like maybe the bug is that `iTerm2ImportStatus 1.0` (which is what is actually registered with LaunchServices) should not be considered the same CPE as `iTerm2` itself?"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "Looks like the reproduce tag was removed but the product tag was not added. Added product tag cc @mostlikelee @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "[planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755261116105419)"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "FYI @mostlikelee looks like this bug doesn't have a milestone yet.\n\nThanks for picking this one up @jkatz01!"
          }
        ],
        "issueNumber": 31501,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# `fleetd` agent: 1.47.2\n\nIncludes updates to: \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n\n- Desktop `v1.46.0` \u003e `v1.47.2`\n\nFleet 1.47.2 has been released to the `edge` channel.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgeWFPI",
        "issueNumber": 32561,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "# Welcome to Fleet!  \n\n## First things first, let's get you up and running! ðð¨\n\n#### Slack\n\n- [x] Accept the invitation to join [Fleet's Slack workspace](http://fleetdm.slack.com/) sent to your `@fleetdm.com` email address.\n- [x] Introduce yourself in `#random` in Fleet's Slack. If this is your first time using Slack, review the [Slack quick start guide](https://slack.com/help/articles/360059928654-How-to-use-Slack--your-quick-start-guide). \n\n\n#### Google \n\n- [x] Accept the invitation to Fleet's Google Workspace sent to your personal email and access your `@fleetdm.com` email address, calendar, and the [\"Fleet\" shared drive](https://drive.google.com/drive/u/0/folders/0AExI02dV1NO8Uk9PVA) in Google Drive.\n- [x] Set up [two-factor authentication](https://fleetdm.com/handbook/security#2step-verification) for Google Workspace using thier [YubiKeys](https://fleetdm.com/handbook/security#hardware-security-keys). \n- [x] Set up your emergency [backup method](https://support.google.com/accounts/answer/9289445?hl=en\u0026co=GENIE.Platform%3DAndroid). This is only to be used if you are unable to use your YubiKeys for two-factor authentication.\n\n\n#### GitHub\n\n- [x] Accept the invite to the `@fleetdm` org [as a top-level member in the \"Teammates\" team](https://github.com/orgs/fleetdm/teams/teammates/members).\n- [x] To avoid confusion, ensure your name in GitHub is your actual name (not just your user name). Click on your profile icon in the top right of screen, click \"Your profile\", then under your GitHub image click \"Edit profile\" and change your name to your preferred name.\n- [x] Access Fleet's private repos, namely [fleetdm/confidential](https://github.com/fleetdm/confidential). Sometimes seeing a \"404 Not Found\" page on GitHub might _actually_ mean you don't have access to the page you're trying to reach.  (For example, if you haven't accepted your invitation yet, or if you aren't logged in to GitHub.)\n- [x] If you don't already have a set of \"Managed bookmarks\" Download and import this [set of bookmarks](https://drive.google.com/uc?export=download\u0026id=1Nih_CACAzPQJE4_BZ7TsK3tro6WrJg8o).\n- [x] Check off the steps you've already taken as part of this tools setup meeting!\n\n\n## Now that we've got that out of the way, grab your breakfast of champions âï¸ and read a bit about our training.\n\nTraining and onboarding [are important](https://fleetdm.com/handbook/company/why-this-way#why-the-emphasis-on-training). Your **first three days at Fleet** are dedicated (exclusively) for training and working on this onboarding issue, and it will be **the major focus of your first two weeks**.\n\n\u003e If other tasks or priorities emerge other than working on this issue during your first 3 days, **please don't do them**.  Instead, work on this issue.  If you are unsure, please send a Slack DM to our CEO ([@mikermcneil](https://fleetdm.slack.com/archives/D04V67ZA97H)) who will help make sure everyone is on the same page about the importance of onboarding at the company.\n\n\u003cins\u003e â Your first day \u003c/ins\u003e\n\nOn your first day, you'll have a [tool setup call](#first-day-setup-call) with the Head of People and Head of Digital Workplace \u0026 GTM Systems and [your first manager 1:1](#your-first-11-meeting). Here's a breakdown of what to expect to cover in those calls.\n\n\n### Prepare for your first-day calls\n\nPlease complete the following as early as possible during your first day to prepare for your first-day meetings. It's fine to complete these steps after your first-day set-up call, but best to have them completed before your first manager 1:1.\n\n- [x] **Schedule your onboarding calls**: Schedule a 30-minute recurring call once every weekday for your first 2 weeks at Fleet with your manager. \n  - [x] Subscribe to your manager's calendar to find a time daily that works for both of you.\n  - [x] Schedule the recurring call with your manager in Google Calendar.\n- [x] Schedule a contributor experience training call using this [calendly link](https://calendly.com/fleetdm/contributor-experience-training). Read more about this call [in our handbook](https://fleetdm.com/handbook/company/communications#contributor-experience-training).\n- [x] **Set up your 1:1 agenda doc**: Make a copy of [Fleet's 1:1 agenda template](https://docs.google.com/document/d/1IkGQJ4PPU0MyW35Xo8BuvoUPKpStsmcw_nHWt71W2yE/copy) and rename your new agenda doc to `[your GitHub username]:[your manager's GitHub username]`. This helps your manager find your 1:1 agenda quickly, which means you're more likely to get prompt, useful feedback.\n  - [x] Share the document with your manager to using their `@fleetdm.com` email address, and grant \"Edit\" access.\n  - [x] Copy your job description commit URL (column \"W\") from your row in [ð§âð Fleeties](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=W1) and paste it next to \"Job description:\" in the \"Vision\" section of your 1:1 document.\n  - [x] Lastly, check out the [link in the footnote of your new agenda doc](https://about.gitlab.com/handbook/leadership/1-1/suggested-agenda-format/#hallway) to learn more about the agenda doc format and how to use it.\n\n\n### Your first 1:1 meeting\n\nIn your first 1:1 meeting with your manager we encourage you to cover the topics in this section. If you have time for more, you can take a look at [\"Discussions with your manager in daily onboarding 1:1's\"](#discussions-with-your-manager-in-daily-onboarding-11s) and get a headstart on future 1:1's.\n\n\n#### Suggested agenda\n\n - [x] Talk a little bit about yourself, and your background.\n - [x] Discuss your job title, responsibilities, and function.\n - [x] Discuss with your manager who all of their other direct reports are (your peers).\n - [x] Discuss with your manager who they anticipate you will work with day-to-day outside your department. Pick 2 people with your manager and schedule time with them to introduce yourself and your role and learn how they've successfully collaborated with people in your role in the past.\n - [x] Discuss with your manager the importance of this [Google doc regarding licenses](https://docs.google.com/document/d/1BXGAYt_7FTfQOjYIuXDgmxd7DX4JMiSRoOWknGgfp1c/edit).\n\n\n### Remote work\n\n- [x] Set up your personal workspace. Fleet is 100% remote, so get comfortable! Your work schedule should be sustainable and your workspace ergonomic.\n- [x] Find yourself in [\"Fleeties\" spreadsheet](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0) and update any incomplete or incorrect information.\n  - [x] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) and fill in your results in the \"Enneagram\" column of [\"Fleeties\"](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit?gid=0#gid=0\u0026range=AA1) (Pay with your Brex card)\n- [x] Study the [\"Company\" page](https://fleetdm.com/handbook/company) to learn Fleet's purpose, values, history, and advisors.  The links to external website and articles are carefully curated.  (It's worthwhile to click and read them, too.)\n- [x] Study the [\"Why this way\" page](https://fleetdm.com/handbook/company/why-this-way) to learn Fleet's most important decisions about the best way to work and the reasoning for them.  (The links to external websites and articles on that page are carefully curated.  It's worthwhile to click and read them.)\n- [x] Read Fleet's [\"Communications\"](https://fleetdm.com/handbook/company/communications) page to learn our policies on company equipment, spending company money, travel, receiving feedback, meetings, Slack etiquette, and more.  \n- [x] At Fleet, everyone uses the handbook, so it's important to learn how to quickly use it and contribute to it.\n  - [x] First, study the philosophy behind why Fleet uses a [\"handbook-first\" strategy\"](https://fleetdm.com/handbook/company/why-this-way#why-handbook-first-strategy).\n  - [x] Then,  study the [basics of markdown syntax](https://fleetdm.com/handbook/company/communications#writing-in-fleet-flavored-markdown) (bold text, italics, links, bullet points, and headings) so that you can contribute yourself.\n  - [x] Next, read [how the handbook is structured](https://fleetdm.com/handbook/company/leadership#outline-of-departmental-page-structure).\n  - [x] Find your department and add yourself to its \"Team\" section by making a pull request (aka \"PR\" aka \"merge request\" aka \"MR\"). At Fleet, everyone makes pull requests; not just engineers. Open source is forever.  Any changes you make in a repository are permanently visible in the history, even if you revert them.\n  - [x] Add your GitHub user name to the [list of humans](https://github.com/fleetdm/fleet/blob/26ada37c501870b5329cd80da32366b8a96ea32b/website/api/controllers/webhooks/receive-from-github.js#L57). \n\n\n\n# ð Your first few days - Getting oriented at Fleet\n\nHopefully by this point you've completed your day 1 meetings and are looking forward to the rest of the week! In this section, we'll prompt you to seek out information about your role, your responsibilities, how the Fleet product works, and dive deeper into customizing your workspace tools for efficiency.\n\n\n### CEO shadow program\n\n- [x] Locate the three-day \"CEO shadow program\" event on your calendar (it's usually within your first two weeks) and create an \"Out Of Office\" event on your calendar for the same dates to make sure you're available for the program.\n  - [x] Read through the [CEO shadow program](https://fleetdm.com/handbook/company/leadership#ceo-shadow-program) and [prepare for the program](https://fleetdm.com/handbook/company/leadership#[prepare-for-the-program) sections of the handbook and discuss any questions with Digital Experience during your onboarding.\n\n\n### Device transparency \n\n- [x] Read [what we can see about your work computer](https://fleetdm.com/transparency). (If you have any concerns or would prefer not to enroll your personal device, talk to your manager.)\n- [x] Visit our [Fleet dogfood instance](https://dogfood.fleetdm.com) and use the \"Sign on with Google\" option with your `@fleetdm.com` email to log in and become a user on our internal version of Fleet.\n\n\n## Discussions with your manager in daily onboarding 1:1's\n\n### GitHub\n\n - [x] Discuss with your manager [which kanban board](https://fleetdm.com/handbook/company/why-this-way#why-make-work-visible) that you, your manager, and your team use to track work in progress. \n   - There is one board per team and they correspond with the [Fleet handbook](https://fleetdm.com/handbook).\n - [x] Pull your onboarding issue into your team's Github Project board, and move it to \"In progress\".\n - [x] Discuss with your manager when to make a public issue versus a confidential issue. (At Fleet, everything we do is [public by default](https://fleetdm.com/handbook/company#openness).)\n - [x] Discuss the [preferred alternatives to posting `@fleetdm.com` email addresses publicly](https://github.com/fleetdm/confidential/issues/224) in repositories, issue trackers, blog posts, social media, or anywhere else viewable by people (and bots) outside the company.\n\n\n### Security\n\n- [x] Discuss with your manager the dangers of phishing emails, and why it's important not to click links in an untrusted email.\n\n\n### Holidays\n\n- [x] Discuss with your manager [Fleet's time off policy](https://fleetdm.com/handbook/company/communications#paid-time-off), and you understand how to [take time off at Fleet](https://fleetdm.com/handbook/company/communications#taking-time-off).\n- [x] Choose one of the following [holiday schedules](https://fleetdm.com/handbook/company/communications#holidays) and let your manager know your preference:\n- [x] Add your holidays to your calendar based on the country where you work (If you are not in the US, please tell your manager the dates of national holidays)\n- [x] Mark these and any other dates you plan to be out of office in the calendar using the [time-off process](https://fleetdm.com/handbook/company/communications#taking-time-off).\n\n\n### Performance feedback\n\n- [x] You understand [how performance feedback at Fleet works, from the perspective of your manager](https://fleetdm.com/handbook/company/communications#feedback).\n- [x] You understand and have read the relevant section in the handbook about how [compensation decisions](https://fleetdm.com/handbook/company/communications#compensation) are evaluated and updated shortly after the yearly workiversary.\n\n\n## Customizing your tools\n\nYou will have accessed most of our standard tools during the tool setup meeting with Digital Experience. Now you're set up, here are some ways to customize them to be most efficient for our use of them at Fleet. Take your time and read through each prompt.\n\n### Google Workspace \n\n#### Gmail\n\n- [x] Set up your fleetdm email signature by following the instructions in [this guide](https://docs.google.com/document/d/1SaAjH8G8DwAcpsiytIDMq8cImiQzVb6Lj-75Y-w1aGs).\n\n\n#### Google Calendar\n\n\n##### How to use Google Calendar at Fleet\n\n- Check your calendar every morning to see if anything has been added. \n- Schedule internal meetings with Google Calendar and not personal Calendly links so all team members attending can add meeting notes and attachments. For calendar event descriptions, use \"Agenda: LINK\", where \"LINK\" is the URL of your 1:1 doc (this is important to play nicely with some automation we have set up. Be sure to put the string \"Agenda: \" at the beginning of the description for any calendar event for a recurring meeting -- otherwise, unexpected automation may trigger).\n- Please do not move events between calendars or add new calendars.\n- [x] Share your calendar with the \"everyone@fleetdm.com\" group and select \"make changes to events.\"\n       \n\u003cimg width=\"768\" alt=\"Screenshot 2023-01-17 at 9 50 18 AM\" src=\"https://user-images.githubusercontent.com/100798688/212967248-76717523-031e-4606-8893-3868f9b85328.png\"\u003e\n\n- [x] [Set your working hours in Google Calendar](https://support.google.com/calendar/answer/7638168?hl=en#zippy=%2Csee-how-to-set-working-hours).\n- [x] Use this link to subscribe to the [\"Celebrations\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19kaW9lNzlrYWk1cnY4bzgxamd2cnF2NWk1Z0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) in Google Calendar and add your birthday as an all-day event with your full name in the title (\"Jasmine Stone's birthday\"), and set it up to recur annually.\n- Subscribe to the following calendars in Google Calendar:\n  - [x] The [\"Events and speaking dates\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19qa2w5OWs0Z29qdGpyNGZmYzJiczhmbTRhZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t). \n  - [x] The [\"Scrum: MDM\" calendar](https://calendar.google.com/calendar/u/0?cid=Y18yNGI5MDI2YmZiM2Q1ZDA5NWRkMzcwNmUxMzFkN2YxNmEyZjQ4YzdhNTA1NTQ3MTcwNTY5ZjA3ODgzYjZlNzMyQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Orchestration\" calendar](https://calendar.google.com/calendar/u/0?cid=Y19jYzdlMGU1Y2JjMGZjOTE1NDlmM2MyNTc3NTI3YjYxYTUxMmQ3ZjI4ZGZiM2UxYWYyNzE2MGVlYjIyZWUxZTViQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Scrum: Software\" calendar](https://calendar.google.com/calendar/u/0?cid=Y180MzExYTdhNGQ2NDgzMGM4NzEzYjIzMTU3Nzc3ZDk5NmZkOWRkZWQ5ZGZiZjMxMjdiZjg1ZDJmZmUzMjdlODczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20).\n  - [x] The [\"Fleet releases\" calendar](https://calendar.google.com/calendar/u/0?cid=Y192Nzk0M2RlcW4xdW5zNDg4YTY1djJkOTRic0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).\n  - [x] The [\"Office hours\"](https://calendar.google.com/calendar/u/0?cid=Y18zMjIzNzY4MmRkZTk4ZTMyODI1YTU2NWQxMmY5NDAxMjZjYzFiNGQ5Y2I2YzY4MmM0NjI3MWRmNDdlMzYzOTQ2QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20) calendar in Google Calendar and talk to your manager about which meetings you should add yourself to. These calls are for you to meet everyone and learn who does what so that when you need something, you know who to reach out to for help.\n\n \n#### Google Drive\n\n- [x] Access and explore the Fleet shared drive in Google Drive and see how it [is organized](https://docs.google.com/drawings/d/1rl_q3Meph74h5md2g1GLanFIwQbkhvoK3cbD-FubTwc/edit).  \n- [x] Watch [this video](https://www.loom.com/share/89314389ccab44558d42ed88a70d9d24) _(4m)_ to learn how we share files with each other in Google Drive.  (It is different than the default way.)\n\n\n### Your equipment\n\n- [x] Tag `@Allen Houchins` in the [#help-onboarding](https://fleetdm.slack.com/archives/C02QG7P5571) Slack channel with your laptop's serial number and operating system. Why?  Now that you've received the new laptop, a Fleet administrator will ensure you're successfully enrolled in Fleet with MDM turned on, and with all of Fleet's baseline system preferences and other settings (\"configuration profiles\").\n\n\n#### Security and compliance\n\n- [x] Configure your [YubiKeys](https://www.loom.com/share/e0d428ec49ee448d9b851b033a387364).\n- [x] Complete your initial Vanta security training (you will be emailed an invite to the training)\n\n\n### Slack\n\n- [x] **Slack + GitHub:** Install and configure the [Toast Slack app](https://fleetdm.slack.com/apps/AC6M092SD-toast-for-github)\n  - [x] After installing, be sure to **finish configuration**: \n\n  \u003cimg width=\"1636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/618009/220965748-30cb47be-e386-4cbb-b5b5-fe8e892d435d.png\"\u003e\n  \n  - [x] Confirm that you get a Slack notification when someone mentions you in a GitHub issue comment. If this didn't happen, grab time with Sam Pfluger or manager before the end of your first two weeks to perform this test. the [Toast app working correctly](https://fleetdm.com/handbook/company/communications#getting-github-notifications-in-slack) is critical for working at Fleet.)\n  \n- [x] **Slack + Google Calendar:** Install the [Google Calendar + Slack integration](https://fleetdm.slack.com/apps/ADZ494LHY-google-calendar) and configure this tool so that you're notified in Slack just before your scheduled calendar events start (e.g. at t-minus one minute).\n- **Optional**: Join the [#random-coffee](https://fleetdm.slack.com/archives/C06BF23ALDA) channel to virtually meet up with a fellow Fleetie every week.\n\n\n### Zoom\n\n- [x] Update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] Create a Google Calendar Task for the night before or morning of your first day of the CEO shadow program to update your Zoom display name to be `CEO shadow | [your name]` (e.g. \"CEO shadow | Jayne Doo\")\n- [x] Create a Google Calendar Task for the end of the last day of the CEO shadow program to update your Zoom display name to be `[your name] | [your title]` (e.g. \"Jayne Doo | Train Conductor\").\n- [x] **Google Calendar + Zoom:** Verify you can host meetings using your Fleet Zoom account and your `@fleetdm.com` calendar in Google Calendar.\n\n\n### Unblocked\n\nYou have access to Fleet's instance of Unblocked. \n- [x] [Sign into Unblocked using GitHub](https://getunblocked.com/). You'll automatically be granted access to the [Fleet team]([url](https://getunblocked.com/dashboard/team/8e9a24fe-5638-4bc0-a8c2-b09d53b4621a/questions/team)). Unblocked is an LLM that has been trained on our GitHub repo, and is capable of answering a variety of questions about how Fleet works.\n\n\n\n## ðï¸ Your first two weeks\n\n\n### Immerse yourself in the world of device management and security\n\nIf you aren't already familiar with device management/security, this can be a lot to take in. Don't worry if you're still confused.\n- [x] Check out this list of [commonly used terms](https://fleetdm.com/handbook/company/communications#commonly-used-terms)\n- [x] Read the [2024 investor memo](https://docs.google.com/document/d/1VWRVwp0Ar8qASmHkP-uW3Da1ZParupO2OUCx9BN5GGg/edit). \n- [x] Read [Why Fleet?](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit#heading=h.vfxwnwufxzzi) to learn about the company's roadmap, and what people are using the product for in the real world. You'll get to know the customer persona and a few example case studies.\n- [x] Read [The Five Dysfunctions of a Team](https://wtf.tw/ref/lencioni.pdf) or check out the [audio book](https://www.audible.co.uk/pd/The-Five-Dysfunctions-of-a-Team-Audiobook/B004EXKC5M).\n- [x] The first two-thirds of [The Phoenix Project](https://www.audible.com/pd/The-Phoenix-Project-Audiobook/B00VAZZY32) to live a few days in the life of one of Fleet's customers, an IT leader named Bill, a CISO named John, a couple of IT middle managers named Patty and Wes, and an IT engineer named Brent.  You'll also get a good perspective on why Fleet works the way we do.\n- [x] **New managers**: Please also read [\"No rules rules\"](https://www.audible.com/pd/No-Rules-Rules-Audiobook/1984891170?qid=1729182831\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=EB42E4EEBQEPGH7E6HD7\u0026pageLoadId=gJnRnUoPxOnoqcIA\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and [\"The goal\"](https://www.audible.com/pd/The-Goal-Audiobook/B00IFG88SM?qid=1729183058\u0026sr=1-1\u0026ref_pageloadid=not_applicable\u0026pf_rd_p=83218cca-c308-412f-bfcf-90198b687a2f\u0026pf_rd_r=DDZQ8MX4GS8QATQ5QGEX\u0026pageLoadId=pR8nv6URmTfyvTHk\u0026creativeId=0d6f6720-f41c-457e-a42b-8c8dceb62f2c\u0026ref=a_search_c3_lProduct_1_1 ) and the [\"Leadership\" page](https://fleetdm.com/handbook/company/leadership).\n\n\n### Open-source community\n\n- [x] Join the \"Mac Admins\" Slack to get connected with the community of sysadmin users who use Fleet.\n  - Sign up for the [Mac Admins Slack workspace](https://join.slack.com/t/macadmins/shared_invite/zt-34vzyf677-v4FuM9xOWQu1Yu7dAFHpZg)\n  - Join the [`#fleet`](https://macadmins.slack.com/archives/C0214NELAE7) and [`#osquery`](https://macadmins.slack.com/archives/C07DGNRGS) channels\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Introduce yourself to the community in the channel.\n- [x] Join the osquery Slack to get connected with the community of osquery aficionados who use Fleet.\n  - Sign up for the osquery [Slack workspace](https://fleetdm.com/community) using your work email address\n  - Set your standard profile pic\n  - Join the [`#fleet`](https://osquery.slack.com/archives/C01DXJL16D8) channel\n  - Set your status with the `:fleet:` emoji and text like \"Software Engineer, Fleet\" (replace with your title). See [Mike (@mikermcneil) for an example](https://osquery.slack.com/team/U019VQA6R5F)\n  - Lurk a bit and see what folks talk about, and how often and how quickly folks from Fleet respond.\n  - Introduce yourself to the community in the channel.\n\n\n## ð Making it official\n\n- [x] Order one hoodie, backpack, t-shirt or other piece of branded merchandise for yourself using your Brex card at [Printful (login in 1password)](https://www.printful.com/dashboard/default). Select one item from Product templates or from the order history.\n- [x] **GitHub:** You've [publicized your membership](https://github.com/orgs/fleetdm/people) in [Fleet's GitHub org](https://github.com/fleetdm) if you are comfortable doing so. This is a suggestion, not a requirement.  It will help folks in the community understand that you are part of the Fleet Device Management team.  \n- [x] **LinkedIn:** Update your LinkedIn profile and send connection requests to your colleagues. This is a suggestion, not a requirement. Consider using the same picture as your LinkedIn everywhere at Fleet for continuity.\n\n### Engineering\n\n - [x] Talk with your manager about the on-call rotation.\n    - If you've been added to the on-call rotation, talk with your manager about the responsibilities of an on-call engineer.\n - [x] Bookmark this list of [\"triaged\"](https://github.com/issues?q=is%3Aopen+archived%3Afalse+org%3Afleetdm+no%3Amilestone+no%3Aassignee+sort%3Aupdated-desc+) issues.\n  - [x] Add yourself to the recurring engineering meetings (i.e. roundup, standup, and release retrospectives) and understand the purpose of each of these meetings.\n  - [x] Request access to [âï¸ Customer environments \u0026 license keys](https://docs.google.com/spreadsheets/d/1nGgy7Gx1Y3sYHinL8kFWnhejghV1QDtv9uQgKu91F9E/edit#gid=0)\n  - [x] Accept the invite to the @fleetdm GitHub org [in a special team like \"Core engineering\" or \"Growth engineering\", so that you have full write access](https://github.com/orgs/fleetdm/teams/teammates/teams) \n   - Ask your manager about a good first code change of some kind that you can push a PR for on your first day. \n  - [x] [Front-end engineers](https://github.com/orgs/fleetdm/teams/frontend) only: [Request a \"full\" Figma license](https://www.figma.com/team_invite/redeem/7GHxFEQ5ruTld3Z61l1IRC) in order to interact with wireframes easier. \n- [x] Discuss with your manager why we use [Bootstrap 4](https://getbootstrap.com/docs/4.6/getting-started/introduction/) when working on fleetdm.com.\n  - [x] Discuss with your manager why we avoid writing custom CSS/LESS in stylesheets, instead opting for inline Bootstrap classes and, occasionally, inline styles where possible.  \n  - [x] Discuss with your manager why we custom stylesheets are still sometimes used, especially for media queries, but we favor custom selectors like `[purpose=\"navbar-button\"] {  }` rather than `.navbar-button { }`. \n    - This helps make Bootstrap classes easier to distinguish in the HTML since it means every class in the HTML is a Bootstrap class.\n\n\u003c!--\n### ð Sales onboarding\n\nThis issue is to be started after finishing your welcoming onboarding ticket. It is intended to get you more familiar with how we sell at Fleet, and it will help you ramp and get you closer to being able to contribute to revenue generation.\n\n## Get to know the team\n- [ ] Schedule 1:1s with at least 3 team members, including one Solution Consultant\n  - [ ] Ask SC to show you dogfood and help you open it\n- [ ] Begin attending daily standup meetings\n- [ ] Ask teammates what recurring meetings you should attend\n- [ ] Ask one person to be your âonboarding buddyâ to help with daily flow\n- [ ] Take the [Enneagram test](https://docs.google.com/spreadsheets/d/1OSLn-ZCbGSjPusHPiR5dwQhheH1K8-xqyZdsOe9y7qc/edit#gid=0\u0026range=AA1) (pay with your Brex card)\n\n## Get familiar with the [Why Fleet](https://docs.google.com/document/d/1E0VU4AcB6UTVRd4JKD45Saxh9Gz-mkO3LnGSTBDLEZo/edit?usp=sharing) document\n- [ ] Bookmark this file, the main source of all Fleet product marketing information\n- Read the file to learn:\n   - [ ] The high-level positioning of Fleet\n   - [ ] Product categories Fleet plays in\n   - [ ] Fleetâs Ideal Customer Profile\n   - [ ] Personas that Fleet sells to and works with\n   - [ ] Buying situations\n \n## Familiarize yourself with prospect/customer calls\n- [ ] Go to the [Gong Sales Onboarding folder](https://us-65885.app.gong.io/library/company?workspace-id=9148397688380544352\u0026folder-id=2713722867517278137#) and start watching call recordings, making note of the comments both at the folder level describing each call and during the call where notes are made about what is being said in the call at that time; add your own notes to the calls as desired\n- [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Bring questions to daily standups, sales office hours and sales enablement meetings\n- [ ] Ask CRO which upcoming calls you should shadow\n\n\n## Learn tech stack - in an AE 1:1 or CRO 1:1, discuss tools used and which you'll need to request a license for\n- [ ] Once licenses are obtained, walk through each of the tools with the CRO and then again with an AE\n   - [ ] Salesforce+Einstein activity capture\n   - [ ] Sales nav\n   - [ ] Dripify\n   - [ ] Snitcher\n   - [ ] Calendly\n   - [ ] Gong\n\n\n## Watch videos and read content to learn why customers bought Fleet\n- [ ] Start with clips at top of fleetdm.com\n  - [ ] Watch Austin from Rivian discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=6020709985747924682)\n  - [ ] Watch Nick from Reddit discuss [why they bought Fleet](https://us-65885.app.gong.io/call?id=320232857290997743)\n  - [ ] Find the notes for these calls in Google Drive (Docs) and learn the format and types of items captured\n- [ ] Read why other customers bought Fleet Premium [here](https://docs.google.com/spreadsheets/d/1yrsjltGJ9DZohCw6hhJ-uWMDjbWvEuGTF0yGJeyxwrI/edit?usp=sharing)\n\n\n## Learn how we sell at Fleet\n- [ ] Read the [Sales Playbook One Pager](https://docs.google.com/document/d/1v5qEUH-aMxIQFQDIs6gdGorr8_iDD7f6/edit?usp=sharing\u0026ouid=101039358388338051104\u0026rtpof=true\u0026sd=true) and the detailed [Sales Playbook](https://docs.google.com/document/d/1xVmpCYoxWbOvzQdwGhf9xMQ6ZYoLVjsDA_cEeJb0mEE/edit?usp=sharing)\n- [ ] Schedule 1:1 with another AE to discuss the sales process and how Salesforce is used\n- [ ] Schedule (or use existing) 1:1 with CRO to review all the above\n- [ ] If not already invited to the weekly Sales Enablement meeting, add yourself and attend!\n- [ ] Review the [GitLab MEDDPPICC content](https://handbook.gitlab.com/handbook/sales/meddppicc/).\n\n\n## Review content and collateral\n- [ ] [Sales collateral list](https://docs.google.com/document/d/1grgxTXRIDEDrwk4xDQCZcxvZK0La407b7O3tTvrOnlE/edit?usp=sharing)\n- [ ] [Security Tools Terms](https://docs.google.com/spreadsheets/d/1bF7ct4Ibyo-GPaehFRwZrlN2PQqQmyi1D1gx-gqNlpc/edit?usp=sharing)\n- [ ] [Fleet ROI](https://docs.google.com/spreadsheets/d/14Cfj77ynOB6z4pmb9DD7HNRGo0kcKJuEIifgnz-YO50/edit?usp=sharing)\n- [ ] [TEMPLATE - Prospect discovery/qualification](https://docs.google.com/document/d/14kgtz7o3kwXy-T3YysLyeakiIGNVFDpHQ9CiJ_k8uXI/edit?usp=sharing)\n\n\n--\u003e\n\n## ð All good?\n\n- [x] Run through the checklists above one last time to make sure there's nothing you might have overlooked.\n- [x] Remove your Fleet Google account from the [\"onboarding@\" Google group](https://groups.google.com/).\n\n---------\n\nð That's it!  Thank you for all of your patience and attention to detail.  We are all very excited to have you on the team, and we can't wait to see what you accomplish.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "status": "Done",
        "issueNumber": 11828,
        "changeType": "modified"
      }
    ]
  },
  {
    "timestamp": "2025-09-10T07:05:21.749975052Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgef1hU",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Current vpp app request:\n`GET https://vpp.itunes.apple.com/mdm/v2/assets`\n```\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n```\nWhere `token` is the `vpp_token_teams.token` from the database.\n\n\n\nMaking request for custom app meta data\n```\nconst response = await fetch('https://api.ent.apple.com/v1/catalog/us/stoken-authenticated-apps', {\n  headers: {\n    'Authorization': `Bearer ${jwtToken}`,\n    'Cookie': `itvt=${vppAppToken}`,\n    'Content-Type': 'application/json'\n  }\n});\n```\nThe `vppAppToken` is collected from the client who has uploaded the custom app via App Store Connect. \n\nThe `jwtToken` is generated from a KeyID, TeamID and signed with a private key (a p8 file). This information is gathered in an apple developer account with MDM vendor access (https://developer.apple.com/help/account/certificates/mdm-vendor-csr-signing-certificate). To generate this information in an apple developer account follow these steps: https://developer.apple.com/help/account/service-configurations/apps-and-books-for-organizations.\n\nIn order to create a jwt here is some simple golang pseudo code using github.com/golang-jwt/jwt/v5\n```\npackage main\n\nimport (\n  \"github.com/golang-jwt/jwt/v5\"\n)\n\nfunc loadPrivateKey(keyPath string) (*ecdsa.PrivateKey, error) {\n\tkeyData, err := ioutil.ReadFile(keyPath)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to read key file: %w\", err)\n\t}\n\n\tblock, _ := pem.Decode(keyData)\n\tif block == nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse PEM block\")\n\t}\n\n\tprivateKey, err := x509.ParsePKCS8PrivateKey(block.Bytes)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse private key: %w\", err)\n\t}\n\n\tecdsaKey, ok := privateKey.(*ecdsa.PrivateKey)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"key is not an ECDSA private key\")\n\t}\n\n\treturn ecdsaKey, nil\n}\n\n\nfunc main() {\n\tprivateKey, err := loadPrivateKey(\u003cpath to private key\u003e) //path to filesystem p8 file\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to load private key: %w\", err)\n\t}\n\tnow := time.Now()\n\tmaxDuration := time.Duration(15777000) * time.Second // 6 months\n\tclaims := jwt.RegisteredClaims{\n\t\tIssuer:      \u003cinsert team id from developer console here\u003e,                          // 10-character Team ID\n\t\tIssuedAt:  jwt.NewNumericDate(now),                \n\t\tExpiresAt: jwt.NewNumericDate(now.Add(maxDuration)), \n\t}\n\n\t// Create token with ES256 algorithm and required headers\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodES256, claims)\n\ttoken.Header[\"kid\"] = \u003cinert key id from developer console here\u003e // 10-character key ID\n\ttoken.Header[\"typ\"] = \"JWT\"\n\n\t// Sign the token\n\ttokenString, err := token.SignedString(privateKey)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to sign JWT: %w\", err)\n\t}\n\n\tfmt.Printf(\"Generated JWT: %s\\n\", tokenString)\n}\n```"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "I was able to get some metadata information for public apps using the generated jwt token.\nThis request is very similar to https://github.com/fleetdm/fleet/blob/main/server/mdm/apple/itunes/api.go#L36 \n`func GetAssetMetadata(adamIDs []string, filter *AssetMetadataFilter) (map[string]AssetMetadata, error) {`\n\nThe first thing I needed to do was get a storefront id to use for the requests:\nhttps://developer.apple.com/documentation/devicemanagement/fetching-storefront-objects\n```\ncurl -X GET \\\n    -H \"Authorization: Bearer \u003cjwt\u003e\"\n    -H \"Content-Type: application/json\" \\\n    \"https://api.ent.apple.com/v1/storefronts?platform=iphone#all\"\n```\nLong response of all storefronts, but more likely than not we want the `United States` region\n```\n...\n{\n      \"id\": \"us\",\n      \"type\": \"storefronts\",\n      \"href\": \"/v1/storefronts/us\",\n      \"attributes\": {\n        \"defaultLanguageTag\": \"en-US\",\n        \"name\": \"United States\",\n        \"supportedLanguageTags\": [\n          \"en-US\",\n          \"es-MX\",\n          \"ar\",\n          \"ru\",\n          \"zh-Hans-CN\",\n          \"fr-FR\",\n          \"ko\",\n          \"pt-BR\",\n          \"vi\",\n          \"zh-Hant-TW\"\n        ]\n      }\n    },\n...\n```\nAs you can see the united states storefront id is just `us`.\n\nGiven an application adam id, we can now query it for metadata:\nhttps://developer.apple.com/documentation/devicemanagement/get-v1-catalog-_storefront_-apps-_id_\n```\ncurl -X GET \\\n    -H \"Authorization: Bearer \u003credacted\u003e\" \\\n    -H \"Content-Type: application/json\" \\\n    \"https://api.ent.apple.com/v1/catalog/us/apps/897446215?platform=iphone\u0026extend=latestVersionInfo\"\n```\n\n```\n    {\n  \"data\": [\n    {\n      \"id\": \"897446215\",\n      \"type\": \"apps\",\n      \"href\": \"/v1/catalog/us/apps/897446215\",\n      \"attributes\": {\n        \"artistName\": \"Canva\",\n        \"contentRatingsBySystem\": {\n          \"appsApple\": {\n            \"name\": \"4+\",\n            \"rank\": 1,\n            \"value\": 100\n          }\n        },\n        \"deviceFamilies\": [\n          \"mac\",\n          \"iphone\",\n          \"ipad\",\n          \"ipod\"\n        ],\n        \"genreDisplayName\": \"Photo \u0026 Video\",\n        \"hasEula\": false,\n        \"isB2BCustomApp\": false,\n        \"isFirstPartyHideableApp\": false,\n        \"isIOSBinaryMacOSCompatible\": false,\n        \"isVppDeviceBasedLicensingEnabled\": true,\n        \"name\": \"Canva: AI Photo \u0026 Video Editor\",\n        \"offers\": [\n          {\n            \"assets\": [\n              {\n                \"flavor\": \"iosSoftware\",\n                \"size\": 102455296\n              }\n            ],\n            \"buyParams\": \"productType=C\u0026price=0\u0026salableAdamId=897446215\u0026pricingParameters=STDQ\u0026pg=default\u0026marketType=ENT\u0026appExtVrsId=877791337\",\n            \"currencyCode\": \"USD\",\n            \"price\": 0.00,\n            \"priceFormatted\": \"$0.00\",\n            \"type\": \"get\"\n          }\n        ],\n        \"platformAttributes\": {\n          \"ios\": {\n            \"artwork\": {\n              \"bgColor\": \"00c4cc\",\n              \"height\": 1024,\n              \"textColor1\": \"080416\",\n              \"textColor2\": \"0a0414\",\n              \"textColor3\": \"062a3a\",\n              \"textColor4\": \"082b39\",\n              \"url\": \"https://is1-ssl.mzstatic.com/image/thumb/Purple211/v4/e8/85/55/e8855548-dc4b-0307-b98b-6a29971c0875/AppIcon-0-0-1x_U007epad-0-11-0-85-220.png/{w}x{h}bb.{f}\",\n              \"width\": 1024\n            },\n            \"bundleId\": \"com.canva.canvaeditor\",\n            \"externalVersionId\": 877791337,\n            \"isVisionOSCompatible\": true,\n            \"latestVersionInfo\": {\n              \"releaseDate\": \"2025-09-05\",\n              \"releaseNotes\": \"Weâre working on bigger and better features. Meanwhile, we freshened up the app with new content and minor bug fixes. \\n\\nGot a question in mind? Let us know at canva.me/help \\n\\nHappy designing!\",\n              \"releaseTimestamp\": \"2025-09-05T01:13:17Z\",\n              \"versionDisplay\": \"4.175.0\"\n            },\n            \"minimumOSVersion\": \"14.0\",\n            \"minimumVisionOSVersion\": \"1.0\",\n            \"requiredCapabilities\": \"arm64 \",\n            \"requiredCapabilitiesForRealityDevice\": \"arm64 \",\n            \"seller\": \"Canva Pty Ltd\",\n            \"subtitle\": \"Design, Collages \u0026 Logo Maker\"\n          }\n        },\n        \"supportsDeviceSharing\": false,\n        \"url\": \"https://apps.apple.com/us/app/canva-ai-photo-video-editor/id897446215\",\n        \"userRating\": {\n          \"ratingCount\": 2907179,\n          \"value\": 4.9\n        },\n        \"usesClassKit\": false\n      },\n      \"relationships\": {\n        \"genres\": {\n          \"href\": \"/v1/catalog/us/apps/897446215/genres\",\n          \"data\": [\n            {\n              \"id\": \"6008\",\n              \"type\": \"genres\",\n              \"href\": \"/v1/catalog/us/genres/6008\",\n              \"attributes\": {\n                \"name\": \"Photo \u0026 Video\",\n                \"parentId\": \"36\",\n                \"parentName\": \"App Store\",\n                \"url\": \"https://itunes.apple.com/us/genre/id6008\"\n              }\n            },\n            {\n              \"id\": \"6007\",\n              \"type\": \"genres\",\n              \"href\": \"/v1/catalog/us/genres/6007\",\n              \"attributes\": {\n                \"name\": \"Productivity\",\n                \"parentId\": \"36\",\n                \"parentName\": \"App Store\",\n                \"url\": \"https://itunes.apple.com/us/genre/id6007\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nTo match our existing `GetAssetsMetadata` method that accepts a slice of adam ids we can use\nhttps://developer.apple.com/documentation/devicemanagement/get-v1-catalog-_storefront_-apps\n`GET https://api.ent.apple.com/v1/catalog/{storefront}/apps#ids?ids=\u003cid1\u003e,\u003cid2\u003e\u0026platform=iphone`\n\nNotable items:\n`platform` param. We can request info for different platforms `Possible Values: appletv, ipad, iphone, mac, realityDevice, web`. \n`extend` param. Added `latestVersionInfo` to get version info:\n```\n            \"latestVersionInfo\": {\n              \"releaseDate\": \"2025-09-05\",\n              \"releaseNotes\": \"Weâre working on bigger and better features. Meanwhile, we freshened up the app with new content and minor bug fixes. \\n\\nGot a question in mind? Let us know at canva.me/help \\n\\nHappy designing!\",\n              \"releaseTimestamp\": \"2025-09-05T01:13:17Z\",\n              \"versionDisplay\": \"4.175.0\"\n            },\n```\n\nThere is an additional endpoint that requires an sToken (vpp token)\n```\ncurl -X GET \\\n    -H \"Authorization: Bearer \u003credacted\u003e\" \\\n    -H \"Content-Type: application/json\" \\\n    --cookie \"itvt={vpptoken}\" \\\n    \"https://api.ent.apple.com/v1/catalog/us/stoken-authenticated-apps?ids=\u003cid1\u003e,\u003cid2\u003e\u0026platform=iphone\"\n```\nUntested if this returns non-custom apps, or just custom apps.\n\nQuestions:\nUnsure if `v1/catalog/us/apps` returns custom vpp apps or if `v1/catalog/us/stoken-authenticated-apps` returns regular non-custom vpp apps. We may have to make two requests, one for custom vpp apps and one for regular catalog vpp apps. This is TBD\n\nUnsure if `https://vpp.itunes.apple.com/mdm/v2/assets` will return the custom vpp app or not?\nThe answer appears to be yes, but we should double check. Can we distinguish it is a custom vpp app?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Making authenticated requests + proxy.\n\nIn order to make authenticated requests we need to use a jwt. We can either request that our clients create a jwt from an apple developer account that has mdm access (probably unlikely) or we can use the fleet apple developer account and a jwt we generate. The problem is we do not want to share this jwt with clients into their fleet server. So we have to proxy requests from the client fleet instances. We have this pattern already available, enterprise android and microsoft compliance partner.\n\nThese requests are proxied through fleetdm.com. More specifically through the sailsjs application that power fleetdm.com\nAndroid enterprise endpoints: https://github.com/fleetdm/fleet/blob/main/website/config/routes.js#L991-L999\nMicrosoft compliance partner endpoints: https://github.com/fleetdm/fleet/blob/main/website/config/routes.js#L1041-L1049\n\nHow would this work for custom VPP apps.\n1. create an endpoint on fleetdm\n`POST /api/v1/vpp`\nThis would take a vpp app token. It would insert a record into a new table in the fleetdm database. This table would hold\n```\n      fleetServerUrl\n      fleetLicenseKey\n      vppToken\n      fleetServerSecret\n```\nVerfying the fleet license key and it would return the `fleetServerSecret`.  This request would be made from a clients' fleet server instance.\n2. We would store this secret in `mdm_config_assets` table in the clients' fleet server instance.\n3. Make proxied requests\nExample `GET /api/v1/vpp/metadata`\nThis would take the `fleetServerSecret` stored in the `mdm_config_assets` and proxy the request to apple using the fleet jwt.\n\nWhy do we need to generate and exchange and store a `fleetServerSecret`?\nWe need to make sure that people cannot just guess random vpp tokens. We want to make sure any endpoints that makes requests to apple apis are properly attributed and secured to a particular client and said client is authorized to make these requests.\n\nHow many requests can we make using a single jwt?\nhttps://developer.apple.com/documentation/devicemanagement/generating-developer-tokens#Limit-request-rate\n`The Apps and Books for Organizations API limits the number of requests your app can make using a developer token within a specific period of time. If you exceed this limit, youâll temporarily receive 429 Too Many Requests error responses for requests that use the token. This error resolves itself shortly after the request rate has reduced.`\nMeaning can all vpp metadata requests be proxied through a single jwt? Do we need to generate more than one?"
          }
        ],
        "issueNumber": 32713,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegD-0",
        "issueNumber": 31968,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [x] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [x] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [x] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n\n### Smoke tests\nFor this ticket, we'll only be running smoke tests that apply to macOS/iOS/iPadOS Tahoe. \n[This template contains a detailed breakdown of the tests](https://github.com/fleetdm/fleet/blob/HEAD/.github/ISSUE_TEMPLATE/release-qa.md)\n\n**MDM**\n - [x] MDM enrollment flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] MDM migration flow\n   - MacOS\n - [x] OS settings\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] Setup experience\n   - MacOS\n - [x] iOS/iPadOS\n   - iPadOS\n   - iOS\n - [x] Lock \u0026 Wipe\n   - MacOS\n   - iPadOS - Wipe only\n   - iOS - Wipe only\n\n**Orchestration**\n- [x] Packs flow\n   - MacOS\n- [x] OS settings\n   - MacOS\n- [ ] Log destination flow\n   - MacOS\n   - iPadOS\n   - iOS\n\n**Software**\n- [x] Query flow\n  - MacOS\n- [x] My device page\n  - MacOS\n- [x] Scripts\n  - MacOS\n- [x] Software\n  - MacOS\n  - iPadOS\n  - iOS\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@AndreyKizimenko While you will be leading this effort, it impacts all product groups, so feel free to request support from the rest of the QA team as needed. "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Hey @lukeheath @AndreyKizimenko, this got lost in drafting last two weeks. I don't think this needs to go through the drafting process, as it doesn't require product design or estimation. I moved this to \"Testing - QA board\" project."
          },
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "@xpkoala @PezHub @jmwatts - @AndreyKizimenko will be taking lead on this, but we'll be bringing into each product group's release board on Monday after sprint kickoff. We expect each QA engineer will be involved at some point as we validate MacOS Tahoe. \n\ncc @sharon-fdm @georgekarrv @mostlikelee "
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Opened a PR for the article part of this task: https://github.com/fleetdm/fleet/pull/32784"
          }
        ],
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "## Related user story\n\n#29478. Blocked by #31895. Generate-gitops work is blocked by #31896.\n\n## Task\n\nSupport icon editing via GitOps in a performant way.\n\n### Server-side\n\n- [x] Include icon hash and filename from the database on batch software responses\n- [x] Include icon hash and filename from the database on batch VPP app response\n- [x] On VPP app set response, clear all icons for any software titles on that team that aren't associated with packages or VPP apps (doing this on the VPP call because it happens second)\n\n### Generate-gitops\n\n- [ ] Populate icon paths in YAML when software titles mention a relative URL for an icon (don't pull VPP app icons)\n- [ ] Same as above, but for VPP apps\n- [ ] Download icons to the referenced icon paths with up to 16 concurrent connections\n\n### GitOps apply\n\n- [x] For supplied icons, validate square PNGs with 120-1024px dimensions client-side\n- [x] Use software and VPP app response payloads, compared with local icon filenames and hashes, to build a list of:\n\n1. Icons that do not need to be modified (filename and hash match for the specified title)\n2. Icons that don't currently exist server-side, so need to be uploaded to one title first\n3. Icons that will exist server-side after step 2, so they can be associated to remaining titles by just referencing hash and filename\n4. Icons that should be removed from a given title that otherwise still exists (server-side will automatically clean up icons for software titles that no longer have a package or app store app associated)\n\n- [x] Upload icons that need to be pushed server-side at concurrency 4 (configurable by CLI flag or env var)\n- [x] Update icons where bytes already exist server-side at concurrency 10 (configurable by a different CLI flag or env var)\n- [x] Delete icons from software titles where icon isn't specified at concurrency 10 (configurable by the same env var/cli flag as above)\n- [x] Add final-state icon hash list to a map shared across all teams, so a given icon is uploaded at most once per GitOps run even cross-team. Use this struct when processing subsequent teams.\n\n## Condition of satisfaction\n\nCustom icons can be round-tripped from being set in the Fleet UI to GitOps (via generate-gitops) and back (via gitops application), with reasonable performance cross-team by avoiding repeated work; two sequential applies of the same YAML with no icon modifications out-of-band should generate zero HTTP requests dedicated to icon management since we'll be able to tell from response payloads that we have no-ops."
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP8g",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "[Planning poker](https://fleetdm.slack.com/archives/C08RXDH5LHZ/p1755144992950349)"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, VPP apps are specified once in GitOps YAML but map to usually three titles in Fleet. This means that icons can vary across titles and there's no way to represent the varying icon overrides in GitOps.\n\nWith the current endpoints, to detect this (for generate-gitops) for titles that have multiple icons specified we'll need to download the icons and hash them, and if there aren't matches we'll just need to pick one and document the mismatch. We can detect VPP defaults easily enough (because we don't mask them behind relative URLs), so can tell whether we have a mix of icon vs. no icon based on platform and can add notes as a result.\n\nGiven these nuances, going to come back to `generate-gitops` after I get the rest of the GitOps build done.\n\n/cc @noahtalerman @marko-lisica "
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "Decided to take this out of the scope for 4.74.  Gitops support for this feature is now estimated to land in 4.75.  @jmwatts I believe the test criteria in the parent story is still good."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@mostlikelee does that mean that the GitOps section of the test plan will not be able to be completed in 4.74.0? If that is the case, that portion of the test plan needs to be removed from that ticket and added either here, or to whichever ticket will be associated with the changes in 4.75.0."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@jmwatts good call, i'll convert this to a story and update the test plans"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Caveats around multiple titles sharing the same entry in GitOps for icon configuration notwithstanding (we'll have to make a note on this in `generate-gitops` output and move on), I think I'll be working on testing code within the next 24h BTW"
          }
        ],
        "issueNumber": 31897,
        "changeType": "modified"
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdv6VE",
        "issueNumber": 32046,
        "changeType": "modified"
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdyz6Q",
        "issueNumber": 31667,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "assignees": [
          "mostlikelee"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgeS31Q",
        "issueNumber": 32496,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegZj4",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32067,
        "changeType": "modified"
      },
      {
        "assignees": [
          "xpkoala",
          "AndreyKizimenko",
          "PezHub",
          "jmwatts"
        ],
        "content": {
          "body": "# `fleetd` agent: 1.48.0\n\nIncludes updates to: \n- â ï¸ MUST be release with new `swiftDialog` 2.5.6 to properly support Tahoe. \n- Fleet Desktop tray icon application.\n- Changes in `orbit` executable.\n- Update from `v1.47.2` \u003e `v1.48.0`.\n\nSmoke tests should be performed in `edge` before promoting it to `stable`.\n\n## New `fleetd` pushed to edge\n\n### Goal: Ensure `fleetd` version pushed to edge is working with the current released version of fleet.\n\n0. You can generate packages that use `edge` by running: `fleetctl package [] --orbit-channel edge --desktop-channel edge`.\n1. Fleet server is running the latest released version available on [Fleet Releases](https://github.com/fleetdm/fleet/releases) page.\n2. Set Agent options to use edge in the Fleet server configuration. For example:\u003cbr\u003e\n `update_channels:` \u003cbr\u003e\n  `osqueryd: stable` \u003cbr\u003e\n  `orbit: edge` \u003cbr\u003e\n  `desktop: edge` \u003cbr\u003e\n\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eTest name\u003c/th\u003e\u003cth\u003eStep instructions\u003c/th\u003e\u003cth\u003eExpected result\u003c/th\u003e\u003cth\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e$Name\u003c/td\u003e\u003ctd\u003e{what a tester should do}\u003c/td\u003e\u003ctd\u003e{what a tester should see when they do that}\u003c/td\u003e\u003ctd\u003epass/fail\u003c/td\u003e\u003c/tr\u003e\n\n \u003ctr\u003e\u003ctd\u003eQuery flow\u003c/td\u003e\u003ctd\u003eRun queries. \u003c/td\u003e\u003ctd\u003e\n1. Queries can be run manually \n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eHost Flow\u003c/td\u003e\u003ctd\u003eVerify a new host can be added using your own device.\u003c/td\u003e\u003ctd\u003e\n1. Hosts can enroll and report correct version of `fleetd` (orbit, osquery, desktop).\u003cbr\u003e\n2. Refetching host vitals completes and returns updated information.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eMy device page\u003c/td\u003e\u003ctd\u003eVerify the end user's my device page loads successfully.\u003c/td\u003e\u003ctd\u003e\n1. Clicking the Fleet desktop item, then \"My device\" successfully loads the my device page.\u003cbr\u003e\n2. The \"My device\" page is populated correctly and as expected. \u003cbr\u003e\n3. Styling and padding appears correct. \n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eScripts\u003c/td\u003e\u003ctd\u003eVerify script execution\u003c/td\u003e\u003ctd\u003e\n1. Verify able to run a script on all host types from CLI.\u003cbr\u003e\n2. From Host details (macOS, Windows, \u0026 Linux) run a script that should PASS, verify.\u003cbr\u003e\n3. From Host details (macOS, Windows, \u0026 Linux) run a script that should FAIL, verify.\u003cbr\u003e\n4. Verify script results display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSoftware\u003c/td\u003e\u003ctd\u003eVerify software install / download\u003c/td\u003e\u003ctd\u003e\n1. From Host details (macOS, Windows, \u0026 Linux) run an install that should PASS, verify.\u003cbr\u003e\n2. From My Device (macOS, Windows, \u0026 Linux) software tab should have self-service items available, verify.\u003cbr\u003e\n3. Verify software installs display correctly in Activity feed.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eOS settings\u003c/td\u003e\u003ctd\u003eVerify OS settings functionality\u003c/td\u003e\u003ctd\u003e\n1. Verify able to configure Disk encryption (macOS, Windows, \u0026 Linux).\u003cbr\u003e\n2. Verify host enrolled with Disk encryption enforced successfully encrypts.\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ePacks flow\u003c/td\u003e\u003ctd\u003eVerify management, operation, and loggingÂ of [\"2017 packs\"](https://fleetdm.com/handbook/company/why-this-way#why-does-fleet-support-query-packs).\u003c/td\u003e\u003ctd\u003e\n1. Packs successfully run on host machines after migrations \u003cbr\u003e\n2. New Packs can be created. \u003cbr\u003e\n3. Packs can be edited and deleted \u003cbr\u003e\n4. Packs results information is logged\n\u003c/td\u003e\u003ctd\u003e\n4.72.0: Pass\n4.73.0: Pass\n\u003c/td\u003e\u003c/tr\u003e\n\n\u003c/table\u003e\n  \n# Notes\n\nIssues found new to this version:\n\nIssues found that reproduce in last stable version: \n\nWhat has not been tested:\n\nInclude any notes on whether issues should block release or not as needed:",
          "number": 32790,
          "repository": "fleetdm/fleet",
          "title": "Release QA: fleetd v1.48.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32790"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgej2Qw",
        "labels": [
          ":release",
          "#g-mdm",
          "#g-orchestration",
          "#g-software"
        ],
        "milestone": {
          "title": "fleetd-1.48.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Release QA: fleetd v1.48.0",
        "issueNumber": 32790,
        "changeType": "added"
      },
      {
        "assignees": [
          "lucasmrod"
        ],
        "content": {
          "body": "Issue to track the release of fleetd v1.48.0 to `edge` and `stable`.\n\nâ ï¸ swiftDialog must be upgraded to 2.5.6 as part of this release (to properly support Tahoe).",
          "number": 32792,
          "repository": "fleetdm/fleet",
          "title": "Release fleetd 1.48.0",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32792"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgej2pY",
        "labels": [
          "~sub-task"
        ],
        "milestone": {
          "title": "fleetd-1.48.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "âï¸Awaiting QA",
        "title": "Release fleetd 1.48.0",
        "issueNumber": 32792,
        "changeType": "added"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.73.0\n**Fleetd version**: 1.47.2\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n[fleet-desktop crash-loops](https://osquery.slack.com/archives/C01DXJL16D8/p1757462796125879) (reported by @camilodiazsal)\n\nSegfault:\n\n```\n2025-09-10T00-07-59\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x0 pc=0x10163602c]\n\ngoroutine 42 [running]:\nmain.main.func2.4.1()\n\t/Users/runner/work/fleet/fleet/orbit/cmd/desktop/desktop.go:271 +0x1bc\ncreated by main.main.func2.4 in goroutine 68\n\t/Users/runner/work/fleet/fleet/orbit/cmd/desktop/desktop.go:259 +0xd0\n```\n\n### ð ï¸ To fix\n\nWork around the nil pointer exception\n\nProduct designer: @iansltx \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\nAttempt to use Fleet Desktop 1.47 with Fleet Free\n",
          "number": 32796,
          "repository": "fleetdm/fleet",
          "title": "Fleet Desktop crash loops with Fleet Free",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32796"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgekQ5s",
        "labels": [
          "bug",
          ":reproduce",
          "~fleet-desktop",
          "~released bug",
          "~assisting g-orchestration",
          ":incoming",
          "P0",
          "#g-software"
        ],
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¦¤ âIn review",
        "title": "Fleet Desktop crash loops with Fleet Free",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@harrisonravazzolo and I both repro'd on macOS. I validated the fix on x86 Ubuntu and Win11 VMs, plus x86 macOS hardware, and validated on macOS that Fleet Premium still correctly includes self-service/policies menu items as expected."
          }
        ],
        "issueNumber": 32796,
        "changeType": "added"
      }
    ]
  },
  {
    "timestamp": "2025-09-10T19:05:04.592236157Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgej2Qw",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32790,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgej2pY",
        "status": "âï¸Awaiting QA",
        "issueNumber": 32792,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgef1hU",
        "status": "ð¦¤ âIn review",
        "comments": [
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Current vpp app request:\n`GET https://vpp.itunes.apple.com/mdm/v2/assets`\n```\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n```\nWhere `token` is the `vpp_token_teams.token` from the database.\n\n\n\nMaking request for custom app meta data\n```\nconst response = await fetch('https://api.ent.apple.com/v1/catalog/us/stoken-authenticated-apps', {\n  headers: {\n    'Authorization': `Bearer ${jwtToken}`,\n    'Cookie': `itvt=${vppAppToken}`,\n    'Content-Type': 'application/json'\n  }\n});\n```\nThe `vppAppToken` is collected from the client who has uploaded the custom app via App Store Connect. \n\nThe `jwtToken` is generated from a KeyID, TeamID and signed with a private key (a p8 file). This information is gathered in an apple developer account with MDM vendor access (https://developer.apple.com/help/account/certificates/mdm-vendor-csr-signing-certificate). To generate this information in an apple developer account follow these steps: https://developer.apple.com/help/account/service-configurations/apps-and-books-for-organizations.\n\nIn order to create a jwt here is some simple golang pseudo code using github.com/golang-jwt/jwt/v5\n```\npackage main\n\nimport (\n  \"github.com/golang-jwt/jwt/v5\"\n)\n\nfunc loadPrivateKey(keyPath string) (*ecdsa.PrivateKey, error) {\n\tkeyData, err := ioutil.ReadFile(keyPath)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to read key file: %w\", err)\n\t}\n\n\tblock, _ := pem.Decode(keyData)\n\tif block == nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse PEM block\")\n\t}\n\n\tprivateKey, err := x509.ParsePKCS8PrivateKey(block.Bytes)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse private key: %w\", err)\n\t}\n\n\tecdsaKey, ok := privateKey.(*ecdsa.PrivateKey)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"key is not an ECDSA private key\")\n\t}\n\n\treturn ecdsaKey, nil\n}\n\n\nfunc main() {\n\tprivateKey, err := loadPrivateKey(\u003cpath to private key\u003e) //path to filesystem p8 file\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to load private key: %w\", err)\n\t}\n\tnow := time.Now()\n\tmaxDuration := time.Duration(15777000) * time.Second // 6 months\n\tclaims := jwt.RegisteredClaims{\n\t\tIssuer:      \u003cinsert team id from developer console here\u003e,                          // 10-character Team ID\n\t\tIssuedAt:  jwt.NewNumericDate(now),                \n\t\tExpiresAt: jwt.NewNumericDate(now.Add(maxDuration)), \n\t}\n\n\t// Create token with ES256 algorithm and required headers\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodES256, claims)\n\ttoken.Header[\"kid\"] = \u003cinert key id from developer console here\u003e // 10-character key ID\n\ttoken.Header[\"typ\"] = \"JWT\"\n\n\t// Sign the token\n\ttokenString, err := token.SignedString(privateKey)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to sign JWT: %w\", err)\n\t}\n\n\tfmt.Printf(\"Generated JWT: %s\\n\", tokenString)\n}\n```"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "I was able to get some metadata information for public apps using the generated jwt token.\nThis request is very similar to https://github.com/fleetdm/fleet/blob/main/server/mdm/apple/itunes/api.go#L36 \n`func GetAssetMetadata(adamIDs []string, filter *AssetMetadataFilter) (map[string]AssetMetadata, error) {`\n\nThe first thing I needed to do was get a storefront id to use for the requests:\nhttps://developer.apple.com/documentation/devicemanagement/fetching-storefront-objects\n```\ncurl -X GET \\\n    -H \"Authorization: Bearer \u003cjwt\u003e\"\n    -H \"Content-Type: application/json\" \\\n    \"https://api.ent.apple.com/v1/storefronts?platform=iphone#all\"\n```\nLong response of all storefronts, but more likely than not we want the `United States` region\n```\n...\n{\n      \"id\": \"us\",\n      \"type\": \"storefronts\",\n      \"href\": \"/v1/storefronts/us\",\n      \"attributes\": {\n        \"defaultLanguageTag\": \"en-US\",\n        \"name\": \"United States\",\n        \"supportedLanguageTags\": [\n          \"en-US\",\n          \"es-MX\",\n          \"ar\",\n          \"ru\",\n          \"zh-Hans-CN\",\n          \"fr-FR\",\n          \"ko\",\n          \"pt-BR\",\n          \"vi\",\n          \"zh-Hant-TW\"\n        ]\n      }\n    },\n...\n```\nAs you can see the united states storefront id is just `us`.\n\nGiven an application adam id, we can now query it for metadata:\nhttps://developer.apple.com/documentation/devicemanagement/get-v1-catalog-_storefront_-apps-_id_\n```\ncurl -X GET \\\n    -H \"Authorization: Bearer \u003credacted\u003e\" \\\n    -H \"Content-Type: application/json\" \\\n    \"https://api.ent.apple.com/v1/catalog/us/apps/897446215?platform=iphone\u0026extend=latestVersionInfo\"\n```\n\n```\n    {\n  \"data\": [\n    {\n      \"id\": \"897446215\",\n      \"type\": \"apps\",\n      \"href\": \"/v1/catalog/us/apps/897446215\",\n      \"attributes\": {\n        \"artistName\": \"Canva\",\n        \"contentRatingsBySystem\": {\n          \"appsApple\": {\n            \"name\": \"4+\",\n            \"rank\": 1,\n            \"value\": 100\n          }\n        },\n        \"deviceFamilies\": [\n          \"mac\",\n          \"iphone\",\n          \"ipad\",\n          \"ipod\"\n        ],\n        \"genreDisplayName\": \"Photo \u0026 Video\",\n        \"hasEula\": false,\n        \"isB2BCustomApp\": false,\n        \"isFirstPartyHideableApp\": false,\n        \"isIOSBinaryMacOSCompatible\": false,\n        \"isVppDeviceBasedLicensingEnabled\": true,\n        \"name\": \"Canva: AI Photo \u0026 Video Editor\",\n        \"offers\": [\n          {\n            \"assets\": [\n              {\n                \"flavor\": \"iosSoftware\",\n                \"size\": 102455296\n              }\n            ],\n            \"buyParams\": \"productType=C\u0026price=0\u0026salableAdamId=897446215\u0026pricingParameters=STDQ\u0026pg=default\u0026marketType=ENT\u0026appExtVrsId=877791337\",\n            \"currencyCode\": \"USD\",\n            \"price\": 0.00,\n            \"priceFormatted\": \"$0.00\",\n            \"type\": \"get\"\n          }\n        ],\n        \"platformAttributes\": {\n          \"ios\": {\n            \"artwork\": {\n              \"bgColor\": \"00c4cc\",\n              \"height\": 1024,\n              \"textColor1\": \"080416\",\n              \"textColor2\": \"0a0414\",\n              \"textColor3\": \"062a3a\",\n              \"textColor4\": \"082b39\",\n              \"url\": \"https://is1-ssl.mzstatic.com/image/thumb/Purple211/v4/e8/85/55/e8855548-dc4b-0307-b98b-6a29971c0875/AppIcon-0-0-1x_U007epad-0-11-0-85-220.png/{w}x{h}bb.{f}\",\n              \"width\": 1024\n            },\n            \"bundleId\": \"com.canva.canvaeditor\",\n            \"externalVersionId\": 877791337,\n            \"isVisionOSCompatible\": true,\n            \"latestVersionInfo\": {\n              \"releaseDate\": \"2025-09-05\",\n              \"releaseNotes\": \"Weâre working on bigger and better features. Meanwhile, we freshened up the app with new content and minor bug fixes. \\n\\nGot a question in mind? Let us know at canva.me/help \\n\\nHappy designing!\",\n              \"releaseTimestamp\": \"2025-09-05T01:13:17Z\",\n              \"versionDisplay\": \"4.175.0\"\n            },\n            \"minimumOSVersion\": \"14.0\",\n            \"minimumVisionOSVersion\": \"1.0\",\n            \"requiredCapabilities\": \"arm64 \",\n            \"requiredCapabilitiesForRealityDevice\": \"arm64 \",\n            \"seller\": \"Canva Pty Ltd\",\n            \"subtitle\": \"Design, Collages \u0026 Logo Maker\"\n          }\n        },\n        \"supportsDeviceSharing\": false,\n        \"url\": \"https://apps.apple.com/us/app/canva-ai-photo-video-editor/id897446215\",\n        \"userRating\": {\n          \"ratingCount\": 2907179,\n          \"value\": 4.9\n        },\n        \"usesClassKit\": false\n      },\n      \"relationships\": {\n        \"genres\": {\n          \"href\": \"/v1/catalog/us/apps/897446215/genres\",\n          \"data\": [\n            {\n              \"id\": \"6008\",\n              \"type\": \"genres\",\n              \"href\": \"/v1/catalog/us/genres/6008\",\n              \"attributes\": {\n                \"name\": \"Photo \u0026 Video\",\n                \"parentId\": \"36\",\n                \"parentName\": \"App Store\",\n                \"url\": \"https://itunes.apple.com/us/genre/id6008\"\n              }\n            },\n            {\n              \"id\": \"6007\",\n              \"type\": \"genres\",\n              \"href\": \"/v1/catalog/us/genres/6007\",\n              \"attributes\": {\n                \"name\": \"Productivity\",\n                \"parentId\": \"36\",\n                \"parentName\": \"App Store\",\n                \"url\": \"https://itunes.apple.com/us/genre/id6007\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nTo match our existing `GetAssetsMetadata` method that accepts a slice of adam ids we can use\nhttps://developer.apple.com/documentation/devicemanagement/get-v1-catalog-_storefront_-apps\n`GET https://api.ent.apple.com/v1/catalog/{storefront}/apps#ids?ids=\u003cid1\u003e,\u003cid2\u003e\u0026platform=iphone`\n\nNotable items:\n`platform` param. We can request info for different platforms `Possible Values: appletv, ipad, iphone, mac, realityDevice, web`. \n`extend` param. Added `latestVersionInfo` to get version info:\n```\n            \"latestVersionInfo\": {\n              \"releaseDate\": \"2025-09-05\",\n              \"releaseNotes\": \"Weâre working on bigger and better features. Meanwhile, we freshened up the app with new content and minor bug fixes. \\n\\nGot a question in mind? Let us know at canva.me/help \\n\\nHappy designing!\",\n              \"releaseTimestamp\": \"2025-09-05T01:13:17Z\",\n              \"versionDisplay\": \"4.175.0\"\n            },\n```\n\nThere is an additional endpoint that requires an sToken (vpp token)\n```\ncurl -X GET \\\n    -H \"Authorization: Bearer \u003credacted\u003e\" \\\n    -H \"Content-Type: application/json\" \\\n    --cookie \"itvt={vpptoken}\" \\\n    \"https://api.ent.apple.com/v1/catalog/us/stoken-authenticated-apps?ids=\u003cid1\u003e,\u003cid2\u003e\u0026platform=iphone\"\n```\nUntested if this returns non-custom apps, or just custom apps.\n\nQuestions:\n\nUnsure if `v1/catalog/us/apps` returns custom vpp apps or if `v1/catalog/us/stoken-authenticated-apps` returns regular non-custom vpp apps. We may have to make two requests, one for custom vpp apps and one for regular catalog vpp apps. \nAnswer:\n`v1/catalog/us/apps` -\u003e This returns public catalog apps (untested if this returns custom apps, but the guess is no)\n`v1/catalog/us/stoken-authenticated-apps` -\u003e only returns apps that are associated to your vpp token. It returns public apps that are associated to your vpp. But it does not return just any public app (aka apps that are NOT associated to your vpp token).\nSo it appears that we can use the `v1/catalog/us/stoken-authenticated-apps` with all the adam ids returned from the `https://vpp.itunes.apple.com/mdm/v2/assets` call.\n\nUnsure if `https://vpp.itunes.apple.com/mdm/v2/assets` will return the custom vpp app or not?\nThe answer appears to be yes, but we should double check. Can we distinguish it is a custom vpp app?"
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Making authenticated requests + proxy.\n\nIn order to make authenticated requests we need to use a jwt. We can either request that our clients create a jwt from an apple developer account that has mdm access (probably unlikely) or we can use the fleet apple developer account and a jwt we generate. The problem is we do not want to share this jwt with clients into their fleet server. So we have to proxy requests from the client fleet instances. We have this pattern already available, enterprise android and microsoft compliance partner.\n\nThese requests are proxied through fleetdm.com. More specifically through the sailsjs application that power fleetdm.com\nAndroid enterprise endpoints: https://github.com/fleetdm/fleet/blob/main/website/config/routes.js#L991-L999\nMicrosoft compliance partner endpoints: https://github.com/fleetdm/fleet/blob/main/website/config/routes.js#L1041-L1049\n\nHow would this work for custom VPP apps.\n1. create an endpoint on fleetdm\n`POST /api/v1/vpp`\nThis would take a vpp app token. It would insert a record into a new table in the fleetdm database. This table would hold\n```\n      fleetServerUrl\n      fleetLicenseKey\n      vppToken\n      fleetServerSecret\n```\nVerfying the fleet license key and it would return the `fleetServerSecret`.  This request would be made from a clients' fleet server instance.\n2. We would store this secret in `mdm_config_assets` table in the clients' fleet server instance.\n3. Make proxied requests\nExample `GET /api/v1/vpp/metadata`\nThis would take the `fleetServerSecret` stored in the `mdm_config_assets` and proxy the request to apple using the fleet jwt.\n\nWhy do we need to generate and exchange and store a `fleetServerSecret`?\nWe need to make sure that people cannot just guess random vpp tokens. We want to make sure any endpoints that makes requests to apple apis are properly attributed and secured to a particular client and said client is authorized to make these requests.\n\nHow many requests can we make using a single jwt?\nhttps://developer.apple.com/documentation/devicemanagement/generating-developer-tokens#Limit-request-rate\n`The Apps and Books for Organizations API limits the number of requests your app can make using a developer token within a specific period of time. If you exceed this limit, youâll temporarily receive 429 Too Many Requests error responses for requests that use the token. This error resolves itself shortly after the request rate has reduced.`\nMeaning can all vpp metadata requests be proxied through a single jwt? Do we need to generate more than one?"
          }
        ],
        "issueNumber": 32713,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegD-0",
        "issueNumber": 31968,
        "changeType": "modified"
      },
      {
        "assignees": [
          "jkatz01"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgef6qA",
        "issueNumber": 31989,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdv6VE",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "lukeheath"
            },
            "body": "Closing this out since it's not properly spec'd. "
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Windows FMA shines,\nLike glass towers in the clouds,\nSafety in research."
          }
        ],
        "issueNumber": 32046,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeYD_s",
        "milestone": {
          "dueOn": "2025-10-10T00:00:00Z",
          "title": "4.75.0"
        },
        "issueNumber": 31297,
        "changeType": "modified"
      },
      {
        "assignees": [
          "mostlikelee",
          "jmwatts"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk88",
        "issueNumber": 31165,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx",
          "jmwatts"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "issueNumber": 30095,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia",
          "jmwatts"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdwOKI",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Bold estimate: 1\n\nHoping it's not too complicated why it's not showing, if not probably no more than 2."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA notes**\n\nConfirmed software title header is now shown for tarballs"
          }
        ],
        "issueNumber": 31546,
        "changeType": "modified"
      },
      {
        "assignees": [
          "RachelElysia",
          "jmwatts"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgeYVtA",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "@jmwatts @mostlikelee changing this to a released bug since this actually happens to all osVersion filter pills, prior to this feature\n\nScreen recording of slow behavior:\n\nhttps://github.com/user-attachments/assets/69b8d565-487f-41bf-8111-480d120cb534\n\nOnly noticeable now since there's a second pill next to it. Fix incoming"
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\nConfirmed page loading state continues until osVersions load and then both pills show."
          }
        ],
        "issueNumber": 32584,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeWFPI",
        "status": "Done",
        "comments": [
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "New Fleet release soars,\nEdge to stable, bugs explored,\nIn cloud city, assurance restored."
          }
        ],
        "issueNumber": 32561,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "assignees": [
          "iansltx",
          "jmwatts"
        ],
        "id": "PVTI_lADOBDAnic4A4BEUzgdtOjc",
        "status": "â Ready for release",
        "comments": [
          {
            "author": {
              "login": "pintomi1989"
            },
            "body": "Updated to include Gong snippet provided by customer-cisneros @ddribeiro @sharon-fdm "
          },
          {
            "author": {
              "login": "juan-fdz-hawa"
            },
            "body": "I don't think this is a bug. \n\nThe contents of the `deb_packages` table reflects the behavior of the `dpkg` tools. If they want to exclude packages that leave behind config files they can take a look at the status column:\n\n```\nosquery\u003e select name,status FROM deb_packages WHERE name='screen';\n+--------+----------------------+\n| name   | status               |\n+--------+----------------------+\n| screen | install ok installed |\n+--------+----------------------+\nosquery\u003e select name,status FROM deb_packages WHERE name='screen';\n+--------+---------------------------+\n| name   | status                    |\n+--------+---------------------------+\n| screen | deinstall ok config-files |\n+--------+---------------------------+\n\n```"
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Was able to reproduce the initially described issue, also confirmed that a proposed policy will properly fail if we are checking for the status column. \n\nPolicy that I used: \n`SELECT 1 WHERE EXISTS (\n  SELECT 1 FROM deb_packages WHERE name = 'screen' AND status = 'install ok installed'\n);`\n\nRemoving the reproduce label and adding the product to decide whether this is an expected behavior or not "
          },
          {
            "author": {
              "login": "sharon-fdm"
            },
            "body": "@noahtalerman , we think this is not a bug.\nCare to close?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "@ddribeiro while it's not ideal, we learned that this is the current, expected behavior of osquery. Today, to detect if a package is installed, we have to write special policies against [`deb_packages`](https://fleetdm.com/tables/deb_packages) using the `status` column. For example:\n\n```sql\nSELECT 1 WHERE EXISTS ( SELECT 1 FROM deb_packages WHERE name = 'screen' AND status = 'install ok installed' );\n```\n\nI flipped this bug to a feature request."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Moved the original bug report here:\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\nSome .deb files leave residual files on disk when they are removed using `sudo apt remove \u003cpackage_name\u003e`. In these cases, the `deb_packages` osquery table detects them as still present on the system, even though they have been removed.\n\nSome examples of packages that behave like this are `duo-desktop` and `screen`.\n\nThis is especially problematic for Fleet admins who use the `deb_packages` table to write polices that trigger automations to detect and install specific software on their hosts.\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Install a .deb package that is known to leave residual files after being removed on a Linux host. I used `screen` (`sudo apt install screen`).\n2. Write a policy that uses the deb_packages table to detect if screen is installed. This policy should pass when `screen` is installed and fail when it's not installed. Example:\n```\nSELECT 1 WHERE EXISTS (\n    SELECT 1 WHERE (SELECT COUNT(*) FROM deb_packages) = 0\n) OR EXISTS (\n    SELECT 1 FROM deb_packages WHERE name = 'screen'\n);\n````\n3. Remove the screen package by using `sudo apt remove screen`. Refetch vitals on your test host, **observe that the policy is still passing**, despite `screen` being removed from the system.\n4. Run `sudo purge -y screen` to purge the package from the system. Refetch vitals on your test host, observe that running this command fully removes the package and gets the policy to fail.\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nSlack thread for more context: https://fleetdm.slack.com/archives/C072L58U878/p1748879907377119\n\nIt seems most Linux users would use `sudo apt remove` instead of `sudo apt purge -y`, which is what makes this problematic.\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n\n\u003c!-- ### ð ï¸ To fix --\u003e\n\u003c!-- If this bug requires additional product design work, uncomment the heading above and add instructions to fix, Figma link, etc. here once design changes are settled. --\u003e\n\u003c!-- Product designer: _________________________ --\u003e \u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman FYI this is 100% something on the osquery side, as this affects the built-in osquery `deb_packages` table. Our [software host vital](https://fleetdm.com/vitals/software-linux#linux) already takes `deb_packages` behavior into account.\n\nWith that said, our current default auto-install policies for `deb_packages` _don't_ take this into account, so we're reporting software that was installed and removed as still installed, so the automation won't fire.\n\nThis feels like a bug with automatic install policies, and the fix would be to revise the default automatic install policy to account for this nuance. This is a 1-2pt fix  that I could likely turn around on Monday if you and @mostlikelee are up for it, and I'm betting this would go a long way toward solving the underlying problem without expecting osquery to change."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "To the above point, our [guide with sample policies](https://fleetdm.com/guides/automatic-software-install-in-fleet#debian-based-deb) doesn't account for status in the query, and in this case it should because if you're trying to enforce \"installed and latest\" you don't want \"installed and latest, but was removed\" to pass."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e This feels like a bug with automatic install policies, and the fix would be to revise the default automatic install policy to account for this nuance. \n\n@iansltx aha! Thanks for calling this out. It sounds like `cisneros` reported this because they're using automatic install policies. \n\nI though they wrote a custom policy. I was wrong.\n\nIf our automatic install policies don't take this into account, I agree this is a bug. Can you please help us update this issue into bug format?\n\nAlso, good call on the guide. I think we address the guide change as part of this bug.\n\nAnd, I think if you want to jump on the bug, go for it. cc @mostlikelee "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e @iansltx aha! Thanks for calling this out. It sounds like `cisneros` reported this because they're using automatic install policies. \n\u003e \n\u003e I though they wrote a custom policy. I was wrong.\n\u003e \n\u003e If our automatic install policies don't take this into account, I agree this is a bug.\n\nFYI @ddribeiro "
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "Original issue description:\n\n---\n\n- `customer-cisneros` Gong snippet: https://us-65885.app.gong.io/call?id=4834666570271096977\u0026highlights=%5B%7B%22type%22%3A%22SHARE%22%2C%22from%22%3A4%2C%22to%22%3A223%7D%5D\n* @noahtalerman: *User requested this because* The `deb_packages` table detects residual files from `.deb` packages, such as `screen`, even after they are removed using `sudo apt remove \u003cpackage_name\u003e`, leading to incorrect policy results.\n\n  - @noahtalerman *In the interim* IT admins can detect if a package is installed by writing a special policy against [`deb_packages`](https://fleetdm.com/tables/deb_packages) using the `status` column. For example:\n\n```sql\nSELECT 1 WHERE EXISTS ( SELECT 1 FROM deb_packages WHERE name = 'screen' AND status = 'install ok installed' );\n```\n\n  * @noahtalerman: *Eventually* Fleet could ensure that the `deb_packages` table correctly reflects the absence of packages even after `sudo apt remove` is used, potentially by addressing residual files or providing a more reliable method for package removal detection."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ddribeiro @marko-lisica Updated the issue title because the thing we'll be fixing here is the auto-install query; we _won't_ be making changes to the underlying osquery table as part of this fix. Our understanding is that fixes the customer issue, but would want a different issue if it doesn't."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes**\n\n1. Upload .deb pakage to Fleet\n2. Enable automatic install\n3. Once the sofware is installed, delete it using sudo apt remove command\n\n- [x] Verify that the policy now fails, triggering the software to be installed again"
          }
        ],
        "issueNumber": 29894,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgeQApA",
        "milestone": {
          "dueOn": "2025-10-10T00:00:00Z",
          "title": "4.75.0"
        },
        "issueNumber": 31500,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegZj4",
        "milestone": {
          "dueOn": "2025-10-10T00:00:00Z",
          "title": "4.75.0"
        },
        "issueNumber": 32067,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgekQ5s",
        "title": "Fleet Desktop crash loops with Fleet Free",
        "issueNumber": 32796,
        "changeType": "removed"
      }
    ]
  },
  {
    "timestamp": "2025-09-11T07:05:45.386097003Z",
    "items": [
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgef6qA",
        "status": "ð£ In progress",
        "issueNumber": 31989,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgegD-0",
        "issueNumber": 31968,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As a Fleet user with Apple devices enrolled,\n| I want to know that Fleet supports MacOS Tahoe on the same day as general release\n| so that I can upgrade my devices without delay.\n\n## Key result\n\n\u003c!-- What quarterly key result (KR) does this story contribute to, if any? If it doesn't contribute to a KR, explain why it's being prioritized. --\u003e\n\n## Original requests\n\n\u003c!-- Insert the link to the feature request(s) that this story contributes to. Put \"None\" if it doesn't contribute to a request. For customer requests, add the `customer-xyz` label(s). --\u003e\n\n## Context\n- Product Designer: @AndreyKizimenko  \u003c!-- Who is the Product Designer to contact if folks have questions about the UI, CLI, or API changes? --\u003e\n- Engineering DRI: @AndreyKizimenko  \u003c!-- Who is the Engineer to contact if folks have technical questions? --\u003e\n  \n\u003c!--\nWhat else should contributors [keep in mind](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) when working on this change?  (Optional.)\n1. \n2. \n--\u003e\n\n## Changes\n\n### Engineering\n- [x] Test plan is finalized\n- [x] Write a guide announcing same day support for MacOS Tahoe as soon as we reach it.\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Requires load testing: No \u003c!-- User story has performance implications that require load testing. Otherwise, remove this item. --\u003e\n- Risk level: Low  \u003c!-- Choose one. Consider: Does this change come with performance risks?  Any risk of accidental log spew? Any particular regressions to watch out for?  Any potential compatibility issues, even if it's not technically a breaking change? --\u003e\n- Risk description: Many of us have been running ad-hoc sessions ever since macOS 26 beta started, and we haven't run into any major issues specifically related to the update. It still requires e2e testing, but there aren't any factors that would point towards it being High risk \u003c!-- If the risk level is high, explain why. If low, remove. --\u003e\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n- [x] Pull out comments from https://github.com/fleetdm/fleet/issues/30136 for individual issues if they are still present \n- [x] Confirm that fleet remains installed on the host after upgrading to:\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that the update for the host is reflected on the fleet side (Device page, hosts list, host info via API):\n    - macOS 26\n    - iOS 26\n    - iPadOS 26\n- [x] Confirm that previously applied settings remain active and are properly displayed on the host: \n    - Disk encryption\n    - Policies (have some failing, passing and some that should start passing after the upgrade)\n    - Software status \n    - IdP information\n    - Still applicable labels\n- [x] If the host is no longer applicable for the label, it should be removed from the host and from label filter results\n\n### Smoke tests\nFor this ticket, we'll only be running smoke tests that apply to macOS/iOS/iPadOS Tahoe. \n[This template contains a detailed breakdown of the tests](https://github.com/fleetdm/fleet/blob/HEAD/.github/ISSUE_TEMPLATE/release-qa.md)\n\n**MDM**\n - [x] MDM enrollment flow\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] MDM migration flow\n   - MacOS\n - [x] OS settings\n   - MacOS\n   - iPadOS\n   - iOS\n - [x] Setup experience\n   - MacOS\n - [x] iOS/iPadOS\n   - iPadOS\n   - iOS\n - [x] Lock \u0026 Wipe\n   - MacOS\n   - iPadOS - Wipe only\n   - iOS - Wipe only\n\n**Orchestration**\n- [x] Packs flow\n   - MacOS\n- [x] OS settings\n   - MacOS\n- [x] Log destination flow\n   - MacOS\n   - iPadOS\n   - iOS\n\n**Software**\n- [x] Query flow\n  - MacOS\n- [x] My device page\n  - MacOS\n- [x] Scripts\n  - MacOS\n- [x] Software\n  - MacOS\n  - iPadOS\n  - iOS\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdI9dE",
        "issueNumber": 30696,
        "changeType": "modified"
      },
      {
        "content": {
          "body": "\u003c!-- **This issue's remaining effort can be completed in â¤1 sprint.  It will be valuable even if nothing else ships.**\nIt is [planned and ready](https://fleetdm.com/handbook/company/development-groups#making-changes) to implement.  It is on the proper kanban board. --\u003e\n\n\n## Goal\n\n| User story  |\n|:---------------------------------------------------------------------------|\n| As an IT admin,\n| I want to add a custom icon for my software\n| so that my end users can easily find the software they need on the **My device \u003e Self-service** page.\n\n## Roadmap item\n\nNone\n\n## Key result\n\nCustomer request\n\n## Original requests\n\n- #24802 \n\n## Context\n- Product Designer: @marko-lisica \n- Engineer: @iansltx \n  \nMake sure to solve this: #29886\n\n## Changes\n\n### Product\n- [x] UI changes: [Figma link](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Edit-software-icon?node-id=0-1\u0026t=DrMQziG5Cl0BDJbU-1)\n- [x] CLI (fleetctl) usage changes: No changes.\n- [x] YAML changes: #31324\n- [x] REST API changes: #31324\n- [x] Fleet's agent (fleetd) changes: No changes.\n- [x] GitOps changes: Specified in Figma above.\n- [x] GitOps generation changes:\n  - Specified in Figma above.\n  - `gitops-generate` command should download icons.\n- [x] Activity changes: #31382\n- [x] Permissions changes: Global/team admins and maintainers can apply update icon. Covered by \"Add, edit, and delete software\" in permissions guide.\n- [x] Changes to paid features or tiers: Available in Fleet Free and Premium.\n- [x] My device and fleetdm.com/better changes: The icon added by user will display on self-service and software inventory tabs on My device page.\n- [x] First draft of test plan added\n- [x] Other reference documentation changes: No changes.\n- [ ] Once shipped, requester has been notified\n- [ ] Once shipped, dogfooding issue has been filed\n\n### Engineering\n- [x] Test plan is finalized\n- [ ] Contributor API changes: #31324\n- [ ] Feature guide changes: Update [self-service](https://fleetdm.com/guides/software-self-service), [custom package](https://fleetdm.com/guides/deploy-software-packages), [VPP](https://fleetdm.com/guides/install-vpp-apps-on-macos-using-fleet) articles to reference icons/how to change them\n- [ ] Database schema migrations: Add software_title_icons table with title ID, team ID, icon filename, and icon storage ID (will dump icons onto the software installers bucket)\n\n\u003e â¹ï¸ Â Please read this issue carefully and understand it.  Pay [special attention](https://fleetdm.com/handbook/company/development-groups#developing-from-wireframes) to UI wireframes, especially \"dev notes\".\n\n## QA\n\n### Risk assessment\n\n- Risk level: Low\n\n### Test plan\n\u003c!-- Add detailed manual testing steps for all affected user roles. --\u003e\n\n\u003e Make sure to go through [the list](https://github.com/fleetdm/fleet/blob/main/docs/Contributing/guides/ui/design-qa-considerations.md) and consider all events that might be related to this story, so we catch edge cases earlier.\n\n#### UI\n\n- [x] Make sure that the edit action is available next to the software title name, only if the software title has a package or VPP app added.\n- [x] Verify that the user can upload a PNG icon by clicking on the edit icon next to the software title name in the **Edit software** modal.\n- [x] Verify that the user can only select PNG files.\n- [x] Verify that Fleet returns an error if the icon doesn't fit into specs defined in Figma.\n- [x] Make sure that the user can preview the icon in the **Edit software** modal, once it's selected and before it's uploaded.\n- [x] Verify that the icon in the preview is displayed according to the priority order described in Figma..\n- [x] Make sure that the preview under the **Fleet** tab shows the real software title name, icon, type and versions count. The table underneath the transparent overlay should be static.\n- [x] Make sure that the preview under the **Self-service** tab shows the real software title name and icon. Other data should be static.\n- [x] Make sure that if the user deletes the selected or uploaded icon, the preview shows the fallback icon.\n- [x] Verify that when the VPP icon is available, the upload form is still available in the **Edit software** modal, so the user can override that icon with a custom PNG.\n- [x] Make sure that the uploaded icon shows on software title details, ~version details,~ titles list, ~versions list,~ on a team where the icon is added.\n- [x] Make sure that we do client-side validation if the icon size doesn't fit specs, before the user hit \"Save\" (upload) icon. Show error flash message specified in Figma. \n- [x] Make sure that the uploaded icon shows on the host's software library and inventory pages, on a host that is a member of the team where the icon is uploaded.\n- [x] Make sure that the uploaded icon shows on the My device software and self-service tabs, on a host that is a member of the team where the icon is uploaded.\n- [x] Make sure that the uploaded icon shows in /controls/setup-experience/install-software when selecting software to be installed\n- [x] Verify that when GitOps mode is enabled, on the software title details page, the edit button (next to the software title name) is disabled, and that the GitOps tooltip is displayed on hover.\n- [ ] Verify that `icon` field is added in GitOps generation modal.\n- [ ] Verify that icon download link is added in GitOps generation modal. \n\n#### API\n\n- [ ] Verify that the icon can be updated with the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that an icon can be added to \"no team\" via the new `PUT /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be deleted with the new `DELETE /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that the updated icon can be downloaded with the new `GET /api/v1/fleet/software/titles/:id/icon` endpoint.\n- [ ] Verify that Fleet errors if icons are not PNG, not square, or not between 120x120px and 1024x1024px, when user tries to upload with PUT endpoint.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/software/titles/:id`.\n- [ ] Make sure that `icon_url` is available on the top level for each software item in `GET /api/v1/fleet/device/{token}/software`.\n- [ ] Verify that if no uploaded icon and no VPP added, `icon_url` is `null` (for every endpoint above).\n- [ ] Create a software package, add icon to software installer, edit the package (change something that is not icon related), delete the software package. This should generate a number of activities. \n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing package (icon url in activity)\n1 for deleting package (icon url in activity)\n```\n- [ ] Create a vpp app, add icon to vpp app, edit the vpp app (change something not icon related), delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for adding icon (icon url in activity)\n1 for editing vpp app (icon url in activity)\n1 for deleting vpp app (icon url in activity)\n```\n- [ ] Create a vpp app, edit vpp app, delete vpp app. This should generate a number of activities.\n```\n1 for creation (icon url blank)\n1 for editing vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n1 for deleting vpp app (icon url in activity, note that this is the vpp_app.icon_url, not the custom icon)\n```\n\n#### GitOps\n\n- [ ] Verify that the icon can be added to a software package (`software.packages` \u003e `lib/software-name.package.yml` \u003e `icon`).\n- [ ] Verify that the icon can be added to the App Store app (`software.appâ_storeâ_apps.icon`).\n- [ ] Verify that the icon can be removed from the software package or App Store app\n- [ ] Verify that adding the same icon file to software packages across multiple teams adds the icon for each software package on each team and doesn't result in significantly slower gitops runs or adverse file-system effects (excessive files in /tmp directory when running)\n- [ ] Verify that previously uploaded icons are downloaded and referenced when running `fleetctl generate-gitops`\n\n\u003c!-- Consider: Do the steps above apply to all global access roles, including admin, maintainer, observer, observer+, and GitOps?  Do the steps above apply to all team-level access roles?  If not, write the steps used to test each variation.\n--\u003e\n\n### Testing notes\n\u003c!-- Any additional testing notes relevant to this story or tools required for testing. --\u003e\n\n### Confirmation\n\u003c!-- The engineer responsible for implementing this user story completes the test plan before moving to the \"Ready for QA\" column. --\u003e\n\n1. [ ] Engineer: Added comment to user story confirming successful completion of test plan.\n2. [ ] QA: Added comment to user story confirming successful completion of test plan.\n"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgdwP74",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Heads-up: \"name\" editing would change which `software_title` the package is associated with based on how we're linking titles and packages right now, for OSes other than macOS, and that has implications for e.g. software updates where inventoried software need to name-match the corresponding installer. We also have validation that prevents package edits from  changing the associated software title. So we'll need to sort those implications out if we include name in scope here (this issue doesn't apply to icon and version)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx \u0026 @noahtalerman  I've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n        1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n4. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n5. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "ddribeiro"
            },
            "body": "@eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "![Image](https://github.com/user-attachments/assets/ffd778b7-8620-4dd4-9229-edcac7210679)\n\nFYI @eugkuo "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e @eugkuo As part of this story, would a Fleet admin be able to specify the custom app name in their yaml files in GitOps?\n\n@mostlikelee do you want to include GitOps in this ticket or should GitOps and UI tickets be separated for reasons of scoping, etc.\n\ncc @ddribeiro "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Given that GitOps is a core differentiator for Fleet and given that the requesting customer wants GitOps for their workflows, GitOps needs to be part of the spec here (though it'll get its own subtask), as does `generate-gitops` support."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I neglected to mention you on these so re-adding to ping you:\n\nI've added a link to a [figma design file](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?node-id=7301-3341\u0026t=rFG0J3peq1Z7YnKG-11) to get the ball rolling. I've also created this [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=rFG0J3peq1Z7YnKG-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642)\n\nSo here are a few comments/questions based on the way in which this ticket is written:\n\n1. I have the display name set as metadata under the installer package name.\n    1. Should the display name replace the package name?\n    2. Should the package display name replace the software title display name?\n        1. If yes, in the future when we have multiple installer packages what should the software title display name be? The latest installer package?\n2. Similar to the above, if an icon is updated on an installer package should that icon also update the icon at the top of the software title page?\n    1. If yes, in the future when we have multiple installer packages what icon should be displayed? The latest installer package?\n3. I find updating the version number part of this ticket odd. If the package has a version number why would someone want to change it to something that could be wrong. Why would Fleet want to allow such a potential mismatch?\n4. Lastly, should the icon and the display name actually be edited at the software title page level instead of the package level? It seems like that's what people would care more about?\n    1. Note: At one point there was a request to name custom packages mainly for admin identity purposes. In this world we could have title editing at both levels, with the custom package titles be reference titles for admins.\n\nThoughts?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "So, where we display the updated name/icon/version is going to determine at which level we need to implement, which will in turn have interplay with both inventory and access controls. Probably also useful to walk through how we get name/version/icon now and where they're stored.\n\nKey questions:\n\n1. Are any fields globally editable? If so, that means only global roles can edit them, right?\n2. For names, what happens when an associated app arrives in inventory with a different name?\n\n## Name\n\nFor everything without a bundle ID, gets set once on first inventory or package upload, and is the unique key for associating both installers and inventory for that source _globally_. The name is at the `software_title` level, and is visible in a bunch of places (self-service, software title details, etc.).\n\nFor apps with bundle IDs, this is added on initial upload or inventory, but may be edited later during software ingestion if we have a more \"canonical\" name come in from inventory. There's also the contributor API endpoint for editing names manually, but inventory may overwrite them. Unique key in these cases is bundle ID. The name is still at the `software_title` level, and is still visible in the same places.\n\n## Icon\n\nFor software that has been added as a VPP app on a team, each app has a URL for the 512x512 version of the Apple icon, as a PNG, loaded on-the-fly from Apple by the client. Icons are revised when they're revised upstream.\n\nFor software titles without an associated VPP app on the same team, icons are shown based on matching to SVGs embedded in the code, based on name + source matching. This means that Fleet server updates determine which icon is shown.\n\nThe above means that icons are currently team-specific with a global fallback.\n\nInventory doesn't affect icons. For example, iOS apps inventoried via MDM will have the generic Apple icon unless we have an SVG override (or the same app was added as a VPP app for that team).\n\nIcons *could* be extracted from some types of custom packages on upload.\n\n## Version\n\nThe below information is orthogonal to inventoried (installed) version.\n\nSoftware version is attached to the package or VPP app, so it's team-specific rather than global.\n\nFor VPP apps, version is set on add and updated hourly from Apple, since the latest version is pushed when a VPP app is installed.\n\nFor FMAs, the version in the FMA manifest is copied over when the FMA is imported into the software library.\n\nFor custom packages, the version is extracted as metadata on upload.\n\n---\n\nSince it's come up before on other features, the tradeoff with allowing edits of these values is that we'll get fewer bug reports when we're parsing metadata incorrectly on upload/inventory, as IT admins will just fix the names/icons/versions they care about if there aren't too many of them. My suggestion here would be to add analytics for cases where name/icon/version needed to be edited, and check in with customers who use that feature a lot to make sure we're not overlooking bugged behavior. How that data point is implemented will vary depending on how software field overrides work."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Given that scope has dropped on this, seems like we want to treat this as another piece of self-service, attached to the `software_installer`.\n\nOn the most recent review call I mentioned \"square PNG with dimension min/max\" and GitOps. Need to dig into this further."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee I've updated the designs and  [prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Ability-to-edit-icon--name--and-version-for-custom-packages-uploaded-to-Fleet?page-id=2%3A130\u0026node-id=7301-6642\u0026t=ALS0rcz3jje1fQwT-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7301%3A6642) to reflect that the only additional update is for the app icon.\n\nLMK what you think."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Does #29177 block this ticket? Also, there's no reason we don't allow jpgs and gifs as well as pngs once 29177 is done is there?\n\ncc @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo 29177 doesn't block this, though there's some implementation overlap such that if we hit both of these in the same sprint we'll need to be more careful about subtask traffic jams (still two swimlanes worth of backend across the two tickets though).\n\nRe: JPG/GIF, those formats aren't the right match for icons, unlike SVG vs. PNG don't bring anything special to the table for the icon use case that PNG doesn't, and it's trivial to convert JPEG -\u003e PNG or GIF -\u003e PNG (since all are raster formats) where the raster -\u003e vector PNG -\u003e SVG conversion is less straightforward."
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "Figma looks good, thanks @eugkuo !\n\n- Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n- Only other thing to spec is how we want to show the error if it's not a square between specific dimensions."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003e Copy suggestion: \"Icons must be square PNG files with dimensions between 120Ã120 px and 1024Ã1024 px.\"\n\n@RachelElysia Love the suggestion. Updated!"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@jmwatts I've added a test plan to this ticket. LMK what you think.\n\n@iansltx I know we discussed this yesterday but I can't quite remember the answer. When this icon is updated is it updated throughout our system? Like will it show up in the library and inventory with the new icon as well?\n\ncc @mostlikelee @RachelElysia "
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@RachelElysia I've added an [Error message design](https://www.figma.com/design/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?node-id=7341-1459\u0026t=OJ1KwfgvtY5eZfwZ-11) to this ticket."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Sorry for the delay on this. Originally my thought was \"just follow what we do for VPP apps\", which I thought was:\n\n1. Icon is associated with the VPP app\n2. Icon shows up when viewing the software title on the team that has the VPP app set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the VPP app is in scope\n\nWith the above assumption, custom package icons would behave as follows:\n\n1. Icon is associated with the software package\n2. Icon shows up when viewing the software title on the team that has the package set\n3. Icon shows up in self-service for the associated team\n4. Icon shows up in host details for the associated team if the installer is in scope\n\nIn reality, if a VPP app gets added on _any_ team, a zero value-looking object gets tacked onto the all-teams view for that title; you can see this for [Keynote in Dogfood](https://dogfood.fleetdm.com/software/titles/1245). This object includes the App Store icon URL. We can do this in part because VPP icons _are_ global for a given Apple app ID (and the icon URL is stored on the global VPP apps table in the DB rather than on the team-specific table)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "I'm still thinking that we handle custom packages according to the above (tied to the package, only shows up where we would populate package info), but that's not actually consistent with VPP if current VPP behavior is intended VPP behavior.\n\nA side effect of handling package icons this way is that an All Teams view of software wouldn't have an icon. The only workarounds for this would be:\n\n1. We pick the first (for some definition of \"first\") icon we find for a custom package\n2. We make software icon overrides global rather than package/team based\n\n...so this is a good design review discussion, both to determine desired VPP behavior and desired behavior here (which may be influenced by the \"why\" behind desired VPP behavior)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Per this morning's discussion, I'm pausing digging in on eng DRI on this in favor of getting #27983 spec'd, as the expectation is that this will _not_ make it into the 4.71 dev sprint. There are also questions around existing behavior that should probably be cleaned up, as that will provide a consistent foundation to build this on. Those questions are documented in #29886."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx and @mostlikelee \n\nI've updated the [Prototype](https://www.figma.com/proto/JMZUamWhuArCPIjAXXrIzB/-29478-Custom-packages--edit-icon?page-id=2%3A130\u0026node-id=7347-2401\u0026t=uf2ocmJrBfpBl076-0\u0026scaling=min-zoom\u0026content-scaling=fixed\u0026starting-point-node-id=7347%3A1958) so that editing app icons happens at the title level and not at the package level. I've also removed icons at the package level to avoid confusion.\n\nThe expectation is that the icon at the sotware title level would be associated with the software everywhere this title is shown (in library and inventory and self-service).\n\n@RachelElysia Thoughts on wanting/needing a loading screen for the modal and a confirmation save vs immediately jumping back to the software title page with a toast confirmation?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "One pivotal question that will determine a bunch of implementation details: are these icons 1:1 with `software_installers` records (in which case currently they're 1:1 with teams) or are they more global than that?\n\nLooking at the 1:1 with `software_installers` option:\n\n## Pros\n\n* Consistent with self-service flag and categories\n* Allows for e.g. marking app icons as \"beta\" (or using a version-specific logo) on a canary team if that team has a different app version\n* Doesn't interfere with VPP app icon semantics if a custom-icon package is available on one team and a VPP app is available on another (once we sort out which wins for All Teams)\n* Access control for icon edit matches access control for all software package edits, vs. requiring a global role\n\n## Cons\n\n* Icon must be set once per team (less of a big deal with GitOps?)\n* Undefined behavior for showing software in \"All Teams\" (worse than VPP's current undefined behavior)\n* Potentially jarring if switching teams changes or loses an icon (this happens with VPP)\n* If implemented as \"an icon URL under software package\", inventoried software versions won't see the icon\n\nQuestion is how many of the pros/cons matter in this particular use case. FWIW I would expect that in either case we would be consistent with the icon shown within a team, for calls to software endpoints (not software version endpoints). Since My device only calls software endpoints (not versions), the icon on the software list would match the icon for self-service install (and update)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "One thing to add to what @iansltx is saying is that there are apps that have/will change icons with various releases (see Adobe products, which look like they update their icon every few years).\n\nSo. It seems like we should go back to associating icons with installer packages. I still feel like the Software title icon should inherit the latest installer package icon. \n\nWRT All teams and defining icons. Why can't we show installer packages on the all teams level and let people edit the icons there when editing. If a software title is selected from \"All teams\" we would show all the installer packages that have been added (surfacing the team(s) the packages are tied to). Ideally we'd be able to collapse all the installer packages so that we would only need to show one installer package that had been uploaded associated with multiple teams.\n\nI'm sure this is blowing up scope and throwing wrenches all over the place, but what do we think about the idea?\n\n@iansltx @mostlikelee "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo What would you define as \"latest\" here? Most-recently uploaded/updated? Would that work cross-team? How would that interact with VPPs, which have their versions automatically bumped within ~1 hour of a new version coming out on Apple's side?\n\nRe: showing all installers when viewing All Teams, while that's useful, that would require decent-sized API and frontend changes, so deserves its own ticket."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx I'd define latest as the latest version number (newest version).\n\nI totally hear you on showing all installers on All teams being its own ticket. I'll write that as a feature request when I get a chance."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo Hm. So the idea would be that, for All Teams, we'd check all VPP apps and all packages with icons customized, rank by version number descending, and use the icon of whatever was at the top? Which would usually be the VPP app due to auto-updates, but might fall back to an FMA or the like.\n\nIf that's the idea, we might have to do some finagling to make sure the version calculation is fast...and we'll need to decide on what happens if the same package is uploaded to two different teams with two different icons...but that _would_ mean that at least the \"all teams\" part of #29886 is now expected/intended behavior, which is good (still need to decide what to do with version view there though)."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nThe part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\n@mostlikelee could you gut check us on what we're talking about here? I know you were trying to keep this from getting out of hand and I don't want to explode things unknowingly. Clearly some of this is looking into the future, but could you make sure to ground us to what we 'need' or 'should' be doing at this time?\n\nThanks!"
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "oh my, we may have officially took a detour to the dark side of icon town.  lets get a chat on the books for next week."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e [@iansltx](https://github.com/iansltx) Would you be doing the finagling on a chron job that would run in the background every now and again?\n\nOriginal thought was handle it on retrieval but we could handle the recalculation when the criteria for which icon wins changed. That would be in the VPP version bump cron, when a custom icon was added/deleted, when a package was edited/deleted, or eventually when a FMA was added. For the last bit, FMA icons would actually get _lower_ priority than custom icons because they're currently implemented as just software title matching based defaults, but I'd expect that to change to the same \"priority\" as custom package icons once #29177 is implemented.\n\nWe'd need to add a column to `software_titles` for this, to point to the `software_installer` we want to use the custom icon of (if any), but that's doable if we need icon display at the All Teams level to work a specific way.\n\n\u003e \n\u003e The part where someone adds the same package to two different teams is def an issue. Which makes me wonder why we allow it? If we see someone uploading a package that already exists in our system wouldn't it be cooler to say \"do you mean x\" and use what we already have along with the associated icon? Similarly to how back in the day when the Apple Music store came out they looked at all of your music and automagically upgraded songs to the Apple Music Library version and filled in all the metadata for you.\n\nRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?"
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@mostlikelee I have it at the top of the design review column in the drafting board so was intending to make this the first thing we talk about at DR on Tuesday. If you think this warrants its own time I'm open to it."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "\u003eRight now, structurally, a software package lives on exactly one team, though we deduplicate identical installer bytes on disk via hash. One reason for this is access controls: users can have team-limited roles, and while users can affect multiple teams (or operate globally) we don't currently have the infrastructure (FE or BE) to handle operations on an entity that spans multiple teams by a user that isn't global. For example, \"did you mean X package\" doesn't make sense when the existing package is on a team that the admin doesn't have access to, and if the admin has write on one team and read on another, do they get to edit the package they just added if it's cross-team?\n\n@iansltx . But wouldn't it be cooooool if fleet recognizes a unique software package that's uploaded to our servers and pushes that out to everyone? Like why hold duplicates of the same thing? The icon thing we could do by organization so that doesn't get too wonky. If an organization wants to change their icon it will affect the entire organization but it won't affect others. So if Zorro corp wants to bastardize all their app icons with a flaming 'z' they can go for it but it won't touch Acorn Inc."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@eugkuo There are some tradeoffs there that expand well beyond (the scope of) icon management and potentially conflict with tradeoffs needed for multiple installers per team. Definitely easier to discuss this synchronously.\n\nAlso not sure what you mean by \"organization\" (global? team?). One thing I'm thinking of is MSP customers who are running each company as its own team, and how this functionality should work in that deep of a silo."
          },
          {
            "author": {
              "login": "eugkuo"
            },
            "body": "@iansltx Oh interesting use case where teams are acting like companies. "
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica Given the above conversation, should custom package icons be scoped to the team/package they're on, or should they be global (at the software title level)? This has implications for how #29177 gets implemented, so is a higher-priority decison."
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "```mermaid\nflowchart TD\n    A[\"Has custom icon (uploaded by user)\"] -- Yes --\u003e B[\"Show custom icon on software title (not on version) on team where icon (package) is uploaded\"]\n    A -- No --\u003e C[\"Is VPP app?\"]\n    C -- Yes --\u003e D[\"Show icon from App Store on software title (not on version) on team where VPP is added)\"]\n    C -- No --\u003e E[\"Strict name matching\"]\n    E -- Yes --\u003e F[\"Show SVG icon on a software title/version based on strict name/source rules defined by Fleet (contributors) in frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    E -- No --\u003e G[\"Loose name matching\"]\n    G -- Yes --\u003e H[\"Show SVG icon on a software/version title based on what software name starts with. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    G -- No --\u003e I[\"Source-based matching\"]\n    I -- Yes --\u003e J[\"Show SVG icon on a software/version title based on the software source. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n    I -- No --\u003e K[\"Default fallback\"]\n    K --\u003e L[\"Show SVG package icon on a software/version. Defined by Fleet in the frontend code. Everywhere in UI (title, version, lists) across all teams.\"]\n```"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@noahtalerman @iansltx, if you get the chance, could you please review the flowchart above?"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica For the above, my biggest questions are how much of the decision tree applies to the following matrix:\n\n| | My device | Host details |\n| - | --- | --- |\n| Installed | My device \u003e Software | Host details \u003e Software \u003e Inventory |\n| Available | My device \u003e Self-service | Host dtails \u003e Software \u003e Library |\n\nAnd, for the inventory views, if we're showing anything other than SVG icons, where do those icons exist in the API response?"
          },
          {
            "author": {
              "login": "marko-lisica"
            },
            "body": "@iansltx I think let's keep this simple. If there's an icon override, we keep it on software title level under `software_package` or `app_store_app` as `custom_icon_url`.\n\nSVGs are displayed everywhere, and I think we should add more of them in the future. As we plan to introduce webview setup experience in the future, SVGs will be displayed there as well.\n\n- `GET /api/latest/fleet/software/titles` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/software/titles/:id` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/hosts/:id/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n- `GET /api/latest/fleet/device/:token/software` already includes both `software_package` or `app_store_app` already includes both `software_package` or `app_store_app`.\n\nSo, icon overrides will be only available for software titles that are available. It won't show up on the versions of that title, and it won't show up in other teams."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "@marko-lisica Is this being added to fleetctl generate-gitops?\n\nShould this work for team and global admins, and team and global maintainers, but not other users?"
          },
          {
            "author": {
              "login": "RachelElysia"
            },
            "body": "FE Tests:\n- SoftwareIcon.tsx has no tests\n- GitOps yaml add to the test\n- GitOps mode disable editing"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Rough spec'ing notes:\n\n## GitOps changes\n\nIcon\nLocal hashing\nDeduplicate uploads\nReturn icon hash + filename on batch software status endpoint\nReturn icon hash + filename on batch VPP app status endpoint\nDon't repeat no-op uploads (use hash + filename)\nHash on icon PUT request\nRun in parallel\n\n## Generate-gitops\n\n## My device\n\nSoftware list endpoint; different URL\nIcon GET by device ID\n\n## Main API\n\nListHostSoftware (different URL)\nUpdate icon - incl. validation of format/size server side\nGet icon\nDelete icon\nSoftware titles list endpoint\nSoftware title endpoint\nSoftware versions endpoint (title ID)\nSoftware version endpoint (title ID)\nPackage + app store add/edit responses (make sure icon in response)\n\nSetup experience - update endpoint\n\nDocs\n\n## FE\n\nTitles view\nEdit modal\nPreview\n\nTitle list\nVersions list (don't download icon multiple times for the same title)\nAuthenticate when relative URL\nVersion view\nSoftware inventory\nSoftware library\n\nRename edit\n\nSelf-service tab\nSoftware tab of my device\n\nSetup experience UI"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @mostlikelee Just pushed https://github.com/fleetdm/fleet/pull/31324/commits/c577ded229f6a114d6fd940db2282ed8f69cad55?w=1 to API/YAML because we were missing some API endpoints based on the spec work I just did."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@RachelElysia @ksykulev #32459 covers software version icon display (taken out of scope of this ticket) and vulnerabilities icon display (missed in this ticket; would have been a late add of new surface on a ticket that's already at risk). Subtasks have been updated."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "We had a bit of a conversation about \"no team\" when talking about display name overrides. I noticed we don't have this explicitly mentioned in this test plan. I know \"no team\" is typically designated with a `0`. But probably worth calling this out."
          },
          {
            "author": {
              "login": "ksykulev"
            },
            "body": "Adding some more details about activities generated when adding/editing/deleting software installers/app store apps."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Gaps in the design were raised in [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1757526903299809).\n\nHere are the gaps and what I think we want to do about them:\n\n\u003e Issue (1) is the software icon size, decision tbd.\n\nGreat catch.\n\nI think itâs a great idea to add a limit to the size. With an easy to understand error message if you try to upload one thatâs too large. 100kb sounds like the right size to start. I just exported the Firefox logo from Figma and it was ~4kb.\n\n\u003e should there be some placholder icon while a custom one renders?\n\nNo but we want to show a loading spinner on top of the empty space while the custom one loads. This was a gap in the design. More info in [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1756962421307179?thread_ts=1756844152.145969\u0026cid=C086V2QK76X)."
          },
          {
            "author": {
              "login": "AndreyKizimenko"
            },
            "body": "Hi @noahtalerman, @marko-lisica, one more design question for you: \n\nShould we clean up custom icons when a package is deleted? Currently we don't and so you'll continue to see your selected icon on the hosts if they have this software installed. Can be a good, can be a bad thing? The bad UX here is that you can't edit an icon unless you've uploaded a package.\n\n\u003cimg width=\"3784\" height=\"2584\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c6d1841f-4474-4d57-b9d3-36d6d9b524bd\" /\u003e"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e one more design question for you:\n\nShould we clean up custom icons when a package is deleted? Currently we don't and so you'll continue to see your selected icon on the hosts if they have this software installed. Can be a good, can be a bad thing? The bad UX here is that you can't edit an icon unless you've uploaded a package.\n\n@marko-lisica can you please take this one when you come back online? Thanks!"
          }
        ],
        "issueNumber": 29478,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdCk8Q",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@ksykulev Per comments on the original request from @noahtalerman and @mostlikelee, we want to:\n\n1. Add a `setup_experience` bool on the same level as `self_service` on custom packages, VPP apps, and FMAs, default `false`. Use that to determine whether software is included in setup experience.\n2. Stub the `macos_setup.software` key in GitOps; if it exists in a config, hard-fail with a link to docs for the new way of specifying setup experience.\n\nPlan will be that we _don't_ have a deprecation period on this to keep the code clean and avoid drawing out instances where we have to support both cases. Throwing a prompt at an LLM or two to see if we can make a bot do the work of moving YAML around (we might want a step 3 above of providing a tool to move YAML around)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually, scratch the LLM option for now, as the migration path is more nuanced. One nuance here is that if Team A and Team B both import a set of software, but Team A has a piece of software marked for setup experience and Team B does not, we now need two software files (one with the setup experience flag set, one without) where we previously had one.\n\n@allenhouchins Does this tweak (and its downstream requirements) make sense? In our case the Workstations team has setup experience software defined, but the corresponding canary team doesn't, so for our own setup we'd need to split package YAMLs.\n\nFor reference, here's the prompt I threw into JetBrains Junie, as well as Zed + Claude Sonnet 4:\n\n```\nIn `it-and-security`, for each app store app under `macos_setup.software`, remove it from there and add `setup_experience: true` under the corresponding entry in `app_store_apps` in the same team file. For each software package under `macos_setup.software`, remove it from there and add `setup_experience: true` inside the corresponding YAML file. Finally, remove the `macos_setup.software` key in the YAML file.\n```\n\nNote that the above does _not_ cover the package YAML splitting nuance, and my attempts at making this work with an open-weights model small enough to run in 64GB unified memory failed."
          },
          {
            "author": {
              "login": "allenhouchins"
            },
            "body": "I much prefer the current set up of adding it to the `software` block to basically say \"make this software available to this team\" then creating a secondary reference in `macos_setup.software` to say \"make this software available through this method\". For any software we expect all employees to use (\"critical\"), I want it to be installed via `macos_setup`, `auto-install` if its removed, and available in `self-service` for patching and easy re-installation/troubleshooting. I don't want to have to create multiple `software_title.yml` to achieve this. \n\nI'm already running into challenges with some of the recent changes we've made to software where I will have to [create multiple software entries if I want software scoped differently in teams](https://github.com/fleetdm/fleet/issues/29567) so anything we can do to handle additional logic behind the scenes and avoid having to create multiple software entries of the same software just to use it differently, will always get my vote.\n\n\u003e run in 64GB unified memory failed.\n\n64GB?! Yikes! "
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e I much prefer the current set up of adding it to the software block to basically say \"make this software available to this team\" then creating a secondary reference in macos_setup.software to say \"make this software available through this method\".\n\n@allenhouchins interesting! I added you to Tuesday's #g-software design review to take a look at the current designs and discuss."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "Decided to push this story (T-shirt size: S) out of the current design sprint because we won't have space to ship it in 4.72. Here's what we're shipping instead:\n\n- Fleet-maintained apps bugs\n- https://github.com/fleetdm/fleet/issues/30240\n- https://github.com/fleetdm/fleet/issues/27983"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@marko-lisica based on the late, significant scope reduction on #27983, there's now enough backend capacity in the 4.72 sprint to bring this in if it's ready in time, though based on the source of this original request the software GitOps update activity should be split into its own story, as the customer isn't asking for that, \"core to Fleet\" notwithstanding, as the activity work is likely the majority of the effort on this ticket if it's brought in. Splitting stories allows for easier parallelization, and allows for derisking both stories."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman Based on linked issues, looks like we missed calling out some scope here. I'm assuming that allowing specifying macOS setup experience in `fleet_maintained_apps`, as well as in `app_store_apps`, is in scope here. Revising YAML docs so that's clearer now (as well as contributor API docs).\n\nEDIT: Never mind. YAML docs don't include this explicitly, but it's dev note'd in a comment on the PR. And it's in the test plan."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Turns out, the contributor API for this already has the correct (per-package) format, so these changes won't have a server-side component (all `fleetctl`)."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@noahtalerman I thought we had missed frontend scope here because there might have been changes to the modals/exports we added in #28110. But it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e it looks like we don't show custom targets, self-service, and categories in the sample YAML there already so moving them around wouldn't make a difference to what we would display?\n\n@iansltx that's right!"
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e - [x] REST API changes: No changes\n\n@iansltx also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\nThis helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\nWe've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\""
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "\u003e \u003e * [x]  REST API changes: No changes\n\u003e \n\u003e [@iansltx](https://github.com/iansltx) also, for future stories can you please leave in the explicit \"No changes\" items in the \"Product\" section? (example above). I added them back this time.\n\u003e \n\u003e This helps us remember during [confirm and celebrate](https://fleetdm.com/handbook/product-design#confirm-and-celebrate) and 3 months from now whether or not we intended.\n\u003e \n\u003e We've learned that removing the checkboxes introduces questions later like \"did we mean to make UI changes for this story?\"\n\n@noahtalerman All of the \"no changes\" items are still in the issue description, under the \"No-ops\" heading (\"Product no-ops\" probably makes more sense here, and I've used that heading title on other tickets where I've done this). Sounds like you missed them because they were \"below the fold\" but they're there, and splitting them out should actually make the \"we intentionally didn't do these things\" rundown easier. Thoughts on maintaining that \"split out into a subheading\" pattern, but moving that subheading up above the Engineering section?\n\nMy reason for doing this tweak (was going to mention this in chat channels but ran out of time, but discussed this with @mostlikelee ahead of time) is that stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development has more serious consequences than having to scroll down in the Confirm and celebrate ritual.\n\nAdditionally, the act of explicitly moving items to a \"these are the things that won't change\" heading during spec provides another \"are we _sure_ this isn't changing\" checkpoint prior to estimation. That actually wound up helpful on #30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes. Moving the Figma link to the more appropriate checkbox decreased likelihood of confusion during both development (imminently) and Confirm and celebrate (later), while maintaining an explicit list of parts of the product that are out of scope for the story.\n\nI hadn't PR'd a handbook/story template change for this because I wanted to dial in how it looked with real-world examples first, hence why you're seeing this for the first time here."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e stories are generally 80-95% \"No changes\", and when spec'ing/dev'ing it's easy to miss actual work in a sea of \"No changes\" items, and missing a spec item while in spec or development\n\n@iansltx ah, I hear you but the current way has been working for the other product groups. We just have to look at all the checkboxes to see which have \"No changes\".\n\nTo keep things consistent across product groups and reduce change for now let's please keep the story issue template the same. I removed \n\nThanks for testing it out!\n\n\u003eThat actually wound up helpful on https://github.com/fleetdm/fleet/issues/30849, as some GitOps Mode UI changes had been miscategorized as generic UI changes.\n\nIt sounds like we (it was me) messed up in this case. That's a whoops from me. I forgot about the new GitOps mode checkbox."
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Pulled this back to Ready for spec as there are outstanding test plan questions that we're working through."
          },
          {
            "author": {
              "login": "mostlikelee"
            },
            "body": "@noahtalerman heads up that this story is getting pushed to sprint 46"
          },
          {
            "author": {
              "login": "iansltx"
            },
            "body": "@jmwatts @marko-lisica @noahtalerman For the following test plan item:\n\n\u003e In the team YAML, specify the old macos_setup.software key, leave it empty, and specify the new setup_experience for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nThere's no straightforward way to get GitOps to behave this way; when deserializing, values in YAML always appear to be set/valud, even if the `software` key isn't provided. We _might_ be able to reach into YAML and parse things manually to tell the difference between \"key not set\" and \"key set and empty\" but I'm thinking that the existence of an empty software key doesn't hurt anything in this particular case, so probably not worth it.\n\nOf course, we _can_ easily capture cases where the sotware list is not empty (and fail if we see setup experience set on both a package/app store definition and the setup experience software key), which matters most from a conflict resolution perspective I believe.\n\nThe above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\nOn the bright side, I _was_ able to differentiate between \"setup experience flag isn't supplied\" and \"setup experience flag exists and is set to false\", so we can fail fast when the setup experience software key has items in it but the setup experience flag is set on any software on the team (vs. only failing when setup experience is set to `true` somewhere)."
          },
          {
            "author": {
              "login": "noahtalerman"
            },
            "body": "\u003e The above means that setting setup experience flags on individual packages with an empty-but-extant setup experience software key will result in a successful GitOps run with the package/app store app level flags winning out. Is that revision to the test plan aceptable?\n\n@iansltx I think this is ok. I updated the test plan (below and in issue description). \n\nFYI @jmwatts\n\n\u003e - [ ] ~~In the team YAML, specify the old `macos_setup.software` key, leave it empty, and specify the new `setup_experience` for any software. Verify that you see [this error messaged](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).~~\n\u003e   - [ ] UPDATE: @noahtalerman: [Tricky to build](https://github.com/fleetdm/fleet/issues/30095#issuecomment-3218706681). Here's what we decided instead: setting `setup_experience` on individual packages with an empty `macos_setup.software` software key will result in a successful GitOps run with `setup_experience` flags applied to the relevant software.\n\u003e - [ ] Repeat the step above with some software in the `macos_setup.software` key. You should see [this error message](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\nI also updated the dev note with this decision: https://github.com/fleetdm/fleet/pull/30254/files#r2164318796"
          },
          {
            "author": {
              "login": "lucasmrod"
            },
            "body": "@iansltx We are implementing https://github.com/fleetdm/fleet/issues/30877 for v4.74.0.\nLet me know when this is merged to `main` so we can add support for setting `setup_experience: true` on Linux packages."
          },
          {
            "author": {
              "login": "jmwatts"
            },
            "body": "**QA Notes** (In Progress)\n\n- [x] Add App Store app in-line on the team YAML file and don't specify the new setup_experience key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add App Store app in-line on the team YAML file and specify the new setup_experience key, setting the value to true. Verify that the software is added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add App Store app in-line on the team YAML file and specify the new setup_experience key, setting the value to false. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add Fleet-maintained app in-line on the team YAML file and don't specify the new setup_experience key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add Fleet-maintained app in-line on the team YAML file and specify the new setup_experience key, setting the value to true. Verify that the software is added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add Fleet-maintained app in-line on the team YAML file and specify the new setup_experience key, setting the value to false. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add a custom package in-line, on the team YAML file and don't specify the new setup_experience key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add a custom package in-line, on the team YAML file and specify the new setup_experience key, setting the value to true. Verify that the software is added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add a custom package in-line, on the team YAML file and specify the new setup_experience key, setting the value to false. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add a custom package YAML file and reference the package YAML on the team YAML. Don't specify the new setup_experience key. Verify that the software isn't added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new setup_experience key on the team YAML, setting the value to true. Verify that the software is added to macOS Setup Experience when GitOps is run.\n\n\n- [x] Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new setup_experience key on the team YAML, setting the value to false. Verify that the software is not added to macOS Setup Experience when GitOps is run.\n\n\n- [x] ERROR PATH: Add a custom package YAML file and reference the package YAML on the team YAML. Specify the new setup_experience key within the package YAML, setting the value to true. Run GitOps and confirm there is an easy to understand error message.\n\n#### Custom target (labels)\n\n- [x] In the team YAML, set labels_include_any for a custom package that is defined in-line. Verify that the label inclusions are applied when GitOps is run.\n\n- [x] In the team YAML, set labels_include_any for a custom package that is referenced by path. Verify that the label inclusions are applied when GitOps is run.\n\n- [x] In the team YAML, set labels_exclude_any for a custom package that is defined in-line. Verify that the label exclusions are applied when GitOps is run.\n\n- [x] In the team YAML, set labels_exclude_any for a custom package that is referenced by path. Verify that the label exclusions are applied when GitOps is run.\n\n- [x] In the package YAML, set labels_include_any to include a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n- [x] In the package YAML, set labels_exclude_any to exclude a label that exists in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n\n#### Categories\n\n- [x] In the team YAML, set categories to include one or more categories that exist in Fleet for a custom package that is defined in-line. Verify that the categories are applied when GitOps is run.\n\n- [x] In the package YAML, set categories to include one or more categories that exist in Fleet. Verify that the key no longer works and you see an easy to understand error message when GitOps is run.\n#### No team\n\n- [ ] Verify that setup experience, custom targets (labels), and categories work as defined above for \"No team\" (no-team.yml)\n\n\n#### Backwards compatibility\n\n- [ ] In the team YAML, specify the old macos_setup.software key, add software in-line, and do not specify the new setup_experience for any software. Confirm the software is added to setup experience.\n\n- [ ] setting setup_experience on individual packages with an empty macos_setup.software software key will result in a successful GitOps run with setup_experience flags applied to the relevant software.\n\n- [ ] Repeat the step above with some software in the macos_setup.software key. You should see [this error message](https://github.com/fleetdm/fleet/pull/30254/files#r2164318796).\n\n#### GitOps speed\n\n- [ ] Run GitOps with 99 packages and 500 teams before and after this change. Verify that the speed of GitOps isn't negatively impacted.\n\n#### Migration script\n\n- [ ] Run the script to migrate the the old package YAML format to the new format and verify that the script works. https://github.com/fleetdm/fleet/issues/31165\n\n#### Generate-GitOps\n\n- [ ] fleetctl generate-gitops includes the setup experience flag on software for which it is set."
          }
        ],
        "issueNumber": 30095,
        "changeType": "modified"
      },
      {
        "id": "PVTI_lADOBDAnic4A4BEUzgdrGeE",
        "issueNumber": 11828,
        "changeType": "modified"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nInstead of a custom icon, the default icon is displayed in: \n\n- Self-service\n- Library UI on the host page\n\n\u003cimg width=\"4484\" height=\"2716\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e0d49e74-141f-4e06-8c0f-414000429b27\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a VPP app to your instance\n2. Select a custom icon for it\n3. Add a host to a team with this app\n4. Open Self-service on the host\n5. As an admin, open Host page \u003e Software \u003e Library \n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32819,
          "repository": "fleetdm/fleet",
          "title": "Default software icon is displayed for VPP apps in the Self-service and Host's Library UIs",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32819"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgemjAU",
        "labels": [
          "bug",
          "~backend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1ccd08bf",
          "startDate": "2025-09-08",
          "title": "Sprint 47"
        },
        "status": "âï¸Awaiting QA",
        "title": "Default software icon is displayed for VPP apps in the Self-service and Host's Library UIs",
        "issueNumber": 32819,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nFallback icon is used instead of the default software icon. If you upload a custom icon, it will be displayed correctly on both tabs.\nDoes not affect all the packages, only those listed in the steps. \n\n\u003cimg width=\"2658\" height=\"1628\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/93951ef0-5bc4-4275-8f28-233db458b2e0\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload any of the following Fleet-maintained apps: \n```\nAcrobat\nDCV\nBeyond compare\nCompany portal\nChrome\nEdge\nExcel\nTeams \nVS Code\nWord\n```\n2. Select Edit Package\n3. Swap to Self-service preview tab\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32821,
          "repository": "fleetdm/fleet",
          "title": "Certain Fleet Maintained Software uses a default fallback icon on the \"Self-service\" tab in the \"Edit Package\" UI",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32821"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgemoBk",
        "labels": [
          "bug",
          "~frontend",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "Certain Fleet Maintained Software uses a default fallback icon on the \"Self-service\" tab in the \"Edit Package\" UI",
        "issueNumber": 32821,
        "changeType": "added"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nEven though a custom icon has been selected for this software globally, the default one is still displayed on the individual versions \n\n\u003cimg width=\"2468\" height=\"814\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/47f425d4-72b8-4db4-98eb-ba37ab644aec\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Have at least 2 hosts with different versions of the same software\n2. Update an icon on this software\n3. Select each version on the Software page\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32825,
          "repository": "fleetdm/fleet",
          "title": "Default icon is displayed on the software version page instead of the custom one",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32825"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgemtN0",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Default icon is displayed on the software version page instead of the custom one",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Closing this as this is a known issue that got punted to #32459, slated for v4.76."
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Custom icon's choice,\nLike a sunrise, brings delight.\nSoftware's true voice."
          }
        ],
        "issueNumber": 32825,
        "changeType": "added"
      },
      {
        "assignees": [
          "ksykulev"
        ],
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nYou can upload an icon of any size, which affects the icon render time, which can go over 3 seconds\n\n\u003cimg width=\"2472\" height=\"324\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/83551fd8-cbb2-4316-b0c5-54aa519e18cf\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\n\nFrom @noahtalerman here: https://github.com/fleetdm/fleet/issues/29478#issuecomment-3276556901 \n\n\u003e I think itâs a great idea to add a limit to the size. With an easy to understand error message if you try to upload one thatâs too large. 100kb sounds like the right size to start. I just exported the Firefox logo from Figma and it was ~4kb.\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Have an icon that matches the dimensions requirements but is very large in size\n2. Try to upload it as a software icon\n3. Refresh the page and notice the render time \n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32826,
          "repository": "fleetdm/fleet",
          "title": "There is no size limitation on the software icon upload",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32826"
        },
        "estimate": 2,
        "id": "PVTI_lADOBDAnic4A4BEUzgemthA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "sprint": {
          "duration": 21,
          "iterationId": "1ccd08bf",
          "startDate": "2025-09-08",
          "title": "Sprint 47"
        },
        "status": "âï¸Awaiting QA",
        "title": "There is no size limitation on the software icon upload",
        "issueNumber": 32826,
        "changeType": "added"
      },
      {
        "assignees": [
          "RachelElysia"
        ],
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nBlank icon is displayed while the actual one is loading\n\n\u003cimg width=\"500\" height=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0637fe61-fe93-43a9-b44e-14792cdd3bce\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\n\nFrom @noahtalerman here: https://github.com/fleetdm/fleet/issues/29478#issuecomment-3276556901\n\n\u003e No but we want to show a loading spinner on top of the empty space while the custom one loads. This was a gap in the design. More info in [this Slack thread](https://fleetdm.slack.com/archives/C086V2QK76X/p1756962421307179?thread_ts=1756844152.145969\u0026cid=C086V2QK76X).\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload a large icon for a software package / add network throttle while uploading \n2. Refresh the page\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32827,
          "repository": "fleetdm/fleet",
          "title": "We should show a loading spinner while a software icon is loading",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32827"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgemt-Y",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¥ Ready",
        "title": "We should show a loading spinner while a software icon is loading",
        "issueNumber": 32827,
        "changeType": "added"
      },
      {
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\nThere are currently 2 issues with Gitops: \n\n1. No icons are downloaded with generate-gitops and they aren't referenced in the team's .yml\n\u003cimg width=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2d938da4-f109-4829-99bf-aada1370978a\" /\u003e\n\n2. Configured `icon_url` doesn't apply an icon to the package \n\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Add any software, apply a custom icon to it\n2. Run generate-gitops to generate this team's config\n3. Check `/lib/your_team` and `/teams_your_team` for any icon references  \n4. Now try and add `icon_url:` param to any software package that you have. i.e.: \n```\n  hash_sha256: 5843a62e98572c08417fd9f3ea5053dd4c859972cf35bd8d008744a28cdab113\n    # Adobe Acrobat Reader (AcroRdrDC_2500120693_MUI.dmg) version 25.001.20693\n  install_script:\n    path: ../lib/software-icons/scripts/adobe-acrobat-reader-darwin-install\n  self_service: true\n  uninstall_script:\n    path: ../lib/software-icons/scripts/adobe-acrobat-reader-darwin-uninstall\n  url: https://ardownload2.adobe.com/pub/adobe/reader/mac/AcrobatDC/2500120693/AcroRdrDC_2500120693_MUI.dmg\n  icon_url:\n    path: ../lib/software-icons/smallest_good.png\n```\n5. Now run gitops to apply this icon\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32830,
          "repository": "fleetdm/fleet",
          "title": "Custom software icons aren't supported by Gitops and generate-gitops ",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32830"
        },
        "id": "PVTI_lADOBDAnic4A4BEUzgemx6g",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "Done",
        "title": "Custom software icons aren't supported by Gitops and generate-gitops ",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Closing this as a dupe of #31897. Wires got crossed in the shuffle. @lukeheath got a few to elevate that ticket from subtask to story and move test plans over?"
          },
          {
            "author": {
              "login": "fleet-release"
            },
            "body": "Custom icons missed,\nGitOps fix will assist,\nClarity persists."
          }
        ],
        "issueNumber": 32830,
        "changeType": "added"
      },
      {
        "assignees": [
          "iansltx"
        ],
        "content": {
          "body": "**Fleet version**: 4.74 \u003c!-- Copy this from the \"My account\" page in the Fleet UI, or run `fleetctl --version` --\u003e\n\n**Web browser and operating system**: N/A \u003c!-- e.g. Chrome 88.0.4324 running on macOS --\u003e\n\n\u003chr/\u003e\n\n### ð¥ Â Actual behavior\n\u003c!-- What did you see?  Paste a screenshot, include a 30s video, or write 1-2 sentences describing the issue you observed. --\u003e\n\n`icon_url` isn't nested under the `hash_sha256`\n\n\u003cimg width=\"350\" height=\"662\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4600ab8f-fed5-4acf-9eaf-438834fa2dfb\" /\u003e\n\n### ð ï¸ To fix\n\u003c!-- Add the expected fix here. If you're not sure, leave this blank for product to specify.  --\u003e\nTBD\n\nProduct designer: _________________________\u003c!-- Who is the product designer to contact if folks have questions about this fix? --\u003e\n\n### ð§âð» Â Steps to reproduce\n\u003c!-- Provide step-by-step actions of how to recreate this bug in a clean install of Fleet. (This helps others understand and fix it more quickly.) --\u003e\n1. Upload any custom package\n2. Enable gitops mode\n3. Open custom package page\n4. Select View YAML\n\n### ð¯ï¸ More info _(optional)_\n\u003c!-- Add any additional details you think could be relevant to solving or reproducing the bug (e.g., \"this does not reproduce when...\") --\u003e\nN/A\n\n\u003c!-- If this is a performance issue, follow these steps to generate and attach a debug archive: https://fleetdm.com/docs/using-fleet/monitoring-fleet#debugging-performance-issues --\u003e\n",
          "number": 32832,
          "repository": "fleetdm/fleet",
          "title": "icon_url in the YAML preview is incorrectly indented",
          "type": "Issue",
          "url": "https://github.com/fleetdm/fleet/issues/32832"
        },
        "estimate": 1,
        "id": "PVTI_lADOBDAnic4A4BEUzgemzfA",
        "labels": [
          "bug",
          ":release",
          "~unreleased bug",
          ":incoming",
          "#g-software"
        ],
        "milestone": {
          "dueOn": "2025-09-19T00:00:00Z",
          "title": "4.74.0"
        },
        "repository": "https://github.com/fleetdm/fleet",
        "status": "ð¦¤ âIn review",
        "title": "icon_url in the YAML preview is incorrectly indented",
        "comments": [
          {
            "author": {
              "login": "iansltx"
            },
            "body": "Actually need to back icon URL out entirely because GitOps work for this is not going to land. Self-assigning/working on that PR now."
          }
        ],
        "issueNumber": 32832,
        "changeType": "added"
      }
    ]
  }
]